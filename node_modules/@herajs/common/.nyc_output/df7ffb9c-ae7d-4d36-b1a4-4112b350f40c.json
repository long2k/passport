{"/Users/paulgrau/projects/aergo/herajs/packages/common/src/classes/address.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/classes/address.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"2":{"start":{"line":8,"column":17},"end":{"line":8,"column":40}},"3":{"start":{"line":10,"column":19},"end":{"line":10,"column":77}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":31}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":95}},"6":{"start":{"line":16,"column":50},"end":{"line":16,"column":151}},"7":{"start":{"line":16,"column":92},"end":{"line":16,"column":149}},"8":{"start":{"line":18,"column":44},"end":{"line":18,"column":315}},"9":{"start":{"line":18,"column":57},"end":{"line":18,"column":58}},"10":{"start":{"line":18,"column":102},"end":{"line":18,"column":110}},"11":{"start":{"line":18,"column":112},"end":{"line":18,"column":167}},"12":{"start":{"line":18,"column":168},"end":{"line":18,"column":199}},"13":{"start":{"line":18,"column":200},"end":{"line":18,"column":254}},"14":{"start":{"line":18,"column":227},"end":{"line":18,"column":254}},"15":{"start":{"line":18,"column":255},"end":{"line":18,"column":313}},"16":{"start":{"line":20,"column":62},"end":{"line":20,"column":131}},"17":{"start":{"line":20,"column":78},"end":{"line":20,"column":131}},"18":{"start":{"line":20,"column":132},"end":{"line":20,"column":193}},"19":{"start":{"line":20,"column":149},"end":{"line":20,"column":193}},"20":{"start":{"line":20,"column":194},"end":{"line":20,"column":213}},"21":{"start":{"line":22,"column":44},"end":{"line":22,"column":195}},"22":{"start":{"line":22,"column":62},"end":{"line":22,"column":166}},"23":{"start":{"line":22,"column":176},"end":{"line":22,"column":193}},"24":{"start":{"line":22,"column":196},"end":{"line":22,"column":207}},"25":{"start":{"line":24,"column":35},"end":{"line":24,"column":115}},"26":{"start":{"line":26,"column":32},"end":{"line":26,"column":103}},"27":{"start":{"line":28,"column":34},"end":{"line":28,"column":160}},"28":{"start":{"line":28,"column":136},"end":{"line":28,"column":160}},"29":{"start":{"line":30,"column":35},"end":{"line":30,"column":164}},"30":{"start":{"line":30,"column":61},"end":{"line":30,"column":149}},"31":{"start":{"line":30,"column":74},"end":{"line":30,"column":75}},"32":{"start":{"line":30,"column":84},"end":{"line":30,"column":105}},"33":{"start":{"line":30,"column":130},"end":{"line":30,"column":147}},"34":{"start":{"line":30,"column":150},"end":{"line":30,"column":162}},"35":{"start":{"line":32,"column":22},"end":{"line":32,"column":69}},"36":{"start":{"line":41,"column":0},"end":{"line":197,"column":3}},"37":{"start":{"line":43,"column":4},"end":{"line":43,"column":35}},"38":{"start":{"line":45,"column":4},"end":{"line":45,"column":43}},"39":{"start":{"line":47,"column":4},"end":{"line":47,"column":45}},"40":{"start":{"line":49,"column":4},"end":{"line":49,"column":44}},"41":{"start":{"line":51,"column":4},"end":{"line":51,"column":24}},"42":{"start":{"line":53,"column":4},"end":{"line":77,"column":5}},"43":{"start":{"line":55,"column":6},"end":{"line":55,"column":54}},"44":{"start":{"line":56,"column":11},"end":{"line":77,"column":5}},"45":{"start":{"line":58,"column":6},"end":{"line":67,"column":7}},"46":{"start":{"line":59,"column":8},"end":{"line":59,"column":50}},"47":{"start":{"line":60,"column":8},"end":{"line":60,"column":27}},"48":{"start":{"line":62,"column":8},"end":{"line":66,"column":9}},"49":{"start":{"line":63,"column":10},"end":{"line":63,"column":47}},"50":{"start":{"line":65,"column":10},"end":{"line":65,"column":151}},"51":{"start":{"line":69,"column":6},"end":{"line":69,"column":29}},"52":{"start":{"line":70,"column":11},"end":{"line":77,"column":5}},"53":{"start":{"line":71,"column":6},"end":{"line":71,"column":27}},"54":{"start":{"line":72,"column":11},"end":{"line":77,"column":5}},"55":{"start":{"line":74,"column":6},"end":{"line":74,"column":48}},"56":{"start":{"line":76,"column":6},"end":{"line":76,"column":134}},"57":{"start":{"line":80,"column":4},"end":{"line":93,"column":5}},"58":{"start":{"line":81,"column":21},"end":{"line":81,"column":43}},"59":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"60":{"start":{"line":84,"column":8},"end":{"line":84,"column":23}},"61":{"start":{"line":87,"column":16},"end":{"line":87,"column":45}},"62":{"start":{"line":89,"column":6},"end":{"line":92,"column":7}},"63":{"start":{"line":90,"column":8},"end":{"line":90,"column":27}},"64":{"start":{"line":91,"column":8},"end":{"line":91,"column":25}},"65":{"start":{"line":96,"column":2},"end":{"line":194,"column":6}},"66":{"start":{"line":99,"column":6},"end":{"line":99,"column":40}},"67":{"start":{"line":104,"column":6},"end":{"line":104,"column":29}},"68":{"start":{"line":109,"column":6},"end":{"line":111,"column":7}},"69":{"start":{"line":110,"column":8},"end":{"line":110,"column":28}},"70":{"start":{"line":113,"column":6},"end":{"line":117,"column":7}},"71":{"start":{"line":114,"column":8},"end":{"line":114,"column":66}},"72":{"start":{"line":116,"column":8},"end":{"line":116,"column":50}},"73":{"start":{"line":119,"column":6},"end":{"line":119,"column":26}},"74":{"start":{"line":128,"column":25},"end":{"line":128,"column":102}},"75":{"start":{"line":129,"column":6},"end":{"line":129,"column":64}},"76":{"start":{"line":138,"column":6},"end":{"line":138,"column":37}},"77":{"start":{"line":143,"column":6},"end":{"line":143,"column":66}},"78":{"start":{"line":148,"column":6},"end":{"line":148,"column":28}},"79":{"start":{"line":153,"column":6},"end":{"line":153,"column":31}},"80":{"start":{"line":158,"column":20},"end":{"line":158,"column":62}},"81":{"start":{"line":160,"column":6},"end":{"line":160,"column":130}},"82":{"start":{"line":160,"column":62},"end":{"line":160,"column":130}},"83":{"start":{"line":161,"column":6},"end":{"line":161,"column":113}},"84":{"start":{"line":161,"column":37},"end":{"line":161,"column":113}},"85":{"start":{"line":162,"column":6},"end":{"line":162,"column":51}},"86":{"start":{"line":171,"column":6},"end":{"line":171,"column":58}},"87":{"start":{"line":171,"column":48},"end":{"line":171,"column":58}},"88":{"start":{"line":173,"column":16},"end":{"line":173,"column":112}},"89":{"start":{"line":175,"column":6},"end":{"line":175,"column":49}},"90":{"start":{"line":180,"column":6},"end":{"line":180,"column":50}},"91":{"start":{"line":185,"column":6},"end":{"line":185,"column":34}},"92":{"start":{"line":190,"column":6},"end":{"line":192,"column":9}},"93":{"start":{"line":191,"column":8},"end":{"line":191,"column":30}},"94":{"start":{"line":196,"column":2},"end":{"line":196,"column":17}},"95":{"start":{"line":199,"column":0},"end":{"line":199,"column":29}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":97}},"line":14},"1":{"name":"_classCallCheck","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":48},"end":{"line":16,"column":153}},"line":16},"2":{"name":"_defineProperties","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":26}},"loc":{"start":{"line":18,"column":42},"end":{"line":18,"column":317}},"line":18},"3":{"name":"_createClass","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":21}},"loc":{"start":{"line":20,"column":60},"end":{"line":20,"column":215}},"line":20},"4":{"name":"_defineProperty","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":24}},"loc":{"start":{"line":22,"column":42},"end":{"line":22,"column":209}},"line":22},"5":{"name":"_toConsumableArray","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":27}},"loc":{"start":{"line":24,"column":33},"end":{"line":24,"column":117}},"line":24},"6":{"name":"_nonIterableSpread","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":27}},"loc":{"start":{"line":26,"column":30},"end":{"line":26,"column":105}},"line":26},"7":{"name":"_iterableToArray","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":25}},"loc":{"start":{"line":28,"column":32},"end":{"line":28,"column":162}},"line":28},"8":{"name":"_arrayWithoutHoles","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":27}},"loc":{"start":{"line":30,"column":33},"end":{"line":30,"column":166}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":0},"end":{"line":41,"column":1}},"loc":{"start":{"line":41,"column":12},"end":{"line":197,"column":1}},"line":41},"10":{"name":"Address","decl":{"start":{"line":42,"column":11},"end":{"line":42,"column":18}},"loc":{"start":{"line":42,"column":28},"end":{"line":94,"column":3}},"line":42},"11":{"name":"asBytes","decl":{"start":{"line":98,"column":20},"end":{"line":98,"column":27}},"loc":{"start":{"line":98,"column":30},"end":{"line":100,"column":5}},"line":98},"12":{"name":"toJSON","decl":{"start":{"line":103,"column":20},"end":{"line":103,"column":26}},"loc":{"start":{"line":103,"column":29},"end":{"line":105,"column":5}},"line":103},"13":{"name":"toString","decl":{"start":{"line":108,"column":20},"end":{"line":108,"column":28}},"loc":{"start":{"line":108,"column":31},"end":{"line":120,"column":5}},"line":108},"14":{"name":"equal","decl":{"start":{"line":127,"column":20},"end":{"line":127,"column":25}},"loc":{"start":{"line":127,"column":41},"end":{"line":130,"column":5}},"line":127},"15":{"name":"isEmpty","decl":{"start":{"line":137,"column":20},"end":{"line":137,"column":27}},"loc":{"start":{"line":137,"column":30},"end":{"line":139,"column":5}},"line":137},"16":{"name":"isSystemAddress","decl":{"start":{"line":142,"column":20},"end":{"line":142,"column":35}},"loc":{"start":{"line":142,"column":38},"end":{"line":144,"column":5}},"line":142},"17":{"name":"get","decl":{"start":{"line":147,"column":18},"end":{"line":147,"column":21}},"loc":{"start":{"line":147,"column":24},"end":{"line":149,"column":5}},"line":147},"18":{"name":"get","decl":{"start":{"line":152,"column":18},"end":{"line":152,"column":21}},"loc":{"start":{"line":152,"column":24},"end":{"line":154,"column":5}},"line":152},"19":{"name":"decode","decl":{"start":{"line":157,"column":20},"end":{"line":157,"column":26}},"loc":{"start":{"line":157,"column":39},"end":{"line":163,"column":5}},"line":157},"20":{"name":"encode","decl":{"start":{"line":170,"column":20},"end":{"line":170,"column":26}},"loc":{"start":{"line":170,"column":38},"end":{"line":176,"column":5}},"line":170},"21":{"name":"isSystemName","decl":{"start":{"line":179,"column":20},"end":{"line":179,"column":32}},"loc":{"start":{"line":179,"column":39},"end":{"line":181,"column":5}},"line":179},"22":{"name":"setSystemAddresses","decl":{"start":{"line":184,"column":20},"end":{"line":184,"column":38}},"loc":{"start":{"line":184,"column":50},"end":{"line":186,"column":5}},"line":184},"23":{"name":"valueEqual","decl":{"start":{"line":189,"column":20},"end":{"line":189,"column":30}},"loc":{"start":{"line":189,"column":37},"end":{"line":193,"column":5}},"line":189},"24":{"name":"(anonymous_24)","decl":{"start":{"line":190,"column":45},"end":{"line":190,"column":46}},"loc":{"start":{"line":190,"column":65},"end":{"line":192,"column":7}},"line":190}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":94}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":94}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":16,"column":50},"end":{"line":16,"column":151}},"type":"if","locations":[{"start":{"line":16,"column":50},"end":{"line":16,"column":151}},{"start":{"line":16,"column":50},"end":{"line":16,"column":151}}],"line":16},"3":{"loc":{"start":{"line":18,"column":136},"end":{"line":18,"column":166}},"type":"binary-expr","locations":[{"start":{"line":18,"column":136},"end":{"line":18,"column":157}},{"start":{"line":18,"column":161},"end":{"line":18,"column":166}}],"line":18},"4":{"loc":{"start":{"line":18,"column":200},"end":{"line":18,"column":254}},"type":"if","locations":[{"start":{"line":18,"column":200},"end":{"line":18,"column":254}},{"start":{"line":18,"column":200},"end":{"line":18,"column":254}}],"line":18},"5":{"loc":{"start":{"line":20,"column":62},"end":{"line":20,"column":131}},"type":"if","locations":[{"start":{"line":20,"column":62},"end":{"line":20,"column":131}},{"start":{"line":20,"column":62},"end":{"line":20,"column":131}}],"line":20},"6":{"loc":{"start":{"line":20,"column":132},"end":{"line":20,"column":193}},"type":"if","locations":[{"start":{"line":20,"column":132},"end":{"line":20,"column":193}},{"start":{"line":20,"column":132},"end":{"line":20,"column":193}}],"line":20},"7":{"loc":{"start":{"line":22,"column":44},"end":{"line":22,"column":195}},"type":"if","locations":[{"start":{"line":22,"column":44},"end":{"line":22,"column":195}},{"start":{"line":22,"column":44},"end":{"line":22,"column":195}}],"line":22},"8":{"loc":{"start":{"line":24,"column":42},"end":{"line":24,"column":114}},"type":"binary-expr","locations":[{"start":{"line":24,"column":42},"end":{"line":24,"column":65}},{"start":{"line":24,"column":69},"end":{"line":24,"column":90}},{"start":{"line":24,"column":94},"end":{"line":24,"column":114}}],"line":24},"9":{"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":160}},"type":"if","locations":[{"start":{"line":28,"column":34},"end":{"line":28,"column":160}},{"start":{"line":28,"column":34},"end":{"line":28,"column":160}}],"line":28},"10":{"loc":{"start":{"line":28,"column":38},"end":{"line":28,"column":134}},"type":"binary-expr","locations":[{"start":{"line":28,"column":38},"end":{"line":28,"column":69}},{"start":{"line":28,"column":73},"end":{"line":28,"column":134}}],"line":28},"11":{"loc":{"start":{"line":30,"column":35},"end":{"line":30,"column":164}},"type":"if","locations":[{"start":{"line":30,"column":35},"end":{"line":30,"column":164}},{"start":{"line":30,"column":35},"end":{"line":30,"column":164}}],"line":30},"12":{"loc":{"start":{"line":53,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":77,"column":5}},{"start":{"line":53,"column":4},"end":{"line":77,"column":5}}],"line":53},"13":{"loc":{"start":{"line":56,"column":11},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":11},"end":{"line":77,"column":5}},{"start":{"line":56,"column":11},"end":{"line":77,"column":5}}],"line":56},"14":{"loc":{"start":{"line":58,"column":6},"end":{"line":67,"column":7}},"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":67,"column":7}},{"start":{"line":58,"column":6},"end":{"line":67,"column":7}}],"line":58},"15":{"loc":{"start":{"line":58,"column":10},"end":{"line":58,"column":91}},"type":"binary-expr","locations":[{"start":{"line":58,"column":10},"end":{"line":58,"column":58}},{"start":{"line":58,"column":62},"end":{"line":58,"column":91}}],"line":58},"16":{"loc":{"start":{"line":70,"column":11},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":11},"end":{"line":77,"column":5}},{"start":{"line":70,"column":11},"end":{"line":77,"column":5}}],"line":70},"17":{"loc":{"start":{"line":72,"column":11},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":11},"end":{"line":77,"column":5}},{"start":{"line":72,"column":11},"end":{"line":77,"column":5}}],"line":72},"18":{"loc":{"start":{"line":80,"column":4},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":93,"column":5}},{"start":{"line":80,"column":4},"end":{"line":93,"column":5}}],"line":80},"19":{"loc":{"start":{"line":89,"column":6},"end":{"line":92,"column":7}},"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":92,"column":7}},{"start":{"line":89,"column":6},"end":{"line":92,"column":7}}],"line":89},"20":{"loc":{"start":{"line":89,"column":10},"end":{"line":89,"column":94}},"type":"binary-expr","locations":[{"start":{"line":89,"column":10},"end":{"line":89,"column":54}},{"start":{"line":89,"column":58},"end":{"line":89,"column":94}}],"line":89},"21":{"loc":{"start":{"line":109,"column":6},"end":{"line":111,"column":7}},"type":"if","locations":[{"start":{"line":109,"column":6},"end":{"line":111,"column":7}},{"start":{"line":109,"column":6},"end":{"line":111,"column":7}}],"line":109},"22":{"loc":{"start":{"line":109,"column":10},"end":{"line":109,"column":70}},"type":"binary-expr","locations":[{"start":{"line":109,"column":10},"end":{"line":109,"column":45}},{"start":{"line":109,"column":49},"end":{"line":109,"column":70}}],"line":109},"23":{"loc":{"start":{"line":113,"column":6},"end":{"line":117,"column":7}},"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":117,"column":7}},{"start":{"line":113,"column":6},"end":{"line":117,"column":7}}],"line":113},"24":{"loc":{"start":{"line":128,"column":25},"end":{"line":128,"column":102}},"type":"cond-expr","locations":[{"start":{"line":128,"column":60},"end":{"line":128,"column":73}},{"start":{"line":128,"column":76},"end":{"line":128,"column":102}}],"line":128},"25":{"loc":{"start":{"line":143,"column":13},"end":{"line":143,"column":65}},"type":"binary-expr","locations":[{"start":{"line":143,"column":13},"end":{"line":143,"column":24}},{"start":{"line":143,"column":28},"end":{"line":143,"column":65}}],"line":143},"26":{"loc":{"start":{"line":160,"column":6},"end":{"line":160,"column":130}},"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":160,"column":130}},{"start":{"line":160,"column":6},"end":{"line":160,"column":130}}],"line":160},"27":{"loc":{"start":{"line":161,"column":6},"end":{"line":161,"column":113}},"type":"if","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":113}},{"start":{"line":161,"column":6},"end":{"line":161,"column":113}}],"line":161},"28":{"loc":{"start":{"line":171,"column":6},"end":{"line":171,"column":58}},"type":"if","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":58}},{"start":{"line":171,"column":6},"end":{"line":171,"column":58}}],"line":171},"29":{"loc":{"start":{"line":171,"column":10},"end":{"line":171,"column":46}},"type":"binary-expr","locations":[{"start":{"line":171,"column":10},"end":{"line":171,"column":20}},{"start":{"line":171,"column":24},"end":{"line":171,"column":46}}],"line":171},"30":{"loc":{"start":{"line":190,"column":13},"end":{"line":192,"column":8}},"type":"binary-expr","locations":[{"start":{"line":190,"column":13},"end":{"line":190,"column":33}},{"start":{"line":190,"column":37},"end":{"line":192,"column":8}}],"line":190}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":39,"7":0,"8":2,"9":2,"10":13,"11":13,"12":13,"13":13,"14":11,"15":13,"16":1,"17":1,"18":1,"19":1,"20":1,"21":117,"22":0,"23":117,"24":117,"25":3,"26":0,"27":2,"28":2,"29":3,"30":1,"31":1,"32":1,"33":4,"34":1,"35":1,"36":1,"37":39,"38":39,"39":39,"40":39,"41":39,"42":39,"43":1,"44":38,"45":26,"46":16,"47":16,"48":10,"49":10,"50":6,"51":20,"52":12,"53":9,"54":3,"55":2,"56":1,"57":32,"58":16,"59":16,"60":21,"61":16,"62":16,"63":8,"64":8,"65":1,"66":2,"67":1,"68":21,"69":14,"70":7,"71":5,"72":2,"73":7,"74":4,"75":4,"76":5,"77":7,"78":1,"79":3,"80":10,"81":6,"82":1,"83":5,"84":1,"85":4,"86":3,"87":1,"88":2,"89":2,"90":26,"91":1,"92":4,"93":15,"94":1,"95":1},"f":{"0":1,"1":39,"2":2,"3":1,"4":117,"5":3,"6":0,"7":2,"8":3,"9":1,"10":39,"11":2,"12":1,"13":21,"14":4,"15":5,"16":7,"17":1,"18":3,"19":10,"20":3,"21":26,"22":1,"23":4,"24":15},"b":{"0":[1,0],"1":[1,1],"2":[0,39],"3":[13,13],"4":[11,2],"5":[1,0],"6":[1,0],"7":[0,117],"8":[3,2,0],"9":[2,0],"10":[2,0],"11":[1,2],"12":[1,38],"13":[26,12],"14":[16,10],"15":[26,11],"16":[9,3],"17":[2,1],"18":[16,16],"19":[8,8],"20":[16,9],"21":[14,7],"22":[21,14],"23":[5,2],"24":[3,1],"25":[7,6],"26":[1,5],"27":[1,4],"28":[1,2],"29":[3,3],"30":[4,4]},"inputSourceMap":{"version":3,"sources":["address.ts"],"names":["systemAddresses","SYSTEM_ADDRESSES","Address","address","isName","value","Buffer","from","length","ACCOUNT_NAME_LENGTH","isSystemName","decode","e","Error","encoded","Uint8Array","arrValue","Array","pop","buf","toString","encode","_otherAddress","otherAddress","valueEqual","asBytes","bs58string","decoded","bs58check","ADDRESS_PREFIXES","ACCOUNT","slice","byteArray","name","indexOf","addresses","a","b","every","aElem","i"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/classes","sourcesContent":["import { ADDRESS_PREFIXES, ACCOUNT_NAME_LENGTH, SYSTEM_ADDRESSES } from '../constants';\nimport bs58check from '../encoding/base58check';\nimport { Buffer } from 'buffer';\n\nlet systemAddresses = [...SYSTEM_ADDRESSES];\n\nexport type AddressInput = Address | string | Buffer | Uint8Array;\n\n/**\n * A wrapper around addresses. Internally addresses are stored and sent as raw bytes,\n * but client-side they are displayed as base58-check encoded strings.\n * The encoding requires some computation, so you should only convert address objects to strings when needed.\n */\nexport default class Address {\n    value: Buffer;\n    encoded?: string;\n    isName: boolean;\n\n    constructor(address: AddressInput) {\n        this.isName = false;\n\n        if (address instanceof Address) {\n            // Just copy buffer\n            this.value = Buffer.from(address.value);\n        } else if (typeof address === 'string') {\n            // Parse string\n            if (address.length <= ACCOUNT_NAME_LENGTH || Address.isSystemName(address)) {\n                this.value = Buffer.from(address);\n                this.isName = true;\n            } else {\n                try {\n                    this.value = Address.decode(address);\n                } catch(e) {\n                    throw new Error(`Address \"${address}\" could not be parsed as a base58-check encoded string and is not a valid name. ${e}`);\n                }\n            }\n            this.encoded = address;\n        } else if (address instanceof Buffer) {\n            this.value = address;\n        } else if (address instanceof Uint8Array) {\n            // Treat array-like as buffer\n            this.value = Buffer.from(address);\n        } else {\n            throw new Error(`Instantiate Address with raw bytes, a string in base58-check encoding, or a valid name, not ${address}`);\n        }\n\n        // Check for name encoded as bytes\n        if (!this.isName) {\n            const arrValue = Array.from(this.value);\n            // Remove trailing 0s\n            while (arrValue[arrValue.length-1] === 0) {\n                arrValue.pop();\n            }\n            const buf = Buffer.from(arrValue);\n            if (buf.length <= ACCOUNT_NAME_LENGTH || Address.isSystemName(buf.toString())) {\n                this.isName = true;\n                this.value = buf;\n            }\n        }\n    }\n\n    asBytes(): Uint8Array {\n        return new Uint8Array(this.value);\n    }\n\n    get bytes(): Uint8Array {\n        return this.asBytes();\n    }\n\n    toJSON(): string {\n        return this.toString();\n    }\n\n    toString(): string {\n        if (typeof this.encoded !== 'undefined' && this.encoded !== null) {\n            return this.encoded;\n        }\n    \n        if (this.isName) {\n            this.encoded = Buffer.from(this.value).toString();\n        } else {\n            this.encoded = Address.encode(this.value);\n        }\n        return this.encoded;\n    }\n\n    /**\n     * Decode bs58check string into bytes\n     */\n    static decode(bs58string: string): Buffer {\n        const decoded = bs58check.decode(bs58string);\n        if (decoded[0] !== ADDRESS_PREFIXES.ACCOUNT) throw new Error(`invalid address prefix (${decoded[0]})`);\n        if (decoded.length !== 33 + 1) throw new Error(`invalid address length (${decoded.length-1})`);\n        return Buffer.from(decoded.slice(1));\n    }\n\n    /**\n     * Encode bytes into bs58check string\n     */\n    static encode(byteArray: Buffer): string {\n        if (!byteArray || byteArray.length === 0) return ''; // return empty string for null address\n        const buf = Buffer.from([ADDRESS_PREFIXES.ACCOUNT, ...byteArray]);\n        return bs58check.encode(buf);\n    }\n\n    equal(_otherAddress: AddressInput): boolean {\n        const otherAddress = _otherAddress instanceof Address ? _otherAddress : new Address(_otherAddress);\n        return Address.valueEqual(this.value, otherAddress.value);\n    }\n\n    /**\n     * Returns true if the address is empty, i.e. '' or empty buffer\n     */\n    isEmpty(): boolean {\n        return this.value.length === 0;\n    }\n\n    get length(): number {\n        return this.value.length;\n    }\n\n    isSystemAddress(): boolean {\n        return this.isName && Address.isSystemName(this.toString());\n    }\n\n    static isSystemName(name: string): boolean {\n        return systemAddresses.indexOf(name) !== -1;\n    }\n\n    static setSystemAddresses(addresses: string[]): void {\n        systemAddresses = addresses;\n    }\n\n    private static valueEqual(a: Buffer, b: Buffer): boolean {\n        return a.length == b.length && a.every((aElem, i) => aElem === b[i]);\n    } \n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"670d5488c2072e51678319a97c49dd08a6365846","contentHash":"54a1c205592519c2c118658319ca4d19bc13aeb9f58dcb7728d58b82077ff191"},"/Users/paulgrau/projects/aergo/herajs/packages/common/src/constants.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/constants.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":171}},"2":{"start":{"line":7,"column":23},"end":{"line":11,"column":1}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":44}},"4":{"start":{"line":13,"column":26},"end":{"line":13,"column":28}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":50}},"6":{"start":{"line":15,"column":23},"end":{"line":15,"column":88}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"8":{"start":{"line":17,"column":12},"end":{"line":34,"column":1}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":22}},"10":{"start":{"line":36,"column":15},"end":{"line":36,"column":18}},"11":{"start":{"line":37,"column":0},"end":{"line":37,"column":28}},"12":{"start":{"line":38,"column":20},"end":{"line":38,"column":56}},"13":{"start":{"line":39,"column":0},"end":{"line":39,"column":38}},"14":{"start":{"line":40,"column":15},"end":{"line":47,"column":1}},"15":{"start":{"line":48,"column":0},"end":{"line":48,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["constants.ts"],"names":["ADDRESS_PREFIXES","ACCOUNT","CONTRACT","PRIVATE_KEY","ACCOUNT_NAME_LENGTH","SYSTEM_ADDRESSES","UNITS","NATIVE_TOKEN","baseLabel","baseDigits","subUnits","e","label","unitSize","BIP44_ID","WALLET_HDPATH"],"mappings":";;;;;;AAAO,IAAMA,gBAAgB,GAAG;AAC5BC,EAAAA,OAAO,EAAE,IADmB;AAE5BC,EAAAA,QAAQ,EAAE,IAFkB;AAG5BC,EAAAA,WAAW,EAAE;AAHe,CAAzB;;AAMA,IAAMC,mBAAmB,GAAG,EAA5B;;AAEA,IAAMC,gBAAgB,GAAG,CAAC,cAAD,EAAiB,YAAjB,EAA+B,kBAA/B,EAAmD,aAAnD,CAAzB;;AAEA,IAAMC,KAAK,GAAG;AACjBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,OADD;AAEVC,IAAAA,UAAU,EAAE,EAFF;AAIVC,IAAAA,QAAQ,EAAE,CACN;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE;AAAf,KADM,EAEN;AAAED,MAAAA,CAAC,EAAE,EAAL;AAASC,MAAAA,KAAK,EAAE;AAAhB,KAFM,CAJA;AASVC,IAAAA,QAAQ,EAAE;AACN,eAAS,EADH;AAEN,cAAQ,CAFF;AAGN,aAAO;AAHD;AATA;AADG,CAAd;;AAkBA,IAAMC,QAAQ,GAAG,GAAjB;;AAEA,IAAMC,aAAa,mBAAYD,QAAZ,YAAnB;;eAEQ;AACXd,EAAAA,gBAAgB,EAAhBA,gBADW;AAEXM,EAAAA,KAAK,EAALA,KAFW;AAGXF,EAAAA,mBAAmB,EAAnBA,mBAHW;AAIXU,EAAAA,QAAQ,EAARA,QAJW;AAKXC,EAAAA,aAAa,EAAbA,aALW;AAMXV,EAAAA,gBAAgB,EAAhBA;AANW,C","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/common/src","sourcesContent":["export const ADDRESS_PREFIXES = {\n    ACCOUNT: 0x42,\n    CONTRACT: 0xC0,\n    PRIVATE_KEY: 0xAA,\n};\n\nexport const ACCOUNT_NAME_LENGTH = 12;\n\nexport const SYSTEM_ADDRESSES = ['aergo.system', 'aergo.name', 'aergo.enterprise', 'aergo.vault'];\n\nexport const UNITS = {\n    NATIVE_TOKEN: {\n        baseLabel: 'Aergo',\n        baseDigits: 18,\n\n        subUnits: [\n            { e: 0, label: 'aer' },\n            { e: 18, label: 'aergo' }\n        ],\n\n        unitSize: {\n            'aergo': 18,\n            'gaer': 9,\n            'aer': 0\n        }\n    }\n};\n\nexport const BIP44_ID = 441;\n\nexport const WALLET_HDPATH = `m/44'/${BIP44_ID}'/0'/0/`;\n\nexport default {\n    ADDRESS_PREFIXES,\n    UNITS,\n    ACCOUNT_NAME_LENGTH,\n    BIP44_ID,\n    WALLET_HDPATH,\n    SYSTEM_ADDRESSES,\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0446217c45e8317f3a35b297642a6fa96805233d","contentHash":"a42aff563dbcd8fd1886be53adda373e61b6071ec1838ede67f5e98fd98cecf8"},"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/base58check.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/base58check.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"2":{"start":{"line":8,"column":12},"end":{"line":8,"column":55}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":31}},"4":{"start":{"line":12,"column":18},"end":{"line":12,"column":64}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":95}},"6":{"start":{"line":22,"column":19},"end":{"line":22,"column":38}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":99}},"8":{"start":{"line":27,"column":18},"end":{"line":27,"column":37}},"9":{"start":{"line":28,"column":19},"end":{"line":28,"column":35}},"10":{"start":{"line":29,"column":22},"end":{"line":29,"column":41}},"11":{"start":{"line":30,"column":4},"end":{"line":30,"column":138}},"12":{"start":{"line":30,"column":131},"end":{"line":30,"column":138}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":19}},"14":{"start":{"line":36,"column":17},"end":{"line":36,"column":54}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":24}},"16":{"start":{"line":38,"column":17},"end":{"line":38,"column":24}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":29}},"18":{"start":{"line":43,"column":17},"end":{"line":43,"column":48}},"19":{"start":{"line":45,"column":18},"end":{"line":45,"column":35}},"20":{"start":{"line":46,"column":4},"end":{"line":46,"column":54}},"21":{"start":{"line":46,"column":18},"end":{"line":46,"column":54}},"22":{"start":{"line":47,"column":4},"end":{"line":47,"column":19}},"23":{"start":{"line":50,"column":2},"end":{"line":54,"column":4}},"24":{"start":{"line":59,"column":12},"end":{"line":59,"column":73}},"25":{"start":{"line":60,"column":2},"end":{"line":60,"column":68}},"26":{"start":{"line":63,"column":15},"end":{"line":63,"column":38}},"27":{"start":{"line":65,"column":0},"end":{"line":65,"column":30}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":97}},"line":14},"1":{"name":"bs58checkBase","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":22}},"loc":{"start":{"line":19,"column":35},"end":{"line":55,"column":1}},"line":19},"2":{"name":"encode","decl":{"start":{"line":21,"column":11},"end":{"line":21,"column":17}},"loc":{"start":{"line":21,"column":27},"end":{"line":24,"column":3}},"line":21},"3":{"name":"decodeRaw","decl":{"start":{"line":26,"column":11},"end":{"line":26,"column":20}},"loc":{"start":{"line":26,"column":29},"end":{"line":32,"column":3}},"line":26},"4":{"name":"decodeUnsafe","decl":{"start":{"line":35,"column":11},"end":{"line":35,"column":23}},"loc":{"start":{"line":35,"column":32},"end":{"line":40,"column":3}},"line":35},"5":{"name":"decode","decl":{"start":{"line":42,"column":11},"end":{"line":42,"column":17}},"loc":{"start":{"line":42,"column":26},"end":{"line":48,"column":3}},"line":42},"6":{"name":"sha256x2","decl":{"start":{"line":58,"column":9},"end":{"line":58,"column":17}},"loc":{"start":{"line":58,"column":26},"end":{"line":61,"column":1}},"line":58}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":94}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":94}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":30,"column":4},"end":{"line":30,"column":138}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":138}},{"start":{"line":30,"column":4},"end":{"line":30,"column":138}}],"line":30},"3":{"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":24}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":24}},{"start":{"line":38,"column":4},"end":{"line":38,"column":24}}],"line":38},"4":{"loc":{"start":{"line":46,"column":4},"end":{"line":46,"column":54}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":54}},{"start":{"line":46,"column":4},"end":{"line":46,"column":54}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":4,"7":4,"8":9,"9":9,"10":9,"11":9,"12":2,"13":7,"14":0,"15":0,"16":0,"17":0,"18":11,"19":9,"20":9,"21":2,"22":7,"23":1,"24":13,"25":13,"26":1,"27":1},"f":{"0":2,"1":1,"2":4,"3":9,"4":0,"5":11,"6":13},"b":{"0":[1,1],"1":[2,2],"2":[2,7],"3":[0,0],"4":[2,7]},"inputSourceMap":{"version":3,"sources":["base58check.ts"],"names":["bs58checkBase","checksumFn","encode","payload","checksum","base58","Buffer","concat","length","decodeRaw","buffer","slice","newChecksum","decodeUnsafe","string","decode","Error","sha256x2","tmp","update","digest"],"mappings":";;;;;;;AAGA;;AAEA;;AACA;;;;AANA;;;AAQA,SAASA,aAAT,CAAuBC,UAAvB,EAA4E;AACxE;AACA,WAASC,MAAT,CAAgBC,OAAhB,EAAyC;AACrC,QAAMC,QAAQ,GAAGH,UAAU,CAACE,OAAD,CAA3B;AACA,WAAOE,iBAAOH,MAAP,CAAcI,eAAOC,MAAP,CAAc,CAC/BJ,OAD+B,EAE/BC,QAF+B,CAAd,EAGlBD,OAAO,CAACK,MAAR,GAAiB,CAHC,CAAd,CAAP;AAIH;;AAED,WAASC,SAAT,CAAmBC,MAAnB,EAAuD;AACnD,QAAMP,OAAO,GAAGO,MAAM,CAACC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAhB;AACA,QAAMP,QAAQ,GAAGM,MAAM,CAACC,KAAP,CAAa,CAAC,CAAd,CAAjB;AACA,QAAMC,WAAW,GAAGX,UAAU,CAACE,OAAD,CAA9B;AAEA,QAAIC,QAAQ,CAAC,CAAD,CAAR,GAAcQ,WAAW,CAAC,CAAD,CAAzB,GACIR,QAAQ,CAAC,CAAD,CAAR,GAAcQ,WAAW,CAAC,CAAD,CAD7B,GAEIR,QAAQ,CAAC,CAAD,CAAR,GAAcQ,WAAW,CAAC,CAAD,CAF7B,GAGIR,QAAQ,CAAC,CAAD,CAAR,GAAcQ,WAAW,CAAC,CAAD,CAHjC,EAGsC;AAEtC,WAAOT,OAAP;AACH,GArBuE,CAuBxE;;;AACA,WAASU,YAAT,CAAsBC,MAAtB,EAA0D;AACtD,QAAMJ,MAAM,GAAGL,iBAAOQ,YAAP,CAAoBC,MAApB,CAAf;;AACA,QAAI,CAACJ,MAAL,EAAa;AACb,WAAOD,SAAS,CAACC,MAAD,CAAhB;AACH;;AAED,WAASK,MAAT,CAAgBD,MAAhB,EAAwC;AACpC,QAAMJ,MAAM,GAAGL,iBAAOU,MAAP,CAAcD,MAAd,CAAf;;AACA,QAAMX,OAAO,GAAGM,SAAS,CAACC,MAAD,CAAzB;AACA,QAAI,CAACP,OAAL,EAAc,MAAM,IAAIa,KAAJ,CAAU,kBAAV,CAAN;AACd,WAAOb,OAAP;AACH;;AAED,SAAO;AACHD,IAAAA,MAAM,EAAEA,MADL;AAEHa,IAAAA,MAAM,EAAEA,MAFL;AAGHF,IAAAA,YAAY,EAAEA;AAHX,GAAP;AAKH,C,CAED;;;AACA,SAASI,QAAT,CAAkBP,MAAlB,EAA0C;AACtC,MAAMQ,GAAG,GAAG,4BAAW,QAAX,EAAqBC,MAArB,CAA4BT,MAA5B,EAAoCU,MAApC,EAAZ;AACA,SAAO,4BAAW,QAAX,EAAqBD,MAArB,CAA4BD,GAA5B,EAAiCE,MAAjC,EAAP;AACH;;eAEcpB,aAAa,CAACiB,QAAD,C","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding","sourcesContent":["/**\n * This is a Typescript port of the bs58check package\n */\nimport base58 from './base58';\nimport { BaseEncoder } from './base-x';\nimport { Buffer } from 'buffer';\nimport createHash from 'create-hash';\n\nfunction bs58checkBase(checksumFn: ((data: Buffer) => Buffer)): BaseEncoder {\n    // Encode a buffer as a base58-check encoded string\n    function encode(payload: Buffer): string {\n        const checksum = checksumFn(payload);\n        return base58.encode(Buffer.concat([\n            payload,\n            checksum,\n        ], payload.length + 4));\n    }\n\n    function decodeRaw(buffer: Buffer): Buffer | undefined {\n        const payload = buffer.slice(0, -4);\n        const checksum = buffer.slice(-4);\n        const newChecksum = checksumFn(payload);\n\n        if (checksum[0] ^ newChecksum[0] |\n                checksum[1] ^ newChecksum[1] |\n                checksum[2] ^ newChecksum[2] |\n                checksum[3] ^ newChecksum[3]) return;\n\n        return payload;\n    }\n\n    // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n    function decodeUnsafe(string: string): Buffer | undefined {\n        const buffer = base58.decodeUnsafe(string);\n        if (!buffer) return;\n        return decodeRaw(buffer);\n    }\n\n    function decode(string: string): Buffer {\n        const buffer = base58.decode(string);\n        const payload = decodeRaw(buffer);\n        if (!payload) throw new Error('Invalid checksum');\n        return payload;\n    }\n\n    return {\n        encode: encode,\n        decode: decode,\n        decodeUnsafe: decodeUnsafe,\n    };\n}\n\n// SHA256(SHA256(buffer))\nfunction sha256x2(buffer: Buffer): Buffer {\n    const tmp = createHash('sha256').update(buffer).digest();\n    return createHash('sha256').update(tmp).digest();\n}\n\nexport default bs58checkBase(sha256x2);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8f8373adead9712a4d3eb0712379d82196d86e8f","contentHash":"44917e7b6a3799df90121d0ddf66ab66ab13cbaa14f6e55f4fd6fa2a963c1072"},"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/base58.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/base58.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"2":{"start":{"line":8,"column":13},"end":{"line":8,"column":56}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":95}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":75}},"5":{"start":{"line":14,"column":15},"end":{"line":14,"column":47}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":97}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":94}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":94}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["base58.ts"],"names":["ALPHABET"],"mappings":";;;;;;;AACA;;;;AACA,IAAMA,QAAQ,GAAG,4DAAjB;;eACe,uBAAMA,QAAN,C","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding","sourcesContent":["\nimport baseX from './base-x';\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nexport default baseX(ALPHABET);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5ce8285c0580fbfaa50c1ed6fae158653415bf49","contentHash":"e4e0439b26995b8f59076dba6de7baf435ca80ffafedd93968112cfdf3691a13"},"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/base-x.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/base-x.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":8,"column":14},"end":{"line":8,"column":31}},"3":{"start":{"line":19,"column":2},"end":{"line":19,"column":71}},"4":{"start":{"line":19,"column":30},"end":{"line":19,"column":71}},"5":{"start":{"line":20,"column":17},"end":{"line":20,"column":36}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":21}},"7":{"start":{"line":23,"column":2},"end":{"line":28,"column":3}},"8":{"start":{"line":23,"column":15},"end":{"line":23,"column":16}},"9":{"start":{"line":24,"column":12},"end":{"line":24,"column":30}},"10":{"start":{"line":25,"column":13},"end":{"line":25,"column":28}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":71}},"12":{"start":{"line":26,"column":30},"end":{"line":26,"column":71}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":21}},"14":{"start":{"line":30,"column":13},"end":{"line":30,"column":28}},"15":{"start":{"line":31,"column":15},"end":{"line":31,"column":33}},"16":{"start":{"line":32,"column":15},"end":{"line":32,"column":45}},"17":{"start":{"line":34,"column":16},"end":{"line":34,"column":46}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":81}},"19":{"start":{"line":37,"column":42},"end":{"line":37,"column":81}},"20":{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},"21":{"start":{"line":38,"column":29},"end":{"line":38,"column":39}},"22":{"start":{"line":40,"column":17},"end":{"line":40,"column":18}},"23":{"start":{"line":41,"column":17},"end":{"line":41,"column":18}},"24":{"start":{"line":42,"column":17},"end":{"line":42,"column":18}},"25":{"start":{"line":43,"column":15},"end":{"line":43,"column":28}},"26":{"start":{"line":45,"column":4},"end":{"line":48,"column":5}},"27":{"start":{"line":46,"column":6},"end":{"line":46,"column":15}},"28":{"start":{"line":47,"column":6},"end":{"line":47,"column":15}},"29":{"start":{"line":51,"column":15},"end":{"line":51,"column":50}},"30":{"start":{"line":52,"column":14},"end":{"line":52,"column":34}},"31":{"start":{"line":54,"column":4},"end":{"line":68,"column":5}},"32":{"start":{"line":55,"column":18},"end":{"line":55,"column":32}},"33":{"start":{"line":57,"column":15},"end":{"line":57,"column":16}},"34":{"start":{"line":59,"column":6},"end":{"line":63,"column":7}},"35":{"start":{"line":59,"column":21},"end":{"line":59,"column":29}},"36":{"start":{"line":60,"column":8},"end":{"line":60,"column":38}},"37":{"start":{"line":61,"column":8},"end":{"line":61,"column":38}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":35}},"39":{"start":{"line":65,"column":6},"end":{"line":65,"column":57}},"40":{"start":{"line":65,"column":23},"end":{"line":65,"column":57}},"41":{"start":{"line":66,"column":6},"end":{"line":66,"column":18}},"42":{"start":{"line":67,"column":6},"end":{"line":67,"column":15}},"43":{"start":{"line":71,"column":13},"end":{"line":71,"column":26}},"44":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"45":{"start":{"line":74,"column":6},"end":{"line":74,"column":11}},"46":{"start":{"line":78,"column":14},"end":{"line":78,"column":35}},"47":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"48":{"start":{"line":81,"column":6},"end":{"line":81,"column":38}},"49":{"start":{"line":84,"column":4},"end":{"line":84,"column":15}},"50":{"start":{"line":88,"column":4},"end":{"line":88,"column":75}},"51":{"start":{"line":88,"column":36},"end":{"line":88,"column":75}},"52":{"start":{"line":89,"column":4},"end":{"line":89,"column":60}},"53":{"start":{"line":89,"column":29},"end":{"line":89,"column":60}},"54":{"start":{"line":90,"column":14},"end":{"line":90,"column":15}},"55":{"start":{"line":92,"column":4},"end":{"line":92,"column":36}},"56":{"start":{"line":92,"column":29},"end":{"line":92,"column":36}},"57":{"start":{"line":94,"column":17},"end":{"line":94,"column":18}},"58":{"start":{"line":95,"column":17},"end":{"line":95,"column":18}},"59":{"start":{"line":97,"column":4},"end":{"line":100,"column":5}},"60":{"start":{"line":98,"column":6},"end":{"line":98,"column":15}},"61":{"start":{"line":99,"column":6},"end":{"line":99,"column":12}},"62":{"start":{"line":103,"column":15},"end":{"line":103,"column":55}},"63":{"start":{"line":105,"column":15},"end":{"line":105,"column":35}},"64":{"start":{"line":107,"column":4},"end":{"line":123,"column":5}},"65":{"start":{"line":109,"column":18},"end":{"line":109,"column":50}},"66":{"start":{"line":111,"column":6},"end":{"line":111,"column":32}},"67":{"start":{"line":111,"column":25},"end":{"line":111,"column":32}},"68":{"start":{"line":112,"column":16},"end":{"line":112,"column":17}},"69":{"start":{"line":114,"column":6},"end":{"line":118,"column":7}},"70":{"start":{"line":114,"column":22},"end":{"line":114,"column":30}},"71":{"start":{"line":115,"column":8},"end":{"line":115,"column":41}},"72":{"start":{"line":116,"column":8},"end":{"line":116,"column":39}},"73":{"start":{"line":117,"column":8},"end":{"line":117,"column":34}},"74":{"start":{"line":120,"column":6},"end":{"line":120,"column":57}},"75":{"start":{"line":120,"column":23},"end":{"line":120,"column":57}},"76":{"start":{"line":121,"column":6},"end":{"line":121,"column":19}},"77":{"start":{"line":122,"column":6},"end":{"line":122,"column":12}},"78":{"start":{"line":126,"column":4},"end":{"line":126,"column":36}},"79":{"start":{"line":126,"column":29},"end":{"line":126,"column":36}},"80":{"start":{"line":128,"column":13},"end":{"line":128,"column":26}},"81":{"start":{"line":130,"column":4},"end":{"line":132,"column":5}},"82":{"start":{"line":131,"column":6},"end":{"line":131,"column":11}},"83":{"start":{"line":134,"column":14},"end":{"line":134,"column":62}},"84":{"start":{"line":136,"column":4},"end":{"line":136,"column":30}},"85":{"start":{"line":137,"column":12},"end":{"line":137,"column":18}},"86":{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},"87":{"start":{"line":140,"column":6},"end":{"line":140,"column":28}},"88":{"start":{"line":143,"column":4},"end":{"line":143,"column":15}},"89":{"start":{"line":147,"column":17},"end":{"line":147,"column":37}},"90":{"start":{"line":148,"column":4},"end":{"line":148,"column":30}},"91":{"start":{"line":148,"column":16},"end":{"line":148,"column":30}},"92":{"start":{"line":149,"column":4},"end":{"line":149,"column":54}},"93":{"start":{"line":152,"column":2},"end":{"line":156,"column":4}}},"fnMap":{"0":{"name":"base","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":13}},"loc":{"start":{"line":18,"column":24},"end":{"line":157,"column":1}},"line":18},"1":{"name":"encode","decl":{"start":{"line":36,"column":11},"end":{"line":36,"column":17}},"loc":{"start":{"line":36,"column":26},"end":{"line":85,"column":3}},"line":36},"2":{"name":"decodeUnsafe","decl":{"start":{"line":87,"column":11},"end":{"line":87,"column":23}},"loc":{"start":{"line":87,"column":32},"end":{"line":144,"column":3}},"line":87},"3":{"name":"decode","decl":{"start":{"line":146,"column":11},"end":{"line":146,"column":17}},"loc":{"start":{"line":146,"column":26},"end":{"line":150,"column":3}},"line":146}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":2},"end":{"line":19,"column":71}},"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":71}},{"start":{"line":19,"column":2},"end":{"line":19,"column":71}}],"line":19},"1":{"loc":{"start":{"line":26,"column":4},"end":{"line":26,"column":71}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":71}},{"start":{"line":26,"column":4},"end":{"line":26,"column":71}}],"line":26},"2":{"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":81}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":81}},{"start":{"line":37,"column":4},"end":{"line":37,"column":81}}],"line":37},"3":{"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},{"start":{"line":38,"column":4},"end":{"line":38,"column":39}}],"line":38},"4":{"loc":{"start":{"line":45,"column":11},"end":{"line":45,"column":50}},"type":"binary-expr","locations":[{"start":{"line":45,"column":11},"end":{"line":45,"column":26}},{"start":{"line":45,"column":30},"end":{"line":45,"column":50}}],"line":45},"5":{"loc":{"start":{"line":59,"column":31},"end":{"line":59,"column":73}},"type":"binary-expr","locations":[{"start":{"line":59,"column":32},"end":{"line":59,"column":43}},{"start":{"line":59,"column":47},"end":{"line":59,"column":58}},{"start":{"line":59,"column":63},"end":{"line":59,"column":73}}],"line":59},"6":{"loc":{"start":{"line":65,"column":6},"end":{"line":65,"column":57}},"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":57}},{"start":{"line":65,"column":6},"end":{"line":65,"column":57}}],"line":65},"7":{"loc":{"start":{"line":73,"column":11},"end":{"line":73,"column":39}},"type":"binary-expr","locations":[{"start":{"line":73,"column":11},"end":{"line":73,"column":22}},{"start":{"line":73,"column":26},"end":{"line":73,"column":39}}],"line":73},"8":{"loc":{"start":{"line":88,"column":4},"end":{"line":88,"column":75}},"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":75}},{"start":{"line":88,"column":4},"end":{"line":88,"column":75}}],"line":88},"9":{"loc":{"start":{"line":89,"column":4},"end":{"line":89,"column":60}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":60}},{"start":{"line":89,"column":4},"end":{"line":89,"column":60}}],"line":89},"10":{"loc":{"start":{"line":92,"column":4},"end":{"line":92,"column":36}},"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":36}},{"start":{"line":92,"column":4},"end":{"line":92,"column":36}}],"line":92},"11":{"loc":{"start":{"line":111,"column":6},"end":{"line":111,"column":32}},"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":32}},{"start":{"line":111,"column":6},"end":{"line":111,"column":32}}],"line":111},"12":{"loc":{"start":{"line":114,"column":32},"end":{"line":114,"column":76}},"type":"binary-expr","locations":[{"start":{"line":114,"column":33},"end":{"line":114,"column":44}},{"start":{"line":114,"column":48},"end":{"line":114,"column":60}},{"start":{"line":114,"column":65},"end":{"line":114,"column":76}}],"line":114},"13":{"loc":{"start":{"line":120,"column":6},"end":{"line":120,"column":57}},"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":57}},{"start":{"line":120,"column":6},"end":{"line":120,"column":57}}],"line":120},"14":{"loc":{"start":{"line":126,"column":4},"end":{"line":126,"column":36}},"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":36}},{"start":{"line":126,"column":4},"end":{"line":126,"column":36}}],"line":126},"15":{"loc":{"start":{"line":130,"column":11},"end":{"line":130,"column":40}},"type":"binary-expr","locations":[{"start":{"line":130,"column":11},"end":{"line":130,"column":22}},{"start":{"line":130,"column":26},"end":{"line":130,"column":40}}],"line":130},"16":{"loc":{"start":{"line":148,"column":4},"end":{"line":148,"column":30}},"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":30}},{"start":{"line":148,"column":4},"end":{"line":148,"column":30}}],"line":148}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":58,"10":58,"11":58,"12":0,"13":58,"14":1,"15":1,"16":1,"17":1,"18":6,"19":0,"20":6,"21":0,"22":6,"23":6,"24":6,"25":6,"26":6,"27":2,"28":2,"29":6,"30":6,"31":6,"32":155,"33":155,"34":155,"35":155,"36":4094,"37":4094,"38":4094,"39":155,"40":0,"41":155,"42":155,"43":6,"44":6,"45":0,"46":6,"47":6,"48":211,"49":6,"50":14,"51":0,"52":14,"53":0,"54":14,"55":14,"56":0,"57":14,"58":14,"59":14,"60":2,"61":2,"62":14,"63":14,"64":14,"65":510,"66":510,"67":3,"68":507,"69":507,"70":507,"71":10103,"72":10103,"73":10103,"74":507,"75":0,"76":507,"77":507,"78":11,"79":0,"80":11,"81":11,"82":0,"83":11,"84":11,"85":11,"86":11,"87":367,"88":11,"89":14,"90":14,"91":11,"92":3,"93":1},"f":{"0":1,"1":6,"2":14,"3":14},"b":{"0":[0,1],"1":[0,58],"2":[0,6],"3":[0,6],"4":[8,7],"5":[4249,168,4094],"6":[0,155],"7":[6,5],"8":[0,14],"9":[0,14],"10":[0,14],"11":[3,507],"12":[10610,646,10103],"13":[0,507],"14":[0,11],"15":[11,10],"16":[11,3]},"inputSourceMap":{"version":3,"sources":["base-x.ts"],"names":["base","ALPHABET","length","TypeError","BASE_MAP","Uint8Array","fill","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","encode","source","Buffer","isBuffer","zeroes","pbegin","pend","size","b58","carry","it","Error","str","repeat","decodeUnsafe","alloc","psz","b256","vch","allocUnsafe","j","decode","buffer"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding","sourcesContent":["/**\n * This is a Typescript port of the base-x package\n */\n\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n\nimport { Buffer } from 'buffer';\n\nexport interface BaseEncoder {\n    encode(source: Buffer): string;\n    decode(source: string): Buffer;\n    decodeUnsafe(source: string): Buffer | undefined;\n}\n\nexport default function base(ALPHABET: string): BaseEncoder {\n    if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long');\n\n    const BASE_MAP = new Uint8Array(256);\n    BASE_MAP.fill(255);\n\n    for (let i = 0; i < ALPHABET.length; i++) {\n        const x = ALPHABET.charAt(i);\n        const xc = x.charCodeAt(0);\n\n        if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous');\n        BASE_MAP[xc] = i;\n    }\n\n    const BASE = ALPHABET.length;\n    const LEADER = ALPHABET.charAt(0);\n    const FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    const iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n\n    function encode(source: Buffer): string {\n        if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer');\n        if (source.length === 0) return '';\n\n        // Skip & count leading zeroes.\n        let zeroes = 0;\n        let length = 0;\n        let pbegin = 0;\n        const pend = source.length;\n\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n\n        // Allocate enough space in big-endian base58 representation.\n        const size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        const b58 = new Uint8Array(size);\n\n        // Process the bytes.\n        while (pbegin !== pend) {\n            let carry = source[pbegin];\n\n            // Apply \"b58 = b58 * 256 + ch\".\n            let i = 0;\n            for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n                carry += (256 * b58[it]) >>> 0;\n                b58[it] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n\n            if (carry !== 0) throw new Error('Non-zero carry');\n            length = i;\n            pbegin++;\n        }\n\n        // Skip leading zeroes in base58 result.\n        let it = size - length;\n        while (it !== size && b58[it] === 0) {\n            it++;\n        }\n\n        // Translate the result into a string.\n        let str = LEADER.repeat(zeroes);\n        for (; it < size; ++it) str += ALPHABET.charAt(b58[it]);\n\n        return str;\n    }\n\n    function decodeUnsafe(source: string): Buffer | undefined {\n        if (typeof source !== 'string') throw new TypeError('Expected String');\n        if (source.length === 0) return Buffer.alloc(0);\n\n        let psz = 0;\n\n        // Skip leading spaces.\n        if (source[psz] === ' ') return;\n\n        // Skip and count leading '1's.\n        let zeroes = 0;\n        let length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n\n        // Allocate enough space in big-endian base256 representation.\n        const size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        const b256 = new Uint8Array(size);\n\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            let carry = BASE_MAP[source.charCodeAt(psz)];\n\n            // Invalid character\n            if (carry === 255) return;\n\n            let i = 0;\n            for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n                carry += (BASE * b256[it]) >>> 0;\n                b256[it] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n\n            if (carry !== 0) throw new Error('Non-zero carry');\n            length = i;\n            psz++;\n        }\n\n        // Skip trailing spaces.\n        if (source[psz] === ' ') return;\n\n        // Skip leading zeroes in b256.\n        let it = size - length;\n        while (it !== size && b256[it] === 0) {\n            it++;\n        }\n\n        const vch = Buffer.allocUnsafe(zeroes + (size - it));\n        vch.fill(0x00, 0, zeroes);\n\n        let j = zeroes;\n        while (it !== size) {\n            vch[j++] = b256[it++];\n        }\n\n        return vch;\n    }\n\n    function decode(source: string): Buffer {\n        const buffer = decodeUnsafe(source);\n        if (buffer) return buffer;\n        throw new Error('Non-base' + BASE + ' character');\n    }\n\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"589d53517387d1c630603048f9c540be2c1c4dda","contentHash":"61f8f9d00101d4514dfc79038f24289907142fbfd15f92ca5cdc75dffb3a9f5a"},"/Users/paulgrau/projects/aergo/herajs/packages/common/src/classes/amount.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/classes/amount.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"2":{"start":{"line":8,"column":17},"end":{"line":8,"column":40}},"3":{"start":{"line":10,"column":16},"end":{"line":10,"column":38}},"4":{"start":{"line":12,"column":12},"end":{"line":12,"column":51}},"5":{"start":{"line":14,"column":14},"end":{"line":14,"column":31}},"6":{"start":{"line":16,"column":39},"end":{"line":16,"column":95}},"7":{"start":{"line":18,"column":24},"end":{"line":18,"column":328}},"8":{"start":{"line":18,"column":99},"end":{"line":18,"column":154}},"9":{"start":{"line":18,"column":133},"end":{"line":18,"column":151}},"10":{"start":{"line":18,"column":164},"end":{"line":18,"column":326}},"11":{"start":{"line":18,"column":198},"end":{"line":18,"column":323}},"12":{"start":{"line":18,"column":329},"end":{"line":18,"column":349}},"13":{"start":{"line":20,"column":34},"end":{"line":20,"column":117}},"14":{"start":{"line":22,"column":30},"end":{"line":22,"column":106}},"15":{"start":{"line":24,"column":41},"end":{"line":24,"column":155}},"16":{"start":{"line":24,"column":146},"end":{"line":24,"column":153}},"17":{"start":{"line":24,"column":167},"end":{"line":24,"column":169}},"18":{"start":{"line":24,"column":180},"end":{"line":24,"column":184}},"19":{"start":{"line":24,"column":195},"end":{"line":24,"column":200}},"20":{"start":{"line":24,"column":211},"end":{"line":24,"column":220}},"21":{"start":{"line":24,"column":222},"end":{"line":24,"column":509}},"22":{"start":{"line":24,"column":228},"end":{"line":24,"column":371}},"23":{"start":{"line":24,"column":242},"end":{"line":24,"column":264}},"24":{"start":{"line":24,"column":314},"end":{"line":24,"column":334}},"25":{"start":{"line":24,"column":335},"end":{"line":24,"column":369}},"26":{"start":{"line":24,"column":363},"end":{"line":24,"column":369}},"27":{"start":{"line":24,"column":388},"end":{"line":24,"column":398}},"28":{"start":{"line":24,"column":399},"end":{"line":24,"column":408}},"29":{"start":{"line":24,"column":421},"end":{"line":24,"column":507}},"30":{"start":{"line":24,"column":427},"end":{"line":24,"column":475}},"31":{"start":{"line":24,"column":460},"end":{"line":24,"column":475}},"32":{"start":{"line":24,"column":488},"end":{"line":24,"column":505}},"33":{"start":{"line":24,"column":496},"end":{"line":24,"column":505}},"34":{"start":{"line":24,"column":510},"end":{"line":24,"column":522}},"35":{"start":{"line":26,"column":32},"end":{"line":26,"column":67}},"36":{"start":{"line":26,"column":56},"end":{"line":26,"column":67}},"37":{"start":{"line":28,"column":50},"end":{"line":28,"column":151}},"38":{"start":{"line":28,"column":92},"end":{"line":28,"column":149}},"39":{"start":{"line":30,"column":44},"end":{"line":30,"column":315}},"40":{"start":{"line":30,"column":57},"end":{"line":30,"column":58}},"41":{"start":{"line":30,"column":102},"end":{"line":30,"column":110}},"42":{"start":{"line":30,"column":112},"end":{"line":30,"column":167}},"43":{"start":{"line":30,"column":168},"end":{"line":30,"column":199}},"44":{"start":{"line":30,"column":200},"end":{"line":30,"column":254}},"45":{"start":{"line":30,"column":227},"end":{"line":30,"column":254}},"46":{"start":{"line":30,"column":255},"end":{"line":30,"column":313}},"47":{"start":{"line":32,"column":62},"end":{"line":32,"column":131}},"48":{"start":{"line":32,"column":78},"end":{"line":32,"column":131}},"49":{"start":{"line":32,"column":132},"end":{"line":32,"column":193}},"50":{"start":{"line":32,"column":149},"end":{"line":32,"column":193}},"51":{"start":{"line":32,"column":194},"end":{"line":32,"column":213}},"52":{"start":{"line":34,"column":44},"end":{"line":34,"column":195}},"53":{"start":{"line":34,"column":62},"end":{"line":34,"column":166}},"54":{"start":{"line":34,"column":176},"end":{"line":34,"column":193}},"55":{"start":{"line":34,"column":196},"end":{"line":34,"column":207}},"56":{"start":{"line":36,"column":24},"end":{"line":36,"column":31}},"57":{"start":{"line":37,"column":27},"end":{"line":37,"column":32}},"58":{"start":{"line":40,"column":14},"end":{"line":40,"column":52}},"59":{"start":{"line":43,"column":4},"end":{"line":43,"column":25}},"60":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"61":{"start":{"line":47,"column":4},"end":{"line":47,"column":60}},"62":{"start":{"line":50,"column":2},"end":{"line":50,"column":21}},"63":{"start":{"line":64,"column":0},"end":{"line":365,"column":3}},"64":{"start":{"line":65,"column":2},"end":{"line":84,"column":6}},"65":{"start":{"line":70,"column":17},"end":{"line":70,"column":87}},"66":{"start":{"line":72,"column":6},"end":{"line":74,"column":7}},"67":{"start":{"line":73,"column":8},"end":{"line":73,"column":33}},"68":{"start":{"line":76,"column":17},"end":{"line":76,"column":39}},"69":{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},"70":{"start":{"line":79,"column":8},"end":{"line":79,"column":53}},"71":{"start":{"line":82,"column":6},"end":{"line":82,"column":44}},"72":{"start":{"line":87,"column":15},"end":{"line":87,"column":85}},"73":{"start":{"line":88,"column":18},"end":{"line":88,"column":65}},"74":{"start":{"line":90,"column":4},"end":{"line":90,"column":34}},"75":{"start":{"line":92,"column":4},"end":{"line":92,"column":43}},"76":{"start":{"line":94,"column":4},"end":{"line":94,"column":42}},"77":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"78":{"start":{"line":97,"column":6},"end":{"line":97,"column":19}},"79":{"start":{"line":100,"column":4},"end":{"line":124,"column":5}},"80":{"start":{"line":101,"column":25},"end":{"line":101,"column":44}},"81":{"start":{"line":102,"column":26},"end":{"line":102,"column":57}},"82":{"start":{"line":103,"column":19},"end":{"line":103,"column":35}},"83":{"start":{"line":104,"column":18},"end":{"line":104,"column":34}},"84":{"start":{"line":106,"column":6},"end":{"line":106,"column":27}},"85":{"start":{"line":107,"column":6},"end":{"line":107,"column":57}},"86":{"start":{"line":108,"column":11},"end":{"line":124,"column":5}},"87":{"start":{"line":109,"column":6},"end":{"line":109,"column":61}},"88":{"start":{"line":110,"column":11},"end":{"line":124,"column":5}},"89":{"start":{"line":111,"column":6},"end":{"line":113,"column":7}},"90":{"start":{"line":112,"column":8},"end":{"line":112,"column":36}},"91":{"start":{"line":115,"column":6},"end":{"line":115,"column":50}},"92":{"start":{"line":116,"column":11},"end":{"line":124,"column":5}},"93":{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},"94":{"start":{"line":118,"column":8},"end":{"line":118,"column":36}},"95":{"start":{"line":121,"column":6},"end":{"line":121,"column":84}},"96":{"start":{"line":123,"column":6},"end":{"line":123,"column":140}},"97":{"start":{"line":126,"column":4},"end":{"line":126,"column":21}},"98":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"99":{"start":{"line":129,"column":6},"end":{"line":129,"column":36}},"100":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"101":{"start":{"line":134,"column":6},"end":{"line":134,"column":26}},"102":{"start":{"line":138,"column":4},"end":{"line":138,"column":43}},"103":{"start":{"line":145,"column":2},"end":{"line":362,"column":6}},"104":{"start":{"line":148,"column":6},"end":{"line":148,"column":88}},"105":{"start":{"line":157,"column":6},"end":{"line":157,"column":43}},"106":{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},"107":{"start":{"line":167,"column":8},"end":{"line":167,"column":69}},"108":{"start":{"line":170,"column":6},"end":{"line":170,"column":44}},"109":{"start":{"line":183,"column":17},"end":{"line":183,"column":87}},"110":{"start":{"line":184,"column":6},"end":{"line":184,"column":40}},"111":{"start":{"line":184,"column":23},"end":{"line":184,"column":40}},"112":{"start":{"line":185,"column":6},"end":{"line":185,"column":52}},"113":{"start":{"line":185,"column":23},"end":{"line":185,"column":52}},"114":{"start":{"line":186,"column":17},"end":{"line":186,"column":39}},"115":{"start":{"line":187,"column":6},"end":{"line":187,"column":67}},"116":{"start":{"line":197,"column":6},"end":{"line":197,"column":46}},"117":{"start":{"line":216,"column":14},"end":{"line":216,"column":24}},"118":{"start":{"line":217,"column":14},"end":{"line":217,"column":51}},"119":{"start":{"line":218,"column":6},"end":{"line":218,"column":89}},"120":{"start":{"line":228,"column":6},"end":{"line":228,"column":45}},"121":{"start":{"line":242,"column":16},"end":{"line":242,"column":87}},"122":{"start":{"line":244,"column":6},"end":{"line":244,"column":40}},"123":{"start":{"line":258,"column":16},"end":{"line":258,"column":92}},"124":{"start":{"line":260,"column":6},"end":{"line":260,"column":40}},"125":{"start":{"line":278,"column":16},"end":{"line":278,"column":86}},"126":{"start":{"line":281,"column":25},"end":{"line":281,"column":83}},"127":{"start":{"line":283,"column":6},"end":{"line":289,"column":7}},"128":{"start":{"line":284,"column":22},"end":{"line":284,"column":58}},"129":{"start":{"line":285,"column":23},"end":{"line":285,"column":49}},"130":{"start":{"line":286,"column":20},"end":{"line":286,"column":31}},"131":{"start":{"line":288,"column":8},"end":{"line":288,"column":38}},"132":{"start":{"line":291,"column":6},"end":{"line":293,"column":7}},"133":{"start":{"line":292,"column":8},"end":{"line":292,"column":21}},"134":{"start":{"line":295,"column":6},"end":{"line":295,"column":49}},"135":{"start":{"line":310,"column":16},"end":{"line":310,"column":88}},"136":{"start":{"line":312,"column":6},"end":{"line":312,"column":40}},"137":{"start":{"line":317,"column":6},"end":{"line":317,"column":50}},"138":{"start":{"line":317,"column":39},"end":{"line":317,"column":50}},"139":{"start":{"line":319,"column":6},"end":{"line":321,"column":7}},"140":{"start":{"line":320,"column":8},"end":{"line":320,"column":24}},"141":{"start":{"line":323,"column":16},"end":{"line":323,"column":32}},"142":{"start":{"line":325,"column":6},"end":{"line":327,"column":7}},"143":{"start":{"line":326,"column":8},"end":{"line":326,"column":48}},"144":{"start":{"line":329,"column":6},"end":{"line":331,"column":7}},"145":{"start":{"line":330,"column":8},"end":{"line":330,"column":59}},"146":{"start":{"line":334,"column":6},"end":{"line":334,"column":29}},"147":{"start":{"line":335,"column":6},"end":{"line":335,"column":33}},"148":{"start":{"line":336,"column":6},"end":{"line":336,"column":73}},"149":{"start":{"line":338,"column":6},"end":{"line":338,"column":38}},"150":{"start":{"line":340,"column":6},"end":{"line":340,"column":35}},"151":{"start":{"line":342,"column":6},"end":{"line":342,"column":37}},"152":{"start":{"line":343,"column":6},"end":{"line":343,"column":17}},"153":{"start":{"line":348,"column":24},"end":{"line":348,"column":94}},"154":{"start":{"line":350,"column":6},"end":{"line":358,"column":7}},"155":{"start":{"line":351,"column":23},"end":{"line":351,"column":51}},"156":{"start":{"line":352,"column":23},"end":{"line":352,"column":50}},"157":{"start":{"line":353,"column":21},"end":{"line":353,"column":32}},"158":{"start":{"line":354,"column":20},"end":{"line":354,"column":31}},"159":{"start":{"line":356,"column":19},"end":{"line":356,"column":39}},"160":{"start":{"line":357,"column":8},"end":{"line":357,"column":39}},"161":{"start":{"line":360,"column":6},"end":{"line":360,"column":48}},"162":{"start":{"line":364,"column":2},"end":{"line":364,"column":16}},"163":{"start":{"line":367,"column":0},"end":{"line":367,"column":28}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":97}},"line":16},"1":{"name":"_typeof","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":16}},"loc":{"start":{"line":18,"column":22},"end":{"line":18,"column":351}},"line":18},"2":{"name":"_typeof","decl":{"start":{"line":18,"column":118},"end":{"line":18,"column":125}},"loc":{"start":{"line":18,"column":131},"end":{"line":18,"column":153}},"line":18},"3":{"name":"_typeof","decl":{"start":{"line":18,"column":183},"end":{"line":18,"column":190}},"loc":{"start":{"line":18,"column":196},"end":{"line":18,"column":325}},"line":18},"4":{"name":"_slicedToArray","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":23}},"loc":{"start":{"line":20,"column":32},"end":{"line":20,"column":119}},"line":20},"5":{"name":"_nonIterableRest","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":25}},"loc":{"start":{"line":22,"column":28},"end":{"line":22,"column":108}},"line":22},"6":{"name":"_iterableToArrayLimit","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":30}},"loc":{"start":{"line":24,"column":39},"end":{"line":24,"column":524}},"line":24},"7":{"name":"_arrayWithHoles","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":24}},"loc":{"start":{"line":26,"column":30},"end":{"line":26,"column":69}},"line":26},"8":{"name":"_classCallCheck","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":24}},"loc":{"start":{"line":28,"column":48},"end":{"line":28,"column":153}},"line":28},"9":{"name":"_defineProperties","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":26}},"loc":{"start":{"line":30,"column":42},"end":{"line":30,"column":317}},"line":30},"10":{"name":"_createClass","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":21}},"loc":{"start":{"line":32,"column":60},"end":{"line":32,"column":215}},"line":32},"11":{"name":"_defineProperty","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":24}},"loc":{"start":{"line":34,"column":42},"end":{"line":34,"column":209}},"line":34},"12":{"name":"getUnitPrecision","decl":{"start":{"line":39,"column":9},"end":{"line":39,"column":25}},"loc":{"start":{"line":39,"column":32},"end":{"line":51,"column":1}},"line":39},"13":{"name":"isValidUnit","decl":{"start":{"line":42,"column":11},"end":{"line":42,"column":22}},"loc":{"start":{"line":42,"column":29},"end":{"line":44,"column":3}},"line":42},"14":{"name":"(anonymous_14)","decl":{"start":{"line":64,"column":0},"end":{"line":64,"column":1}},"loc":{"start":{"line":64,"column":12},"end":{"line":365,"column":1}},"line":64},"15":{"name":"_valueFromString","decl":{"start":{"line":69,"column":20},"end":{"line":69,"column":36}},"loc":{"start":{"line":69,"column":44},"end":{"line":83,"column":5}},"line":69},"16":{"name":"Amount","decl":{"start":{"line":86,"column":11},"end":{"line":86,"column":17}},"loc":{"start":{"line":86,"column":25},"end":{"line":139,"column":3}},"line":86},"17":{"name":"asBytes","decl":{"start":{"line":147,"column":20},"end":{"line":147,"column":27}},"loc":{"start":{"line":147,"column":30},"end":{"line":149,"column":5}},"line":147},"18":{"name":"toJSON","decl":{"start":{"line":156,"column":20},"end":{"line":156,"column":26}},"loc":{"start":{"line":156,"column":29},"end":{"line":158,"column":5}},"line":156},"19":{"name":"toString","decl":{"start":{"line":165,"column":20},"end":{"line":165,"column":28}},"loc":{"start":{"line":165,"column":31},"end":{"line":171,"column":5}},"line":165},"20":{"name":"formatNumber","decl":{"start":{"line":182,"column":20},"end":{"line":182,"column":32}},"loc":{"start":{"line":182,"column":35},"end":{"line":188,"column":5}},"line":182},"21":{"name":"toUnit","decl":{"start":{"line":196,"column":20},"end":{"line":196,"column":26}},"loc":{"start":{"line":196,"column":33},"end":{"line":198,"column":5}},"line":196},"22":{"name":"compare","decl":{"start":{"line":215,"column":20},"end":{"line":215,"column":27}},"loc":{"start":{"line":215,"column":41},"end":{"line":219,"column":5}},"line":215},"23":{"name":"equal","decl":{"start":{"line":227,"column":20},"end":{"line":227,"column":25}},"loc":{"start":{"line":227,"column":39},"end":{"line":229,"column":5}},"line":227},"24":{"name":"add","decl":{"start":{"line":241,"column":20},"end":{"line":241,"column":23}},"loc":{"start":{"line":241,"column":37},"end":{"line":245,"column":5}},"line":241},"25":{"name":"sub","decl":{"start":{"line":257,"column":20},"end":{"line":257,"column":23}},"loc":{"start":{"line":257,"column":37},"end":{"line":261,"column":5}},"line":257},"26":{"name":"div","decl":{"start":{"line":275,"column":20},"end":{"line":275,"column":23}},"loc":{"start":{"line":275,"column":37},"end":{"line":296,"column":5}},"line":275},"27":{"name":"mul","decl":{"start":{"line":309,"column":20},"end":{"line":309,"column":23}},"loc":{"start":{"line":309,"column":37},"end":{"line":313,"column":5}},"line":309},"28":{"name":"moveDecimalPoint","decl":{"start":{"line":316,"column":20},"end":{"line":316,"column":36}},"loc":{"start":{"line":316,"column":50},"end":{"line":344,"column":5}},"line":316},"29":{"name":"toJSBI","decl":{"start":{"line":347,"column":20},"end":{"line":347,"column":26}},"loc":{"start":{"line":347,"column":32},"end":{"line":361,"column":5}},"line":347}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":94}},"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":94}}],"line":16},"1":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":67}},"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}],"line":16},"2":{"loc":{"start":{"line":18,"column":24},"end":{"line":18,"column":328}},"type":"if","locations":[{"start":{"line":18,"column":24},"end":{"line":18,"column":328}},{"start":{"line":18,"column":24},"end":{"line":18,"column":328}}],"line":18},"3":{"loc":{"start":{"line":18,"column":28},"end":{"line":18,"column":95}},"type":"binary-expr","locations":[{"start":{"line":18,"column":28},"end":{"line":18,"column":56}},{"start":{"line":18,"column":60},"end":{"line":18,"column":95}}],"line":18},"4":{"loc":{"start":{"line":18,"column":205},"end":{"line":18,"column":322}},"type":"cond-expr","locations":[{"start":{"line":18,"column":301},"end":{"line":18,"column":309}},{"start":{"line":18,"column":312},"end":{"line":18,"column":322}}],"line":18},"5":{"loc":{"start":{"line":18,"column":205},"end":{"line":18,"column":298}},"type":"binary-expr","locations":[{"start":{"line":18,"column":205},"end":{"line":18,"column":208}},{"start":{"line":18,"column":212},"end":{"line":18,"column":240}},{"start":{"line":18,"column":244},"end":{"line":18,"column":270}},{"start":{"line":18,"column":274},"end":{"line":18,"column":298}}],"line":18},"6":{"loc":{"start":{"line":20,"column":41},"end":{"line":20,"column":116}},"type":"binary-expr","locations":[{"start":{"line":20,"column":41},"end":{"line":20,"column":61}},{"start":{"line":20,"column":65},"end":{"line":20,"column":94}},{"start":{"line":20,"column":98},"end":{"line":20,"column":116}}],"line":20},"7":{"loc":{"start":{"line":24,"column":41},"end":{"line":24,"column":155}},"type":"if","locations":[{"start":{"line":24,"column":41},"end":{"line":24,"column":155}},{"start":{"line":24,"column":41},"end":{"line":24,"column":155}}],"line":24},"8":{"loc":{"start":{"line":24,"column":47},"end":{"line":24,"column":141}},"type":"binary-expr","locations":[{"start":{"line":24,"column":47},"end":{"line":24,"column":77}},{"start":{"line":24,"column":81},"end":{"line":24,"column":141}}],"line":24},"9":{"loc":{"start":{"line":24,"column":335},"end":{"line":24,"column":369}},"type":"if","locations":[{"start":{"line":24,"column":335},"end":{"line":24,"column":369}},{"start":{"line":24,"column":335},"end":{"line":24,"column":369}}],"line":24},"10":{"loc":{"start":{"line":24,"column":339},"end":{"line":24,"column":361}},"type":"binary-expr","locations":[{"start":{"line":24,"column":339},"end":{"line":24,"column":340}},{"start":{"line":24,"column":344},"end":{"line":24,"column":361}}],"line":24},"11":{"loc":{"start":{"line":24,"column":427},"end":{"line":24,"column":475}},"type":"if","locations":[{"start":{"line":24,"column":427},"end":{"line":24,"column":475}},{"start":{"line":24,"column":427},"end":{"line":24,"column":475}}],"line":24},"12":{"loc":{"start":{"line":24,"column":431},"end":{"line":24,"column":458}},"type":"binary-expr","locations":[{"start":{"line":24,"column":431},"end":{"line":24,"column":434}},{"start":{"line":24,"column":438},"end":{"line":24,"column":458}}],"line":24},"13":{"loc":{"start":{"line":24,"column":488},"end":{"line":24,"column":505}},"type":"if","locations":[{"start":{"line":24,"column":488},"end":{"line":24,"column":505}},{"start":{"line":24,"column":488},"end":{"line":24,"column":505}}],"line":24},"14":{"loc":{"start":{"line":26,"column":32},"end":{"line":26,"column":67}},"type":"if","locations":[{"start":{"line":26,"column":32},"end":{"line":26,"column":67}},{"start":{"line":26,"column":32},"end":{"line":26,"column":67}}],"line":26},"15":{"loc":{"start":{"line":28,"column":50},"end":{"line":28,"column":151}},"type":"if","locations":[{"start":{"line":28,"column":50},"end":{"line":28,"column":151}},{"start":{"line":28,"column":50},"end":{"line":28,"column":151}}],"line":28},"16":{"loc":{"start":{"line":30,"column":136},"end":{"line":30,"column":166}},"type":"binary-expr","locations":[{"start":{"line":30,"column":136},"end":{"line":30,"column":157}},{"start":{"line":30,"column":161},"end":{"line":30,"column":166}}],"line":30},"17":{"loc":{"start":{"line":30,"column":200},"end":{"line":30,"column":254}},"type":"if","locations":[{"start":{"line":30,"column":200},"end":{"line":30,"column":254}},{"start":{"line":30,"column":200},"end":{"line":30,"column":254}}],"line":30},"18":{"loc":{"start":{"line":32,"column":62},"end":{"line":32,"column":131}},"type":"if","locations":[{"start":{"line":32,"column":62},"end":{"line":32,"column":131}},{"start":{"line":32,"column":62},"end":{"line":32,"column":131}}],"line":32},"19":{"loc":{"start":{"line":32,"column":132},"end":{"line":32,"column":193}},"type":"if","locations":[{"start":{"line":32,"column":132},"end":{"line":32,"column":193}},{"start":{"line":32,"column":132},"end":{"line":32,"column":193}}],"line":32},"20":{"loc":{"start":{"line":34,"column":44},"end":{"line":34,"column":195}},"type":"if","locations":[{"start":{"line":34,"column":44},"end":{"line":34,"column":195}},{"start":{"line":34,"column":44},"end":{"line":34,"column":195}}],"line":34},"21":{"loc":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},{"start":{"line":46,"column":2},"end":{"line":48,"column":3}}],"line":46},"22":{"loc":{"start":{"line":70,"column":17},"end":{"line":70,"column":87}},"type":"cond-expr","locations":[{"start":{"line":70,"column":70},"end":{"line":70,"column":82}},{"start":{"line":70,"column":85},"end":{"line":70,"column":87}}],"line":70},"23":{"loc":{"start":{"line":70,"column":17},"end":{"line":70,"column":67}},"type":"binary-expr","locations":[{"start":{"line":70,"column":17},"end":{"line":70,"column":37}},{"start":{"line":70,"column":41},"end":{"line":70,"column":67}}],"line":70},"24":{"loc":{"start":{"line":72,"column":6},"end":{"line":74,"column":7}},"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":74,"column":7}},{"start":{"line":72,"column":6},"end":{"line":74,"column":7}}],"line":72},"25":{"loc":{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},{"start":{"line":78,"column":6},"end":{"line":80,"column":7}}],"line":78},"26":{"loc":{"start":{"line":87,"column":15},"end":{"line":87,"column":85}},"type":"cond-expr","locations":[{"start":{"line":87,"column":68},"end":{"line":87,"column":80}},{"start":{"line":87,"column":83},"end":{"line":87,"column":85}}],"line":87},"27":{"loc":{"start":{"line":87,"column":15},"end":{"line":87,"column":65}},"type":"binary-expr","locations":[{"start":{"line":87,"column":15},"end":{"line":87,"column":35}},{"start":{"line":87,"column":39},"end":{"line":87,"column":65}}],"line":87},"28":{"loc":{"start":{"line":88,"column":18},"end":{"line":88,"column":65}},"type":"cond-expr","locations":[{"start":{"line":88,"column":41},"end":{"line":88,"column":53}},{"start":{"line":88,"column":56},"end":{"line":88,"column":65}}],"line":88},"29":{"loc":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},{"start":{"line":96,"column":4},"end":{"line":98,"column":5}}],"line":96},"30":{"loc":{"start":{"line":100,"column":4},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":124,"column":5}},{"start":{"line":100,"column":4},"end":{"line":124,"column":5}}],"line":100},"31":{"loc":{"start":{"line":106,"column":13},"end":{"line":106,"column":26}},"type":"binary-expr","locations":[{"start":{"line":106,"column":13},"end":{"line":106,"column":17}},{"start":{"line":106,"column":21},"end":{"line":106,"column":26}}],"line":106},"32":{"loc":{"start":{"line":108,"column":11},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":108,"column":11},"end":{"line":124,"column":5}},{"start":{"line":108,"column":11},"end":{"line":124,"column":5}}],"line":108},"33":{"loc":{"start":{"line":110,"column":11},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":11},"end":{"line":124,"column":5}},{"start":{"line":110,"column":11},"end":{"line":124,"column":5}}],"line":110},"34":{"loc":{"start":{"line":111,"column":6},"end":{"line":113,"column":7}},"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":113,"column":7}},{"start":{"line":111,"column":6},"end":{"line":113,"column":7}}],"line":111},"35":{"loc":{"start":{"line":111,"column":10},"end":{"line":111,"column":52}},"type":"binary-expr","locations":[{"start":{"line":111,"column":10},"end":{"line":111,"column":37}},{"start":{"line":111,"column":41},"end":{"line":111,"column":52}}],"line":111},"36":{"loc":{"start":{"line":116,"column":11},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":116,"column":11},"end":{"line":124,"column":5}},{"start":{"line":116,"column":11},"end":{"line":124,"column":5}}],"line":116},"37":{"loc":{"start":{"line":116,"column":15},"end":{"line":116,"column":77}},"type":"binary-expr","locations":[{"start":{"line":116,"column":15},"end":{"line":116,"column":46}},{"start":{"line":116,"column":50},"end":{"line":116,"column":77}}],"line":116},"38":{"loc":{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},{"start":{"line":117,"column":6},"end":{"line":119,"column":7}}],"line":117},"39":{"loc":{"start":{"line":117,"column":10},"end":{"line":117,"column":52}},"type":"binary-expr","locations":[{"start":{"line":117,"column":10},"end":{"line":117,"column":37}},{"start":{"line":117,"column":41},"end":{"line":117,"column":52}}],"line":117},"40":{"loc":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},{"start":{"line":128,"column":4},"end":{"line":130,"column":5}}],"line":128},"41":{"loc":{"start":{"line":128,"column":8},"end":{"line":128,"column":60}},"type":"binary-expr","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":40}},{"start":{"line":128,"column":44},"end":{"line":128,"column":60}}],"line":128},"42":{"loc":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},{"start":{"line":133,"column":4},"end":{"line":135,"column":5}}],"line":133},"43":{"loc":{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},{"start":{"line":166,"column":6},"end":{"line":168,"column":7}}],"line":166},"44":{"loc":{"start":{"line":183,"column":17},"end":{"line":183,"column":87}},"type":"cond-expr","locations":[{"start":{"line":183,"column":70},"end":{"line":183,"column":82}},{"start":{"line":183,"column":85},"end":{"line":183,"column":87}}],"line":183},"45":{"loc":{"start":{"line":183,"column":17},"end":{"line":183,"column":67}},"type":"binary-expr","locations":[{"start":{"line":183,"column":17},"end":{"line":183,"column":37}},{"start":{"line":183,"column":41},"end":{"line":183,"column":67}}],"line":183},"46":{"loc":{"start":{"line":184,"column":6},"end":{"line":184,"column":40}},"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":40}},{"start":{"line":184,"column":6},"end":{"line":184,"column":40}}],"line":184},"47":{"loc":{"start":{"line":185,"column":6},"end":{"line":185,"column":52}},"type":"if","locations":[{"start":{"line":185,"column":6},"end":{"line":185,"column":52}},{"start":{"line":185,"column":6},"end":{"line":185,"column":52}}],"line":185},"48":{"loc":{"start":{"line":218,"column":13},"end":{"line":218,"column":88}},"type":"cond-expr","locations":[{"start":{"line":218,"column":44},"end":{"line":218,"column":45}},{"start":{"line":218,"column":48},"end":{"line":218,"column":88}}],"line":218},"49":{"loc":{"start":{"line":218,"column":48},"end":{"line":218,"column":88}},"type":"cond-expr","locations":[{"start":{"line":218,"column":82},"end":{"line":218,"column":84}},{"start":{"line":218,"column":87},"end":{"line":218,"column":88}}],"line":218},"50":{"loc":{"start":{"line":281,"column":25},"end":{"line":281,"column":83}},"type":"binary-expr","locations":[{"start":{"line":281,"column":25},"end":{"line":281,"column":54}},{"start":{"line":281,"column":58},"end":{"line":281,"column":83}}],"line":281},"51":{"loc":{"start":{"line":283,"column":6},"end":{"line":289,"column":7}},"type":"if","locations":[{"start":{"line":283,"column":6},"end":{"line":289,"column":7}},{"start":{"line":283,"column":6},"end":{"line":289,"column":7}}],"line":283},"52":{"loc":{"start":{"line":283,"column":10},"end":{"line":283,"column":58}},"type":"binary-expr","locations":[{"start":{"line":283,"column":10},"end":{"line":283,"column":23}},{"start":{"line":283,"column":27},"end":{"line":283,"column":58}}],"line":283},"53":{"loc":{"start":{"line":291,"column":6},"end":{"line":293,"column":7}},"type":"if","locations":[{"start":{"line":291,"column":6},"end":{"line":293,"column":7}},{"start":{"line":291,"column":6},"end":{"line":293,"column":7}}],"line":291},"54":{"loc":{"start":{"line":317,"column":6},"end":{"line":317,"column":50}},"type":"if","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":50}},{"start":{"line":317,"column":6},"end":{"line":317,"column":50}}],"line":317},"55":{"loc":{"start":{"line":317,"column":10},"end":{"line":317,"column":37}},"type":"binary-expr","locations":[{"start":{"line":317,"column":10},"end":{"line":317,"column":22}},{"start":{"line":317,"column":26},"end":{"line":317,"column":37}}],"line":317},"56":{"loc":{"start":{"line":319,"column":6},"end":{"line":321,"column":7}},"type":"if","locations":[{"start":{"line":319,"column":6},"end":{"line":321,"column":7}},{"start":{"line":319,"column":6},"end":{"line":321,"column":7}}],"line":319},"57":{"loc":{"start":{"line":325,"column":6},"end":{"line":327,"column":7}},"type":"if","locations":[{"start":{"line":325,"column":6},"end":{"line":327,"column":7}},{"start":{"line":325,"column":6},"end":{"line":327,"column":7}}],"line":325},"58":{"loc":{"start":{"line":329,"column":6},"end":{"line":331,"column":7}},"type":"if","locations":[{"start":{"line":329,"column":6},"end":{"line":331,"column":7}},{"start":{"line":329,"column":6},"end":{"line":331,"column":7}}],"line":329},"59":{"loc":{"start":{"line":348,"column":24},"end":{"line":348,"column":94}},"type":"cond-expr","locations":[{"start":{"line":348,"column":77},"end":{"line":348,"column":89}},{"start":{"line":348,"column":92},"end":{"line":348,"column":94}}],"line":348},"60":{"loc":{"start":{"line":348,"column":24},"end":{"line":348,"column":74}},"type":"binary-expr","locations":[{"start":{"line":348,"column":24},"end":{"line":348,"column":44}},{"start":{"line":348,"column":48},"end":{"line":348,"column":74}}],"line":348},"61":{"loc":{"start":{"line":350,"column":6},"end":{"line":358,"column":7}},"type":"if","locations":[{"start":{"line":350,"column":6},"end":{"line":358,"column":7}},{"start":{"line":350,"column":6},"end":{"line":358,"column":7}}],"line":350},"62":{"loc":{"start":{"line":356,"column":19},"end":{"line":356,"column":39}},"type":"binary-expr","locations":[{"start":{"line":356,"column":19},"end":{"line":356,"column":24}},{"start":{"line":356,"column":28},"end":{"line":356,"column":39}}],"line":356}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":75,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":75,"36":75,"37":88,"38":0,"39":3,"40":3,"41":14,"42":14,"43":14,"44":14,"45":14,"46":14,"47":2,"48":1,"49":2,"50":2,"51":2,"52":176,"53":0,"54":176,"55":176,"56":1,"57":1,"58":87,"59":87,"60":87,"61":1,"62":86,"63":1,"64":1,"65":51,"66":51,"67":4,"68":51,"69":50,"70":24,"71":50,"72":88,"73":88,"74":88,"75":88,"76":88,"77":88,"78":1,"79":87,"80":46,"81":46,"82":46,"83":46,"84":46,"85":46,"86":41,"87":5,"88":36,"89":33,"90":14,"91":33,"92":3,"93":2,"94":1,"95":2,"96":1,"97":84,"98":84,"99":4,"100":84,"101":19,"102":84,"103":1,"104":1,"105":1,"106":38,"107":35,"108":3,"109":39,"110":39,"111":38,"112":39,"113":3,"114":36,"115":36,"116":14,"117":7,"118":7,"119":7,"120":1,"121":7,"122":7,"123":3,"124":3,"125":6,"126":6,"127":6,"128":3,"129":3,"130":3,"131":3,"132":6,"133":3,"134":6,"135":3,"136":3,"137":66,"138":15,"139":51,"140":45,"141":51,"142":51,"143":26,"144":51,"145":4,"146":51,"147":51,"148":51,"149":51,"150":51,"151":51,"152":51,"153":29,"154":29,"155":26,"156":26,"157":26,"158":26,"159":26,"160":26,"161":29,"162":1,"163":1},"f":{"0":1,"1":1,"2":1,"3":0,"4":75,"5":0,"6":0,"7":75,"8":88,"9":3,"10":2,"11":176,"12":87,"13":87,"14":1,"15":51,"16":88,"17":1,"18":1,"19":38,"20":39,"21":14,"22":7,"23":1,"24":7,"25":3,"26":6,"27":3,"28":66,"29":29},"b":{"0":[0,1],"1":[1,1],"2":[1,0],"3":[1,1],"4":[0,0],"5":[0,0,0,0],"6":[75,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[75,0],"15":[0,88],"16":[14,14],"17":[14,0],"18":[1,1],"19":[2,0],"20":[0,176],"21":[1,86],"22":[50,1],"23":[51,51],"24":[4,47],"25":[24,26],"26":[63,25],"27":[88,63],"28":[22,66],"29":[1,87],"30":[46,41],"31":[46,21],"32":[5,36],"33":[33,3],"34":[14,19],"35":[33,33],"36":[2,1],"37":[3,1],"38":[1,1],"39":[2,2],"40":[4,80],"41":[84,83],"42":[19,65],"43":[35,3],"44":[1,38],"45":[39,1],"46":[38,1],"47":[3,36],"48":[3,4],"49":[2,2],"50":[6,1],"51":[3,3],"52":[6,6],"53":[3,3],"54":[15,51],"55":[66,53],"56":[45,6],"57":[26,25],"58":[4,47],"59":[27,2],"60":[29,27],"61":[26,3],"62":[26,11]},"inputSourceMap":{"version":3,"sources":["amount.ts"],"names":["DEFAULT_USER_UNIT","DEFAULT_NETWORK_UNIT","getUnitPrecision","unit","units","UNITS","NATIVE_TOKEN","unitSize","isValidUnit","TypeError","Amount","value","prec","moveDecimalPoint","JSBI","BigInt","newUnit","split","amount","_unit","_valueFromString","Buffer","Uint8Array","Error","Object","freeze","from","toString","toUnit","formatNumber","otherAmount","a","b","toJSBI","equal","lessThan","compare","sum","add","subtract","divide","otherHasUnit","Boolean","multiply","str","digits","indexOf","idx","length","padEnd","padStart","replace","substr","arg","defaultUnit"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/classes","sourcesContent":["import { UNITS } from '../constants';\nimport { fromHexString, toHexString } from '../encoding';\nimport JSBI from 'jsbi';\nimport { Buffer } from 'buffer';\n\nconst DEFAULT_USER_UNIT = 'aergo';\nconst DEFAULT_NETWORK_UNIT = 'aer';\n\nexport type AmountArg = Amount | JSBI | number | string;\n\nfunction getUnitPrecision(unit: string): number {\n    const units = UNITS.NATIVE_TOKEN.unitSize;\n    function isValidUnit(unit: string): unit is keyof typeof units {\n        return unit in units;\n    }\n    if (!isValidUnit(unit)) {\n        throw new TypeError(`unrecognized unit: ${unit}`);\n    }\n    return units[unit];\n}\n\n/**\n * A wrapper around amounts with units.\n * Over the network, amounts are sent as raw bytes.\n * In the client, they are exposed as BigInts, but also compatible with plain strings or numbers (if smaller than 2^31-1)\n * Uses 'aergo' as default unit when passing strings or numbers.\n * Uses 'aer' as default unit when passing BigInts, buffers or byte arrays.\n * Whenever you pass amounts to other functions, they will try to coerce them to BigInt using this class.\n */\nexport default class Amount {\n    value!: Readonly<JSBI>; // value in base unit\n    unit!: string; // unit for displaying\n\n    private static _valueFromString(value: string, unit = ''): JSBI {\n        if (unit === '') {\n            unit = DEFAULT_USER_UNIT;\n        }\n        const prec = getUnitPrecision(unit);\n        if (prec > 0) {\n            value = Amount.moveDecimalPoint(value, prec);\n        }\n        return JSBI.BigInt(value);\n    }\n\n    constructor(value: AmountArg|Buffer|Uint8Array, unit = '', newUnit?: string) {\n        if (value instanceof Amount) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            const [amount, _unit] = value.split(' ', 2);\n            unit = unit || _unit;\n            this.value = Amount._valueFromString(amount, unit);\n        } else if (typeof value === 'number') {\n            this.value = Amount._valueFromString(''+value, unit);\n        } else if (value instanceof JSBI) {\n            if (typeof unit === 'undefined' || unit === '') {\n                unit = DEFAULT_NETWORK_UNIT;\n            }\n            this.value = JSBI.BigInt(value);\n        } else if (value instanceof Buffer || value instanceof Uint8Array) {\n            if (typeof unit === 'undefined' || unit === '') {\n                unit = DEFAULT_NETWORK_UNIT;\n            }\n            this.value = JSBI.BigInt(toHexString(value, true));\n        } else {\n            throw new Error(`Instantiate Amount with JSBI|number|string|Buffer|Uint8Array, not ${value} (${typeof value})`);\n        }\n        this.unit = unit;\n        if (typeof this.unit === 'undefined' || this.unit === '') {\n            this.unit = DEFAULT_USER_UNIT;\n        }\n\n        // Set new unit for displaying\n        if (typeof newUnit !== 'undefined') {\n            this.unit = newUnit;\n        }\n\n        // Freeze value. Otherwise some libraries mess this up since it is actually an Array subclass with a custom propery\n        this.value = Object.freeze(this.value);\n    }\n    \n    /**\n     * Returns value as byte buffer\n     */\n    asBytes(): Buffer {\n        return Buffer.from(fromHexString(this.value.toString(16)));\n    }\n\n    /**\n     * JSON.stringifes to string with unit aer, which can be easily deserialized by new Amount(x)\n     */\n    toJSON(): string {\n        return this.toUnit('aer').toString();\n    }\n\n    /**\n     * Returns formatted string including unit\n     */\n    toString(): string {\n        if (this.unit) {\n            return `${this.formatNumber()} ${this.unit}`;\n        }\n        return `${this.formatNumber()}`;\n    }\n\n    /**\n     * Move decimal point in string by digits, positive to the right, negative to the left.\n     * This extends the string if necessary.\n     * Example: (\"0.0001\", 4 => \"1\"), (\"0.0001\", -4 => \"0.00000001\")\n     * @param str \n     * @param digits \n     */\n    static moveDecimalPoint(str: string, digits: number): string {\n        if (digits === 0 || str === '0') return str;\n        if (str.indexOf('.') === -1) {\n            str = str + '.';\n        }\n        let idx = str.indexOf('.');\n\n        // Extend string to have enough space to move decimal point\n        if (digits > str.length - idx) {\n            str = str.padEnd(digits + idx + 1, '0');\n        }\n        if (digits < -idx) {\n            str = str.padStart(str.length-idx-digits, '0');\n        }\n\n        // remove decimal point and reinsert at new location\n        idx = str.indexOf('.');\n        str = str.replace('.', '');\n        str = str.substr(0, idx + digits) + '.' + str.substr(idx + digits);\n\n        // remove trailing 0 and .\n        str = str.replace(/\\.?0*$/, '');\n        // remove leading 0\n        str = str.replace(/^0+/, '');\n        // add leading 0 before .\n        str = str.replace(/^\\./, '0.');\n        return str;\n    }\n    formatNumber(unit = ''): string {\n        if (unit === '') unit = this.unit;\n        if (unit === '') return this.value.toString();\n        const prec = getUnitPrecision(unit);\n        return Amount.moveDecimalPoint(this.value.toString(), -prec);\n    }\n\n    /**\n     * Convert to another unit\n     * @param unit string (aer, gaer, aergo)\n     */\n    toUnit(unit: string): Amount {\n        return new Amount(this.value as JSBI, '', unit);\n    }\n\n    /**\n     * Convert arg into JSBI value\n     * Can optionally provide a defaultUnit that is used if arg does not contain a unit.\n     */\n    static toJSBI(arg: AmountArg, defaultUnit = ''): JSBI {\n        if (!(arg instanceof Amount)) {\n            const [amount, _unit] = `${arg}`.split(' ', 2);\n            const unit = _unit || defaultUnit;\n            arg = new Amount(amount, unit);\n        }\n        return JSBI.BigInt(arg.value);\n    }\n\n    /**\n     * Compare this amount with other amount.\n     * If otherAmount has no unit, assumes unit of this amount.\n     * this >  other -> +1\n     * this  < other -> -1\n     * this == other -> 0\n     * @param otherAmount \n     */\n    compare(otherAmount: AmountArg): number {\n        const a = this.value as JSBI;\n        const b = Amount.toJSBI(otherAmount, this.unit);\n        return JSBI.equal(a, b) ? 0 : JSBI.lessThan(a, b) ? -1 : 1;\n    }\n\n    /**\n     * Return true if otherAmount is equal to this amount.\n     * @param otherAmount \n     */\n    equal(otherAmount: AmountArg): boolean {\n        return this.compare(otherAmount) === 0;\n    }\n\n    /**\n     * Add another amount to amount.\n     * If otherAmount has no unit, assumes unit of this amount.\n     * 10 aergo + 10 = 20 aergo\n     * 10 aer + 10 = 20 aer\n     * 10 aergo + 10 aer = 10.00000000000000001 aergo\n     * @param otherAmount \n     */\n    add(otherAmount: AmountArg): Amount {\n        const sum = JSBI.add(this.value as JSBI, Amount.toJSBI(otherAmount, this.unit));\n        return new Amount(sum, this.unit);\n    }\n\n    /**\n     * Subtract another amount from amount.\n     * If otherAmount has no unit, assumes unit of this amount.\n     * 10 aergo - 5 = 5 aergo\n     * 10 aer - 5 = 5 aer\n     * 1 aer - 1 aergo = -999999999999999999 aer\n     * @param otherAmount \n     */\n    sub(otherAmount: AmountArg): Amount {\n        const sum = JSBI.subtract(this.value as JSBI, Amount.toJSBI(otherAmount, this.unit));\n        return new Amount(sum, this.unit);\n    }\n\n    /**\n     * Divide amount by another amount.\n     * Warning: double check your units. The division is based on the aer value, so\n     * if your otherAmount has a unit, it will be converted to aer.\n     * This function tries to do the right thing in regards to dividing units:\n     * 10 aergo / 10 = 1 aergo  (keep unit)\n     * 10 aergo / 10 aergo = 1  (unit-less)\n     * 1 aer / 2 aer = 0  (truncation of sub 1 aer amount)\n     * @param otherAmount \n     */\n    div(otherAmount: AmountArg): Amount {\n        let newUnit;\n        const sum = JSBI.divide(this.value as JSBI, Amount.toJSBI(otherAmount, 'aer'));\n        // if both amounts had units, the result should be unit-less\n        let otherHasUnit = (otherAmount instanceof Amount) && Boolean(otherAmount.unit);\n        if (!otherHasUnit && typeof otherAmount === 'string') {\n            const [, _unit] = `${otherAmount}`.split(' ', 2);\n            otherHasUnit = Boolean(_unit);\n        }\n        if (otherHasUnit) {\n            newUnit = '';\n        }\n        return new Amount(sum, this.unit, newUnit);\n    }\n\n    /**\n     * Multiply amount by another amount.\n     * Warning: double check your units. The multiplication is based on the aer value, so\n     * if your otherAmount has a unit, it will be converted to aer.\n     * However, while the value is correct, there's no way to display unit^2.\n     * 10 aergo * 10 aergo = 10 * 10^18 aer * 10 * 10^18 aer = 100 * 10^36 aer = 100 * 10^18 aergo\n     * 10 aergo * 10 = 10 * 10^18 aer * 10 = 100 * 10^18 aer = 100 aergo\n     * @param otherAmount \n     */\n    mul(otherAmount: AmountArg): Amount {\n        const sum = JSBI.multiply(this.value as JSBI, Amount.toJSBI(otherAmount, 'aer'));\n        return new Amount(sum, this.unit);\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"349c6a113cdf55fd893f753d0725bfca5ad11c8e","contentHash":"5f72878c1246eac2cdc15e99d7cb7cc28efaa8cc5cd12157ee4a953c3c06d137"},"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/index.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/index.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":19},"end":{"line":9,"column":1}},"2":{"start":{"line":10,"column":0},"end":{"line":15,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"4":{"start":{"line":16,"column":0},"end":{"line":21,"column":3}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":35}},"6":{"start":{"line":23,"column":13},"end":{"line":23,"column":31}},"7":{"start":{"line":25,"column":0},"end":{"line":34,"column":3}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":56}},"9":{"start":{"line":26,"column":49},"end":{"line":26,"column":56}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":70}},"11":{"start":{"line":27,"column":63},"end":{"line":27,"column":70}},"12":{"start":{"line":28,"column":2},"end":{"line":33,"column":5}},"13":{"start":{"line":31,"column":6},"end":{"line":31,"column":25}},"14":{"start":{"line":36,"column":12},"end":{"line":36,"column":55}},"15":{"start":{"line":38,"column":19},"end":{"line":38,"column":67}},"16":{"start":{"line":40,"column":39},"end":{"line":40,"column":95}}},"fnMap":{"0":{"name":"get","decl":{"start":{"line":12,"column":16},"end":{"line":12,"column":19}},"loc":{"start":{"line":12,"column":22},"end":{"line":14,"column":3}},"line":12},"1":{"name":"get","decl":{"start":{"line":18,"column":16},"end":{"line":18,"column":19}},"loc":{"start":{"line":18,"column":22},"end":{"line":20,"column":3}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":28},"end":{"line":25,"column":29}},"loc":{"start":{"line":25,"column":43},"end":{"line":34,"column":1}},"line":25},"3":{"name":"get","decl":{"start":{"line":30,"column":18},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":24},"end":{"line":32,"column":5}},"line":30},"4":{"name":"_interopRequireDefault","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":31}},"loc":{"start":{"line":40,"column":37},"end":{"line":40,"column":97}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":56}},"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":56}},{"start":{"line":26,"column":2},"end":{"line":26,"column":56}}],"line":26},"1":{"loc":{"start":{"line":26,"column":6},"end":{"line":26,"column":47}},"type":"binary-expr","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":23}},{"start":{"line":26,"column":27},"end":{"line":26,"column":47}}],"line":26},"2":{"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":70}},"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":70}},{"start":{"line":27,"column":2},"end":{"line":27,"column":70}}],"line":27},"3":{"loc":{"start":{"line":40,"column":46},"end":{"line":40,"column":94}},"type":"cond-expr","locations":[{"start":{"line":40,"column":70},"end":{"line":40,"column":73}},{"start":{"line":40,"column":76},"end":{"line":40,"column":94}}],"line":40},"4":{"loc":{"start":{"line":40,"column":46},"end":{"line":40,"column":67}},"type":"binary-expr","locations":[{"start":{"line":40,"column":46},"end":{"line":40,"column":49}},{"start":{"line":40,"column":53},"end":{"line":40,"column":67}}],"line":40}},"s":{"0":1,"1":1,"2":1,"3":3,"4":1,"5":3,"6":1,"7":1,"8":6,"9":0,"10":6,"11":0,"12":6,"13":23,"14":1,"15":1,"16":2},"f":{"0":3,"1":3,"2":6,"3":23,"4":2},"b":{"0":[0,6],"1":[6,6],"2":[0,6],"3":[2,0],"4":[2,2]},"inputSourceMap":{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AACA","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding","sourcesContent":["export * from './bytes';\nexport { default as base58 } from './base58';\nexport { default as base58check } from './base58check';"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f1051042dc3b64cc972a9f7efd9ba51341efbc3a","contentHash":"6f14b7f837898a2584ef7cd70f46a796a7f95b3fc8411f5ff920b4990cd04576"},"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/bytes.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding/bytes.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":98}},"4":{"start":{"line":10,"column":12},"end":{"line":10,"column":55}},"5":{"start":{"line":12,"column":14},"end":{"line":12,"column":31}},"6":{"start":{"line":14,"column":39},"end":{"line":14,"column":95}},"7":{"start":{"line":17,"column":12},"end":{"line":17,"column":88}},"8":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":61}},"10":{"start":{"line":23,"column":2},"end":{"line":23,"column":48}},"11":{"start":{"line":32,"column":12},"end":{"line":32,"column":88}},"12":{"start":{"line":34,"column":2},"end":{"line":40,"column":3}},"13":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"14":{"start":{"line":36,"column":6},"end":{"line":36,"column":42}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":41}},"16":{"start":{"line":42,"column":2},"end":{"line":42,"column":34}},"17":{"start":{"line":49,"column":18},"end":{"line":57,"column":1}},"18":{"start":{"line":50,"column":15},"end":{"line":50,"column":88}},"19":{"start":{"line":51,"column":15},"end":{"line":53,"column":8}},"20":{"start":{"line":52,"column":4},"end":{"line":52,"column":53}},"21":{"start":{"line":54,"column":2},"end":{"line":54,"column":29}},"22":{"start":{"line":54,"column":15},"end":{"line":54,"column":29}},"23":{"start":{"line":55,"column":2},"end":{"line":55,"column":53}},"24":{"start":{"line":55,"column":40},"end":{"line":55,"column":53}},"25":{"start":{"line":56,"column":2},"end":{"line":56,"column":23}},"26":{"start":{"line":59,"column":0},"end":{"line":59,"column":34}},"27":{"start":{"line":61,"column":20},"end":{"line":69,"column":1}},"28":{"start":{"line":62,"column":2},"end":{"line":62,"column":57}},"29":{"start":{"line":62,"column":30},"end":{"line":62,"column":57}},"30":{"start":{"line":63,"column":2},"end":{"line":63,"column":62}},"31":{"start":{"line":63,"column":34},"end":{"line":63,"column":62}},"32":{"start":{"line":64,"column":14},"end":{"line":64,"column":40}},"33":{"start":{"line":65,"column":2},"end":{"line":65,"column":60}},"34":{"start":{"line":65,"column":14},"end":{"line":65,"column":60}},"35":{"start":{"line":66,"column":2},"end":{"line":68,"column":6}},"36":{"start":{"line":67,"column":4},"end":{"line":67,"column":32}},"37":{"start":{"line":77,"column":0},"end":{"line":77,"column":38}},"38":{"start":{"line":79,"column":17},"end":{"line":93,"column":1}},"39":{"start":{"line":80,"column":15},"end":{"line":80,"column":84}},"40":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"41":{"start":{"line":83,"column":4},"end":{"line":83,"column":43}},"42":{"start":{"line":86,"column":12},"end":{"line":86,"column":34}},"43":{"start":{"line":88,"column":2},"end":{"line":90,"column":3}},"44":{"start":{"line":88,"column":15},"end":{"line":88,"column":16}},"45":{"start":{"line":88,"column":22},"end":{"line":88,"column":23}},"46":{"start":{"line":89,"column":4},"end":{"line":89,"column":26}},"47":{"start":{"line":92,"column":2},"end":{"line":92,"column":13}},"48":{"start":{"line":99,"column":0},"end":{"line":99,"column":32}},"49":{"start":{"line":101,"column":20},"end":{"line":106,"column":1}},"50":{"start":{"line":102,"column":12},"end":{"line":102,"column":30}},"51":{"start":{"line":103,"column":13},"end":{"line":103,"column":30}},"52":{"start":{"line":104,"column":2},"end":{"line":104,"column":31}},"53":{"start":{"line":105,"column":2},"end":{"line":105,"column":13}},"54":{"start":{"line":108,"column":0},"end":{"line":108,"column":38}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":97}},"line":14},"1":{"name":"encodeBuffer","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":21}},"loc":{"start":{"line":16,"column":27},"end":{"line":24,"column":1}},"line":16},"2":{"name":"decodeToBytes","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":22}},"loc":{"start":{"line":31,"column":28},"end":{"line":43,"column":1}},"line":31},"3":{"name":"toHexString","decl":{"start":{"line":49,"column":27},"end":{"line":49,"column":38}},"loc":{"start":{"line":49,"column":46},"end":{"line":57,"column":1}},"line":49},"4":{"name":"(anonymous_4)","decl":{"start":{"line":51,"column":28},"end":{"line":51,"column":29}},"loc":{"start":{"line":51,"column":50},"end":{"line":53,"column":3}},"line":51},"5":{"name":"fromHexString","decl":{"start":{"line":61,"column":29},"end":{"line":61,"column":42}},"loc":{"start":{"line":61,"column":54},"end":{"line":69,"column":1}},"line":61},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":34},"end":{"line":66,"column":35}},"loc":{"start":{"line":66,"column":52},"end":{"line":68,"column":3}},"line":66},"7":{"name":"fromNumber","decl":{"start":{"line":79,"column":26},"end":{"line":79,"column":36}},"loc":{"start":{"line":79,"column":40},"end":{"line":93,"column":1}},"line":79},"8":{"name":"toBytesUint32","decl":{"start":{"line":101,"column":29},"end":{"line":101,"column":42}},"loc":{"start":{"line":101,"column":48},"end":{"line":106,"column":1}},"line":101}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":94}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":94}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":88}},"type":"cond-expr","locations":[{"start":{"line":17,"column":65},"end":{"line":17,"column":77}},{"start":{"line":17,"column":80},"end":{"line":17,"column":88}}],"line":17},"3":{"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":62}},"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":32}},{"start":{"line":17,"column":36},"end":{"line":17,"column":62}}],"line":17},"4":{"loc":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},{"start":{"line":19,"column":2},"end":{"line":21,"column":3}}],"line":19},"5":{"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":88}},"type":"cond-expr","locations":[{"start":{"line":32,"column":65},"end":{"line":32,"column":77}},{"start":{"line":32,"column":80},"end":{"line":32,"column":88}}],"line":32},"6":{"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":62}},"type":"binary-expr","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":32}},{"start":{"line":32,"column":36},"end":{"line":32,"column":62}}],"line":32},"7":{"loc":{"start":{"line":34,"column":2},"end":{"line":40,"column":3}},"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":40,"column":3}},{"start":{"line":34,"column":2},"end":{"line":40,"column":3}}],"line":34},"8":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{"line":35,"column":4},"end":{"line":37,"column":5}}],"line":35},"9":{"loc":{"start":{"line":50,"column":15},"end":{"line":50,"column":88}},"type":"cond-expr","locations":[{"start":{"line":50,"column":68},"end":{"line":50,"column":80}},{"start":{"line":50,"column":83},"end":{"line":50,"column":88}}],"line":50},"10":{"loc":{"start":{"line":50,"column":15},"end":{"line":50,"column":65}},"type":"binary-expr","locations":[{"start":{"line":50,"column":15},"end":{"line":50,"column":35}},{"start":{"line":50,"column":39},"end":{"line":50,"column":65}}],"line":50},"11":{"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":29}},"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":29}},{"start":{"line":54,"column":2},"end":{"line":54,"column":29}}],"line":54},"12":{"loc":{"start":{"line":55,"column":2},"end":{"line":55,"column":53}},"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":53}},{"start":{"line":55,"column":2},"end":{"line":55,"column":53}}],"line":55},"13":{"loc":{"start":{"line":55,"column":6},"end":{"line":55,"column":38}},"type":"binary-expr","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":21}},{"start":{"line":55,"column":25},"end":{"line":55,"column":38}}],"line":55},"14":{"loc":{"start":{"line":62,"column":2},"end":{"line":62,"column":57}},"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":57}},{"start":{"line":62,"column":2},"end":{"line":62,"column":57}}],"line":62},"15":{"loc":{"start":{"line":63,"column":2},"end":{"line":63,"column":62}},"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":62}},{"start":{"line":63,"column":2},"end":{"line":63,"column":62}}],"line":63},"16":{"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":60}},"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":60}},{"start":{"line":65,"column":2},"end":{"line":65,"column":60}}],"line":65},"17":{"loc":{"start":{"line":80,"column":15},"end":{"line":80,"column":84}},"type":"cond-expr","locations":[{"start":{"line":80,"column":68},"end":{"line":80,"column":80}},{"start":{"line":80,"column":83},"end":{"line":80,"column":84}}],"line":80},"18":{"loc":{"start":{"line":80,"column":15},"end":{"line":80,"column":65}},"type":"binary-expr","locations":[{"start":{"line":80,"column":15},"end":{"line":80,"column":35}},{"start":{"line":80,"column":39},"end":{"line":80,"column":65}}],"line":80},"19":{"loc":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},{"start":{"line":82,"column":2},"end":{"line":84,"column":3}}],"line":82}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":4,"8":4,"9":1,"10":3,"11":4,"12":4,"13":3,"14":1,"15":2,"16":1,"17":1,"18":10,"19":10,"20":28,"21":10,"22":5,"23":5,"24":2,"25":3,"26":1,"27":1,"28":5,"29":1,"30":4,"31":3,"32":4,"33":4,"34":0,"35":4,"36":14,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1,"50":0,"51":0,"52":0,"53":0,"54":1},"f":{"0":1,"1":4,"2":4,"3":10,"4":28,"5":5,"6":14,"7":0,"8":0},"b":{"0":[1,0],"1":[1,1],"2":[3,1],"3":[4,3],"4":[1,3],"5":[2,2],"6":[4,2],"7":[3,1],"8":[1,2],"9":[5,5],"10":[10,5],"11":[5,5],"12":[2,3],"13":[5,4],"14":[1,4],"15":[3,1],"16":[0,4],"17":[0,0],"18":[0,0],"19":[0,0]},"inputSourceMap":{"version":3,"sources":["bytes.ts"],"names":["encodeBuffer","val","enc","bs58","encode","Buffer","from","toString","decodeToBytes","decode","toHexString","bytes","format","result","reduce","str","byte","padStart","fromHexString","hexString","length","Uint8Array","match","Error","map","parseInt","fromNumber","d","Math","pow","arr","i","j","toBytesUint32","num","ArrayBuffer","view","DataView","setUint32"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/encoding","sourcesContent":["import bs58 from './base58';\nimport { Buffer } from 'buffer';\n\nexport type StringOrBuffer = string | Buffer | Uint8Array;\nexport type ByteEncoding = 'base58' | BufferEncoding;\n\nexport function encodeBuffer(val: Buffer | Uint8Array, enc: ByteEncoding = 'base58'): string  {\n    if (enc === 'base58') {\n        return bs58.encode(Buffer.from(val));\n    }\n    return Buffer.from(val).toString(enc);\n}\n\n/**\n * If input is a string, use `enc` to decode string (default: base58).\n * Otherwise, just return Buffer.\n */\nexport function decodeToBytes(val: StringOrBuffer, enc: ByteEncoding = 'base58'): Buffer {\n    if (typeof val === 'string') {\n        if (enc === 'base58') {\n            return bs58.decode(val);\n        }\n        return Buffer.from(val, enc);\n    }\n    return Buffer.from(val);\n}\n\ninterface NumberIterable<T> {\n    [Symbol.iterator](): Iterator<T>;\n}\ninterface HexConvertible {\n    reduce: <U, T = this>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: NumberIterable<T>) => U, initialValue: U) => U;\n}\n/**\n * @param bytes anything to a hex string that has an iterable that returns numbers and a reduce method, e.g. number[], Uint8Array, Buffer\n * @param format add the string '0x' in front of the output\n */\nexport const toHexString = function(bytes: HexConvertible, format=false): string {\n    const result = bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n    if (!format) return result;\n    if (result === '00' || result === '') return '0x0';\n    return '0x' + result;\n};\n\nexport const fromHexString = function(hexString: string): Uint8Array {\n    if (hexString.length === 0) return Uint8Array.from([]);\n    if (hexString.length % 2 === 1) hexString = '0' + hexString;\n    const match = hexString.match(/.{1,2}/g);\n    if (!match) throw new Error('cannot parse string as hex');\n    return new Uint8Array(match.map(byte => parseInt(byte, 16)));\n};\n\n/**\n * Convert number to Uint8Array\n * @param d \n * @param length \n */\nexport const fromNumber = (d: number, length = 8): Uint8Array => {\n    if (d >= Math.pow(2, length*8)) {\n        throw new Error('Number exeeds range');\n    }\n    const arr = new Uint8Array(length);\n    for (let i=0, j=1; i<8; i++, j *= 0x100) {\n        arr[i] = (d / j) & 0xff;\n    }\n    return arr;\n};\n\n/**\n * TODO: what's this? Is this useful?\n */\nexport const toBytesUint32 = (num: number): ArrayBuffer => {\n    const arr = new ArrayBuffer(8);\n    const view = new DataView(arr);\n    view.setUint32(0, num, true);\n    return arr;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"07cd4b2de9b4976ae798b4ccb2d5983c009441a4","contentHash":"b7f4ab2f6c1d0d16aaf77798ce83dd6b28333cd58fe45eae816f933eb7b69f29"},"/Users/paulgrau/projects/aergo/herajs/packages/common/src/timing.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/common/src/timing.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"4":{"start":{"line":10,"column":77},"end":{"line":10,"column":175}},"5":{"start":{"line":10,"column":94},"end":{"line":10,"column":107}},"6":{"start":{"line":10,"column":121},"end":{"line":10,"column":131}},"7":{"start":{"line":10,"column":151},"end":{"line":10,"column":165}},"8":{"start":{"line":10,"column":166},"end":{"line":10,"column":173}},"9":{"start":{"line":10,"column":176},"end":{"line":10,"column":263}},"10":{"start":{"line":10,"column":193},"end":{"line":10,"column":208}},"11":{"start":{"line":10,"column":218},"end":{"line":10,"column":261}},"12":{"start":{"line":12,"column":33},"end":{"line":12,"column":387}},"13":{"start":{"line":12,"column":65},"end":{"line":12,"column":69}},"14":{"start":{"line":12,"column":78},"end":{"line":12,"column":87}},"15":{"start":{"line":12,"column":89},"end":{"line":12,"column":384}},"16":{"start":{"line":12,"column":147},"end":{"line":12,"column":167}},"17":{"start":{"line":12,"column":193},"end":{"line":12,"column":264}},"18":{"start":{"line":12,"column":290},"end":{"line":12,"column":360}},"19":{"start":{"line":12,"column":363},"end":{"line":12,"column":380}},"20":{"start":{"line":24,"column":19},"end":{"line":24,"column":91}},"21":{"start":{"line":25,"column":2},"end":{"line":25,"column":53}},"22":{"start":{"line":34,"column":2},"end":{"line":36,"column":5}},"23":{"start":{"line":35,"column":4},"end":{"line":35,"column":28}},"24":{"start":{"line":49,"column":16},"end":{"line":49,"column":85}},"25":{"start":{"line":50,"column":28},"end":{"line":50,"column":99}},"26":{"start":{"line":51,"column":16},"end":{"line":51,"column":26}},"27":{"start":{"line":52,"column":19},"end":{"line":52,"column":20}},"28":{"start":{"line":56,"column":2},"end":{"line":85,"column":5}},"29":{"start":{"line":57,"column":15},"end":{"line":80,"column":6}},"30":{"start":{"line":58,"column":6},"end":{"line":79,"column":7}},"31":{"start":{"line":59,"column":8},"end":{"line":59,"column":26}},"32":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"33":{"start":{"line":62,"column":10},"end":{"line":62,"column":18}},"34":{"start":{"line":65,"column":23},"end":{"line":65,"column":77}},"35":{"start":{"line":67,"column":8},"end":{"line":75,"column":9}},"36":{"start":{"line":68,"column":24},"end":{"line":68,"column":46}},"37":{"start":{"line":70,"column":10},"end":{"line":74,"column":11}},"38":{"start":{"line":71,"column":23},"end":{"line":71,"column":50}},"39":{"start":{"line":72,"column":32},"end":{"line":72,"column":89}},"40":{"start":{"line":73,"column":12},"end":{"line":73,"column":97}},"41":{"start":{"line":77,"column":8},"end":{"line":77,"column":32}},"42":{"start":{"line":78,"column":8},"end":{"line":78,"column":33}},"43":{"start":{"line":82,"column":4},"end":{"line":84,"column":6}},"44":{"start":{"line":83,"column":6},"end":{"line":83,"column":41}},"45":{"start":{"line":87,"column":2},"end":{"line":87,"column":21}}},"fnMap":{"0":{"name":"asyncGeneratorStep","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":27}},"loc":{"start":{"line":10,"column":75},"end":{"line":10,"column":265}},"line":10},"1":{"name":"_asyncToGenerator","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":26}},"loc":{"start":{"line":12,"column":31},"end":{"line":12,"column":389}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":40},"end":{"line":12,"column":41}},"loc":{"start":{"line":12,"column":52},"end":{"line":12,"column":386}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":108},"end":{"line":12,"column":109}},"loc":{"start":{"line":12,"column":135},"end":{"line":12,"column":382}},"line":12},"4":{"name":"_next","decl":{"start":{"line":12,"column":178},"end":{"line":12,"column":183}},"loc":{"start":{"line":12,"column":191},"end":{"line":12,"column":266}},"line":12},"5":{"name":"_throw","decl":{"start":{"line":12,"column":276},"end":{"line":12,"column":282}},"loc":{"start":{"line":12,"column":288},"end":{"line":12,"column":362}},"line":12},"6":{"name":"backoffIntervalStep","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":28}},"loc":{"start":{"line":23,"column":32},"end":{"line":26,"column":1}},"line":23},"7":{"name":"waitFor","decl":{"start":{"line":33,"column":9},"end":{"line":33,"column":16}},"loc":{"start":{"line":33,"column":21},"end":{"line":37,"column":1}},"line":33},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":21},"end":{"line":34,"column":22}},"loc":{"start":{"line":34,"column":40},"end":{"line":36,"column":3}},"line":34},"9":{"name":"retryIfErrorMatch","decl":{"start":{"line":48,"column":9},"end":{"line":48,"column":26}},"loc":{"start":{"line":48,"column":43},"end":{"line":88,"column":1}},"line":48},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":14},"end":{"line":85,"column":3}},"line":56},"11":{"name":"(anonymous_11)","decl":{"start":{"line":57,"column":33},"end":{"line":57,"column":34}},"loc":{"start":{"line":57,"column":46},"end":{"line":80,"column":5}},"line":57},"12":{"name":"retryLoad","decl":{"start":{"line":82,"column":20},"end":{"line":82,"column":29}},"loc":{"start":{"line":82,"column":32},"end":{"line":84,"column":5}},"line":82}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":176},"end":{"line":10,"column":263}},"type":"if","locations":[{"start":{"line":10,"column":176},"end":{"line":10,"column":263}},{"start":{"line":10,"column":176},"end":{"line":10,"column":263}}],"line":10},"1":{"loc":{"start":{"line":24,"column":19},"end":{"line":24,"column":91}},"type":"cond-expr","locations":[{"start":{"line":24,"column":72},"end":{"line":24,"column":84}},{"start":{"line":24,"column":87},"end":{"line":24,"column":91}}],"line":24},"2":{"loc":{"start":{"line":24,"column":19},"end":{"line":24,"column":69}},"type":"binary-expr","locations":[{"start":{"line":24,"column":19},"end":{"line":24,"column":39}},{"start":{"line":24,"column":43},"end":{"line":24,"column":69}}],"line":24},"3":{"loc":{"start":{"line":49,"column":16},"end":{"line":49,"column":85}},"type":"cond-expr","locations":[{"start":{"line":49,"column":69},"end":{"line":49,"column":81}},{"start":{"line":49,"column":84},"end":{"line":49,"column":85}}],"line":49},"4":{"loc":{"start":{"line":49,"column":16},"end":{"line":49,"column":66}},"type":"binary-expr","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":36}},{"start":{"line":49,"column":40},"end":{"line":49,"column":66}}],"line":49},"5":{"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":99}},"type":"cond-expr","locations":[{"start":{"line":50,"column":81},"end":{"line":50,"column":93}},{"start":{"line":50,"column":96},"end":{"line":50,"column":99}}],"line":50},"6":{"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":78}},"type":"binary-expr","locations":[{"start":{"line":50,"column":28},"end":{"line":50,"column":48}},{"start":{"line":50,"column":52},"end":{"line":50,"column":78}}],"line":50},"7":{"loc":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},{"start":{"line":61,"column":8},"end":{"line":63,"column":9}}],"line":61},"8":{"loc":{"start":{"line":67,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":75,"column":9}},{"start":{"line":67,"column":8},"end":{"line":75,"column":9}}],"line":67},"9":{"loc":{"start":{"line":70,"column":10},"end":{"line":74,"column":11}},"type":"if","locations":[{"start":{"line":70,"column":10},"end":{"line":74,"column":11}},{"start":{"line":70,"column":10},"end":{"line":74,"column":11}}],"line":70},"10":{"loc":{"start":{"line":71,"column":23},"end":{"line":71,"column":50}},"type":"cond-expr","locations":[{"start":{"line":71,"column":40},"end":{"line":71,"column":44}},{"start":{"line":71,"column":47},"end":{"line":71,"column":50}}],"line":71},"11":{"loc":{"start":{"line":72,"column":32},"end":{"line":72,"column":89}},"type":"cond-expr","locations":[{"start":{"line":72,"column":49},"end":{"line":72,"column":56}},{"start":{"line":72,"column":59},"end":{"line":72,"column":89}}],"line":72}},"s":{"0":1,"1":1,"2":1,"3":1,"4":36,"5":36,"6":27,"7":9,"8":9,"9":27,"10":2,"11":25,"12":4,"13":11,"14":11,"15":11,"16":11,"17":20,"18":16,"19":11,"20":18,"21":18,"22":7,"23":7,"24":4,"25":4,"26":4,"27":4,"28":4,"29":4,"30":11,"31":11,"32":10,"33":1,"34":9,"35":9,"36":8,"37":8,"38":2,"39":2,"40":2,"41":7,"42":7,"43":4,"44":11,"45":4},"f":{"0":36,"1":4,"2":11,"3":11,"4":20,"5":16,"6":18,"7":7,"8":7,"9":4,"10":4,"11":11,"12":11},"b":{"0":[2,25],"1":[9,9],"2":[18,9],"3":[3,1],"4":[4,3],"5":[2,2],"6":[4,2],"7":[1,9],"8":[8,1],"9":[2,6],"10":[1,1],"11":[1,1]},"inputSourceMap":{"version":3,"sources":["timing.ts"],"names":["backoffIntervalStep","n","multiplier","Math","floor","waitFor","ms","Promise","resolve","setTimeout","retryIfErrorMatch","fn","matchError","timeout","baseBackoffInterval","started","Date","retryCount","retryLoad","e","interval","elapsed","unit","elapsedFormat","round","Error"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;AASO,SAASA,mBAAT,CAA6BC,CAA7B,EAAmE;AAAA,MAA3BC,UAA2B,uEAAd,IAAc;AACtE,SAAOA,UAAU,YAAG,CAAH,EAAMC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAC,CAAb,CAAN,CAAjB;AACH;AAED;;;;;;AAIO,SAASI,OAAT,CAAiBC,EAAjB,EAA4C;AAC/C,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AACH,GAFM,CAAP;AAGH;AAED;;;;;;;;;;AAQO,SAASI,iBAAT,CACHC,EADG,EAEHC,UAFG,EAKO;AAAA,MAFVC,OAEU,uEAFQ,CAER;AAAA,MADVC,mBACU,uEADY,GACZ;AACV,MAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,MAAIC,UAAU,GAAG,CAAjB;;AACA,MAAMC,SAAS;AAAA;AAAA;AAAA,iCAAG,aAAwB;AACtC,UAAI;AACA,qBAAaP,EAAE,EAAf;AACH,OAFD,CAEE,OAAMQ,CAAN,EAAS;AACP,YAAIP,UAAU,CAACO,CAAD,CAAV,KAAkB,KAAtB,EAA6B;AACzB,gBAAMA,CAAN;AACH;;AACD,YAAMC,QAAQ,GAAGpB,mBAAmB,CAACiB,UAAU,EAAX,EAAeH,mBAAf,CAApC;;AACA,YAAID,OAAJ,EAAa;AACT,cAAMQ,OAAO,GAAG,CAAC,IAAIL,IAAJ,EAAD,GAAe,CAACD,OAAhC;;AACA,cAAIM,OAAO,GAAGD,QAAV,IAAsBP,OAA1B,EAAmC;AAC/B,gBAAMS,IAAI,GAAGD,OAAO,GAAG,IAAV,GAAiB,IAAjB,GAAwB,GAArC;AACA,gBAAME,aAAa,GAAGF,OAAO,GAAG,IAAV,GAAiBA,OAAjB,GAA2BlB,IAAI,CAACqB,KAAL,CAAWH,OAAO,GAAG,GAArB,IAA4B,EAA7E;AACA,kBAAM,IAAII,KAAJ,yBAA2BF,aAA3B,SAA2CD,IAA3C,eAAoDH,CAApD,EAAN;AACH;AACJ;;AACD,cAAMd,OAAO,CAACe,QAAD,CAAb;AACA,qBAAaF,SAAS,EAAtB;AACH;AACJ,KAnBc;;AAAA,oBAATA,SAAS;AAAA;AAAA;AAAA,KAAf;;AAoBA,SAAOA,SAAS,EAAhB;AACH","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/common/src","sourcesContent":["/**\n * Returns the next interval to use for exponential backoff.\n * This curve yields every value 4 times before doubling in the next step.\n * The function is :code:`multiplier * 2**Math.floor(n/4)`.\n * By default (multiplier = 1s), the intervals reach ca. 1 minute (total time elapsed ca. 4 minutes) after step 24,\n * so it is advised to declare a timeout after a certain number of steps.\n * @param n step on the interval curve\n * @param multiplier multiplier, default 1000 (1s)\n */\nexport function backoffIntervalStep(n: number, multiplier = 1000): number {\n    return multiplier * 2**Math.floor(n/4);\n}\n\n/**\n * A promisified version of setTimeout\n * @param ms \n */\nexport function waitFor(ms: number): Promise<void> {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\n/**\n * Retry calling an async function until it does not throw a matching error.\n * If it throws a non-matching error, re-raise that, otherwise return the result.\n * @param fn async function that returns a result.\n * @param matchError error match function. Will retry as long as this function returns true.\n * @param timeout timeout in ms, will re-raise last error when next try would exceed this time. 0 (default) means no timeout is applied.\n * @param baseBackoffInterval basis used for exponential backoff intervall calculation\n */\nexport function retryIfErrorMatch<T>(\n    fn: () => Promise<T>,\n    matchError: (e: any) => boolean,\n    timeout: number = 0,\n    baseBackoffInterval = 500,\n): Promise<T> {\n    const started = new Date();\n    let retryCount = 0;\n    const retryLoad = async (): Promise<T> => {\n        try {\n            return await fn();\n        } catch(e) {\n            if (matchError(e) === false) {\n                throw e;\n            }\n            const interval = backoffIntervalStep(retryCount++, baseBackoffInterval);\n            if (timeout) {\n                const elapsed = +new Date() - (+started);\n                if (elapsed + interval >= timeout) {\n                    const unit = elapsed < 1000 ? 'ms' : 's';\n                    const elapsedFormat = elapsed < 1000 ? elapsed : Math.round(elapsed / 100) / 10;\n                    throw new Error(`timeout after ${elapsedFormat}${unit}: ${e}`);\n                }\n            }\n            await waitFor(interval);\n            return await retryLoad();\n        }\n    };\n    return retryLoad();\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b0ed1472d2ee42ab5c0eebb22aa1011732f31509","contentHash":"2603707e157d842e3cc68bccefd9f024ce0b77e63dbdf229478f27f5bfd1d403"}}