{"/Users/paulgrau/projects/aergo/herajs/packages/client/src/index.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/index.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":185}},"2":{"start":{"line":1,"column":155},"end":{"line":1,"column":180}},"3":{"start":{"line":6,"column":12},"end":{"line":6,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":142},"end":{"line":1,"column":143}},"loc":{"start":{"line":1,"column":154},"end":{"line":1,"column":181}},"line":1}},"branchMap":{},"s":{"0":1,"1":1,"2":6,"3":1},"f":{"0":6},"b":{},"inputSourceMap":{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;AAKA","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src","sourcesContent":["/*\n * The default export when importing 'src' is the Node.js target.\n * To import the Web target, either use a build or import 'src/platforms/web'\n*/\n\nexport { AergoClient as default } from './platforms/node';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"236e766378b0503ca0a9eb985175303969b99086","contentHash":"83262e758a81155c47515203807d06ca461ec9cded65a1b42edf4bffbc5805a7"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/platforms/node/index.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/platforms/node/index.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":187}},"2":{"start":{"line":1,"column":159},"end":{"line":1,"column":182}},"3":{"start":{"line":1,"column":187},"end":{"line":1,"column":295}},"4":{"start":{"line":1,"column":267},"end":{"line":1,"column":290}},"5":{"start":{"line":1,"column":295},"end":{"line":1,"column":406}},"6":{"start":{"line":1,"column":380},"end":{"line":1,"column":401}},"7":{"start":{"line":1,"column":406},"end":{"line":1,"column":512}},"8":{"start":{"line":1,"column":485},"end":{"line":1,"column":507}},"9":{"start":{"line":1,"column":512},"end":{"line":1,"column":620}},"10":{"start":{"line":1,"column":592},"end":{"line":1,"column":615}},"11":{"start":{"line":1,"column":620},"end":{"line":1,"column":732}},"12":{"start":{"line":1,"column":702},"end":{"line":1,"column":727}},"13":{"start":{"line":1,"column":732},"end":{"line":1,"column":843}},"14":{"start":{"line":1,"column":813},"end":{"line":1,"column":838}},"15":{"start":{"line":1,"column":843},"end":{"line":1,"column":942}},"16":{"start":{"line":1,"column":918},"end":{"line":1,"column":937}},"17":{"start":{"line":1,"column":942},"end":{"line":1,"column":981}},"18":{"start":{"line":3,"column":14},"end":{"line":3,"column":61}},"19":{"start":{"line":4,"column":12},"end":{"line":4,"column":67}},"20":{"start":{"line":5,"column":14},"end":{"line":5,"column":39}},"21":{"start":{"line":6,"column":16},"end":{"line":6,"column":72}},"22":{"start":{"line":7,"column":10},"end":{"line":7,"column":60}},"23":{"start":{"line":7,"column":99},"end":{"line":7,"column":153}},"24":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"25":{"start":{"line":10,"column":0},"end":{"line":10,"column":53}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":146},"end":{"line":1,"column":147}},"loc":{"start":{"line":1,"column":158},"end":{"line":1,"column":183}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":1,"column":254},"end":{"line":1,"column":255}},"loc":{"start":{"line":1,"column":266},"end":{"line":1,"column":291}},"line":1},"2":{"name":"(anonymous_2)","decl":{"start":{"line":1,"column":367},"end":{"line":1,"column":368}},"loc":{"start":{"line":1,"column":379},"end":{"line":1,"column":402}},"line":1},"3":{"name":"(anonymous_3)","decl":{"start":{"line":1,"column":472},"end":{"line":1,"column":473}},"loc":{"start":{"line":1,"column":484},"end":{"line":1,"column":508}},"line":1},"4":{"name":"(anonymous_4)","decl":{"start":{"line":1,"column":579},"end":{"line":1,"column":580}},"loc":{"start":{"line":1,"column":591},"end":{"line":1,"column":616}},"line":1},"5":{"name":"(anonymous_5)","decl":{"start":{"line":1,"column":689},"end":{"line":1,"column":690}},"loc":{"start":{"line":1,"column":701},"end":{"line":1,"column":728}},"line":1},"6":{"name":"(anonymous_6)","decl":{"start":{"line":1,"column":800},"end":{"line":1,"column":801}},"loc":{"start":{"line":1,"column":812},"end":{"line":1,"column":839}},"line":1},"7":{"name":"(anonymous_7)","decl":{"start":{"line":1,"column":905},"end":{"line":1,"column":906}},"loc":{"start":{"line":1,"column":917},"end":{"line":1,"column":938}},"line":1},"8":{"name":"_interopRequireDefault","decl":{"start":{"line":7,"column":70},"end":{"line":7,"column":92}},"loc":{"start":{"line":7,"column":98},"end":{"line":7,"column":154}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":106},"end":{"line":7,"column":152}},"type":"cond-expr","locations":[{"start":{"line":7,"column":130},"end":{"line":7,"column":133}},{"start":{"line":7,"column":136},"end":{"line":7,"column":152}}],"line":7},"1":{"loc":{"start":{"line":7,"column":106},"end":{"line":7,"column":127}},"type":"binary-expr","locations":[{"start":{"line":7,"column":106},"end":{"line":7,"column":109}},{"start":{"line":7,"column":113},"end":{"line":7,"column":127}}],"line":7}},"s":{"0":1,"1":1,"2":6,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":4,"24":1,"25":1},"f":{"0":6,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":4},"b":{"0":[4,0],"1":[4,4]},"inputSourceMap":{"version":3,"sources":["index.ts"],"names":["AergoClient","platform","defaultProviderClass","GrpcProvider"],"mappings":"86BAAA;;AAEA;AACA;AACA;AACA;AACA,6D;;AAEAA,gBAAYC,QAAZ,GAAuB,MAAvB;AACAD,gBAAYE,oBAAZ,GAAmCC,aAAnC","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/platforms/node","sourcesContent":["import 'regenerator-runtime/runtime';\n\nimport AergoClient from '../../client';\nimport GrpcProvider from '../../providers/grpc';\nimport { Amount, Address, constants } from '@herajs/common';\nimport Contract from '../../models/contract';\nimport Tx from '../../models/tx';\n\nAergoClient.platform = 'node';\nAergoClient.defaultProviderClass = GrpcProvider;\n\nexport {\n    AergoClient,\n    GrpcProvider,\n    constants,\n    Contract,\n    Address,\n    Amount,\n    Tx,\n    AergoClient as default\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0195521fba9547ef56a9cbbe9f52c0a8d2e70458","contentHash":"622fbd52ce854ff177cde9e37331a16de550f13f92ab7eb199b1a21a3837abbb"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/client/index.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/client/index.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":193}},"2":{"start":{"line":1,"column":160},"end":{"line":1,"column":188}},"3":{"start":{"line":1,"column":193},"end":{"line":1,"column":218}},"4":{"start":{"line":1,"column":232},"end":{"line":1,"column":249}},"5":{"start":{"line":2,"column":17},"end":{"line":2,"column":64}},"6":{"start":{"line":3,"column":13},"end":{"line":3,"column":32}},"7":{"start":{"line":4,"column":14},"end":{"line":4,"column":39}},"8":{"start":{"line":8,"column":14},"end":{"line":8,"column":46}},"9":{"start":{"line":9,"column":14},"end":{"line":9,"column":34}},"10":{"start":{"line":10,"column":16},"end":{"line":10,"column":62}},"11":{"start":{"line":11,"column":21},"end":{"line":11,"column":57}},"12":{"start":{"line":19,"column":14},"end":{"line":19,"column":43}},"13":{"start":{"line":36,"column":14},"end":{"line":36,"column":34}},"14":{"start":{"line":40,"column":11},"end":{"line":40,"column":34}},"15":{"start":{"line":42,"column":15},"end":{"line":42,"column":43}},"16":{"start":{"line":42,"column":82},"end":{"line":42,"column":136}},"17":{"start":{"line":42,"column":190},"end":{"line":42,"column":209}},"18":{"start":{"line":42,"column":210},"end":{"line":42,"column":455}},"19":{"start":{"line":42,"column":259},"end":{"line":42,"column":295}},"20":{"start":{"line":42,"column":296},"end":{"line":42,"column":423}},"21":{"start":{"line":42,"column":316},"end":{"line":42,"column":423}},"22":{"start":{"line":42,"column":357},"end":{"line":42,"column":420}},"23":{"start":{"line":42,"column":423},"end":{"line":42,"column":454}},"24":{"start":{"line":42,"column":455},"end":{"line":42,"column":467}},"25":{"start":{"line":42,"column":500},"end":{"line":42,"column":971}},"26":{"start":{"line":42,"column":513},"end":{"line":42,"column":514}},"27":{"start":{"line":42,"column":557},"end":{"line":42,"column":597}},"28":{"start":{"line":42,"column":598},"end":{"line":42,"column":970}},"29":{"start":{"line":42,"column":610},"end":{"line":42,"column":709}},"30":{"start":{"line":42,"column":664},"end":{"line":42,"column":706}},"31":{"start":{"line":42,"column":716},"end":{"line":42,"column":970}},"32":{"start":{"line":42,"column":755},"end":{"line":42,"column":829}},"33":{"start":{"line":42,"column":837},"end":{"line":42,"column":969}},"34":{"start":{"line":42,"column":885},"end":{"line":42,"column":966}},"35":{"start":{"line":42,"column":971},"end":{"line":42,"column":985}},"36":{"start":{"line":42,"column":1029},"end":{"line":42,"column":1176}},"37":{"start":{"line":42,"column":1046},"end":{"line":42,"column":1150}},"38":{"start":{"line":42,"column":1158},"end":{"line":42,"column":1175}},"39":{"start":{"line":42,"column":1176},"end":{"line":42,"column":1187}},"40":{"start":{"line":53,"column":2},"end":{"line":53,"column":29}},"41":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"42":{"start":{"line":58,"column":4},"end":{"line":58,"column":61}},"43":{"start":{"line":61,"column":2},"end":{"line":66,"column":3}},"44":{"start":{"line":62,"column":4},"end":{"line":62,"column":51}},"45":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"46":{"start":{"line":65,"column":4},"end":{"line":65,"column":50}},"47":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"48":{"start":{"line":68,"column":4},"end":{"line":68,"column":113}},"49":{"start":{"line":70,"column":22},"end":{"line":70,"column":47}},"50":{"start":{"line":71,"column":2},"end":{"line":71,"column":47}},"51":{"start":{"line":72,"column":2},"end":{"line":72,"column":21}},"52":{"start":{"line":100,"column":45},"end":{"line":100,"column":85}},"53":{"start":{"line":100,"column":85},"end":{"line":100,"column":125}},"54":{"start":{"line":100,"column":125},"end":{"line":100,"column":167}},"55":{"start":{"line":100,"column":167},"end":{"line":100,"column":207}},"56":{"start":{"line":100,"column":207},"end":{"line":100,"column":252}},"57":{"start":{"line":100,"column":252},"end":{"line":100,"column":298}},"58":{"start":{"line":101,"column":4},"end":{"line":102,"column":12}},"59":{"start":{"line":104,"column":4},"end":{"line":104,"column":53}},"60":{"start":{"line":105,"column":4},"end":{"line":105,"column":48}},"61":{"start":{"line":111,"column":4},"end":{"line":111,"column":50}},"62":{"start":{"line":119,"column":4},"end":{"line":119,"column":27}},"63":{"start":{"line":120,"column":4},"end":{"line":120,"column":33}},"64":{"start":{"line":124,"column":4},"end":{"line":124,"column":23}},"65":{"start":{"line":129,"column":4},"end":{"line":129,"column":17}},"66":{"start":{"line":133,"column":4},"end":{"line":133,"column":83}},"67":{"start":{"line":133,"column":22},"end":{"line":133,"column":82}},"68":{"start":{"line":141,"column":4},"end":{"line":145,"column":5}},"69":{"start":{"line":142,"column":6},"end":{"line":142,"column":53}},"70":{"start":{"line":144,"column":6},"end":{"line":144,"column":30}},"71":{"start":{"line":152,"column":4},"end":{"line":152,"column":30}},"72":{"start":{"line":164,"column":4},"end":{"line":167,"column":5}},"73":{"start":{"line":166,"column":6},"end":{"line":166,"column":30}},"74":{"start":{"line":168,"column":4},"end":{"line":168,"column":60}},"75":{"start":{"line":176,"column":18},"end":{"line":176,"column":22}},"76":{"start":{"line":177,"column":4},"end":{"line":193,"column":10}},"77":{"start":{"line":181,"column":6},"end":{"line":184,"column":7}},"78":{"start":{"line":183,"column":8},"end":{"line":183,"column":86}},"79":{"start":{"line":185,"column":6},"end":{"line":190,"column":65}},"80":{"start":{"line":201,"column":4},"end":{"line":207,"column":10}},"81":{"start":{"line":205,"column":6},"end":{"line":205,"column":50}},"82":{"start":{"line":215,"column":4},"end":{"line":228,"column":15}},"83":{"start":{"line":217,"column":21},"end":{"line":217,"column":42}},"84":{"start":{"line":218,"column":6},"end":{"line":218,"column":58}},"85":{"start":{"line":219,"column":6},"end":{"line":221,"column":7}},"86":{"start":{"line":220,"column":8},"end":{"line":220,"column":60}},"87":{"start":{"line":222,"column":6},"end":{"line":222,"column":20}},"88":{"start":{"line":226,"column":6},"end":{"line":226,"column":82}},"89":{"start":{"line":238,"column":24},"end":{"line":238,"column":49}},"90":{"start":{"line":239,"column":4},"end":{"line":239,"column":77}},"91":{"start":{"line":240,"column":4},"end":{"line":264,"column":7}},"92":{"start":{"line":241,"column":6},"end":{"line":263,"column":9}},"93":{"start":{"line":242,"column":8},"end":{"line":262,"column":9}},"94":{"start":{"line":243,"column":10},"end":{"line":252,"column":13}},"95":{"start":{"line":244,"column":12},"end":{"line":251,"column":13}},"96":{"start":{"line":245,"column":14},"end":{"line":245,"column":26}},"97":{"start":{"line":247,"column":26},"end":{"line":248,"column":52}},"98":{"start":{"line":250,"column":14},"end":{"line":250,"column":27}},"99":{"start":{"line":254,"column":22},"end":{"line":259,"column":56}},"100":{"start":{"line":261,"column":10},"end":{"line":261,"column":23}},"101":{"start":{"line":274,"column":4},"end":{"line":280,"column":18}},"102":{"start":{"line":278,"column":6},"end":{"line":278,"column":46}},"103":{"start":{"line":290,"column":4},"end":{"line":296,"column":18}},"104":{"start":{"line":294,"column":6},"end":{"line":294,"column":54}},"105":{"start":{"line":309,"column":19},"end":{"line":309,"column":43}},"106":{"start":{"line":310,"column":4},"end":{"line":321,"column":5}},"107":{"start":{"line":311,"column":26},"end":{"line":311,"column":64}},"108":{"start":{"line":312,"column":6},"end":{"line":314,"column":7}},"109":{"start":{"line":313,"column":8},"end":{"line":313,"column":117}},"110":{"start":{"line":315,"column":6},"end":{"line":315,"column":51}},"111":{"start":{"line":317,"column":4},"end":{"line":321,"column":5}},"112":{"start":{"line":318,"column":6},"end":{"line":318,"column":37}},"113":{"start":{"line":320,"column":6},"end":{"line":320,"column":56}},"114":{"start":{"line":322,"column":4},"end":{"line":322,"column":25}},"115":{"start":{"line":323,"column":4},"end":{"line":323,"column":29}},"116":{"start":{"line":324,"column":4},"end":{"line":324,"column":25}},"117":{"start":{"line":325,"column":4},"end":{"line":327,"column":7}},"118":{"start":{"line":326,"column":6},"end":{"line":326,"column":78}},"119":{"start":{"line":326,"column":48},"end":{"line":326,"column":76}},"120":{"start":{"line":331,"column":18},"end":{"line":331,"column":37}},"121":{"start":{"line":332,"column":19},"end":{"line":332,"column":60}},"122":{"start":{"line":333,"column":4},"end":{"line":341,"column":5}},"123":{"start":{"line":334,"column":6},"end":{"line":338,"column":9}},"124":{"start":{"line":335,"column":8},"end":{"line":337,"column":9}},"125":{"start":{"line":336,"column":10},"end":{"line":336,"column":17}},"126":{"start":{"line":342,"column":16},"end":{"line":345,"column":37}},"127":{"start":{"line":344,"column":28},"end":{"line":344,"column":89}},"128":{"start":{"line":344,"column":50},"end":{"line":344,"column":88}},"129":{"start":{"line":345,"column":20},"end":{"line":345,"column":35}},"130":{"start":{"line":347,"column":4},"end":{"line":347,"column":15}},"131":{"start":{"line":354,"column":18},"end":{"line":354,"column":37}},"132":{"start":{"line":355,"column":19},"end":{"line":355,"column":68}},"133":{"start":{"line":356,"column":4},"end":{"line":364,"column":5}},"134":{"start":{"line":357,"column":6},"end":{"line":361,"column":9}},"135":{"start":{"line":358,"column":8},"end":{"line":360,"column":9}},"136":{"start":{"line":359,"column":10},"end":{"line":359,"column":17}},"137":{"start":{"line":365,"column":16},"end":{"line":368,"column":37}},"138":{"start":{"line":367,"column":28},"end":{"line":367,"column":97}},"139":{"start":{"line":367,"column":50},"end":{"line":367,"column":96}},"140":{"start":{"line":368,"column":20},"end":{"line":368,"column":35}},"141":{"start":{"line":370,"column":4},"end":{"line":370,"column":15}},"142":{"start":{"line":380,"column":19},"end":{"line":380,"column":43}},"143":{"start":{"line":381,"column":4},"end":{"line":381,"column":29}},"144":{"start":{"line":382,"column":4},"end":{"line":382,"column":25}},"145":{"start":{"line":383,"column":19},"end":{"line":383,"column":48}},"146":{"start":{"line":384,"column":4},"end":{"line":384,"column":94}},"147":{"start":{"line":385,"column":4},"end":{"line":385,"column":29}},"148":{"start":{"line":386,"column":4},"end":{"line":393,"column":7}},"149":{"start":{"line":387,"column":18},"end":{"line":387,"column":39}},"150":{"start":{"line":388,"column":6},"end":{"line":391,"column":7}},"151":{"start":{"line":390,"column":8},"end":{"line":390,"column":96}},"152":{"start":{"line":390,"column":71},"end":{"line":390,"column":94}},"153":{"start":{"line":392,"column":6},"end":{"line":392,"column":17}},"154":{"start":{"line":413,"column":15},"end":{"line":413,"column":45}},"155":{"start":{"line":414,"column":18},"end":{"line":414,"column":29}},"156":{"start":{"line":415,"column":19},"end":{"line":415,"column":60}},"157":{"start":{"line":416,"column":4},"end":{"line":424,"column":5}},"158":{"start":{"line":417,"column":6},"end":{"line":421,"column":9}},"159":{"start":{"line":418,"column":8},"end":{"line":420,"column":9}},"160":{"start":{"line":419,"column":10},"end":{"line":419,"column":17}},"161":{"start":{"line":425,"column":16},"end":{"line":428,"column":37}},"162":{"start":{"line":427,"column":28},"end":{"line":427,"column":89}},"163":{"start":{"line":427,"column":50},"end":{"line":427,"column":88}},"164":{"start":{"line":428,"column":20},"end":{"line":428,"column":35}},"165":{"start":{"line":430,"column":4},"end":{"line":430,"column":15}},"166":{"start":{"line":440,"column":24},"end":{"line":440,"column":49}},"167":{"start":{"line":441,"column":4},"end":{"line":441,"column":83}},"168":{"start":{"line":442,"column":4},"end":{"line":442,"column":152}},"169":{"start":{"line":442,"column":116},"end":{"line":442,"column":150}},"170":{"start":{"line":452,"column":24},"end":{"line":452,"column":49}},"171":{"start":{"line":453,"column":4},"end":{"line":453,"column":83}},"172":{"start":{"line":454,"column":4},"end":{"line":454,"column":139}},"173":{"start":{"line":454,"column":116},"end":{"line":454,"column":137}},"174":{"start":{"line":465,"column":4},"end":{"line":499,"column":7}},"175":{"start":{"line":466,"column":21},"end":{"line":466,"column":48}},"176":{"start":{"line":467,"column":18},"end":{"line":467,"column":47}},"177":{"start":{"line":468,"column":22},"end":{"line":468,"column":32}},"178":{"start":{"line":469,"column":6},"end":{"line":472,"column":7}},"179":{"start":{"line":470,"column":19},"end":{"line":470,"column":72}},"180":{"start":{"line":471,"column":8},"end":{"line":471,"column":42}},"181":{"start":{"line":473,"column":6},"end":{"line":498,"column":9}},"182":{"start":{"line":474,"column":8},"end":{"line":477,"column":9}},"183":{"start":{"line":475,"column":22},"end":{"line":475,"column":59}},"184":{"start":{"line":476,"column":10},"end":{"line":476,"column":109}},"185":{"start":{"line":478,"column":8},"end":{"line":497,"column":9}},"186":{"start":{"line":479,"column":10},"end":{"line":479,"column":60}},"187":{"start":{"line":481,"column":25},"end":{"line":491,"column":12}},"188":{"start":{"line":482,"column":26},"end":{"line":482,"column":40}},"189":{"start":{"line":483,"column":12},"end":{"line":487,"column":13}},"190":{"start":{"line":484,"column":14},"end":{"line":485,"column":89}},"191":{"start":{"line":488,"column":12},"end":{"line":489,"column":68}},"192":{"start":{"line":492,"column":10},"end":{"line":496,"column":11}},"193":{"start":{"line":493,"column":12},"end":{"line":493,"column":36}},"194":{"start":{"line":495,"column":12},"end":{"line":495,"column":28}},"195":{"start":{"line":508,"column":19},"end":{"line":508,"column":43}},"196":{"start":{"line":509,"column":4},"end":{"line":509,"column":27}},"197":{"start":{"line":510,"column":4},"end":{"line":510,"column":21}},"198":{"start":{"line":511,"column":4},"end":{"line":514,"column":168}},"199":{"start":{"line":512,"column":13},"end":{"line":514,"column":166}},"200":{"start":{"line":512,"column":47},"end":{"line":514,"column":164}},"201":{"start":{"line":523,"column":27},"end":{"line":523,"column":55}},"202":{"start":{"line":524,"column":4},"end":{"line":524,"column":86}},"203":{"start":{"line":525,"column":4},"end":{"line":525,"column":107}},"204":{"start":{"line":533,"column":24},"end":{"line":533,"column":49}},"205":{"start":{"line":534,"column":4},"end":{"line":534,"column":83}},"206":{"start":{"line":535,"column":4},"end":{"line":541,"column":7}},"207":{"start":{"line":537,"column":6},"end":{"line":539,"column":37}},"208":{"start":{"line":551,"column":24},"end":{"line":551,"column":49}},"209":{"start":{"line":552,"column":4},"end":{"line":552,"column":77}},"210":{"start":{"line":553,"column":4},"end":{"line":567,"column":7}},"211":{"start":{"line":554,"column":18},"end":{"line":554,"column":39}},"212":{"start":{"line":555,"column":18},"end":{"line":564,"column":30}},"213":{"start":{"line":566,"column":6},"end":{"line":566,"column":17}},"214":{"start":{"line":579,"column":20},"end":{"line":579,"column":30}},"215":{"start":{"line":580,"column":21},"end":{"line":580,"column":22}},"216":{"start":{"line":581,"column":22},"end":{"line":600,"column":5}},"217":{"start":{"line":582,"column":6},"end":{"line":599,"column":7}},"218":{"start":{"line":583,"column":8},"end":{"line":583,"column":56}},"219":{"start":{"line":585,"column":8},"end":{"line":587,"column":9}},"220":{"start":{"line":586,"column":10},"end":{"line":586,"column":18}},"221":{"start":{"line":588,"column":25},"end":{"line":588,"column":92}},"222":{"start":{"line":589,"column":8},"end":{"line":596,"column":9}},"223":{"start":{"line":590,"column":26},"end":{"line":590,"column":48}},"224":{"start":{"line":591,"column":10},"end":{"line":595,"column":11}},"225":{"start":{"line":592,"column":25},"end":{"line":592,"column":52}},"226":{"start":{"line":593,"column":34},"end":{"line":593,"column":91}},"227":{"start":{"line":594,"column":12},"end":{"line":594,"column":83}},"228":{"start":{"line":597,"column":8},"end":{"line":597,"column":45}},"229":{"start":{"line":598,"column":8},"end":{"line":598,"column":33}},"230":{"start":{"line":601,"column":4},"end":{"line":601,"column":23}},"231":{"start":{"line":610,"column":18},"end":{"line":610,"column":39}},"232":{"start":{"line":611,"column":4},"end":{"line":612,"column":85}},"233":{"start":{"line":612,"column":18},"end":{"line":612,"column":83}},"234":{"start":{"line":624,"column":18},"end":{"line":624,"column":37}},"235":{"start":{"line":625,"column":4},"end":{"line":649,"column":7}},"236":{"start":{"line":627,"column":19},"end":{"line":627,"column":72}},"237":{"start":{"line":628,"column":6},"end":{"line":630,"column":7}},"238":{"start":{"line":629,"column":8},"end":{"line":629,"column":77}},"239":{"start":{"line":631,"column":19},"end":{"line":631,"column":48}},"240":{"start":{"line":632,"column":6},"end":{"line":641,"column":7}},"241":{"start":{"line":633,"column":25},"end":{"line":633,"column":32}},"242":{"start":{"line":634,"column":8},"end":{"line":636,"column":9}},"243":{"start":{"line":635,"column":10},"end":{"line":635,"column":164}},"244":{"start":{"line":637,"column":22},"end":{"line":637,"column":46}},"245":{"start":{"line":638,"column":8},"end":{"line":640,"column":9}},"246":{"start":{"line":639,"column":10},"end":{"line":639,"column":67}},"247":{"start":{"line":642,"column":6},"end":{"line":648,"column":9}},"248":{"start":{"line":643,"column":22},"end":{"line":643,"column":46}},"249":{"start":{"line":644,"column":8},"end":{"line":646,"column":9}},"250":{"start":{"line":645,"column":10},"end":{"line":645,"column":67}},"251":{"start":{"line":647,"column":8},"end":{"line":647,"column":22}},"252":{"start":{"line":660,"column":18},"end":{"line":660,"column":37}},"253":{"start":{"line":661,"column":4},"end":{"line":662,"column":64}},"254":{"start":{"line":662,"column":18},"end":{"line":662,"column":62}},"255":{"start":{"line":673,"column":15},"end":{"line":673,"column":45}},"256":{"start":{"line":674,"column":18},"end":{"line":674,"column":29}},"257":{"start":{"line":675,"column":4},"end":{"line":679,"column":7}},"258":{"start":{"line":677,"column":19},"end":{"line":677,"column":45}},"259":{"start":{"line":678,"column":6},"end":{"line":678,"column":60}},"260":{"start":{"line":678,"column":30},"end":{"line":678,"column":58}},"261":{"start":{"line":689,"column":24},"end":{"line":689,"column":49}},"262":{"start":{"line":690,"column":4},"end":{"line":690,"column":83}},"263":{"start":{"line":691,"column":4},"end":{"line":706,"column":7}},"264":{"start":{"line":693,"column":18},"end":{"line":693,"column":39}},"265":{"start":{"line":694,"column":6},"end":{"line":704,"column":52}},"266":{"start":{"line":697,"column":50},"end":{"line":702,"column":45}},"267":{"start":{"line":714,"column":18},"end":{"line":714,"column":43}},"268":{"start":{"line":715,"column":4},"end":{"line":715,"column":35}},"269":{"start":{"line":716,"column":4},"end":{"line":716,"column":32}},"270":{"start":{"line":717,"column":4},"end":{"line":719,"column":42}},"271":{"start":{"line":718,"column":18},"end":{"line":719,"column":40}},"272":{"start":{"line":719,"column":12},"end":{"line":719,"column":39}},"273":{"start":{"line":729,"column":20},"end":{"line":729,"column":38}},"274":{"start":{"line":730,"column":4},"end":{"line":730,"column":26}},"275":{"start":{"line":731,"column":4},"end":{"line":739,"column":7}},"276":{"start":{"line":733,"column":18},"end":{"line":733,"column":39}},"277":{"start":{"line":734,"column":6},"end":{"line":737,"column":78}},"278":{"start":{"line":747,"column":4},"end":{"line":759,"column":10}},"279":{"start":{"line":751,"column":18},"end":{"line":751,"column":37}},"280":{"start":{"line":752,"column":21},"end":{"line":755,"column":60}},"281":{"start":{"line":755,"column":41},"end":{"line":755,"column":57}},"282":{"start":{"line":757,"column":6},"end":{"line":757,"column":20}},"283":{"start":{"line":766,"column":4},"end":{"line":788,"column":10}},"284":{"start":{"line":768,"column":21},"end":{"line":768,"column":44}},"285":{"start":{"line":769,"column":6},"end":{"line":771,"column":7}},"286":{"start":{"line":770,"column":8},"end":{"line":770,"column":32}},"287":{"start":{"line":772,"column":6},"end":{"line":772,"column":20}},"288":{"start":{"line":776,"column":18},"end":{"line":776,"column":37}},"289":{"start":{"line":777,"column":21},"end":{"line":779,"column":43}},"290":{"start":{"line":781,"column":24},"end":{"line":781,"column":46}},"291":{"start":{"line":782,"column":6},"end":{"line":784,"column":7}},"292":{"start":{"line":783,"column":8},"end":{"line":783,"column":58}},"293":{"start":{"line":785,"column":6},"end":{"line":785,"column":20}},"294":{"start":{"line":789,"column":4},"end":{"line":789,"column":65}},"295":{"start":{"line":789,"column":65},"end":{"line":789,"column":110}},"296":{"start":{"line":792,"column":0},"end":{"line":792,"column":11}},"297":{"start":{"line":792,"column":12},"end":{"line":792,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":147},"end":{"line":1,"column":148}},"loc":{"start":{"line":1,"column":159},"end":{"line":1,"column":189}},"line":1},"1":{"name":"_interopRequireDefault","decl":{"start":{"line":42,"column":53},"end":{"line":42,"column":75}},"loc":{"start":{"line":42,"column":81},"end":{"line":42,"column":137}},"line":42},"2":{"name":"ownKeys","decl":{"start":{"line":42,"column":146},"end":{"line":42,"column":153}},"loc":{"start":{"line":42,"column":178},"end":{"line":42,"column":468}},"line":42},"3":{"name":"(anonymous_3)","decl":{"start":{"line":42,"column":341},"end":{"line":42,"column":342}},"loc":{"start":{"line":42,"column":356},"end":{"line":42,"column":421}},"line":42},"4":{"name":"_objectSpread","decl":{"start":{"line":42,"column":477},"end":{"line":42,"column":490}},"loc":{"start":{"line":42,"column":499},"end":{"line":42,"column":986}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":648},"end":{"line":42,"column":649}},"loc":{"start":{"line":42,"column":663},"end":{"line":42,"column":707}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":869},"end":{"line":42,"column":870}},"loc":{"start":{"line":42,"column":884},"end":{"line":42,"column":967}},"line":42},"7":{"name":"_defineProperty","decl":{"start":{"line":42,"column":995},"end":{"line":42,"column":1010}},"loc":{"start":{"line":42,"column":1028},"end":{"line":42,"column":1188}},"line":42},"8":{"name":"marshalEmpty","decl":{"start":{"line":52,"column":15},"end":{"line":52,"column":27}},"loc":{"start":{"line":52,"column":30},"end":{"line":54,"column":1}},"line":52},"9":{"name":"marshalHashOrNumberToSingleBytes","decl":{"start":{"line":56,"column":15},"end":{"line":56,"column":47}},"loc":{"start":{"line":56,"column":62},"end":{"line":73,"column":1}},"line":56},"10":{"name":"(anonymous_10)","decl":{"start":{"line":100,"column":2},"end":{"line":100,"column":3}},"loc":{"start":{"line":100,"column":44},"end":{"line":106,"column":3}},"line":100},"11":{"name":"(anonymous_11)","decl":{"start":{"line":108,"column":2},"end":{"line":108,"column":3}},"loc":{"start":{"line":108,"column":20},"end":{"line":112,"column":3}},"line":108},"12":{"name":"(anonymous_12)","decl":{"start":{"line":118,"column":2},"end":{"line":118,"column":3}},"loc":{"start":{"line":118,"column":24},"end":{"line":121,"column":3}},"line":118},"13":{"name":"(anonymous_13)","decl":{"start":{"line":123,"column":2},"end":{"line":123,"column":3}},"loc":{"start":{"line":123,"column":14},"end":{"line":125,"column":3}},"line":123},"14":{"name":"(anonymous_14)","decl":{"start":{"line":127,"column":2},"end":{"line":127,"column":3}},"loc":{"start":{"line":127,"column":16},"end":{"line":130,"column":3}},"line":127},"15":{"name":"(anonymous_15)","decl":{"start":{"line":132,"column":2},"end":{"line":132,"column":3}},"loc":{"start":{"line":132,"column":21},"end":{"line":134,"column":3}},"line":132},"16":{"name":"(anonymous_16)","decl":{"start":{"line":133,"column":11},"end":{"line":133,"column":12}},"loc":{"start":{"line":133,"column":22},"end":{"line":133,"column":82}},"line":133},"17":{"name":"(anonymous_17)","decl":{"start":{"line":140,"column":2},"end":{"line":140,"column":3}},"loc":{"start":{"line":140,"column":23},"end":{"line":146,"column":3}},"line":140},"18":{"name":"(anonymous_18)","decl":{"start":{"line":151,"column":2},"end":{"line":151,"column":3}},"loc":{"start":{"line":151,"column":25},"end":{"line":153,"column":3}},"line":151},"19":{"name":"(anonymous_19)","decl":{"start":{"line":163,"column":2},"end":{"line":163,"column":3}},"loc":{"start":{"line":163,"column":28},"end":{"line":169,"column":3}},"line":163},"20":{"name":"(anonymous_20)","decl":{"start":{"line":175,"column":2},"end":{"line":175,"column":3}},"loc":{"start":{"line":175,"column":15},"end":{"line":194,"column":3}},"line":175},"21":{"name":"unmarshal","decl":{"start":{"line":180,"column":19},"end":{"line":180,"column":28}},"loc":{"start":{"line":180,"column":39},"end":{"line":192,"column":5}},"line":180},"22":{"name":"(anonymous_22)","decl":{"start":{"line":200,"column":2},"end":{"line":200,"column":3}},"loc":{"start":{"line":200,"column":17},"end":{"line":208,"column":3}},"line":200},"23":{"name":"unmarshal","decl":{"start":{"line":204,"column":19},"end":{"line":204,"column":28}},"loc":{"start":{"line":204,"column":39},"end":{"line":206,"column":5}},"line":204},"24":{"name":"(anonymous_24)","decl":{"start":{"line":214,"column":2},"end":{"line":214,"column":3}},"loc":{"start":{"line":214,"column":39},"end":{"line":229,"column":3}},"line":214},"25":{"name":"marshal","decl":{"start":{"line":216,"column":19},"end":{"line":216,"column":26}},"loc":{"start":{"line":216,"column":38},"end":{"line":223,"column":5}},"line":216},"26":{"name":"unmarshal","decl":{"start":{"line":225,"column":19},"end":{"line":225,"column":28}},"loc":{"start":{"line":225,"column":39},"end":{"line":227,"column":5}},"line":225},"27":{"name":"(anonymous_27)","decl":{"start":{"line":237,"column":2},"end":{"line":237,"column":3}},"loc":{"start":{"line":237,"column":25},"end":{"line":265,"column":3}},"line":237},"28":{"name":"(anonymous_28)","decl":{"start":{"line":240,"column":23},"end":{"line":240,"column":24}},"loc":{"start":{"line":240,"column":44},"end":{"line":264,"column":5}},"line":240},"29":{"name":"(anonymous_29)","decl":{"start":{"line":241,"column":49},"end":{"line":241,"column":50}},"loc":{"start":{"line":241,"column":66},"end":{"line":263,"column":7}},"line":241},"30":{"name":"(anonymous_30)","decl":{"start":{"line":243,"column":48},"end":{"line":243,"column":49}},"loc":{"start":{"line":243,"column":65},"end":{"line":252,"column":11}},"line":243},"31":{"name":"(anonymous_31)","decl":{"start":{"line":273,"column":2},"end":{"line":273,"column":3}},"loc":{"start":{"line":273,"column":25},"end":{"line":281,"column":3}},"line":273},"32":{"name":"unmarshal","decl":{"start":{"line":277,"column":19},"end":{"line":277,"column":28}},"loc":{"start":{"line":277,"column":39},"end":{"line":279,"column":5}},"line":277},"33":{"name":"(anonymous_33)","decl":{"start":{"line":289,"column":2},"end":{"line":289,"column":3}},"loc":{"start":{"line":289,"column":33},"end":{"line":297,"column":3}},"line":289},"34":{"name":"unmarshal","decl":{"start":{"line":293,"column":19},"end":{"line":293,"column":28}},"loc":{"start":{"line":293,"column":39},"end":{"line":295,"column":5}},"line":293},"35":{"name":"(anonymous_35)","decl":{"start":{"line":308,"column":2},"end":{"line":308,"column":3}},"loc":{"start":{"line":308,"column":68},"end":{"line":328,"column":3}},"line":308},"36":{"name":"(anonymous_36)","decl":{"start":{"line":325,"column":105},"end":{"line":325,"column":106}},"loc":{"start":{"line":325,"column":115},"end":{"line":327,"column":5}},"line":325},"37":{"name":"(anonymous_37)","decl":{"start":{"line":326,"column":40},"end":{"line":326,"column":41}},"loc":{"start":{"line":326,"column":48},"end":{"line":326,"column":76}},"line":326},"38":{"name":"(anonymous_38)","decl":{"start":{"line":330,"column":2},"end":{"line":330,"column":3}},"loc":{"start":{"line":330,"column":19},"end":{"line":348,"column":3}},"line":330},"39":{"name":"(anonymous_39)","decl":{"start":{"line":334,"column":25},"end":{"line":334,"column":26}},"loc":{"start":{"line":334,"column":34},"end":{"line":338,"column":7}},"line":334},"40":{"name":"(anonymous_40)","decl":{"start":{"line":344,"column":10},"end":{"line":344,"column":11}},"loc":{"start":{"line":344,"column":28},"end":{"line":344,"column":89}},"line":344},"41":{"name":"(anonymous_41)","decl":{"start":{"line":344,"column":42},"end":{"line":344,"column":43}},"loc":{"start":{"line":344,"column":50},"end":{"line":344,"column":88}},"line":344},"42":{"name":"(anonymous_42)","decl":{"start":{"line":345,"column":14},"end":{"line":345,"column":15}},"loc":{"start":{"line":345,"column":20},"end":{"line":345,"column":35}},"line":345},"43":{"name":"(anonymous_43)","decl":{"start":{"line":353,"column":2},"end":{"line":353,"column":3}},"loc":{"start":{"line":353,"column":27},"end":{"line":371,"column":3}},"line":353},"44":{"name":"(anonymous_44)","decl":{"start":{"line":357,"column":25},"end":{"line":357,"column":26}},"loc":{"start":{"line":357,"column":34},"end":{"line":361,"column":7}},"line":357},"45":{"name":"(anonymous_45)","decl":{"start":{"line":367,"column":10},"end":{"line":367,"column":11}},"loc":{"start":{"line":367,"column":28},"end":{"line":367,"column":97}},"line":367},"46":{"name":"(anonymous_46)","decl":{"start":{"line":367,"column":42},"end":{"line":367,"column":43}},"loc":{"start":{"line":367,"column":50},"end":{"line":367,"column":96}},"line":367},"47":{"name":"(anonymous_47)","decl":{"start":{"line":368,"column":14},"end":{"line":368,"column":15}},"loc":{"start":{"line":368,"column":20},"end":{"line":368,"column":35}},"line":368},"48":{"name":"(anonymous_48)","decl":{"start":{"line":379,"column":2},"end":{"line":379,"column":3}},"loc":{"start":{"line":379,"column":58},"end":{"line":394,"column":3}},"line":379},"49":{"name":"(anonymous_49)","decl":{"start":{"line":386,"column":107},"end":{"line":386,"column":108}},"loc":{"start":{"line":386,"column":121},"end":{"line":393,"column":5}},"line":386},"50":{"name":"(anonymous_50)","decl":{"start":{"line":390,"column":65},"end":{"line":390,"column":66}},"loc":{"start":{"line":390,"column":71},"end":{"line":390,"column":94}},"line":390},"51":{"name":"(anonymous_51)","decl":{"start":{"line":412,"column":2},"end":{"line":412,"column":3}},"loc":{"start":{"line":412,"column":25},"end":{"line":431,"column":3}},"line":412},"52":{"name":"(anonymous_52)","decl":{"start":{"line":417,"column":25},"end":{"line":417,"column":26}},"loc":{"start":{"line":417,"column":34},"end":{"line":421,"column":7}},"line":417},"53":{"name":"(anonymous_53)","decl":{"start":{"line":427,"column":10},"end":{"line":427,"column":11}},"loc":{"start":{"line":427,"column":28},"end":{"line":427,"column":89}},"line":427},"54":{"name":"(anonymous_54)","decl":{"start":{"line":427,"column":42},"end":{"line":427,"column":43}},"loc":{"start":{"line":427,"column":50},"end":{"line":427,"column":88}},"line":427},"55":{"name":"(anonymous_55)","decl":{"start":{"line":428,"column":14},"end":{"line":428,"column":15}},"loc":{"start":{"line":428,"column":20},"end":{"line":428,"column":35}},"line":428},"56":{"name":"(anonymous_56)","decl":{"start":{"line":439,"column":2},"end":{"line":439,"column":3}},"loc":{"start":{"line":439,"column":20},"end":{"line":443,"column":3}},"line":439},"57":{"name":"(anonymous_57)","decl":{"start":{"line":442,"column":102},"end":{"line":442,"column":103}},"loc":{"start":{"line":442,"column":116},"end":{"line":442,"column":150}},"line":442},"58":{"name":"(anonymous_58)","decl":{"start":{"line":451,"column":2},"end":{"line":451,"column":3}},"loc":{"start":{"line":451,"column":20},"end":{"line":455,"column":3}},"line":451},"59":{"name":"(anonymous_59)","decl":{"start":{"line":454,"column":102},"end":{"line":454,"column":103}},"loc":{"start":{"line":454,"column":116},"end":{"line":454,"column":137}},"line":454},"60":{"name":"(anonymous_60)","decl":{"start":{"line":464,"column":2},"end":{"line":464,"column":3}},"loc":{"start":{"line":464,"column":28},"end":{"line":500,"column":3}},"line":464},"61":{"name":"(anonymous_61)","decl":{"start":{"line":465,"column":23},"end":{"line":465,"column":24}},"loc":{"start":{"line":465,"column":44},"end":{"line":499,"column":5}},"line":465},"62":{"name":"(anonymous_62)","decl":{"start":{"line":473,"column":42},"end":{"line":473,"column":43}},"loc":{"start":{"line":473,"column":59},"end":{"line":498,"column":7}},"line":473},"63":{"name":"(anonymous_63)","decl":{"start":{"line":481,"column":53},"end":{"line":481,"column":54}},"loc":{"start":{"line":481,"column":60},"end":{"line":491,"column":11}},"line":481},"64":{"name":"(anonymous_64)","decl":{"start":{"line":507,"column":2},"end":{"line":507,"column":3}},"loc":{"start":{"line":507,"column":36},"end":{"line":517,"column":3}},"line":507},"65":{"name":"(anonymous_65)","decl":{"start":{"line":512,"column":4},"end":{"line":512,"column":5}},"loc":{"start":{"line":512,"column":13},"end":{"line":514,"column":166}},"line":512},"66":{"name":"(anonymous_66)","decl":{"start":{"line":512,"column":38},"end":{"line":512,"column":39}},"loc":{"start":{"line":512,"column":47},"end":{"line":514,"column":164}},"line":512},"67":{"name":"(anonymous_67)","decl":{"start":{"line":522,"column":2},"end":{"line":522,"column":3}},"loc":{"start":{"line":522,"column":27},"end":{"line":526,"column":3}},"line":522},"68":{"name":"(anonymous_68)","decl":{"start":{"line":532,"column":2},"end":{"line":532,"column":3}},"loc":{"start":{"line":532,"column":22},"end":{"line":543,"column":3}},"line":532},"69":{"name":"(anonymous_69)","decl":{"start":{"line":536,"column":4},"end":{"line":536,"column":5}},"loc":{"start":{"line":536,"column":18},"end":{"line":541,"column":5}},"line":536},"70":{"name":"(anonymous_70)","decl":{"start":{"line":550,"column":2},"end":{"line":550,"column":3}},"loc":{"start":{"line":550,"column":32},"end":{"line":568,"column":3}},"line":550},"71":{"name":"(anonymous_71)","decl":{"start":{"line":553,"column":104},"end":{"line":553,"column":105}},"loc":{"start":{"line":553,"column":118},"end":{"line":567,"column":5}},"line":553},"72":{"name":"(anonymous_72)","decl":{"start":{"line":578,"column":2},"end":{"line":578,"column":3}},"loc":{"start":{"line":578,"column":76},"end":{"line":602,"column":3}},"line":578},"73":{"name":"(anonymous_73)","decl":{"start":{"line":581,"column":22},"end":{"line":581,"column":23}},"loc":{"start":{"line":581,"column":34},"end":{"line":600,"column":5}},"line":581},"74":{"name":"(anonymous_74)","decl":{"start":{"line":609,"column":2},"end":{"line":609,"column":3}},"loc":{"start":{"line":609,"column":30},"end":{"line":614,"column":3}},"line":609},"75":{"name":"(anonymous_75)","decl":{"start":{"line":612,"column":4},"end":{"line":612,"column":5}},"loc":{"start":{"line":612,"column":18},"end":{"line":612,"column":83}},"line":612},"76":{"name":"(anonymous_76)","decl":{"start":{"line":623,"column":2},"end":{"line":623,"column":3}},"loc":{"start":{"line":623,"column":33},"end":{"line":651,"column":3}},"line":623},"77":{"name":"(anonymous_77)","decl":{"start":{"line":626,"column":4},"end":{"line":626,"column":5}},"loc":{"start":{"line":626,"column":18},"end":{"line":649,"column":5}},"line":626},"78":{"name":"(anonymous_78)","decl":{"start":{"line":642,"column":22},"end":{"line":642,"column":23}},"loc":{"start":{"line":642,"column":34},"end":{"line":648,"column":7}},"line":642},"79":{"name":"(anonymous_79)","decl":{"start":{"line":659,"column":2},"end":{"line":659,"column":3}},"loc":{"start":{"line":659,"column":38},"end":{"line":664,"column":3}},"line":659},"80":{"name":"(anonymous_80)","decl":{"start":{"line":662,"column":4},"end":{"line":662,"column":5}},"loc":{"start":{"line":662,"column":18},"end":{"line":662,"column":62}},"line":662},"81":{"name":"(anonymous_81)","decl":{"start":{"line":672,"column":2},"end":{"line":672,"column":3}},"loc":{"start":{"line":672,"column":20},"end":{"line":681,"column":3}},"line":672},"82":{"name":"(anonymous_82)","decl":{"start":{"line":676,"column":4},"end":{"line":676,"column":5}},"loc":{"start":{"line":676,"column":18},"end":{"line":679,"column":5}},"line":676},"83":{"name":"(anonymous_83)","decl":{"start":{"line":678,"column":22},"end":{"line":678,"column":23}},"loc":{"start":{"line":678,"column":30},"end":{"line":678,"column":58}},"line":678},"84":{"name":"(anonymous_84)","decl":{"start":{"line":688,"column":2},"end":{"line":688,"column":3}},"loc":{"start":{"line":688,"column":18},"end":{"line":708,"column":3}},"line":688},"85":{"name":"(anonymous_85)","decl":{"start":{"line":692,"column":4},"end":{"line":692,"column":5}},"loc":{"start":{"line":692,"column":18},"end":{"line":706,"column":5}},"line":692},"86":{"name":"(anonymous_86)","decl":{"start":{"line":697,"column":41},"end":{"line":697,"column":42}},"loc":{"start":{"line":697,"column":50},"end":{"line":702,"column":45}},"line":697},"87":{"name":"(anonymous_87)","decl":{"start":{"line":713,"column":2},"end":{"line":713,"column":3}},"loc":{"start":{"line":713,"column":47},"end":{"line":722,"column":3}},"line":713},"88":{"name":"(anonymous_88)","decl":{"start":{"line":718,"column":4},"end":{"line":718,"column":5}},"loc":{"start":{"line":718,"column":18},"end":{"line":719,"column":40}},"line":718},"89":{"name":"(anonymous_89)","decl":{"start":{"line":719,"column":4},"end":{"line":719,"column":5}},"loc":{"start":{"line":719,"column":12},"end":{"line":719,"column":39}},"line":719},"90":{"name":"(anonymous_90)","decl":{"start":{"line":728,"column":2},"end":{"line":728,"column":3}},"loc":{"start":{"line":728,"column":20},"end":{"line":741,"column":3}},"line":728},"91":{"name":"(anonymous_91)","decl":{"start":{"line":732,"column":4},"end":{"line":732,"column":5}},"loc":{"start":{"line":732,"column":18},"end":{"line":739,"column":5}},"line":732},"92":{"name":"(anonymous_92)","decl":{"start":{"line":746,"column":2},"end":{"line":746,"column":3}},"loc":{"start":{"line":746,"column":21},"end":{"line":760,"column":3}},"line":746},"93":{"name":"unmarshal","decl":{"start":{"line":750,"column":19},"end":{"line":750,"column":28}},"loc":{"start":{"line":750,"column":39},"end":{"line":758,"column":5}},"line":750},"94":{"name":"(anonymous_94)","decl":{"start":{"line":755,"column":33},"end":{"line":755,"column":34}},"loc":{"start":{"line":755,"column":41},"end":{"line":755,"column":57}},"line":755},"95":{"name":"(anonymous_95)","decl":{"start":{"line":765,"column":2},"end":{"line":765,"column":3}},"loc":{"start":{"line":765,"column":22},"end":{"line":789,"column":3}},"line":765},"96":{"name":"marshal","decl":{"start":{"line":767,"column":19},"end":{"line":767,"column":26}},"loc":{"start":{"line":767,"column":33},"end":{"line":773,"column":5}},"line":767},"97":{"name":"unmarshal","decl":{"start":{"line":775,"column":19},"end":{"line":775,"column":28}},"loc":{"start":{"line":775,"column":39},"end":{"line":787,"column":5}},"line":775}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":89},"end":{"line":42,"column":135}},"type":"cond-expr","locations":[{"start":{"line":42,"column":113},"end":{"line":42,"column":116}},{"start":{"line":42,"column":119},"end":{"line":42,"column":135}}],"line":42},"1":{"loc":{"start":{"line":42,"column":89},"end":{"line":42,"column":110}},"type":"binary-expr","locations":[{"start":{"line":42,"column":89},"end":{"line":42,"column":92}},{"start":{"line":42,"column":96},"end":{"line":42,"column":110}}],"line":42},"2":{"loc":{"start":{"line":42,"column":210},"end":{"line":42,"column":455}},"type":"if","locations":[{"start":{"line":42,"column":210},"end":{"line":42,"column":455}},{"start":{"line":42,"column":210},"end":{"line":42,"column":455}}],"line":42},"3":{"loc":{"start":{"line":42,"column":296},"end":{"line":42,"column":423}},"type":"if","locations":[{"start":{"line":42,"column":296},"end":{"line":42,"column":423}},{"start":{"line":42,"column":296},"end":{"line":42,"column":423}}],"line":42},"4":{"loc":{"start":{"line":42,"column":557},"end":{"line":42,"column":597}},"type":"cond-expr","locations":[{"start":{"line":42,"column":580},"end":{"line":42,"column":592}},{"start":{"line":42,"column":595},"end":{"line":42,"column":597}}],"line":42},"5":{"loc":{"start":{"line":42,"column":598},"end":{"line":42,"column":970}},"type":"if","locations":[{"start":{"line":42,"column":598},"end":{"line":42,"column":970}},{"start":{"line":42,"column":598},"end":{"line":42,"column":970}}],"line":42},"6":{"loc":{"start":{"line":42,"column":716},"end":{"line":42,"column":970}},"type":"if","locations":[{"start":{"line":42,"column":716},"end":{"line":42,"column":970}},{"start":{"line":42,"column":716},"end":{"line":42,"column":970}}],"line":42},"7":{"loc":{"start":{"line":42,"column":1029},"end":{"line":42,"column":1176}},"type":"if","locations":[{"start":{"line":42,"column":1029},"end":{"line":42,"column":1176}},{"start":{"line":42,"column":1029},"end":{"line":42,"column":1176}}],"line":42},"8":{"loc":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},{"start":{"line":57,"column":2},"end":{"line":59,"column":3}}],"line":57},"9":{"loc":{"start":{"line":61,"column":2},"end":{"line":66,"column":3}},"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":66,"column":3}},{"start":{"line":61,"column":2},"end":{"line":66,"column":3}}],"line":61},"10":{"loc":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},{"start":{"line":64,"column":2},"end":{"line":66,"column":3}}],"line":64},"11":{"loc":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},{"start":{"line":67,"column":2},"end":{"line":69,"column":3}}],"line":67},"12":{"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":45}},"type":"binary-expr","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":24}},{"start":{"line":67,"column":28},"end":{"line":67,"column":45}}],"line":67},"13":{"loc":{"start":{"line":100,"column":14},"end":{"line":100,"column":25}},"type":"default-arg","locations":[{"start":{"line":100,"column":23},"end":{"line":100,"column":25}}],"line":100},"14":{"loc":{"start":{"line":100,"column":27},"end":{"line":100,"column":42}},"type":"default-arg","locations":[{"start":{"line":100,"column":38},"end":{"line":100,"column":42}}],"line":100},"15":{"loc":{"start":{"line":104,"column":18},"end":{"line":104,"column":52}},"type":"binary-expr","locations":[{"start":{"line":104,"column":18},"end":{"line":104,"column":26}},{"start":{"line":104,"column":30},"end":{"line":104,"column":52}}],"line":104},"16":{"loc":{"start":{"line":141,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":145,"column":5}},{"start":{"line":141,"column":4},"end":{"line":145,"column":5}}],"line":141},"17":{"loc":{"start":{"line":164,"column":4},"end":{"line":167,"column":5}},"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":167,"column":5}},{"start":{"line":164,"column":4},"end":{"line":167,"column":5}}],"line":164},"18":{"loc":{"start":{"line":181,"column":6},"end":{"line":184,"column":7}},"type":"if","locations":[{"start":{"line":181,"column":6},"end":{"line":184,"column":7}},{"start":{"line":181,"column":6},"end":{"line":184,"column":7}}],"line":181},"19":{"loc":{"start":{"line":214,"column":26},"end":{"line":214,"column":37}},"type":"default-arg","locations":[{"start":{"line":214,"column":36},"end":{"line":214,"column":37}}],"line":214},"20":{"loc":{"start":{"line":219,"column":6},"end":{"line":221,"column":7}},"type":"if","locations":[{"start":{"line":219,"column":6},"end":{"line":221,"column":7}},{"start":{"line":219,"column":6},"end":{"line":221,"column":7}}],"line":219},"21":{"loc":{"start":{"line":242,"column":8},"end":{"line":262,"column":9}},"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":262,"column":9}},{"start":{"line":242,"column":8},"end":{"line":262,"column":9}}],"line":242},"22":{"loc":{"start":{"line":244,"column":12},"end":{"line":251,"column":13}},"type":"if","locations":[{"start":{"line":244,"column":12},"end":{"line":251,"column":13}},{"start":{"line":244,"column":12},"end":{"line":251,"column":13}}],"line":244},"23":{"loc":{"start":{"line":308,"column":32},"end":{"line":308,"column":41}},"type":"default-arg","locations":[{"start":{"line":308,"column":39},"end":{"line":308,"column":41}}],"line":308},"24":{"loc":{"start":{"line":308,"column":43},"end":{"line":308,"column":53}},"type":"default-arg","locations":[{"start":{"line":308,"column":52},"end":{"line":308,"column":53}}],"line":308},"25":{"loc":{"start":{"line":308,"column":55},"end":{"line":308,"column":66}},"type":"default-arg","locations":[{"start":{"line":308,"column":62},"end":{"line":308,"column":66}}],"line":308},"26":{"loc":{"start":{"line":310,"column":4},"end":{"line":321,"column":5}},"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":321,"column":5}},{"start":{"line":310,"column":4},"end":{"line":321,"column":5}}],"line":310},"27":{"loc":{"start":{"line":312,"column":6},"end":{"line":314,"column":7}},"type":"if","locations":[{"start":{"line":312,"column":6},"end":{"line":314,"column":7}},{"start":{"line":312,"column":6},"end":{"line":314,"column":7}}],"line":312},"28":{"loc":{"start":{"line":317,"column":4},"end":{"line":321,"column":5}},"type":"if","locations":[{"start":{"line":317,"column":4},"end":{"line":321,"column":5}},{"start":{"line":317,"column":4},"end":{"line":321,"column":5}}],"line":317},"29":{"loc":{"start":{"line":335,"column":8},"end":{"line":337,"column":9}},"type":"if","locations":[{"start":{"line":335,"column":8},"end":{"line":337,"column":9}},{"start":{"line":335,"column":8},"end":{"line":337,"column":9}}],"line":335},"30":{"loc":{"start":{"line":358,"column":8},"end":{"line":360,"column":9}},"type":"if","locations":[{"start":{"line":358,"column":8},"end":{"line":360,"column":9}},{"start":{"line":358,"column":8},"end":{"line":360,"column":9}}],"line":358},"31":{"loc":{"start":{"line":379,"column":35},"end":{"line":379,"column":45}},"type":"default-arg","locations":[{"start":{"line":379,"column":44},"end":{"line":379,"column":45}}],"line":379},"32":{"loc":{"start":{"line":379,"column":47},"end":{"line":379,"column":56}},"type":"default-arg","locations":[{"start":{"line":379,"column":54},"end":{"line":379,"column":56}}],"line":379},"33":{"loc":{"start":{"line":388,"column":6},"end":{"line":391,"column":7}},"type":"if","locations":[{"start":{"line":388,"column":6},"end":{"line":391,"column":7}},{"start":{"line":388,"column":6},"end":{"line":391,"column":7}}],"line":388},"34":{"loc":{"start":{"line":388,"column":10},"end":{"line":388,"column":38}},"type":"binary-expr","locations":[{"start":{"line":388,"column":10},"end":{"line":388,"column":18}},{"start":{"line":388,"column":22},"end":{"line":388,"column":38}}],"line":388},"35":{"loc":{"start":{"line":418,"column":8},"end":{"line":420,"column":9}},"type":"if","locations":[{"start":{"line":418,"column":8},"end":{"line":420,"column":9}},{"start":{"line":418,"column":8},"end":{"line":420,"column":9}}],"line":418},"36":{"loc":{"start":{"line":467,"column":18},"end":{"line":467,"column":47}},"type":"cond-expr","locations":[{"start":{"line":467,"column":38},"end":{"line":467,"column":40}},{"start":{"line":467,"column":43},"end":{"line":467,"column":47}}],"line":467},"37":{"loc":{"start":{"line":470,"column":19},"end":{"line":470,"column":72}},"type":"cond-expr","locations":[{"start":{"line":470,"column":47},"end":{"line":470,"column":50}},{"start":{"line":470,"column":53},"end":{"line":470,"column":72}}],"line":470},"38":{"loc":{"start":{"line":474,"column":8},"end":{"line":477,"column":9}},"type":"if","locations":[{"start":{"line":474,"column":8},"end":{"line":477,"column":9}},{"start":{"line":474,"column":8},"end":{"line":477,"column":9}}],"line":474},"39":{"loc":{"start":{"line":474,"column":12},"end":{"line":474,"column":81}},"type":"binary-expr","locations":[{"start":{"line":474,"column":12},"end":{"line":474,"column":23}},{"start":{"line":474,"column":27},"end":{"line":474,"column":64}},{"start":{"line":474,"column":68},"end":{"line":474,"column":81}}],"line":474},"40":{"loc":{"start":{"line":478,"column":8},"end":{"line":497,"column":9}},"type":"if","locations":[{"start":{"line":478,"column":8},"end":{"line":497,"column":9}},{"start":{"line":478,"column":8},"end":{"line":497,"column":9}}],"line":478},"41":{"loc":{"start":{"line":483,"column":12},"end":{"line":487,"column":13}},"type":"if","locations":[{"start":{"line":483,"column":12},"end":{"line":487,"column":13}},{"start":{"line":483,"column":12},"end":{"line":487,"column":13}}],"line":483},"42":{"loc":{"start":{"line":492,"column":10},"end":{"line":496,"column":11}},"type":"if","locations":[{"start":{"line":492,"column":10},"end":{"line":496,"column":11}},{"start":{"line":492,"column":10},"end":{"line":496,"column":11}}],"line":492},"43":{"loc":{"start":{"line":507,"column":21},"end":{"line":507,"column":34}},"type":"default-arg","locations":[{"start":{"line":507,"column":26},"end":{"line":507,"column":34}}],"line":507},"44":{"loc":{"start":{"line":514,"column":17},"end":{"line":514,"column":162}},"type":"cond-expr","locations":[{"start":{"line":514,"column":35},"end":{"line":514,"column":103}},{"start":{"line":514,"column":106},"end":{"line":514,"column":162}}],"line":514},"45":{"loc":{"start":{"line":578,"column":36},"end":{"line":578,"column":47}},"type":"default-arg","locations":[{"start":{"line":578,"column":46},"end":{"line":578,"column":47}}],"line":578},"46":{"loc":{"start":{"line":578,"column":49},"end":{"line":578,"column":74}},"type":"default-arg","locations":[{"start":{"line":578,"column":71},"end":{"line":578,"column":74}}],"line":578},"47":{"loc":{"start":{"line":585,"column":8},"end":{"line":587,"column":9}},"type":"if","locations":[{"start":{"line":585,"column":8},"end":{"line":587,"column":9}},{"start":{"line":585,"column":8},"end":{"line":587,"column":9}}],"line":585},"48":{"loc":{"start":{"line":589,"column":8},"end":{"line":596,"column":9}},"type":"if","locations":[{"start":{"line":589,"column":8},"end":{"line":596,"column":9}},{"start":{"line":589,"column":8},"end":{"line":596,"column":9}}],"line":589},"49":{"loc":{"start":{"line":591,"column":10},"end":{"line":595,"column":11}},"type":"if","locations":[{"start":{"line":591,"column":10},"end":{"line":595,"column":11}},{"start":{"line":591,"column":10},"end":{"line":595,"column":11}}],"line":591},"50":{"loc":{"start":{"line":592,"column":25},"end":{"line":592,"column":52}},"type":"cond-expr","locations":[{"start":{"line":592,"column":42},"end":{"line":592,"column":46}},{"start":{"line":592,"column":49},"end":{"line":592,"column":52}}],"line":592},"51":{"loc":{"start":{"line":593,"column":34},"end":{"line":593,"column":91}},"type":"cond-expr","locations":[{"start":{"line":593,"column":51},"end":{"line":593,"column":58}},{"start":{"line":593,"column":61},"end":{"line":593,"column":91}}],"line":593},"52":{"loc":{"start":{"line":628,"column":6},"end":{"line":630,"column":7}},"type":"if","locations":[{"start":{"line":628,"column":6},"end":{"line":630,"column":7}},{"start":{"line":628,"column":6},"end":{"line":630,"column":7}}],"line":628},"53":{"loc":{"start":{"line":632,"column":6},"end":{"line":641,"column":7}},"type":"if","locations":[{"start":{"line":632,"column":6},"end":{"line":641,"column":7}},{"start":{"line":632,"column":6},"end":{"line":641,"column":7}}],"line":632},"54":{"loc":{"start":{"line":634,"column":8},"end":{"line":636,"column":9}},"type":"if","locations":[{"start":{"line":634,"column":8},"end":{"line":636,"column":9}},{"start":{"line":634,"column":8},"end":{"line":636,"column":9}}],"line":634},"55":{"loc":{"start":{"line":638,"column":8},"end":{"line":640,"column":9}},"type":"if","locations":[{"start":{"line":638,"column":8},"end":{"line":640,"column":9}},{"start":{"line":638,"column":8},"end":{"line":640,"column":9}}],"line":638},"56":{"loc":{"start":{"line":644,"column":8},"end":{"line":646,"column":9}},"type":"if","locations":[{"start":{"line":644,"column":8},"end":{"line":646,"column":9}},{"start":{"line":644,"column":8},"end":{"line":646,"column":9}}],"line":644},"57":{"loc":{"start":{"line":713,"column":11},"end":{"line":713,"column":26}},"type":"default-arg","locations":[{"start":{"line":713,"column":22},"end":{"line":713,"column":26}}],"line":713},"58":{"loc":{"start":{"line":713,"column":28},"end":{"line":713,"column":45}},"type":"default-arg","locations":[{"start":{"line":713,"column":41},"end":{"line":713,"column":45}}],"line":713},"59":{"loc":{"start":{"line":754,"column":14},"end":{"line":754,"column":50}},"type":"cond-expr","locations":[{"start":{"line":754,"column":25},"end":{"line":754,"column":45}},{"start":{"line":754,"column":48},"end":{"line":754,"column":50}}],"line":754},"60":{"loc":{"start":{"line":769,"column":6},"end":{"line":771,"column":7}},"type":"if","locations":[{"start":{"line":769,"column":6},"end":{"line":771,"column":7}},{"start":{"line":769,"column":6},"end":{"line":771,"column":7}}],"line":769}},"s":{"0":1,"1":1,"2":0,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":2,"17":6,"18":6,"19":6,"20":6,"21":6,"22":0,"23":6,"24":6,"25":6,"26":6,"27":6,"28":6,"29":6,"30":0,"31":0,"32":0,"33":0,"34":0,"35":6,"36":38,"37":0,"38":38,"39":38,"40":10,"41":14,"42":1,"43":13,"44":10,"45":3,"46":3,"47":12,"48":1,"49":11,"50":11,"51":11,"52":6,"53":6,"54":6,"55":6,"56":6,"57":6,"58":6,"59":6,"60":6,"61":4,"62":0,"63":0,"64":0,"65":1,"66":24,"67":21,"68":3,"69":0,"70":3,"71":0,"72":39,"73":2,"74":39,"75":7,"76":7,"77":6,"78":3,"79":6,"80":2,"81":2,"82":2,"83":2,"84":2,"85":2,"86":1,"87":2,"88":2,"89":11,"90":11,"91":11,"92":11,"93":11,"94":7,"95":7,"96":0,"97":7,"98":7,"99":4,"100":4,"101":9,"102":4,"103":2,"104":2,"105":3,"106":3,"107":1,"108":1,"109":0,"110":1,"111":2,"112":2,"113":0,"114":3,"115":3,"116":3,"117":3,"118":3,"119":30,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":3,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":3,"140":1,"141":1,"142":3,"143":3,"144":3,"145":3,"146":3,"147":3,"148":3,"149":3,"150":3,"151":3,"152":2,"153":3,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":2,"167":2,"168":1,"169":1,"170":2,"171":2,"172":2,"173":2,"174":29,"175":29,"176":29,"177":29,"178":29,"179":31,"180":31,"181":29,"182":29,"183":2,"184":2,"185":29,"186":2,"187":27,"188":29,"189":29,"190":1,"191":28,"192":27,"193":25,"194":2,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":21,"209":21,"210":21,"211":6,"212":6,"213":6,"214":3,"215":3,"216":3,"217":8,"218":8,"219":5,"220":0,"221":5,"222":5,"223":2,"224":2,"225":0,"226":0,"227":0,"228":5,"229":5,"230":3,"231":2,"232":2,"233":2,"234":5,"235":5,"236":5,"237":5,"238":1,"239":4,"240":4,"241":4,"242":4,"243":1,"244":3,"245":3,"246":3,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":1,"254":1,"255":3,"256":3,"257":3,"258":3,"259":3,"260":4,"261":2,"262":2,"263":2,"264":2,"265":2,"266":6,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":0,"282":1,"283":1,"284":1,"285":1,"286":0,"287":1,"288":1,"289":1,"290":1,"291":1,"292":2,"293":1,"294":1,"295":1,"296":1,"297":1},"f":{"0":0,"1":2,"2":6,"3":0,"4":6,"5":0,"6":0,"7":38,"8":10,"9":14,"10":6,"11":4,"12":0,"13":0,"14":1,"15":24,"16":21,"17":3,"18":0,"19":39,"20":7,"21":6,"22":2,"23":2,"24":2,"25":2,"26":2,"27":11,"28":11,"29":11,"30":7,"31":9,"32":4,"33":2,"34":2,"35":3,"36":3,"37":30,"38":1,"39":1,"40":1,"41":3,"42":1,"43":1,"44":1,"45":1,"46":3,"47":1,"48":3,"49":3,"50":2,"51":1,"52":1,"53":1,"54":1,"55":1,"56":2,"57":1,"58":2,"59":2,"60":29,"61":29,"62":29,"63":29,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":21,"71":6,"72":3,"73":8,"74":2,"75":2,"76":5,"77":5,"78":0,"79":1,"80":1,"81":3,"82":3,"83":4,"84":2,"85":2,"86":6,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":0,"95":1,"96":1,"97":1},"b":{"0":[2,0],"1":[2,2],"2":[6,0],"3":[6,0],"4":[6,0],"5":[6,0],"6":[0,0],"7":[0,38],"8":[1,13],"9":[10,3],"10":[3,0],"11":[1,11],"12":[12,3],"13":[4],"14":[4],"15":[6,4],"16":[0,3],"17":[2,37],"18":[3,3],"19":[2],"20":[1,1],"21":[7,4],"22":[0,7],"23":[2],"24":[2],"25":[2],"26":[1,2],"27":[0,1],"28":[2,0],"29":[1,0],"30":[1,0],"31":[1],"32":[1],"33":[3,0],"34":[3,3],"35":[1,0],"36":[2,27],"37":[26,5],"38":[2,27],"39":[29,29,3],"40":[2,27],"41":[1,28],"42":[25,2],"43":[0],"44":[0,0],"45":[2],"46":[3],"47":[0,5],"48":[2,3],"49":[0,2],"50":[0,0],"51":[0,0],"52":[1,4],"53":[4,0],"54":[1,3],"55":[3,0],"56":[0,0],"57":[1],"58":[1],"59":[0,1],"60":[0,1]},"inputSourceMap":{"version":3,"sources":["index.ts"],"names":["marshalEmpty","Empty","marshalHashOrNumberToSingleBytes","hashOrNumber","Error","input","Block","decodeHash","length","singleBytes","SingleBytes","setValue","Uint8Array","from","AergoClient","constructor","config","provider","client","defaultProvider","accounts","Accounts","defaultProviderClass","setProvider","chainIdHash","undefined","getConfig","isConnected","grpcMethod","method","request","setChainIdHash","hash","base58","decode","setDefaultLimit","limit","defaultLimit","getChainIdHash","enc","blockchain","_this","unmarshal","response","Buffer","getBestChainIdHash_asU8","bestHeight","getBestHeight","bestBlockHash","encodeHash","getBestBlockHash_asU8","bestChainIdHash","chainInfo","ChainInfo","fromGrpc","getChainInfo","consensusInfo","JSON","parse","getConsensusInfo","getNodeState","component","timeout","marshal","params","NodeReq","setTimeout","setComponent","nodeState","getValue_asU8","toString","getTransaction","txhash","Promise","resolve","reject","getBlockTX","err","result","getTX","res","tx","SignedTx","block","getTxidx","getBlockhash_asU8","idx","getIdx","getTx","getBlock","getBlockMetadata","BlockMetadata","getBlockHeaders","size","offset","desc","ListParams","decodedHash","setHash","setHeight","setSize","setOffset","setAsc","listBlockHeaders","then","getBlocksList","map","item","getBlockStream","empty","stream","listBlockStream","on","error","code","e","ret","_stream","ev","callback","data","cancel","getBlockMetadataStream","listBlockMetadataStream","getBlockBody","paging","PageParams","BlockBodyParams","setHashornumber","getValue","setPaging","grpcObject","obj","toObject","body","txsList","getBody","getTxsList","Tx","getEventStream","filter","fi","FilterInfo","query","toGrpc","listEventStream","Event","getState","address","Address","asBytes","State","getNonce","sendSignedTransaction","txList","TxList","txs","Array","isArray","txCount","index","_tx","entries","addTxs","commitTX","getResultsList","getError","TransactionError","detail","message","hashes","getDetail","getHash_asU8","getTopVotes","count","id","VoteParams","setCount","setId","getVotes","state","getVotesList","amount","Amount","getAmount_asU8","candidate","encode","getCandidate_asU8","getAccountVotes","accountAddress","AccountAddress","getStaking","when","getWhen","getTransactionReceipt","getReceipt","contractaddress","getContractaddress_asU8","status","fee","getFeeused_asU8","cumulativefee","getCumulativefeeused_asU8","blockno","blockhash","feeDelegation","feedelegation","gasused","waitForTransactionReceipt","baseBackoffInterval","started","Date","retryCount","retryLoad","details","match","interval","elapsed","unit","elapsedFormat","Math","round","queryContract","functionCall","queryContractState","stateQuery","addr","getContractproof","getInclusion","list","getVarproofsList","varProof","storageKeys","value","queryContractStateProof","StateQueryProof","getEvents","listEvents","getEventsList","getABI","language","version","functions","functionsList","name","arguments","argumentsList","view","payable","stateVariablesList","getPeers","showself","showhidden","PeersParams","setNohidden","setShowself","getPeersList","peer","Peer","getNameInfo","nameObj","Name","setName","owner","getOwner_asU8","destination","getDestination_asU8","type","info","bpsList","getServerInfo","keys","KeyParams","setKeyList","configMap","Map","statusMap","key","set","propsMap"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/client","sourcesContent":["import { Buffer } from 'buffer';\nimport promisify from '../promisify';\nimport { errorMessageForCode, waterfall } from '../utils';\nimport {\n    fromNumber, backoffIntervalStep, waitFor, encodeBuffer, ByteEncoding,\n    Amount, base58, SignedAndHashedTxBody,\n} from '@herajs/common';\nimport { decodeTxHash, encodeTxHash } from '../transactions/utils';\nimport { TransactionError } from '../errors';\nimport Accounts from '../accounts';\nimport {\n    TxInBlock, Tx as GrpcTx,\n    TxList,\n    StateQueryProof as GrpcStateQueryProof,\n    ABI as GrpcABI,\n    Block as GrpcBlock,\n    Receipt as GrpcReceipt,\n} from '../../types/blockchain_pb';\nimport {\n    Empty, PeerList as GrpcPeerList, Peer as GrpcPeer,\n    BlockchainStatus as GrpcBlockchainStatus, CommitResultList,\n    Name, NameInfo, Staking, ChainInfo as GrpcChainInfo,\n    SingleBytes,\n    ListParams,\n    EventList,\n    PeersParams,\n    ConsensusInfo,\n    ServerInfo, KeyParams,\n    VoteParams, Vote,\n    NodeReq,\n    BlockMetadata as GrpcBlockMetadata,\n    BlockBodyParams, PageParams, BlockBodyPaged as GrpcBlockBodyPaged,\n    CommitStatus,\n    AccountAddress,\n} from '../../types/rpc_pb';\nimport {\n    Tx, Block, BlockMetadata,\n    Peer, State, ChainInfo, Event, StateQueryProof, FilterInfo\n} from '../models';\nimport { SignedTx } from '../models/tx';\nimport { Abi } from '../models/contract';\nimport { Address, AddressInput } from '../models/address';\nimport { FunctionCall, StateQuery } from '../models/contract';\nimport {\n    GetTxResult, GetReceiptResult, NameInfoResult, ConsensusInfoResult,\n    ServerInfoResult, BlockBodyPaged, Stream, BasicType, JsonData, BlockchainResult,\n    BatchTxResult,\n} from './types';\n\nexport { CommitStatus };\n\nasync function marshalEmpty(): Promise<Empty> {\n    return new Empty();\n}\n\nasync function marshalHashOrNumberToSingleBytes(hashOrNumber: string | number): Promise<SingleBytes> {\n    if (typeof hashOrNumber === 'undefined') {\n        throw new Error('Missing argument block hash or number');\n    }\n    let input;\n    if (typeof hashOrNumber === 'string') {\n        input = Block.decodeHash(hashOrNumber);\n    } else\n    if (typeof hashOrNumber === 'number') {\n        input = fromNumber(hashOrNumber);\n    }\n    if (input.length != 32 && input.length != 8) {\n        throw new Error('Invalid block hash. Must be 32 byte encoded in bs58. Did you mean to pass a block number?');\n    }\n    const singleBytes = new SingleBytes();\n    singleBytes.setValue(Uint8Array.from(input));\n    return singleBytes;\n}\n\n/**\n * Main aergo client controller.\n */\nclass AergoClient {\n    config: object;\n    client: any;\n    accounts: Accounts;\n    target: string;\n    private chainIdHash?: Uint8Array;\n    // @ts-ignore\n    private defaultLimit: number;\n    static defaultProviderClass?: { new (...args: any[]): any };\n    static platform = '';\n\n    /**\n     * Create a new auto-configured client with:\n     * \n     * .. code-block:: javascript\n     * \n     *     import AergoClient from '@herajs/client';\n     *     const aergo = new AergoClient();\n     * \n     * @param [object] configuration. Unused at the moment.\n     * @param [Provider] custom configured provider. By default a provider is configured automatically depending on the environment.\n     */\n    constructor (config = {}, provider: any = null) {\n        this.config = {\n            ...config\n        };\n        this.client = provider || this.defaultProvider();\n        this.accounts = new Accounts(this);\n    }\n\n    defaultProvider(): any {\n        // returns a new instance of defaultProviderClass\n        // which will be overriden during build according to platform\n        return new AergoClient.defaultProviderClass();\n    }\n\n    /**\n     * Set a new provider\n     * @param {Provider} provider\n     */\n    setProvider(provider): void {\n        this.client = provider;\n        this.chainIdHash = undefined;\n    }\n\n    getConfig(): any {\n        return this.config;\n    }\n\n    isConnected(): boolean {\n        // Legacy code for backwards compatability\n        return false;\n    }\n\n    grpcMethod<I, O>(method: Function): (request: I) => Promise<O> {\n        return (request: I) => promisify(method, this.client.client)(request);\n    }\n\n    /**\n     * Set the chain id hash to use for subsequent transactions.\n     * @param hash string (base58 encoded) or byte array\n     */\n    setChainIdHash(hash: string | Uint8Array): void {\n        if (typeof hash === 'string') {\n            this.chainIdHash = base58.decode(hash);\n        } else {\n            this.chainIdHash = hash;\n        }\n    }\n\n    /**\n     * Set the default gas limit to use for transactions that do not define their own.\n     */\n    setDefaultLimit(limit: number): void {\n        this.defaultLimit = limit;\n    }\n\n    /**\n     * Request chain id hash. This automatically gathers the chain id hash\n     * from the current node if not specified.\n     * @param enc set to 'base58' to retrieve the hash encoded in base58. Otherwise returns a Uint8Array.\n     * @returns {Promise<Uint8Array | string>} Uint8Array by default, base58 encoded string if enc = 'base58'.\n     */\n    //async getChainIdHash(enc?: 'base58'): Promise<string>;\n    //async getChainIdHash(enc?: '' | undefined): Promise<Uint8Array>;\n    async getChainIdHash(enc?: ByteEncoding): Promise<Uint8Array | string> {\n        if (typeof this.chainIdHash === 'undefined') {\n            // Fetch blockchain data to set chainIdHash\n            await this.blockchain();\n        }\n        return encodeBuffer(this.chainIdHash, enc);\n    }\n\n    /**\n     * Request current status of blockchain.\n     * @returns {Promise<object>} an object detailing the current status\n     */\n    blockchain(): Promise<BlockchainResult> {\n        const _this = this;\n        return waterfall([\n            marshalEmpty,\n            this.grpcMethod<Empty, GrpcBlockchainStatus>(this.client.client.blockchain),\n            async function unmarshal(response: GrpcBlockchainStatus): Promise<BlockchainResult> {\n                if (typeof _this.chainIdHash === 'undefined') {\n                    // set chainIdHash automatically\n                    _this.setChainIdHash(Buffer.from(response.getBestChainIdHash_asU8()));\n                }\n                return {\n                    bestHeight: response.getBestHeight(),\n                    bestBlockHash: Block.encodeHash(response.getBestBlockHash_asU8()),\n                    bestChainIdHash: Block.encodeHash(response.getBestChainIdHash_asU8()),\n                    chainInfo: ChainInfo.fromGrpc(response.getChainInfo()),\n                    consensusInfo: JSON.parse(response.getConsensusInfo()),\n                };\n            },\n        ])(null);\n    }\n\n    /**\n     * Request current status of blockchain.\n     * @returns {Promise<object>} an object detailing the current status\n     */\n    getChainInfo(): Promise<ChainInfo> {\n        return waterfall([\n            marshalEmpty,\n            this.grpcMethod<Empty, GrpcChainInfo>(this.client.client.getChainInfo),\n            async function unmarshal(response: GrpcChainInfo): Promise<ChainInfo> {\n                return ChainInfo.fromGrpc(response);\n            }\n        ])(null);\n    }\n\n    /**\n     * Request current status of node.\n     * @returns {Promise<any>} an object detailing the state of various node components\n     */\n    getNodeState(component?: string, timeout = 5): Promise<any> {\n        return waterfall([\n            async function marshal(component?: string): Promise<NodeReq> {\n                const params = new NodeReq();\n                params.setTimeout(fromNumber(timeout));\n                if (typeof component !== 'undefined') {\n                    params.setComponent(Buffer.from(component));\n                }\n                return params;\n            },\n            this.grpcMethod<NodeReq, SingleBytes>(this.client.client.nodeState),\n            async function unmarshal(response: SingleBytes): Promise<any> {\n                return JSON.parse(Buffer.from(response.getValue_asU8()).toString());\n            }\n        ])(component);\n    }\n\n    /**\n     * Get transaction information in the aergo node. \n     * If transaction is in the block return result with block hash and index.\n     * @param {string} txhash transaction hash\n     * @returns {Promise<object>} transaction details, object of tx: <Tx> and block: { hash, idx }\n     */\n    getTransaction(txhash: string): Promise<GetTxResult> {\n        const singleBytes = new SingleBytes();\n        singleBytes.setValue(Uint8Array.from(decodeTxHash(txhash)));\n        return new Promise((resolve, reject) => {\n            this.client.client.getBlockTX(singleBytes, (err, result: TxInBlock) => {\n                if (err) {\n                    this.client.client.getTX(singleBytes, (err, result: GrpcTx) => {\n                        if (err) {\n                            reject(err);\n                        } else {\n                            const res: GetTxResult = {\n                                tx: SignedTx.fromGrpc(result) as SignedTx,\n                            };\n                            resolve(res);\n                        }\n                    });\n                } else {\n                    const res: GetTxResult = {\n                        block: {\n                            hash: Block.encodeHash(result.getTxidx().getBlockhash_asU8()),\n                            idx: result.getTxidx().getIdx(),\n                        },\n                        tx: SignedTx.fromGrpc(result.getTx()) as SignedTx,\n                    };\n                    resolve(res);\n                }\n            });\n        });\n    }\n\n    /**\n     * Retrieve information about a block.\n     * \n     * @param hashOrNumber either 32-byte block hash encoded as a bs58 string or block height as a number.\n     * @returns block details\n     */\n    getBlock(hashOrNumber: string | number): Promise<Block> {\n        return waterfall([\n            marshalHashOrNumberToSingleBytes,\n            this.grpcMethod<SingleBytes, GrpcBlock>(this.client.client.getBlock),\n            async function unmarshal(response: GrpcBlock): Promise<Block> {\n                return Block.fromGrpc(response);\n            }\n        ])(hashOrNumber);\n    }\n\n    /**\n     * Retrieve block metadata (excluding body).\n     * \n     * @param hashOrNumber either 32-byte block hash encoded as a bs58 string or block height as a number.\n     * @returns block metadata\n     */\n    getBlockMetadata(hashOrNumber: string | number): Promise<BlockMetadata> {\n        return waterfall([\n            marshalHashOrNumberToSingleBytes,\n            this.grpcMethod<SingleBytes, GrpcBlockMetadata>(this.client.client.getBlockMetadata),\n            async function unmarshal(response: GrpcBlockMetadata): Promise<BlockMetadata> {\n                return BlockMetadata.fromGrpc(response);\n            }\n        ])(hashOrNumber);\n    }\n\n    /**\n     * Retrieve the last n blocks, beginning from given block\n     * \n     * @param {string|number} hashOrNumber either 32-byte block hash encoded as a bs58 string or block height as a number.\n     * @param {number} size number of blocks to return\n     * @param {number} offset number of blocks to skip\n     * @param {boolean} desc order of blocks\n     * @returns {Promise<Block[]>} list of block headers (blocks without body)\n     */\n    getBlockHeaders(hashOrNumber: string | number, size = 10, offset = 0, desc = true): Promise<Block[]> {\n        const params = new ListParams();\n        if (typeof hashOrNumber === 'string') {\n            const decodedHash = Block.decodeHash(hashOrNumber);\n            if (decodedHash.length != 32) {\n                throw new Error('Invalid block hash. Must be 32 byte encoded in bs58. Did you mean to pass a block number?');\n            }\n            params.setHash(Uint8Array.from(decodedHash));\n        } else\n        if (typeof hashOrNumber === 'number') {\n            params.setHeight(hashOrNumber);\n        } else {\n            throw new Error('Block hash or number required.');\n        }\n        params.setSize(size);\n        params.setOffset(offset);\n        params.setAsc(!desc);\n        return promisify(this.client.client.listBlockHeaders, this.client.client)(params).then(result => {\n            return result.getBlocksList().map(item => Block.fromGrpc(item));\n        });\n    }\n\n    getBlockStream(): Stream<Block> {\n        const empty = new Empty();\n        const stream = this.client.client.listBlockStream(empty);\n        try {\n            stream.on('error', (error) => {\n                if (error.code === 1) { // grpc.status.CANCELLED\n                    return;\n                }\n            });\n        } catch (e) {\n            // ignore. 'error' does not work on grpc-web implementation\n        }\n        const ret: Stream<Block> = {\n            _stream: stream,\n            on: (ev, callback) => stream.on(ev, data => callback(Block.fromGrpc(data))),\n            cancel: () => stream.cancel()\n        };\n        return ret;\n    }\n\n    /**\n     * Returns a stream of block metadata\n     */\n    getBlockMetadataStream(): Stream<BlockMetadata> {\n        const empty = new Empty();\n        const stream = this.client.client.listBlockMetadataStream(empty);\n        try {\n            stream.on('error', (error) => {\n                if (error.code === 1) { // grpc.status.CANCELLED\n                    return;\n                }\n            });\n        } catch (e) {\n            // ignore. 'error' does not work on grpc-web implementation\n        }\n        const ret: Stream<BlockMetadata> = {\n            _stream: stream,\n            on: (ev, callback) => stream.on(ev, data => callback(BlockMetadata.fromGrpc(data))),\n            cancel: () => stream.cancel()\n        };\n        return ret;\n    }\n\n    /**\n     * Get the transactions of a block in a paged manner\n     * @param hash \n     * @param offset \n     * @param size \n     */\n    async getBlockBody(hashOrNumber: string|number, offset = 0, size = 10): Promise<BlockBodyPaged> {\n        const paging = new PageParams();\n        paging.setOffset(offset);\n        paging.setSize(size);\n        const params = new BlockBodyParams();\n        params.setHashornumber((await marshalHashOrNumberToSingleBytes(hashOrNumber)).getValue());\n        params.setPaging(paging);\n        return await promisify(this.client.client.getBlockBody, this.client.client)(params).then((grpcObject: GrpcBlockBodyPaged) => {\n            const obj = grpcObject.toObject();\n            if (obj.body && obj.body.txsList) {\n                // @ts-ignore\n                obj.body.txsList = grpcObject.getBody().getTxsList().map(tx => Tx.fromGrpc(tx));\n            }\n            return obj as BlockBodyPaged;\n        });\n    }\n\n    /**\n     * Returns a stream that yields new events matching the specified filter in real-time.\n     * \n     * .. code-block:: javascript\n     * \n     *      const stream = aergo.getEventStream({\n     *          address: 'Am....'\n     *      });\n     *      stream.on('data', (event) => {\n     *         console.log(event);\n     *         stream.cancel();\n     *      });\n     * \n     * @param {FilterInfo} filter :class:`FilterInfo`\n     * @returns {Stream<Event>} event stream\n     */\n    getEventStream(filter: Partial<FilterInfo>): Stream<Event> {\n        const fi = new FilterInfo(filter);\n        const query = fi.toGrpc();\n        const stream = this.client.client.listEventStream(query);\n        try {\n            stream.on('error', (error) => {\n                if (error.code === 1) { // grpc.status.CANCELLED\n                    return;\n                }\n            });\n        } catch (e) {\n            // ignore. 'error' does not work on grpc-web implementation\n        }\n        const ret: Stream<Event> = {\n            _stream: stream,\n            on: (ev, callback) => stream.on(ev, data => callback(Event.fromGrpc(data))),\n            cancel: () => stream.cancel()\n        };\n        return ret;\n    }\n    \n    \n    /**\n     * Retrieve account state, including current balance and nonce.\n     * @param {string} address Account address encoded in Base58check\n     * @returns {Promise<object>} account state\n     */\n    getState(address: AddressInput): Promise<State> {\n        const singleBytes = new SingleBytes();\n        singleBytes.setValue(Uint8Array.from((new Address(address)).asBytes()));\n        return promisify(this.client.client.getState, this.client.client)(singleBytes).then(grpcObject => State.fromGrpc(grpcObject));\n    }\n    \n    /**\n     * Retrieve account's most recenlty used nonce.\n     * This is a shortcut function as the same information is also returned by getState.\n     * @param {string} address Account address encoded in Base58check\n     * @returns {Promise<object>} account state\n     */\n    getNonce(address: AddressInput): Promise<number> {\n        const singleBytes = new SingleBytes();\n        singleBytes.setValue(Uint8Array.from((new Address(address)).asBytes()));\n        return promisify(this.client.client.getState, this.client.client)(singleBytes).then(grpcObject => grpcObject.getNonce());\n    }\n\n    /**\n     * Send one or more signed transaction to the network.\n     * @param {Tx} tx signed transaction or array of multiple signed transactions\n     * @returns {Promise<string>} transaction hash\n     */\n    sendSignedTransaction(tx: Tx|SignedAndHashedTxBody): Promise<string>;\n    sendSignedTransaction(tx: (Tx|SignedAndHashedTxBody)[]): Promise<BatchTxResult[]>;\n    sendSignedTransaction(tx: (Tx|SignedAndHashedTxBody) | (Tx|SignedAndHashedTxBody)[]): Promise<string | BatchTxResult[]> {\n        return new Promise((resolve, reject) => {\n            const txList = new TxList();\n            const txs = Array.isArray(tx) ? tx : [tx];\n            const txCount = txs.length;\n            for (const [index, _tx] of txs.entries()) {\n                const tx = (_tx instanceof Tx) ? _tx : new Tx(_tx);\n                txList.addTxs(tx.toGrpc(), index);\n            }\n            this.client.client.commitTX(txList, (err: Error, result: CommitResultList) => {\n                if (err == null && result.getResultsList()[0].getError() && txCount === 1) {\n                    const obj = result.getResultsList()[0].toObject();\n                    err = new TransactionError(errorMessageForCode(obj.error) + ': ' + obj.detail);\n                }\n                if (err) {\n                    reject(new TransactionError(err.message));\n                } else {\n                    const hashes = result.getResultsList().map((res) => {\n                        const error = res.getError();\n                        if (error) {\n                            return {\n                                error: errorMessageForCode(error) + ': ' + res.getDetail(),\n                            };\n                        }\n                        return {\n                            hash: encodeTxHash(res.getHash_asU8()),\n                        };\n                    });\n                    if (txCount === 1) {\n                        resolve(hashes[0].hash);\n                    } else {\n                        resolve(hashes);\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Return the top {count} result for a vote\n     * @param count number\n     * @param id vote identifier, default: voteBP\n     */\n    getTopVotes(count: number, id = 'voteBP'): Promise<any> {\n        const params = new VoteParams();\n        params.setCount(count);\n        params.setId(id);\n        return promisify(this.client.client.getVotes, this.client.client)(params).then(\n            state => state.getVotesList().map((item: Vote) => ({\n                amount: new Amount(item.getAmount_asU8()),\n                candidate: id === 'voteBP' ? base58.encode(Buffer.from(item.getCandidate_asU8())) : Buffer.from(item.getCandidate_asU8()).toString(),\n            }))\n        );\n    }\n    /**\n     * Return the top voted-for block producer or system parameter\n     * @param address string\n     */\n    getAccountVotes(address: AddressInput): Promise<any> {\n        const accountAddress = new AccountAddress();\n        accountAddress.setValue(Uint8Array.from((new Address(address)).asBytes()));\n        return promisify(this.client.client.getAccountVotes, this.client.client)(accountAddress);\n    }\n\n    /**\n     * Return information for account name\n     * @param {string} address Account address encoded in Base58check\n     */\n    getStaking(address: AddressInput): Promise<Staking.AsObject> {\n        const singleBytes = new SingleBytes();\n        singleBytes.setValue(Uint8Array.from((new Address(address)).asBytes()));\n        return promisify(this.client.client.getStaking, this.client.client)(singleBytes).then(\n            (grpcObject: Staking) => {\n                return {\n                    amount: new Amount(grpcObject.getAmount_asU8()),\n                    when: grpcObject.getWhen()\n                };\n            }\n        );\n    }\n\n    /**\n     * Retrieve the transaction receipt for a transaction\n     * @param {string} txhash transaction hash\n     * @return {Promise<object>} transaction receipt\n     */\n    getTransactionReceipt(txhash: string): Promise<GetReceiptResult> {\n        const singleBytes = new SingleBytes();\n        singleBytes.setValue(Uint8Array.from(decodeTxHash(txhash)));\n        return promisify(this.client.client.getReceipt, this.client.client)(singleBytes).then((grpcObject: GrpcReceipt) => {\n            const obj = grpcObject.toObject();\n            const ret: GetReceiptResult = {\n                contractaddress: new Address(grpcObject.getContractaddress_asU8()),\n                result: obj.ret,\n                status: obj.status,\n                fee: new Amount(grpcObject.getFeeused_asU8()),\n                cumulativefee: new Amount(grpcObject.getCumulativefeeused_asU8()),\n                blockno: obj.blockno,\n                blockhash: Block.encodeHash(grpcObject.getBlockhash_asU8()),\n                feeDelegation: obj.feedelegation,\n                gasused: obj.gasused,\n            };\n            return ret;\n        });\n    }\n\n    /**\n     * Retrieve the transaction receipt for a transaction, but keep retrying if not available yet.\n     * Uses expoinential backoff and a final timeout.\n     * @param {string} txhash transaction hash\n     * @param {number} timeout throws error when timeout is reached\n     * @param {number} baseBackoffInterval base time for exponentail backoff\n     * @return {Promise<object>} transaction receipt\n     */\n    waitForTransactionReceipt(txhash: string, timeout = 0, baseBackoffInterval = 500): Promise<GetReceiptResult> {\n        const started = new Date();\n        let retryCount = 0;\n        const retryLoad = async (): Promise<GetReceiptResult> => {\n            try {\n                return await this.getTransactionReceipt(txhash);\n            } catch(e) {\n                if (!(e.details as string).match(/tx not found/)) {\n                    throw e;\n                }\n                const interval = backoffIntervalStep(retryCount++, baseBackoffInterval);\n                if (timeout) {\n                    const elapsed = +new Date() - (+started);\n                    if (elapsed + interval >= timeout) {\n                        const unit = elapsed < 1000 ? 'ms' : 's';\n                        const elapsedFormat = elapsed < 1000 ? elapsed : Math.round(elapsed / 100) / 10;\n                        throw new Error(`timeout after ${elapsedFormat}${unit}: tx not found`);\n                    }\n                }\n                await waitFor(interval);\n                return await retryLoad();\n            }\n        };\n        return retryLoad();\n    }\n\n    /**\n     * Query contract ABI\n     * @param {FunctionCall} functionCall call details\n     * @returns {Promise<object>} result of query\n     */\n    queryContract(functionCall: FunctionCall): Promise<any> {\n        const query = functionCall.toGrpc();\n        return promisify(this.client.client.queryContract, this.client.client)(query).then(\n            grpcObject => JSON.parse(Buffer.from(grpcObject.getValue()).toString())\n        );\n    }\n\n    /**\n     * Query contract state.\n     * This only works for variables explicitly defines as state variables.\n     * Throws when contract do not exist, or when variable does not exist when requesting single key.\n     * @param {StateQuery} stateQuery query details obtained from contract.queryState()\n     * @returns {Promise<JsonData>} result of query: single value if requesting one key, list of values when requesting multiple keys.\n     */\n    queryContractState(stateQuery: StateQuery): Promise<JsonData | BasicType> {\n        const query = stateQuery.toGrpc();\n        return promisify(this.client.client.queryContractState, this.client.client)(query).then(\n            (grpcObject: GrpcStateQueryProof) => {\n                const addr = new Address(query.getContractaddress_asU8());\n                if (grpcObject.getContractproof().getInclusion() === false) {\n                    throw Error(`contract does not exist at address ${addr.toString()}`);\n                }\n                const list = grpcObject.getVarproofsList();\n                if (list.length === 1) {\n                    const varProof = list[0];\n                    if (varProof.getInclusion() === false) {\n                        throw Error(`queried variable 0x${Buffer.from(stateQuery.storageKeys[0] as any).toString('hex')} does not exist in state at address ${addr.toString()}`);\n                    }\n                    const value = varProof.getValue_asU8();\n                    if (value.length > 0) {\n                        return JSON.parse(Buffer.from(value).toString());\n                    }\n                }\n                return list.map(varProof => {\n                    const value = varProof.getValue_asU8();\n                    if (value.length > 0) {\n                        return JSON.parse(Buffer.from(value).toString());\n                    }\n                    return void 0;\n                });\n            }\n        );\n    }\n\n    /**\n     * Query contract state, including proofs.\n     * This only works vor variables explicitly defines as state variables.\n     * @param {StateQuery} stateQuery query details obtained from contract.queryState()\n     * @returns {Promise<StateQueryProof>} result of query, including account and var proofs\n     */\n    queryContractStateProof(stateQuery: StateQuery): Promise<StateQueryProof> {\n        const query = stateQuery.toGrpc();\n        return promisify(this.client.client.queryContractState, this.client.client)(query).then(\n            (grpcObject: GrpcStateQueryProof) => StateQueryProof.fromGrpc(grpcObject)\n        );\n    }\n\n    /**\n     * Query contract state\n     * This only works vor variables explicitly defines as state variables.\n     * @param {FilterInfo} filter :class:`FilterInfo`\n     * @returns {Event[]} list of events\n     */\n    getEvents(filter: Partial<FilterInfo>): Promise<Event[]> {\n        const fi = new FilterInfo(filter);\n        const query = fi.toGrpc();\n        return promisify(this.client.client.listEvents, this.client.client)(query).then(\n            (grpcObject: EventList) => {\n                const list = grpcObject.getEventsList();\n                return list.map(item => Event.fromGrpc(item));\n            }\n        );\n    }\n\n    /**\n     * Query contract ABI\n     * @param {string} address of contract\n     * @returns {Promise<object>} abi\n     */\n    getABI(address: AddressInput): Promise<Abi> {\n        const singleBytes = new SingleBytes();\n        singleBytes.setValue(Uint8Array.from((new Address(address)).asBytes()));\n        return promisify(this.client.client.getABI, this.client.client)(singleBytes).then(\n            (grpcObject: GrpcABI) => {\n                const obj = grpcObject.toObject();\n                return {\n                    language: obj.language,\n                    version: obj.version,\n                    functions: obj.functionsList.map(item => ({\n                        name: item.name,\n                        arguments: item.argumentsList,\n                        view: item.view,\n                        payable: item.payable,\n                        feeDelegation: item.feeDelegation,\n                    })),\n                    'state_variables': obj.stateVariablesList\n                };\n            }\n        );\n    }\n\n    /**\n     * Get list of peers of connected node\n     */\n    getPeers(showself = true, showhidden = true): Promise<Peer[]> {\n        const query = new PeersParams();\n        query.setNohidden(!showhidden);\n        query.setShowself(showself);\n        return promisify(this.client.client.getPeers, this.client.client)(query).then(\n            (grpcObject: GrpcPeerList): Peer[] => grpcObject.getPeersList().map(\n                (peer: GrpcPeer): Peer => Peer.fromGrpc(peer)\n            )\n        );\n    }\n\n    /**\n     * Return information for account name\n     * @param name \n     */\n    getNameInfo(name: string): Promise<NameInfoResult> {\n        const nameObj = new Name();\n        nameObj.setName(name);\n        return promisify(this.client.client.getNameInfo, this.client.client)(nameObj).then(\n            (grpcObject: NameInfo): NameInfoResult => {\n                const obj = grpcObject.toObject();\n                return {\n                    name: obj.name.name,\n                    owner: new Address(grpcObject.getOwner_asU8()),\n                    destination: new Address(grpcObject.getDestination_asU8())\n                };\n            }\n        );\n    }\n\n    /**\n     * Return consensus info. The included fields can differ by consensus type.\n     */\n    getConsensusInfo(): Promise<ConsensusInfoResult> {\n        return waterfall([\n            marshalEmpty,\n            this.grpcMethod<Empty, ConsensusInfo>(this.client.client.getConsensusInfo),\n            async function unmarshal(response: ConsensusInfo): Promise<ConsensusInfoResult> {\n                const obj = response.toObject();\n                const result: ConsensusInfoResult = {\n                    type: obj.type,\n                    info: obj.info ? JSON.parse(obj.info) : {},\n                    bpsList: obj.bpsList.map(info => JSON.parse(info))\n                };\n                return result;\n            }\n        ])(null);\n    }\n\n    /**\n     * Return server info\n     */\n    getServerInfo(keys?: string[]): Promise<ServerInfoResult> {\n        return waterfall([\n            async function marshal(keys?: string[]): Promise<KeyParams> {\n                const params = new KeyParams();\n                if (typeof keys !== 'undefined') {\n                    params.setKeyList(keys);\n                }\n                return params;\n            },\n            this.grpcMethod<KeyParams, ServerInfo>(this.client.client.getServerInfo),\n            async function unmarshal(response: ServerInfo): Promise<ServerInfoResult> {\n                const obj = response.toObject();\n                const result: ServerInfoResult = {\n                    configMap: new Map<string, Map<string, string>>(),\n                    statusMap: new Map<string, string>(obj.statusMap)\n                };\n                const configMap = new Map(obj.configMap);\n                for (const [key, item] of configMap) {\n                    result.configMap.set(key, new Map(item.propsMap));\n                }\n                return result;\n                \n            }\n        ])(keys);\n    }\n}\n\nexport default AergoClient;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5b34822880087c91301ddec7d2e80cee7b8da055","contentHash":"7840c1a67c47c1d5ca5465d49f5f2ef91e14976f21634982b46de0c9fcb582fb"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/promisify.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/promisify.js","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":103}},"2":{"start":{"line":1,"column":137},"end":{"line":5,"column":6}},"3":{"start":{"line":1,"column":155},"end":{"line":5,"column":6}},"4":{"start":{"line":3,"column":2},"end":{"line":3,"column":76}},"5":{"start":{"line":4,"column":2},"end":{"line":4,"column":21}},"6":{"start":{"line":7,"column":33},"end":{"line":7,"column":64}},"7":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":19}},"9":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"11":{"start":{"line":18,"column":4},"end":{"line":25,"column":7}},"12":{"start":{"line":19,"column":6},"end":{"line":24,"column":9}},"13":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"14":{"start":{"line":21,"column":10},"end":{"line":21,"column":29}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":23}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":61}},"17":{"start":{"line":30,"column":2},"end":{"line":31,"column":73}},"18":{"start":{"line":33,"column":2},"end":{"line":35,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":137},"end":{"line":1,"column":138}},"loc":{"start":{"line":1,"column":155},"end":{"line":5,"column":6}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":2,"column":0},"end":{"line":2,"column":1}},"loc":{"start":{"line":2,"column":23},"end":{"line":5,"column":1}},"line":2},"2":{"name":"promisify","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":18}},"loc":{"start":{"line":9,"column":38},"end":{"line":37,"column":1}},"line":9},"3":{"name":"fn","decl":{"start":{"line":17,"column":11},"end":{"line":17,"column":13}},"loc":{"start":{"line":17,"column":23},"end":{"line":26,"column":3}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":23},"end":{"line":18,"column":24}},"loc":{"start":{"line":18,"column":44},"end":{"line":25,"column":5}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":38},"end":{"line":19,"column":39}},"loc":{"start":{"line":19,"column":54},"end":{"line":24,"column":7}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},{"start":{"line":10,"column":2},"end":{"line":12,"column":3}}],"line":10},"1":{"loc":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},{"start":{"line":13,"column":2},"end":{"line":15,"column":3}}],"line":13},"2":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":102,"4":1316,"5":1316,"6":1,"7":102,"8":0,"9":102,"10":0,"11":102,"12":102,"13":102,"14":18,"15":84,"16":102,"17":102,"18":102},"f":{"0":102,"1":1316,"2":102,"3":102,"4":102,"5":102},"b":{"0":[0,102],"1":[0,102],"2":[18,84]},"inputSourceMap":{"version":3,"sources":["promisify.js"],"names":["getOwnPropertyDescriptors","originalObject","Object","getOwnPropertyNames","reduce","descriptors","name","getOwnPropertyDescriptor","kCustomPromisifiedSymbol","Symbol","promisify","original","context","Error","fn","args","Promise","resolve","reject","call","err","value","setPrototypeOf","getPrototypeOf","defineProperty","enumerable","writable","configurable","defineProperties"],"mappings":"uGAAA,MAAMA,yBAAyB,GAAGC,cAAc,IAAIC,MAAM,CAACC,mBAAP,CAA2BF,cAA3B,EAA2CG,MAA3C;AAChD,CAACC,WAAD,EAAcC,IAAd,KAAuB;AACnBD,EAAAA,WAAW,CAACC,IAAD,CAAX,GAAoBJ,MAAM,CAACK,wBAAP,CAAgCN,cAAhC,EAAgDK,IAAhD,CAApB;AACA,SAAOD,WAAP;AACH,CAJ+C,EAI7C,EAJ6C,CAApD;;AAMA,MAAMG,wBAAwB,GAAGC,MAAM,CAAC,uBAAD,CAAvC;;AAEe,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,OAA7B,EAAsC;AACjD,MAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AAChCA,IAAAA,OAAO,GAAG,IAAV;AACH;AACD,MAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAChC,UAAM,IAAIE,KAAJ,CAAU,4BAAV,EAAwC,UAAxC,EAAoDF,QAApD,CAAN;AACH;;AAED,WAASG,EAAT,CAAY,GAAGC,IAAf,EAAqB;AACjB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCP,MAAAA,QAAQ,CAACQ,IAAT,CAAcP,OAAd,EAAuB,GAAGG,IAA1B,EAAgC,CAACK,GAAD,EAAMC,KAAN,KAAgB;AAC5C,YAAID,GAAJ,EAAS;AACL,iBAAOF,MAAM,CAACE,GAAD,CAAb;AACH;AACDH,QAAAA,OAAO,CAACI,KAAD,CAAP;AACH,OALD;AAMH,KAPM,CAAP;AAQH;;AAEDnB,EAAAA,MAAM,CAACoB,cAAP,CAAsBR,EAAtB,EAA0BZ,MAAM,CAACqB,cAAP,CAAsBZ,QAAtB,CAA1B;;AAEAT,EAAAA,MAAM,CAACsB,cAAP,CAAsBV,EAAtB,EAA0BN,wBAA1B,EAAoD;AAChDa,IAAAA,KAAK,EAAEP,EADyC,EACrCW,UAAU,EAAE,KADyB,EAClBC,QAAQ,EAAE,KADQ,EACDC,YAAY,EAAE,IADb,EAApD;;AAGA,SAAOzB,MAAM,CAAC0B,gBAAP;AACHd,EAAAA,EADG;AAEHd,EAAAA,yBAAyB,CAACW,QAAD,CAFtB,CAAP;;AAIH","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src","sourcesContent":["const getOwnPropertyDescriptors = originalObject => Object.getOwnPropertyNames(originalObject).reduce(\n    (descriptors, name) => {\n        descriptors[name] = Object.getOwnPropertyDescriptor(originalObject, name);\n        return descriptors;\n    }, {});\n\nconst kCustomPromisifiedSymbol = Symbol('util.promisify.custom');\n\nexport default function promisify(original, context) {\n    if (typeof context === 'undefined') {\n        context = this;\n    }\n    if (typeof original !== 'function') {\n        throw new Error('original is not a function', 'Function', original);\n    }\n\n    function fn(...args) {\n        return new Promise((resolve, reject) => {\n            original.call(context, ...args, (err, value) => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(value);\n            });\n        });\n    }\n  \n    Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n  \n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n        value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return Object.defineProperties(\n        fn,\n        getOwnPropertyDescriptors(original)\n    );\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"55ea5d0b015adfb7debde810a6f62317c708d3a1","contentHash":"61007de3a3c5faab3a079935a01d4554fe1a4139fe6dc05a1a47726e81af2478"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/utils.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/utils.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":105}},"2":{"start":{"line":1,"column":105},"end":{"line":1,"column":164}},"3":{"start":{"line":1,"column":178},"end":{"line":1,"column":204}},"4":{"start":{"line":3,"column":28},"end":{"line":9,"column":1}},"5":{"start":{"line":4,"column":21},"end":{"line":4,"column":38}},"6":{"start":{"line":5,"column":2},"end":{"line":7,"column":3}},"7":{"start":{"line":6,"column":4},"end":{"line":6,"column":104}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":22}},"9":{"start":{"line":9,"column":2},"end":{"line":9,"column":52}},"10":{"start":{"line":11,"column":16},"end":{"line":15,"column":1}},"11":{"start":{"line":12,"column":2},"end":{"line":14,"column":5}},"12":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"13":{"start":{"line":16,"column":19},"end":{"line":16,"column":62}},"14":{"start":{"line":16,"column":29},"end":{"line":16,"column":62}},"15":{"start":{"line":24,"column":20},"end":{"line":49,"column":1}},"16":{"start":{"line":25,"column":18},"end":{"line":25,"column":29}},"17":{"start":{"line":26,"column":18},"end":{"line":26,"column":20}},"18":{"start":{"line":27,"column":2},"end":{"line":41,"column":3}},"19":{"start":{"line":28,"column":19},"end":{"line":28,"column":31}},"20":{"start":{"line":29,"column":4},"end":{"line":37,"column":5}},"21":{"start":{"line":31,"column":6},"end":{"line":35,"column":7}},"22":{"start":{"line":32,"column":8},"end":{"line":32,"column":43}},"23":{"start":{"line":34,"column":8},"end":{"line":34,"column":35}},"24":{"start":{"line":36,"column":6},"end":{"line":36,"column":79}},"25":{"start":{"line":38,"column":4},"end":{"line":38,"column":18}},"26":{"start":{"line":40,"column":4},"end":{"line":40,"column":18}},"27":{"start":{"line":42,"column":21},"end":{"line":42,"column":42}},"28":{"start":{"line":43,"column":2},"end":{"line":43,"column":24}},"29":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"30":{"start":{"line":45,"column":4},"end":{"line":45,"column":60}},"31":{"start":{"line":47,"column":2},"end":{"line":47,"column":22}},"32":{"start":{"line":48,"column":2},"end":{"line":48,"column":62}},"33":{"start":{"line":49,"column":2},"end":{"line":49,"column":36}},"34":{"start":{"line":59,"column":2},"end":{"line":65,"column":4}},"35":{"start":{"line":60,"column":17},"end":{"line":60,"column":22}},"36":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"37":{"start":{"line":62,"column":6},"end":{"line":62,"column":32}},"38":{"start":{"line":64,"column":4},"end":{"line":64,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":28},"end":{"line":3,"column":29}},"loc":{"start":{"line":3,"column":36},"end":{"line":9,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":16},"end":{"line":11,"column":17}},"loc":{"start":{"line":11,"column":22},"end":{"line":15,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":21},"end":{"line":12,"column":22}},"loc":{"start":{"line":12,"column":32},"end":{"line":14,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":19},"end":{"line":16,"column":20}},"loc":{"start":{"line":16,"column":29},"end":{"line":16,"column":62}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":20},"end":{"line":24,"column":21}},"loc":{"start":{"line":24,"column":85},"end":{"line":49,"column":1}},"line":24},"5":{"name":"waterfall","decl":{"start":{"line":58,"column":9},"end":{"line":58,"column":18}},"loc":{"start":{"line":58,"column":24},"end":{"line":66,"column":1}},"line":58},"6":{"name":"(anonymous_6)","decl":{"start":{"line":59,"column":9},"end":{"line":59,"column":10}},"loc":{"start":{"line":59,"column":32},"end":{"line":65,"column":3}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":2},"end":{"line":7,"column":3}},"type":"if","locations":[{"start":{"line":5,"column":2},"end":{"line":7,"column":3}},{"start":{"line":5,"column":2},"end":{"line":7,"column":3}}],"line":5},"1":{"loc":{"start":{"line":5,"column":6},"end":{"line":5,"column":63}},"type":"binary-expr","locations":[{"start":{"line":5,"column":6},"end":{"line":5,"column":10}},{"start":{"line":5,"column":14},"end":{"line":5,"column":63}}],"line":5},"2":{"loc":{"start":{"line":24,"column":33},"end":{"line":24,"column":51}},"type":"default-arg","locations":[{"start":{"line":24,"column":41},"end":{"line":24,"column":51}}],"line":24},"3":{"loc":{"start":{"line":24,"column":53},"end":{"line":24,"column":68}},"type":"default-arg","locations":[{"start":{"line":24,"column":63},"end":{"line":24,"column":68}}],"line":24},"4":{"loc":{"start":{"line":24,"column":70},"end":{"line":24,"column":80}},"type":"default-arg","locations":[{"start":{"line":24,"column":77},"end":{"line":24,"column":80}}],"line":24},"5":{"loc":{"start":{"line":29,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":37,"column":5}},{"start":{"line":29,"column":4},"end":{"line":37,"column":5}}],"line":29},"6":{"loc":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},{"start":{"line":44,"column":2},"end":{"line":46,"column":3}}],"line":44}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":2,"8":4,"9":1,"10":1,"11":14,"12":14,"13":1,"14":2,"15":1,"16":20,"17":20,"18":20,"19":20,"20":10,"21":4,"22":4,"23":0,"24":4,"25":6,"26":14,"27":14,"28":14,"29":14,"30":0,"31":14,"32":14,"33":1,"34":24,"35":24,"36":24,"37":63,"38":18},"f":{"0":4,"1":14,"2":14,"3":2,"4":20,"5":24,"6":24},"b":{"0":[2,2],"1":[4,4],"2":[2],"3":[2],"4":[6],"5":[4,6],"6":[0,14]},"inputSourceMap":{"version":3,"sources":["utils.ts"],"names":["errorMessageForCode","code","errorMessage","Object","values","CommitStatus","length","keys","indexOf","waitFor","ms","Promise","resolve","setTimeout","basicCheck","result","Error","longPolling","func","check","timeout","wait","started","Date","lastError","resultStr","JSON","stringify","e","timePassed","waterfall","fns","input","fn"],"mappings":"oKAAA;;AAEO,MAAMA,mBAAmB,GAAIC,IAAD,IAA0B;AACzD,MAAIC,YAAY,GAAG,iBAAnB;AACA,MAAID,IAAI,IAAIA,IAAI,GAAGE,MAAM,CAACC,MAAP,CAAcC,oBAAd,EAA4BC,MAA/C,EAAuD;AACnDJ,IAAAA,YAAY,GAAGC,MAAM,CAACI,IAAP,CAAYF,oBAAZ,EAA0BF,MAAM,CAACC,MAAP,CAAcC,oBAAd,EAA4BG,OAA5B,CAAoCP,IAApC,CAA1B,CAAf;AACH;AACD,SAAOC,YAAP;AACH,CANM,C;;AAQP,MAAMO,OAAO,GAAIC,EAAD,IAA+B;AAC3C,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AACH,GAFM,CAAP;AAGH,CAJD;AAKA,MAAMI,UAAU,GAAOC,MAAJ,IAA2BA,MAAM,YAAYC,KAAlB,KAA4B,KAA1E;AACA;;;;;;;AAOO,MAAMC,WAAW,GAAG,OAAUC,IAAV,EAAkCC,KAAK,GAAGL,UAA1C,EAAsDM,OAAO,GAAG,KAAhE,EAAuEC,IAAI,GAAG,GAA9E,KAAkG;AACzH,QAAMC,OAAO,GAAG,CAAE,IAAIC,IAAJ,EAAlB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAI;AACA,UAAMT,MAAM,GAAG,MAAMG,IAAI,EAAzB;AACA,QAAI,CAACC,KAAK,CAACJ,MAAD,CAAV,EAAoB;AAChB,UAAIU,SAAJ;AACA,UAAI;AACAA,QAAAA,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeZ,MAAf,CAAZ;AACH,OAFD,CAEE,OAAMa,CAAN,EAAS;AACPH,QAAAA,SAAS,GAAG,KAAKA,SAAjB;AACH;AACD,YAAM,IAAIT,KAAJ,CAAU,8CAA8CS,SAAxD,CAAN;AACH;AACD,WAAOV,MAAP;AACH,GAZD,CAYE,OAAMa,CAAN,EAAS;AACPJ,IAAAA,SAAS,GAAGI,CAAZ;AACH;AACD,QAAMC,UAAU,GAAG,CAAE,IAAIN,IAAJ,EAAF,GAAeD,OAAlC;AACAF,EAAAA,OAAO,IAAIS,UAAX;AACA,MAAIT,OAAO,GAAG,CAAd,EAAiB;AACb,UAAM,IAAIJ,KAAJ,CAAU,6BAA6BQ,SAAvC,CAAN;AACH;AACD,QAAMf,OAAO,CAACY,IAAD,CAAb,CAvByH,CAuBpG;AACrB,SAAO,MAAMJ,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAcC,OAAO,GAAGC,IAAxB,EAA8BA,IAA9B,CAAxB;AACH,CAzBM,C;;;;;;;;;AAkCA,SAASS,SAAT,CAAmBC,GAAnB,EAAwE;AAC3E,SAAO,gBAAeC,KAAf,EAAyC;AAC5C,QAAIjB,MAAM,GAAGiB,KAAb;AACA,SAAK,MAAMC,EAAX,IAAiBF,GAAjB,EAAsB;AAClBhB,MAAAA,MAAM,GAAG,MAAMkB,EAAE,CAAClB,MAAD,CAAjB;AACH;AACD,WAAOA,MAAP;AACH,GAND;AAOH","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src","sourcesContent":["import { CommitStatus } from '../types/rpc_pb';\n\nexport const errorMessageForCode = (code: number): string => {\n    let errorMessage = 'UNDEFINED_ERROR';\n    if (code && code < Object.values(CommitStatus).length) {\n        errorMessage = Object.keys(CommitStatus)[Object.values(CommitStatus).indexOf(code)];\n    }\n    return errorMessage;\n};\n\nconst waitFor = (ms: number): Promise<void> => {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n};\nconst basicCheck = <T>(result: T): boolean => result instanceof Error === false;\n/**\n * Keep calling a function until it does not throw and also satifies check(result), or until timeout is reached\n * @param func function to be called. Can return a promise.\n * @param check function that is called on func's result\n * @param timeout duration after which polling times out\n * @param wait duration between calls\n */\nexport const longPolling = async <T>(func: () => Promise<T>, check = basicCheck, timeout = 10000, wait = 250): Promise<T> => {\n    const started = + new Date();\n    let lastError = '';\n    try {\n        const result = await func();\n        if (!check(result)) {\n            let resultStr;\n            try {\n                resultStr = JSON.stringify(result);\n            } catch(e) {\n                resultStr = '' + resultStr;\n            }\n            throw new Error('Condition not satisfied. Last result was ' + resultStr);\n        }\n        return result;\n    } catch(e) {\n        lastError = e;\n    }\n    const timePassed = + new Date() - started;\n    timeout -= timePassed;\n    if (timeout < 0) {\n        throw new Error('long polling timed out: ' + lastError);\n    }\n    await waitFor(wait); // give some breathing time\n    return await longPolling(func, check, timeout - wait, wait); \n};\n\ntype PromiseFunction<I = any, O = any> = (n: I) => Promise<O>;\ntype WaterfallFunction<FirstI, LastO> = (input: FirstI) => Promise<LastO>;\nexport function waterfall<I extends any, O1 extends any, O2 extends any, O3 extends any, O4 extends any, O5 extends any>(fns: [PromiseFunction<I, O1>, PromiseFunction<O1, O2>, PromiseFunction<O2, O3>, PromiseFunction<O3, O4>, PromiseFunction<O4, O5>]): WaterfallFunction<I, O5>;\nexport function waterfall<I extends any, O1 extends any, O2 extends any, O3 extends any, O4 extends any>(fns: [PromiseFunction<I, O1>, PromiseFunction<O1, O2>, PromiseFunction<O2, O3>, PromiseFunction<O3, O4>]): WaterfallFunction<I, O4>;\nexport function waterfall<I extends any, O1 extends any, O2 extends any, O3 extends any>(fns: [PromiseFunction<I, O1>, PromiseFunction<O1, O2>, PromiseFunction<O2, O3>]): WaterfallFunction<I, O3>;\nexport function waterfall<I extends any, O1 extends any, O2 extends any>(fns: [PromiseFunction<I, O1>, PromiseFunction<O1, O2>]): WaterfallFunction<I, O2>;\nexport function waterfall<I extends any, O1 extends any>(fns: [PromiseFunction<I, O1>]): WaterfallFunction<I, O1>;\nexport function waterfall(fns: PromiseFunction[]): WaterfallFunction<any, any> {\n    return async function(input: any): Promise<any> {\n        let result = input;\n        for (const fn of fns) {\n            result = await fn(result);\n        }\n        return result;\n    };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8b3207aba230ea79f129edc9474391b41fe29480","contentHash":"5dfb0c1136e54fc73d9e18d221a32fa6995d4b0490a53b134ef4679deaa66050"},"/Users/paulgrau/projects/aergo/herajs/packages/client/types/rpc_pb.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/types/rpc_pb.js","statementMap":{"0":{"start":{"line":10,"column":11},"end":{"line":10,"column":37}},"1":{"start":{"line":11,"column":11},"end":{"line":11,"column":15}},"2":{"start":{"line":12,"column":13},"end":{"line":12,"column":38}},"3":{"start":{"line":14,"column":20},"end":{"line":14,"column":49}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"5":{"start":{"line":16,"column":17},"end":{"line":16,"column":43}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"7":{"start":{"line":18,"column":14},"end":{"line":18,"column":37}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":35}},"9":{"start":{"line":20,"column":13},"end":{"line":20,"column":35}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}},"11":{"start":{"line":22,"column":16},"end":{"line":22,"column":41}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}},"13":{"start":{"line":24,"column":14},"end":{"line":24,"column":37}},"14":{"start":{"line":25,"column":0},"end":{"line":25,"column":35}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":62}},"16":{"start":{"line":27,"column":0},"end":{"line":27,"column":62}},"17":{"start":{"line":28,"column":0},"end":{"line":28,"column":63}},"18":{"start":{"line":29,"column":0},"end":{"line":29,"column":62}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":63}},"20":{"start":{"line":31,"column":0},"end":{"line":31,"column":63}},"21":{"start":{"line":32,"column":0},"end":{"line":32,"column":61}},"22":{"start":{"line":33,"column":0},"end":{"line":33,"column":65}},"23":{"start":{"line":34,"column":0},"end":{"line":34,"column":64}},"24":{"start":{"line":35,"column":0},"end":{"line":35,"column":55}},"25":{"start":{"line":36,"column":0},"end":{"line":36,"column":57}},"26":{"start":{"line":37,"column":0},"end":{"line":37,"column":58}},"27":{"start":{"line":38,"column":0},"end":{"line":38,"column":60}},"28":{"start":{"line":39,"column":0},"end":{"line":39,"column":64}},"29":{"start":{"line":40,"column":0},"end":{"line":40,"column":60}},"30":{"start":{"line":41,"column":0},"end":{"line":41,"column":58}},"31":{"start":{"line":42,"column":0},"end":{"line":42,"column":61}},"32":{"start":{"line":43,"column":0},"end":{"line":43,"column":53}},"33":{"start":{"line":44,"column":0},"end":{"line":44,"column":64}},"34":{"start":{"line":45,"column":0},"end":{"line":45,"column":67}},"35":{"start":{"line":46,"column":0},"end":{"line":46,"column":57}},"36":{"start":{"line":47,"column":0},"end":{"line":47,"column":60}},"37":{"start":{"line":48,"column":0},"end":{"line":48,"column":53}},"38":{"start":{"line":49,"column":0},"end":{"line":49,"column":57}},"39":{"start":{"line":50,"column":0},"end":{"line":50,"column":58}},"40":{"start":{"line":51,"column":0},"end":{"line":51,"column":52}},"41":{"start":{"line":52,"column":0},"end":{"line":52,"column":56}},"42":{"start":{"line":53,"column":0},"end":{"line":53,"column":55}},"43":{"start":{"line":54,"column":0},"end":{"line":54,"column":54}},"44":{"start":{"line":55,"column":0},"end":{"line":55,"column":58}},"45":{"start":{"line":56,"column":0},"end":{"line":56,"column":52}},"46":{"start":{"line":57,"column":0},"end":{"line":57,"column":56}},"47":{"start":{"line":58,"column":0},"end":{"line":58,"column":59}},"48":{"start":{"line":59,"column":0},"end":{"line":59,"column":56}},"49":{"start":{"line":60,"column":0},"end":{"line":60,"column":58}},"50":{"start":{"line":61,"column":0},"end":{"line":61,"column":59}},"51":{"start":{"line":62,"column":0},"end":{"line":62,"column":60}},"52":{"start":{"line":63,"column":0},"end":{"line":63,"column":55}},"53":{"start":{"line":64,"column":0},"end":{"line":64,"column":60}},"54":{"start":{"line":65,"column":0},"end":{"line":65,"column":60}},"55":{"start":{"line":66,"column":0},"end":{"line":66,"column":52}},"56":{"start":{"line":67,"column":0},"end":{"line":67,"column":56}},"57":{"start":{"line":68,"column":0},"end":{"line":68,"column":56}},"58":{"start":{"line":69,"column":0},"end":{"line":69,"column":58}},"59":{"start":{"line":81,"column":0},"end":{"line":83,"column":2}},"60":{"start":{"line":82,"column":2},"end":{"line":82,"column":61}},"61":{"start":{"line":84,"column":0},"end":{"line":84,"column":58}},"62":{"start":{"line":85,"column":0},"end":{"line":87,"column":1}},"63":{"start":{"line":86,"column":2},"end":{"line":86,"column":76}},"64":{"start":{"line":90,"column":0},"end":{"line":129,"column":1}},"65":{"start":{"line":101,"column":2},"end":{"line":103,"column":4}},"66":{"start":{"line":102,"column":4},"end":{"line":102,"column":76}},"67":{"start":{"line":115,"column":2},"end":{"line":128,"column":4}},"68":{"start":{"line":116,"column":16},"end":{"line":121,"column":97}},"69":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"70":{"start":{"line":125,"column":6},"end":{"line":125,"column":37}},"71":{"start":{"line":127,"column":4},"end":{"line":127,"column":15}},"72":{"start":{"line":137,"column":0},"end":{"line":141,"column":2}},"73":{"start":{"line":138,"column":15},"end":{"line":138,"column":43}},"74":{"start":{"line":139,"column":12},"end":{"line":139,"column":46}},"75":{"start":{"line":140,"column":2},"end":{"line":140,"column":79}},"76":{"start":{"line":151,"column":0},"end":{"line":185,"column":2}},"77":{"start":{"line":152,"column":2},"end":{"line":183,"column":3}},"78":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"79":{"start":{"line":154,"column":6},"end":{"line":154,"column":12}},"80":{"start":{"line":156,"column":16},"end":{"line":156,"column":39}},"81":{"start":{"line":157,"column":4},"end":{"line":181,"column":15}},"82":{"start":{"line":159,"column":46},"end":{"line":159,"column":64}},"83":{"start":{"line":160,"column":8},"end":{"line":160,"column":36}},"84":{"start":{"line":161,"column":8},"end":{"line":161,"column":14}},"85":{"start":{"line":163,"column":41},"end":{"line":163,"column":60}},"86":{"start":{"line":164,"column":8},"end":{"line":164,"column":33}},"87":{"start":{"line":165,"column":8},"end":{"line":165,"column":14}},"88":{"start":{"line":167,"column":41},"end":{"line":167,"column":60}},"89":{"start":{"line":168,"column":8},"end":{"line":168,"column":36}},"90":{"start":{"line":169,"column":8},"end":{"line":169,"column":14}},"91":{"start":{"line":171,"column":46},"end":{"line":171,"column":64}},"92":{"start":{"line":172,"column":8},"end":{"line":172,"column":38}},"93":{"start":{"line":173,"column":8},"end":{"line":173,"column":14}},"94":{"start":{"line":175,"column":20},"end":{"line":175,"column":47}},"95":{"start":{"line":176,"column":8},"end":{"line":176,"column":85}},"96":{"start":{"line":177,"column":8},"end":{"line":177,"column":32}},"97":{"start":{"line":178,"column":8},"end":{"line":178,"column":14}},"98":{"start":{"line":180,"column":8},"end":{"line":180,"column":27}},"99":{"start":{"line":181,"column":8},"end":{"line":181,"column":14}},"100":{"start":{"line":184,"column":2},"end":{"line":184,"column":13}},"101":{"start":{"line":192,"column":0},"end":{"line":196,"column":2}},"102":{"start":{"line":193,"column":15},"end":{"line":193,"column":38}},"103":{"start":{"line":194,"column":2},"end":{"line":194,"column":69}},"104":{"start":{"line":195,"column":2},"end":{"line":195,"column":34}},"105":{"start":{"line":206,"column":0},"end":{"line":244,"column":2}},"106":{"start":{"line":207,"column":10},"end":{"line":207,"column":19}},"107":{"start":{"line":208,"column":2},"end":{"line":208,"column":38}},"108":{"start":{"line":209,"column":2},"end":{"line":214,"column":3}},"109":{"start":{"line":210,"column":4},"end":{"line":212,"column":7}},"110":{"start":{"line":215,"column":2},"end":{"line":215,"column":30}},"111":{"start":{"line":216,"column":2},"end":{"line":221,"column":3}},"112":{"start":{"line":217,"column":4},"end":{"line":219,"column":7}},"113":{"start":{"line":222,"column":2},"end":{"line":222,"column":33}},"114":{"start":{"line":223,"column":2},"end":{"line":228,"column":3}},"115":{"start":{"line":224,"column":4},"end":{"line":226,"column":7}},"116":{"start":{"line":229,"column":2},"end":{"line":229,"column":40}},"117":{"start":{"line":230,"column":2},"end":{"line":235,"column":3}},"118":{"start":{"line":231,"column":4},"end":{"line":233,"column":7}},"119":{"start":{"line":236,"column":2},"end":{"line":236,"column":29}},"120":{"start":{"line":237,"column":2},"end":{"line":243,"column":3}},"121":{"start":{"line":238,"column":4},"end":{"line":241,"column":51}},"122":{"start":{"line":251,"column":0},"end":{"line":253,"column":2}},"123":{"start":{"line":252,"column":2},"end":{"line":252,"column":92}},"124":{"start":{"line":261,"column":0},"end":{"line":264,"column":2}},"125":{"start":{"line":262,"column":2},"end":{"line":263,"column":30}},"126":{"start":{"line":274,"column":0},"end":{"line":277,"column":2}},"127":{"start":{"line":275,"column":2},"end":{"line":276,"column":30}},"128":{"start":{"line":281,"column":0},"end":{"line":283,"column":2}},"129":{"start":{"line":282,"column":2},"end":{"line":282,"column":51}},"130":{"start":{"line":290,"column":0},"end":{"line":292,"column":2}},"131":{"start":{"line":291,"column":2},"end":{"line":291,"column":77}},"132":{"start":{"line":296,"column":0},"end":{"line":298,"column":2}},"133":{"start":{"line":297,"column":2},"end":{"line":297,"column":49}},"134":{"start":{"line":305,"column":0},"end":{"line":307,"column":2}},"135":{"start":{"line":306,"column":2},"end":{"line":306,"column":78}},"136":{"start":{"line":311,"column":0},"end":{"line":313,"column":2}},"137":{"start":{"line":312,"column":2},"end":{"line":312,"column":52}},"138":{"start":{"line":320,"column":0},"end":{"line":322,"column":2}},"139":{"start":{"line":321,"column":2},"end":{"line":321,"column":92}},"140":{"start":{"line":330,"column":0},"end":{"line":333,"column":2}},"141":{"start":{"line":331,"column":2},"end":{"line":332,"column":32}},"142":{"start":{"line":343,"column":0},"end":{"line":346,"column":2}},"143":{"start":{"line":344,"column":2},"end":{"line":345,"column":32}},"144":{"start":{"line":350,"column":0},"end":{"line":352,"column":2}},"145":{"start":{"line":351,"column":2},"end":{"line":351,"column":51}},"146":{"start":{"line":359,"column":0},"end":{"line":362,"column":2}},"147":{"start":{"line":360,"column":2},"end":{"line":361,"column":66}},"148":{"start":{"line":366,"column":0},"end":{"line":368,"column":2}},"149":{"start":{"line":367,"column":2},"end":{"line":367,"column":47}},"150":{"start":{"line":371,"column":0},"end":{"line":373,"column":2}},"151":{"start":{"line":372,"column":2},"end":{"line":372,"column":31}},"152":{"start":{"line":380,"column":0},"end":{"line":382,"column":2}},"153":{"start":{"line":381,"column":2},"end":{"line":381,"column":48}},"154":{"start":{"line":396,"column":0},"end":{"line":398,"column":2}},"155":{"start":{"line":397,"column":2},"end":{"line":397,"column":61}},"156":{"start":{"line":399,"column":0},"end":{"line":399,"column":49}},"157":{"start":{"line":400,"column":0},"end":{"line":402,"column":1}},"158":{"start":{"line":401,"column":2},"end":{"line":401,"column":58}},"159":{"start":{"line":405,"column":0},"end":{"line":444,"column":1}},"160":{"start":{"line":416,"column":2},"end":{"line":418,"column":4}},"161":{"start":{"line":417,"column":4},"end":{"line":417,"column":67}},"162":{"start":{"line":430,"column":2},"end":{"line":443,"column":4}},"163":{"start":{"line":431,"column":16},"end":{"line":436,"column":60}},"164":{"start":{"line":439,"column":4},"end":{"line":441,"column":5}},"165":{"start":{"line":440,"column":6},"end":{"line":440,"column":37}},"166":{"start":{"line":442,"column":4},"end":{"line":442,"column":15}},"167":{"start":{"line":452,"column":0},"end":{"line":456,"column":2}},"168":{"start":{"line":453,"column":15},"end":{"line":453,"column":43}},"169":{"start":{"line":454,"column":12},"end":{"line":454,"column":37}},"170":{"start":{"line":455,"column":2},"end":{"line":455,"column":70}},"171":{"start":{"line":466,"column":0},"end":{"line":499,"column":2}},"172":{"start":{"line":467,"column":2},"end":{"line":497,"column":3}},"173":{"start":{"line":468,"column":4},"end":{"line":470,"column":5}},"174":{"start":{"line":469,"column":6},"end":{"line":469,"column":12}},"175":{"start":{"line":471,"column":16},"end":{"line":471,"column":39}},"176":{"start":{"line":472,"column":4},"end":{"line":495,"column":15}},"177":{"start":{"line":474,"column":41},"end":{"line":474,"column":60}},"178":{"start":{"line":475,"column":8},"end":{"line":475,"column":28}},"179":{"start":{"line":476,"column":8},"end":{"line":476,"column":14}},"180":{"start":{"line":478,"column":42},"end":{"line":478,"column":59}},"181":{"start":{"line":479,"column":8},"end":{"line":479,"column":29}},"182":{"start":{"line":480,"column":8},"end":{"line":480,"column":14}},"183":{"start":{"line":482,"column":42},"end":{"line":482,"column":59}},"184":{"start":{"line":483,"column":8},"end":{"line":483,"column":30}},"185":{"start":{"line":484,"column":8},"end":{"line":484,"column":14}},"186":{"start":{"line":486,"column":41},"end":{"line":486,"column":60}},"187":{"start":{"line":487,"column":8},"end":{"line":487,"column":32}},"188":{"start":{"line":488,"column":8},"end":{"line":488,"column":14}},"189":{"start":{"line":490,"column":41},"end":{"line":490,"column":59}},"190":{"start":{"line":491,"column":8},"end":{"line":491,"column":30}},"191":{"start":{"line":492,"column":8},"end":{"line":492,"column":14}},"192":{"start":{"line":494,"column":8},"end":{"line":494,"column":27}},"193":{"start":{"line":495,"column":8},"end":{"line":495,"column":14}},"194":{"start":{"line":498,"column":2},"end":{"line":498,"column":13}},"195":{"start":{"line":506,"column":0},"end":{"line":510,"column":2}},"196":{"start":{"line":507,"column":15},"end":{"line":507,"column":38}},"197":{"start":{"line":508,"column":2},"end":{"line":508,"column":60}},"198":{"start":{"line":509,"column":2},"end":{"line":509,"column":34}},"199":{"start":{"line":520,"column":0},"end":{"line":557,"column":2}},"200":{"start":{"line":521,"column":10},"end":{"line":521,"column":19}},"201":{"start":{"line":522,"column":2},"end":{"line":522,"column":25}},"202":{"start":{"line":523,"column":2},"end":{"line":528,"column":3}},"203":{"start":{"line":524,"column":4},"end":{"line":526,"column":7}},"204":{"start":{"line":529,"column":2},"end":{"line":529,"column":26}},"205":{"start":{"line":530,"column":2},"end":{"line":535,"column":3}},"206":{"start":{"line":531,"column":4},"end":{"line":533,"column":7}},"207":{"start":{"line":536,"column":2},"end":{"line":536,"column":27}},"208":{"start":{"line":537,"column":2},"end":{"line":542,"column":3}},"209":{"start":{"line":538,"column":4},"end":{"line":540,"column":7}},"210":{"start":{"line":543,"column":2},"end":{"line":543,"column":29}},"211":{"start":{"line":544,"column":2},"end":{"line":549,"column":3}},"212":{"start":{"line":545,"column":4},"end":{"line":547,"column":7}},"213":{"start":{"line":550,"column":2},"end":{"line":550,"column":27}},"214":{"start":{"line":551,"column":2},"end":{"line":556,"column":3}},"215":{"start":{"line":552,"column":4},"end":{"line":554,"column":7}},"216":{"start":{"line":564,"column":0},"end":{"line":566,"column":2}},"217":{"start":{"line":565,"column":2},"end":{"line":565,"column":78}},"218":{"start":{"line":570,"column":0},"end":{"line":572,"column":2}},"219":{"start":{"line":571,"column":2},"end":{"line":571,"column":52}},"220":{"start":{"line":581,"column":0},"end":{"line":583,"column":2}},"221":{"start":{"line":582,"column":2},"end":{"line":582,"column":82}},"222":{"start":{"line":587,"column":0},"end":{"line":589,"column":2}},"223":{"start":{"line":588,"column":2},"end":{"line":588,"column":53}},"224":{"start":{"line":598,"column":0},"end":{"line":600,"column":2}},"225":{"start":{"line":599,"column":2},"end":{"line":599,"column":82}},"226":{"start":{"line":604,"column":0},"end":{"line":606,"column":2}},"227":{"start":{"line":605,"column":2},"end":{"line":605,"column":53}},"228":{"start":{"line":613,"column":0},"end":{"line":615,"column":2}},"229":{"start":{"line":614,"column":2},"end":{"line":614,"column":78}},"230":{"start":{"line":619,"column":0},"end":{"line":621,"column":2}},"231":{"start":{"line":620,"column":2},"end":{"line":620,"column":52}},"232":{"start":{"line":628,"column":0},"end":{"line":630,"column":2}},"233":{"start":{"line":629,"column":2},"end":{"line":629,"column":77}},"234":{"start":{"line":634,"column":0},"end":{"line":636,"column":2}},"235":{"start":{"line":635,"column":2},"end":{"line":635,"column":49}},"236":{"start":{"line":650,"column":0},"end":{"line":652,"column":2}},"237":{"start":{"line":651,"column":2},"end":{"line":651,"column":61}},"238":{"start":{"line":653,"column":0},"end":{"line":653,"column":51}},"239":{"start":{"line":654,"column":0},"end":{"line":656,"column":1}},"240":{"start":{"line":655,"column":2},"end":{"line":655,"column":62}},"241":{"start":{"line":659,"column":0},"end":{"line":703,"column":1}},"242":{"start":{"line":670,"column":2},"end":{"line":672,"column":4}},"243":{"start":{"line":671,"column":4},"end":{"line":671,"column":69}},"244":{"start":{"line":684,"column":2},"end":{"line":702,"column":4}},"245":{"start":{"line":685,"column":16},"end":{"line":695,"column":49}},"246":{"start":{"line":698,"column":4},"end":{"line":700,"column":5}},"247":{"start":{"line":699,"column":6},"end":{"line":699,"column":37}},"248":{"start":{"line":701,"column":4},"end":{"line":701,"column":15}},"249":{"start":{"line":711,"column":0},"end":{"line":715,"column":2}},"250":{"start":{"line":712,"column":15},"end":{"line":712,"column":43}},"251":{"start":{"line":713,"column":12},"end":{"line":713,"column":39}},"252":{"start":{"line":714,"column":2},"end":{"line":714,"column":72}},"253":{"start":{"line":725,"column":0},"end":{"line":779,"column":2}},"254":{"start":{"line":726,"column":2},"end":{"line":777,"column":3}},"255":{"start":{"line":727,"column":4},"end":{"line":729,"column":5}},"256":{"start":{"line":728,"column":6},"end":{"line":728,"column":12}},"257":{"start":{"line":730,"column":16},"end":{"line":730,"column":39}},"258":{"start":{"line":731,"column":4},"end":{"line":775,"column":15}},"259":{"start":{"line":733,"column":20},"end":{"line":733,"column":45}},"260":{"start":{"line":734,"column":8},"end":{"line":734,"column":83}},"261":{"start":{"line":735,"column":8},"end":{"line":735,"column":25}},"262":{"start":{"line":736,"column":8},"end":{"line":736,"column":14}},"263":{"start":{"line":738,"column":41},"end":{"line":738,"column":60}},"264":{"start":{"line":739,"column":8},"end":{"line":739,"column":31}},"265":{"start":{"line":740,"column":8},"end":{"line":740,"column":14}},"266":{"start":{"line":742,"column":41},"end":{"line":742,"column":60}},"267":{"start":{"line":743,"column":8},"end":{"line":743,"column":35}},"268":{"start":{"line":744,"column":8},"end":{"line":744,"column":14}},"269":{"start":{"line":746,"column":46},"end":{"line":746,"column":64}},"270":{"start":{"line":747,"column":8},"end":{"line":747,"column":32}},"271":{"start":{"line":748,"column":8},"end":{"line":748,"column":14}},"272":{"start":{"line":750,"column":46},"end":{"line":750,"column":64}},"273":{"start":{"line":751,"column":8},"end":{"line":751,"column":37}},"274":{"start":{"line":752,"column":8},"end":{"line":752,"column":14}},"275":{"start":{"line":754,"column":46},"end":{"line":754,"column":64}},"276":{"start":{"line":755,"column":8},"end":{"line":755,"column":35}},"277":{"start":{"line":756,"column":8},"end":{"line":756,"column":14}},"278":{"start":{"line":758,"column":46},"end":{"line":758,"column":64}},"279":{"start":{"line":759,"column":8},"end":{"line":759,"column":31}},"280":{"start":{"line":760,"column":8},"end":{"line":760,"column":14}},"281":{"start":{"line":762,"column":46},"end":{"line":762,"column":64}},"282":{"start":{"line":763,"column":8},"end":{"line":763,"column":32}},"283":{"start":{"line":764,"column":8},"end":{"line":764,"column":14}},"284":{"start":{"line":766,"column":46},"end":{"line":766,"column":64}},"285":{"start":{"line":767,"column":8},"end":{"line":767,"column":39}},"286":{"start":{"line":768,"column":8},"end":{"line":768,"column":14}},"287":{"start":{"line":770,"column":46},"end":{"line":770,"column":64}},"288":{"start":{"line":771,"column":8},"end":{"line":771,"column":35}},"289":{"start":{"line":772,"column":8},"end":{"line":772,"column":14}},"290":{"start":{"line":774,"column":8},"end":{"line":774,"column":27}},"291":{"start":{"line":775,"column":8},"end":{"line":775,"column":14}},"292":{"start":{"line":778,"column":2},"end":{"line":778,"column":13}},"293":{"start":{"line":786,"column":0},"end":{"line":790,"column":2}},"294":{"start":{"line":787,"column":15},"end":{"line":787,"column":38}},"295":{"start":{"line":788,"column":2},"end":{"line":788,"column":62}},"296":{"start":{"line":789,"column":2},"end":{"line":789,"column":34}},"297":{"start":{"line":800,"column":0},"end":{"line":873,"column":2}},"298":{"start":{"line":801,"column":10},"end":{"line":801,"column":19}},"299":{"start":{"line":802,"column":2},"end":{"line":802,"column":22}},"300":{"start":{"line":803,"column":2},"end":{"line":809,"column":3}},"301":{"start":{"line":804,"column":4},"end":{"line":807,"column":49}},"302":{"start":{"line":810,"column":2},"end":{"line":810,"column":28}},"303":{"start":{"line":811,"column":2},"end":{"line":816,"column":3}},"304":{"start":{"line":812,"column":4},"end":{"line":814,"column":7}},"305":{"start":{"line":817,"column":2},"end":{"line":817,"column":32}},"306":{"start":{"line":818,"column":2},"end":{"line":823,"column":3}},"307":{"start":{"line":819,"column":4},"end":{"line":821,"column":7}},"308":{"start":{"line":824,"column":2},"end":{"line":824,"column":34}},"309":{"start":{"line":825,"column":2},"end":{"line":830,"column":3}},"310":{"start":{"line":826,"column":4},"end":{"line":828,"column":7}},"311":{"start":{"line":831,"column":2},"end":{"line":831,"column":39}},"312":{"start":{"line":832,"column":2},"end":{"line":837,"column":3}},"313":{"start":{"line":833,"column":4},"end":{"line":835,"column":7}},"314":{"start":{"line":838,"column":2},"end":{"line":838,"column":37}},"315":{"start":{"line":839,"column":2},"end":{"line":844,"column":3}},"316":{"start":{"line":840,"column":4},"end":{"line":842,"column":7}},"317":{"start":{"line":845,"column":2},"end":{"line":845,"column":33}},"318":{"start":{"line":846,"column":2},"end":{"line":851,"column":3}},"319":{"start":{"line":847,"column":4},"end":{"line":849,"column":7}},"320":{"start":{"line":852,"column":2},"end":{"line":852,"column":34}},"321":{"start":{"line":853,"column":2},"end":{"line":858,"column":3}},"322":{"start":{"line":854,"column":4},"end":{"line":856,"column":7}},"323":{"start":{"line":859,"column":2},"end":{"line":859,"column":41}},"324":{"start":{"line":860,"column":2},"end":{"line":865,"column":3}},"325":{"start":{"line":861,"column":4},"end":{"line":863,"column":7}},"326":{"start":{"line":866,"column":2},"end":{"line":866,"column":37}},"327":{"start":{"line":867,"column":2},"end":{"line":872,"column":3}},"328":{"start":{"line":868,"column":4},"end":{"line":870,"column":7}},"329":{"start":{"line":880,"column":0},"end":{"line":883,"column":2}},"330":{"start":{"line":881,"column":2},"end":{"line":882,"column":64}},"331":{"start":{"line":887,"column":0},"end":{"line":889,"column":2}},"332":{"start":{"line":888,"column":2},"end":{"line":888,"column":47}},"333":{"start":{"line":892,"column":0},"end":{"line":894,"column":2}},"334":{"start":{"line":893,"column":2},"end":{"line":893,"column":24}},"335":{"start":{"line":901,"column":0},"end":{"line":903,"column":2}},"336":{"start":{"line":902,"column":2},"end":{"line":902,"column":48}},"337":{"start":{"line":910,"column":0},"end":{"line":912,"column":2}},"338":{"start":{"line":911,"column":2},"end":{"line":911,"column":77}},"339":{"start":{"line":916,"column":0},"end":{"line":918,"column":2}},"340":{"start":{"line":917,"column":2},"end":{"line":917,"column":49}},"341":{"start":{"line":925,"column":0},"end":{"line":927,"column":2}},"342":{"start":{"line":926,"column":2},"end":{"line":926,"column":77}},"343":{"start":{"line":931,"column":0},"end":{"line":933,"column":2}},"344":{"start":{"line":932,"column":2},"end":{"line":932,"column":49}},"345":{"start":{"line":940,"column":0},"end":{"line":942,"column":2}},"346":{"start":{"line":941,"column":2},"end":{"line":941,"column":92}},"347":{"start":{"line":950,"column":0},"end":{"line":953,"column":2}},"348":{"start":{"line":951,"column":2},"end":{"line":952,"column":26}},"349":{"start":{"line":963,"column":0},"end":{"line":966,"column":2}},"350":{"start":{"line":964,"column":2},"end":{"line":965,"column":26}},"351":{"start":{"line":970,"column":0},"end":{"line":972,"column":2}},"352":{"start":{"line":971,"column":2},"end":{"line":971,"column":51}},"353":{"start":{"line":979,"column":0},"end":{"line":981,"column":2}},"354":{"start":{"line":980,"column":2},"end":{"line":980,"column":92}},"355":{"start":{"line":989,"column":0},"end":{"line":992,"column":2}},"356":{"start":{"line":990,"column":2},"end":{"line":991,"column":31}},"357":{"start":{"line":1002,"column":0},"end":{"line":1005,"column":2}},"358":{"start":{"line":1003,"column":2},"end":{"line":1004,"column":31}},"359":{"start":{"line":1009,"column":0},"end":{"line":1011,"column":2}},"360":{"start":{"line":1010,"column":2},"end":{"line":1010,"column":51}},"361":{"start":{"line":1018,"column":0},"end":{"line":1020,"column":2}},"362":{"start":{"line":1019,"column":2},"end":{"line":1019,"column":92}},"363":{"start":{"line":1028,"column":0},"end":{"line":1031,"column":2}},"364":{"start":{"line":1029,"column":2},"end":{"line":1030,"column":29}},"365":{"start":{"line":1041,"column":0},"end":{"line":1044,"column":2}},"366":{"start":{"line":1042,"column":2},"end":{"line":1043,"column":29}},"367":{"start":{"line":1048,"column":0},"end":{"line":1050,"column":2}},"368":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":51}},"369":{"start":{"line":1057,"column":0},"end":{"line":1059,"column":2}},"370":{"start":{"line":1058,"column":2},"end":{"line":1058,"column":92}},"371":{"start":{"line":1067,"column":0},"end":{"line":1070,"column":2}},"372":{"start":{"line":1068,"column":2},"end":{"line":1069,"column":25}},"373":{"start":{"line":1080,"column":0},"end":{"line":1083,"column":2}},"374":{"start":{"line":1081,"column":2},"end":{"line":1082,"column":25}},"375":{"start":{"line":1087,"column":0},"end":{"line":1089,"column":2}},"376":{"start":{"line":1088,"column":2},"end":{"line":1088,"column":51}},"377":{"start":{"line":1096,"column":0},"end":{"line":1098,"column":2}},"378":{"start":{"line":1097,"column":2},"end":{"line":1097,"column":92}},"379":{"start":{"line":1106,"column":0},"end":{"line":1109,"column":2}},"380":{"start":{"line":1107,"column":2},"end":{"line":1108,"column":26}},"381":{"start":{"line":1119,"column":0},"end":{"line":1122,"column":2}},"382":{"start":{"line":1120,"column":2},"end":{"line":1121,"column":26}},"383":{"start":{"line":1126,"column":0},"end":{"line":1128,"column":2}},"384":{"start":{"line":1127,"column":2},"end":{"line":1127,"column":51}},"385":{"start":{"line":1135,"column":0},"end":{"line":1137,"column":2}},"386":{"start":{"line":1136,"column":2},"end":{"line":1136,"column":92}},"387":{"start":{"line":1145,"column":0},"end":{"line":1148,"column":2}},"388":{"start":{"line":1146,"column":2},"end":{"line":1147,"column":33}},"389":{"start":{"line":1158,"column":0},"end":{"line":1161,"column":2}},"390":{"start":{"line":1159,"column":2},"end":{"line":1160,"column":33}},"391":{"start":{"line":1165,"column":0},"end":{"line":1167,"column":2}},"392":{"start":{"line":1166,"column":2},"end":{"line":1166,"column":51}},"393":{"start":{"line":1174,"column":0},"end":{"line":1176,"column":2}},"394":{"start":{"line":1175,"column":2},"end":{"line":1175,"column":93}},"395":{"start":{"line":1184,"column":0},"end":{"line":1187,"column":2}},"396":{"start":{"line":1185,"column":2},"end":{"line":1186,"column":29}},"397":{"start":{"line":1197,"column":0},"end":{"line":1200,"column":2}},"398":{"start":{"line":1198,"column":2},"end":{"line":1199,"column":29}},"399":{"start":{"line":1204,"column":0},"end":{"line":1206,"column":2}},"400":{"start":{"line":1205,"column":2},"end":{"line":1205,"column":52}},"401":{"start":{"line":1220,"column":0},"end":{"line":1222,"column":2}},"402":{"start":{"line":1221,"column":2},"end":{"line":1221,"column":61}},"403":{"start":{"line":1223,"column":0},"end":{"line":1223,"column":52}},"404":{"start":{"line":1224,"column":0},"end":{"line":1226,"column":1}},"405":{"start":{"line":1225,"column":2},"end":{"line":1225,"column":64}},"406":{"start":{"line":1229,"column":0},"end":{"line":1264,"column":1}},"407":{"start":{"line":1240,"column":2},"end":{"line":1242,"column":4}},"408":{"start":{"line":1241,"column":4},"end":{"line":1241,"column":70}},"409":{"start":{"line":1254,"column":2},"end":{"line":1263,"column":4}},"410":{"start":{"line":1255,"column":16},"end":{"line":1256,"column":60}},"411":{"start":{"line":1259,"column":4},"end":{"line":1261,"column":5}},"412":{"start":{"line":1260,"column":6},"end":{"line":1260,"column":37}},"413":{"start":{"line":1262,"column":4},"end":{"line":1262,"column":15}},"414":{"start":{"line":1272,"column":0},"end":{"line":1276,"column":2}},"415":{"start":{"line":1273,"column":15},"end":{"line":1273,"column":43}},"416":{"start":{"line":1274,"column":12},"end":{"line":1274,"column":40}},"417":{"start":{"line":1275,"column":2},"end":{"line":1275,"column":73}},"418":{"start":{"line":1286,"column":0},"end":{"line":1303,"column":2}},"419":{"start":{"line":1287,"column":2},"end":{"line":1301,"column":3}},"420":{"start":{"line":1288,"column":4},"end":{"line":1290,"column":5}},"421":{"start":{"line":1289,"column":6},"end":{"line":1289,"column":12}},"422":{"start":{"line":1291,"column":16},"end":{"line":1291,"column":39}},"423":{"start":{"line":1292,"column":4},"end":{"line":1299,"column":15}},"424":{"start":{"line":1294,"column":41},"end":{"line":1294,"column":60}},"425":{"start":{"line":1295,"column":8},"end":{"line":1295,"column":29}},"426":{"start":{"line":1296,"column":8},"end":{"line":1296,"column":14}},"427":{"start":{"line":1298,"column":8},"end":{"line":1298,"column":27}},"428":{"start":{"line":1299,"column":8},"end":{"line":1299,"column":14}},"429":{"start":{"line":1302,"column":2},"end":{"line":1302,"column":13}},"430":{"start":{"line":1310,"column":0},"end":{"line":1314,"column":2}},"431":{"start":{"line":1311,"column":15},"end":{"line":1311,"column":38}},"432":{"start":{"line":1312,"column":2},"end":{"line":1312,"column":63}},"433":{"start":{"line":1313,"column":2},"end":{"line":1313,"column":34}},"434":{"start":{"line":1324,"column":0},"end":{"line":1333,"column":2}},"435":{"start":{"line":1325,"column":10},"end":{"line":1325,"column":19}},"436":{"start":{"line":1326,"column":2},"end":{"line":1326,"column":26}},"437":{"start":{"line":1327,"column":2},"end":{"line":1332,"column":3}},"438":{"start":{"line":1328,"column":4},"end":{"line":1330,"column":7}},"439":{"start":{"line":1340,"column":0},"end":{"line":1342,"column":2}},"440":{"start":{"line":1341,"column":2},"end":{"line":1341,"column":78}},"441":{"start":{"line":1346,"column":0},"end":{"line":1348,"column":2}},"442":{"start":{"line":1347,"column":2},"end":{"line":1347,"column":52}},"443":{"start":{"line":1362,"column":0},"end":{"line":1364,"column":2}},"444":{"start":{"line":1363,"column":2},"end":{"line":1363,"column":90}},"445":{"start":{"line":1365,"column":0},"end":{"line":1365,"column":47}},"446":{"start":{"line":1366,"column":0},"end":{"line":1368,"column":1}},"447":{"start":{"line":1367,"column":2},"end":{"line":1367,"column":54}},"448":{"start":{"line":1374,"column":0},"end":{"line":1374,"column":40}},"449":{"start":{"line":1378,"column":0},"end":{"line":1416,"column":1}},"450":{"start":{"line":1389,"column":2},"end":{"line":1391,"column":4}},"451":{"start":{"line":1390,"column":4},"end":{"line":1390,"column":65}},"452":{"start":{"line":1403,"column":2},"end":{"line":1415,"column":4}},"453":{"start":{"line":1404,"column":16},"end":{"line":1408,"column":37}},"454":{"start":{"line":1411,"column":4},"end":{"line":1413,"column":5}},"455":{"start":{"line":1412,"column":6},"end":{"line":1412,"column":37}},"456":{"start":{"line":1414,"column":4},"end":{"line":1414,"column":15}},"457":{"start":{"line":1424,"column":0},"end":{"line":1428,"column":2}},"458":{"start":{"line":1425,"column":15},"end":{"line":1425,"column":43}},"459":{"start":{"line":1426,"column":12},"end":{"line":1426,"column":35}},"460":{"start":{"line":1427,"column":2},"end":{"line":1427,"column":68}},"461":{"start":{"line":1438,"column":0},"end":{"line":1467,"column":2}},"462":{"start":{"line":1439,"column":2},"end":{"line":1465,"column":3}},"463":{"start":{"line":1440,"column":4},"end":{"line":1442,"column":5}},"464":{"start":{"line":1441,"column":6},"end":{"line":1441,"column":12}},"465":{"start":{"line":1443,"column":16},"end":{"line":1443,"column":39}},"466":{"start":{"line":1444,"column":4},"end":{"line":1463,"column":15}},"467":{"start":{"line":1446,"column":46},"end":{"line":1446,"column":64}},"468":{"start":{"line":1447,"column":8},"end":{"line":1447,"column":27}},"469":{"start":{"line":1448,"column":8},"end":{"line":1448,"column":14}},"470":{"start":{"line":1450,"column":46},"end":{"line":1450,"column":64}},"471":{"start":{"line":1451,"column":8},"end":{"line":1451,"column":30}},"472":{"start":{"line":1452,"column":8},"end":{"line":1452,"column":14}},"473":{"start":{"line":1454,"column":46},"end":{"line":1454,"column":64}},"474":{"start":{"line":1455,"column":8},"end":{"line":1455,"column":28}},"475":{"start":{"line":1456,"column":8},"end":{"line":1456,"column":14}},"476":{"start":{"line":1458,"column":46},"end":{"line":1458,"column":64}},"477":{"start":{"line":1459,"column":8},"end":{"line":1459,"column":29}},"478":{"start":{"line":1460,"column":8},"end":{"line":1460,"column":14}},"479":{"start":{"line":1462,"column":8},"end":{"line":1462,"column":27}},"480":{"start":{"line":1463,"column":8},"end":{"line":1463,"column":14}},"481":{"start":{"line":1466,"column":2},"end":{"line":1466,"column":13}},"482":{"start":{"line":1474,"column":0},"end":{"line":1478,"column":2}},"483":{"start":{"line":1475,"column":15},"end":{"line":1475,"column":38}},"484":{"start":{"line":1476,"column":2},"end":{"line":1476,"column":58}},"485":{"start":{"line":1477,"column":2},"end":{"line":1477,"column":34}},"486":{"start":{"line":1488,"column":0},"end":{"line":1518,"column":2}},"487":{"start":{"line":1489,"column":10},"end":{"line":1489,"column":19}},"488":{"start":{"line":1490,"column":2},"end":{"line":1490,"column":29}},"489":{"start":{"line":1491,"column":2},"end":{"line":1496,"column":3}},"490":{"start":{"line":1492,"column":4},"end":{"line":1494,"column":7}},"491":{"start":{"line":1497,"column":2},"end":{"line":1497,"column":36}},"492":{"start":{"line":1498,"column":2},"end":{"line":1503,"column":3}},"493":{"start":{"line":1499,"column":4},"end":{"line":1501,"column":7}},"494":{"start":{"line":1504,"column":2},"end":{"line":1504,"column":30}},"495":{"start":{"line":1505,"column":2},"end":{"line":1510,"column":3}},"496":{"start":{"line":1506,"column":4},"end":{"line":1508,"column":7}},"497":{"start":{"line":1511,"column":2},"end":{"line":1511,"column":31}},"498":{"start":{"line":1512,"column":2},"end":{"line":1517,"column":3}},"499":{"start":{"line":1513,"column":4},"end":{"line":1515,"column":7}},"500":{"start":{"line":1525,"column":0},"end":{"line":1527,"column":2}},"501":{"start":{"line":1526,"column":2},"end":{"line":1526,"column":92}},"502":{"start":{"line":1535,"column":0},"end":{"line":1538,"column":2}},"503":{"start":{"line":1536,"column":2},"end":{"line":1537,"column":21}},"504":{"start":{"line":1548,"column":0},"end":{"line":1551,"column":2}},"505":{"start":{"line":1549,"column":2},"end":{"line":1550,"column":21}},"506":{"start":{"line":1555,"column":0},"end":{"line":1557,"column":2}},"507":{"start":{"line":1556,"column":2},"end":{"line":1556,"column":51}},"508":{"start":{"line":1564,"column":0},"end":{"line":1566,"column":2}},"509":{"start":{"line":1565,"column":2},"end":{"line":1565,"column":100}},"510":{"start":{"line":1574,"column":0},"end":{"line":1577,"column":2}},"511":{"start":{"line":1575,"column":2},"end":{"line":1576,"column":28}},"512":{"start":{"line":1587,"column":0},"end":{"line":1590,"column":2}},"513":{"start":{"line":1588,"column":2},"end":{"line":1589,"column":28}},"514":{"start":{"line":1594,"column":0},"end":{"line":1596,"column":2}},"515":{"start":{"line":1595,"column":2},"end":{"line":1595,"column":46}},"516":{"start":{"line":1603,"column":0},"end":{"line":1605,"column":2}},"517":{"start":{"line":1604,"column":2},"end":{"line":1604,"column":61}},"518":{"start":{"line":1608,"column":0},"end":{"line":1610,"column":2}},"519":{"start":{"line":1609,"column":2},"end":{"line":1609,"column":26}},"520":{"start":{"line":1617,"column":0},"end":{"line":1619,"column":2}},"521":{"start":{"line":1618,"column":2},"end":{"line":1618,"column":92}},"522":{"start":{"line":1627,"column":0},"end":{"line":1630,"column":2}},"523":{"start":{"line":1628,"column":2},"end":{"line":1629,"column":22}},"524":{"start":{"line":1640,"column":0},"end":{"line":1643,"column":2}},"525":{"start":{"line":1641,"column":2},"end":{"line":1642,"column":22}},"526":{"start":{"line":1647,"column":0},"end":{"line":1649,"column":2}},"527":{"start":{"line":1648,"column":2},"end":{"line":1648,"column":51}},"528":{"start":{"line":1656,"column":0},"end":{"line":1658,"column":2}},"529":{"start":{"line":1657,"column":2},"end":{"line":1657,"column":92}},"530":{"start":{"line":1666,"column":0},"end":{"line":1669,"column":2}},"531":{"start":{"line":1667,"column":2},"end":{"line":1668,"column":23}},"532":{"start":{"line":1679,"column":0},"end":{"line":1682,"column":2}},"533":{"start":{"line":1680,"column":2},"end":{"line":1681,"column":23}},"534":{"start":{"line":1686,"column":0},"end":{"line":1688,"column":2}},"535":{"start":{"line":1687,"column":2},"end":{"line":1687,"column":51}},"536":{"start":{"line":1702,"column":0},"end":{"line":1704,"column":2}},"537":{"start":{"line":1703,"column":2},"end":{"line":1703,"column":61}},"538":{"start":{"line":1705,"column":0},"end":{"line":1705,"column":48}},"539":{"start":{"line":1706,"column":0},"end":{"line":1708,"column":1}},"540":{"start":{"line":1707,"column":2},"end":{"line":1707,"column":56}},"541":{"start":{"line":1711,"column":0},"end":{"line":1749,"column":1}},"542":{"start":{"line":1722,"column":2},"end":{"line":1724,"column":4}},"543":{"start":{"line":1723,"column":4},"end":{"line":1723,"column":66}},"544":{"start":{"line":1736,"column":2},"end":{"line":1748,"column":4}},"545":{"start":{"line":1737,"column":16},"end":{"line":1741,"column":37}},"546":{"start":{"line":1744,"column":4},"end":{"line":1746,"column":5}},"547":{"start":{"line":1745,"column":6},"end":{"line":1745,"column":37}},"548":{"start":{"line":1747,"column":4},"end":{"line":1747,"column":15}},"549":{"start":{"line":1757,"column":0},"end":{"line":1761,"column":2}},"550":{"start":{"line":1758,"column":15},"end":{"line":1758,"column":43}},"551":{"start":{"line":1759,"column":12},"end":{"line":1759,"column":36}},"552":{"start":{"line":1760,"column":2},"end":{"line":1760,"column":69}},"553":{"start":{"line":1771,"column":0},"end":{"line":1800,"column":2}},"554":{"start":{"line":1772,"column":2},"end":{"line":1798,"column":3}},"555":{"start":{"line":1773,"column":4},"end":{"line":1775,"column":5}},"556":{"start":{"line":1774,"column":6},"end":{"line":1774,"column":12}},"557":{"start":{"line":1776,"column":16},"end":{"line":1776,"column":39}},"558":{"start":{"line":1777,"column":4},"end":{"line":1796,"column":15}},"559":{"start":{"line":1779,"column":41},"end":{"line":1779,"column":60}},"560":{"start":{"line":1780,"column":8},"end":{"line":1780,"column":28}},"561":{"start":{"line":1781,"column":8},"end":{"line":1781,"column":14}},"562":{"start":{"line":1783,"column":46},"end":{"line":1783,"column":64}},"563":{"start":{"line":1784,"column":8},"end":{"line":1784,"column":30}},"564":{"start":{"line":1785,"column":8},"end":{"line":1785,"column":14}},"565":{"start":{"line":1787,"column":46},"end":{"line":1787,"column":64}},"566":{"start":{"line":1788,"column":8},"end":{"line":1788,"column":28}},"567":{"start":{"line":1789,"column":8},"end":{"line":1789,"column":14}},"568":{"start":{"line":1791,"column":46},"end":{"line":1791,"column":64}},"569":{"start":{"line":1792,"column":8},"end":{"line":1792,"column":29}},"570":{"start":{"line":1793,"column":8},"end":{"line":1793,"column":14}},"571":{"start":{"line":1795,"column":8},"end":{"line":1795,"column":27}},"572":{"start":{"line":1796,"column":8},"end":{"line":1796,"column":14}},"573":{"start":{"line":1799,"column":2},"end":{"line":1799,"column":13}},"574":{"start":{"line":1807,"column":0},"end":{"line":1811,"column":2}},"575":{"start":{"line":1808,"column":15},"end":{"line":1808,"column":38}},"576":{"start":{"line":1809,"column":2},"end":{"line":1809,"column":59}},"577":{"start":{"line":1810,"column":2},"end":{"line":1810,"column":34}},"578":{"start":{"line":1821,"column":0},"end":{"line":1851,"column":2}},"579":{"start":{"line":1822,"column":10},"end":{"line":1822,"column":19}},"580":{"start":{"line":1823,"column":2},"end":{"line":1823,"column":25}},"581":{"start":{"line":1824,"column":2},"end":{"line":1829,"column":3}},"582":{"start":{"line":1825,"column":4},"end":{"line":1827,"column":7}},"583":{"start":{"line":1830,"column":2},"end":{"line":1830,"column":32}},"584":{"start":{"line":1831,"column":2},"end":{"line":1836,"column":3}},"585":{"start":{"line":1832,"column":4},"end":{"line":1834,"column":7}},"586":{"start":{"line":1837,"column":2},"end":{"line":1837,"column":30}},"587":{"start":{"line":1838,"column":2},"end":{"line":1843,"column":3}},"588":{"start":{"line":1839,"column":4},"end":{"line":1841,"column":7}},"589":{"start":{"line":1844,"column":2},"end":{"line":1844,"column":31}},"590":{"start":{"line":1845,"column":2},"end":{"line":1850,"column":3}},"591":{"start":{"line":1846,"column":4},"end":{"line":1848,"column":7}},"592":{"start":{"line":1858,"column":0},"end":{"line":1860,"column":2}},"593":{"start":{"line":1859,"column":2},"end":{"line":1859,"column":77}},"594":{"start":{"line":1864,"column":0},"end":{"line":1866,"column":2}},"595":{"start":{"line":1865,"column":2},"end":{"line":1865,"column":49}},"596":{"start":{"line":1873,"column":0},"end":{"line":1875,"column":2}},"597":{"start":{"line":1874,"column":2},"end":{"line":1874,"column":92}},"598":{"start":{"line":1883,"column":0},"end":{"line":1886,"column":2}},"599":{"start":{"line":1884,"column":2},"end":{"line":1885,"column":24}},"600":{"start":{"line":1896,"column":0},"end":{"line":1899,"column":2}},"601":{"start":{"line":1897,"column":2},"end":{"line":1898,"column":24}},"602":{"start":{"line":1903,"column":0},"end":{"line":1905,"column":2}},"603":{"start":{"line":1904,"column":2},"end":{"line":1904,"column":51}},"604":{"start":{"line":1912,"column":0},"end":{"line":1914,"column":2}},"605":{"start":{"line":1913,"column":2},"end":{"line":1913,"column":92}},"606":{"start":{"line":1922,"column":0},"end":{"line":1925,"column":2}},"607":{"start":{"line":1923,"column":2},"end":{"line":1924,"column":22}},"608":{"start":{"line":1935,"column":0},"end":{"line":1938,"column":2}},"609":{"start":{"line":1936,"column":2},"end":{"line":1937,"column":22}},"610":{"start":{"line":1942,"column":0},"end":{"line":1944,"column":2}},"611":{"start":{"line":1943,"column":2},"end":{"line":1943,"column":51}},"612":{"start":{"line":1951,"column":0},"end":{"line":1953,"column":2}},"613":{"start":{"line":1952,"column":2},"end":{"line":1952,"column":92}},"614":{"start":{"line":1961,"column":0},"end":{"line":1964,"column":2}},"615":{"start":{"line":1962,"column":2},"end":{"line":1963,"column":23}},"616":{"start":{"line":1974,"column":0},"end":{"line":1977,"column":2}},"617":{"start":{"line":1975,"column":2},"end":{"line":1976,"column":23}},"618":{"start":{"line":1981,"column":0},"end":{"line":1983,"column":2}},"619":{"start":{"line":1982,"column":2},"end":{"line":1982,"column":51}},"620":{"start":{"line":1997,"column":0},"end":{"line":1999,"column":2}},"621":{"start":{"line":1998,"column":2},"end":{"line":1998,"column":61}},"622":{"start":{"line":2000,"column":0},"end":{"line":2000,"column":47}},"623":{"start":{"line":2001,"column":0},"end":{"line":2003,"column":1}},"624":{"start":{"line":2002,"column":2},"end":{"line":2002,"column":54}},"625":{"start":{"line":2006,"column":0},"end":{"line":2041,"column":1}},"626":{"start":{"line":2017,"column":2},"end":{"line":2019,"column":4}},"627":{"start":{"line":2018,"column":4},"end":{"line":2018,"column":65}},"628":{"start":{"line":2031,"column":2},"end":{"line":2040,"column":4}},"629":{"start":{"line":2032,"column":16},"end":{"line":2032,"column":18}},"630":{"start":{"line":2036,"column":4},"end":{"line":2038,"column":5}},"631":{"start":{"line":2037,"column":6},"end":{"line":2037,"column":37}},"632":{"start":{"line":2039,"column":4},"end":{"line":2039,"column":15}},"633":{"start":{"line":2049,"column":0},"end":{"line":2053,"column":2}},"634":{"start":{"line":2050,"column":15},"end":{"line":2050,"column":43}},"635":{"start":{"line":2051,"column":12},"end":{"line":2051,"column":35}},"636":{"start":{"line":2052,"column":2},"end":{"line":2052,"column":68}},"637":{"start":{"line":2063,"column":0},"end":{"line":2076,"column":2}},"638":{"start":{"line":2064,"column":2},"end":{"line":2074,"column":3}},"639":{"start":{"line":2065,"column":4},"end":{"line":2067,"column":5}},"640":{"start":{"line":2066,"column":6},"end":{"line":2066,"column":12}},"641":{"start":{"line":2068,"column":16},"end":{"line":2068,"column":39}},"642":{"start":{"line":2069,"column":4},"end":{"line":2072,"column":15}},"643":{"start":{"line":2071,"column":8},"end":{"line":2071,"column":27}},"644":{"start":{"line":2072,"column":8},"end":{"line":2072,"column":14}},"645":{"start":{"line":2075,"column":2},"end":{"line":2075,"column":13}},"646":{"start":{"line":2083,"column":0},"end":{"line":2087,"column":2}},"647":{"start":{"line":2084,"column":15},"end":{"line":2084,"column":38}},"648":{"start":{"line":2085,"column":2},"end":{"line":2085,"column":58}},"649":{"start":{"line":2086,"column":2},"end":{"line":2086,"column":34}},"650":{"start":{"line":2097,"column":0},"end":{"line":2099,"column":2}},"651":{"start":{"line":2098,"column":10},"end":{"line":2098,"column":19}},"652":{"start":{"line":2113,"column":0},"end":{"line":2115,"column":2}},"653":{"start":{"line":2114,"column":2},"end":{"line":2114,"column":61}},"654":{"start":{"line":2116,"column":0},"end":{"line":2116,"column":53}},"655":{"start":{"line":2117,"column":0},"end":{"line":2119,"column":1}},"656":{"start":{"line":2118,"column":2},"end":{"line":2118,"column":66}},"657":{"start":{"line":2122,"column":0},"end":{"line":2157,"column":1}},"658":{"start":{"line":2133,"column":2},"end":{"line":2135,"column":4}},"659":{"start":{"line":2134,"column":4},"end":{"line":2134,"column":71}},"660":{"start":{"line":2147,"column":2},"end":{"line":2156,"column":4}},"661":{"start":{"line":2148,"column":16},"end":{"line":2149,"column":35}},"662":{"start":{"line":2152,"column":4},"end":{"line":2154,"column":5}},"663":{"start":{"line":2153,"column":6},"end":{"line":2153,"column":37}},"664":{"start":{"line":2155,"column":4},"end":{"line":2155,"column":15}},"665":{"start":{"line":2165,"column":0},"end":{"line":2169,"column":2}},"666":{"start":{"line":2166,"column":15},"end":{"line":2166,"column":43}},"667":{"start":{"line":2167,"column":12},"end":{"line":2167,"column":41}},"668":{"start":{"line":2168,"column":2},"end":{"line":2168,"column":74}},"669":{"start":{"line":2179,"column":0},"end":{"line":2196,"column":2}},"670":{"start":{"line":2180,"column":2},"end":{"line":2194,"column":3}},"671":{"start":{"line":2181,"column":4},"end":{"line":2183,"column":5}},"672":{"start":{"line":2182,"column":6},"end":{"line":2182,"column":12}},"673":{"start":{"line":2184,"column":16},"end":{"line":2184,"column":39}},"674":{"start":{"line":2185,"column":4},"end":{"line":2192,"column":15}},"675":{"start":{"line":2187,"column":46},"end":{"line":2187,"column":64}},"676":{"start":{"line":2188,"column":8},"end":{"line":2188,"column":28}},"677":{"start":{"line":2189,"column":8},"end":{"line":2189,"column":14}},"678":{"start":{"line":2191,"column":8},"end":{"line":2191,"column":27}},"679":{"start":{"line":2192,"column":8},"end":{"line":2192,"column":14}},"680":{"start":{"line":2195,"column":2},"end":{"line":2195,"column":13}},"681":{"start":{"line":2203,"column":0},"end":{"line":2207,"column":2}},"682":{"start":{"line":2204,"column":15},"end":{"line":2204,"column":38}},"683":{"start":{"line":2205,"column":2},"end":{"line":2205,"column":64}},"684":{"start":{"line":2206,"column":2},"end":{"line":2206,"column":34}},"685":{"start":{"line":2217,"column":0},"end":{"line":2226,"column":2}},"686":{"start":{"line":2218,"column":10},"end":{"line":2218,"column":19}},"687":{"start":{"line":2219,"column":2},"end":{"line":2219,"column":30}},"688":{"start":{"line":2220,"column":2},"end":{"line":2225,"column":3}},"689":{"start":{"line":2221,"column":4},"end":{"line":2223,"column":7}},"690":{"start":{"line":2233,"column":0},"end":{"line":2235,"column":2}},"691":{"start":{"line":2234,"column":2},"end":{"line":2234,"column":92}},"692":{"start":{"line":2243,"column":0},"end":{"line":2246,"column":2}},"693":{"start":{"line":2244,"column":2},"end":{"line":2245,"column":22}},"694":{"start":{"line":2256,"column":0},"end":{"line":2259,"column":2}},"695":{"start":{"line":2257,"column":2},"end":{"line":2258,"column":22}},"696":{"start":{"line":2263,"column":0},"end":{"line":2265,"column":2}},"697":{"start":{"line":2264,"column":2},"end":{"line":2264,"column":51}},"698":{"start":{"line":2279,"column":0},"end":{"line":2281,"column":2}},"699":{"start":{"line":2280,"column":2},"end":{"line":2280,"column":61}},"700":{"start":{"line":2282,"column":0},"end":{"line":2282,"column":54}},"701":{"start":{"line":2283,"column":0},"end":{"line":2285,"column":1}},"702":{"start":{"line":2284,"column":2},"end":{"line":2284,"column":68}},"703":{"start":{"line":2288,"column":0},"end":{"line":2323,"column":1}},"704":{"start":{"line":2299,"column":2},"end":{"line":2301,"column":4}},"705":{"start":{"line":2300,"column":4},"end":{"line":2300,"column":72}},"706":{"start":{"line":2313,"column":2},"end":{"line":2322,"column":4}},"707":{"start":{"line":2314,"column":16},"end":{"line":2315,"column":59}},"708":{"start":{"line":2318,"column":4},"end":{"line":2320,"column":5}},"709":{"start":{"line":2319,"column":6},"end":{"line":2319,"column":37}},"710":{"start":{"line":2321,"column":4},"end":{"line":2321,"column":15}},"711":{"start":{"line":2331,"column":0},"end":{"line":2335,"column":2}},"712":{"start":{"line":2332,"column":15},"end":{"line":2332,"column":43}},"713":{"start":{"line":2333,"column":12},"end":{"line":2333,"column":42}},"714":{"start":{"line":2334,"column":2},"end":{"line":2334,"column":75}},"715":{"start":{"line":2345,"column":0},"end":{"line":2362,"column":2}},"716":{"start":{"line":2346,"column":2},"end":{"line":2360,"column":3}},"717":{"start":{"line":2347,"column":4},"end":{"line":2349,"column":5}},"718":{"start":{"line":2348,"column":6},"end":{"line":2348,"column":12}},"719":{"start":{"line":2350,"column":16},"end":{"line":2350,"column":39}},"720":{"start":{"line":2351,"column":4},"end":{"line":2358,"column":15}},"721":{"start":{"line":2353,"column":41},"end":{"line":2353,"column":60}},"722":{"start":{"line":2354,"column":8},"end":{"line":2354,"column":28}},"723":{"start":{"line":2355,"column":8},"end":{"line":2355,"column":14}},"724":{"start":{"line":2357,"column":8},"end":{"line":2357,"column":27}},"725":{"start":{"line":2358,"column":8},"end":{"line":2358,"column":14}},"726":{"start":{"line":2361,"column":2},"end":{"line":2361,"column":13}},"727":{"start":{"line":2369,"column":0},"end":{"line":2373,"column":2}},"728":{"start":{"line":2370,"column":15},"end":{"line":2370,"column":38}},"729":{"start":{"line":2371,"column":2},"end":{"line":2371,"column":65}},"730":{"start":{"line":2372,"column":2},"end":{"line":2372,"column":34}},"731":{"start":{"line":2383,"column":0},"end":{"line":2392,"column":2}},"732":{"start":{"line":2384,"column":10},"end":{"line":2384,"column":19}},"733":{"start":{"line":2385,"column":2},"end":{"line":2385,"column":25}},"734":{"start":{"line":2386,"column":2},"end":{"line":2391,"column":3}},"735":{"start":{"line":2387,"column":4},"end":{"line":2389,"column":7}},"736":{"start":{"line":2399,"column":0},"end":{"line":2401,"column":2}},"737":{"start":{"line":2400,"column":2},"end":{"line":2400,"column":78}},"738":{"start":{"line":2405,"column":0},"end":{"line":2407,"column":2}},"739":{"start":{"line":2406,"column":2},"end":{"line":2406,"column":52}},"740":{"start":{"line":2421,"column":0},"end":{"line":2423,"column":2}},"741":{"start":{"line":2422,"column":2},"end":{"line":2422,"column":61}},"742":{"start":{"line":2424,"column":0},"end":{"line":2424,"column":56}},"743":{"start":{"line":2425,"column":0},"end":{"line":2427,"column":1}},"744":{"start":{"line":2426,"column":2},"end":{"line":2426,"column":72}},"745":{"start":{"line":2430,"column":0},"end":{"line":2465,"column":1}},"746":{"start":{"line":2441,"column":2},"end":{"line":2443,"column":4}},"747":{"start":{"line":2442,"column":4},"end":{"line":2442,"column":74}},"748":{"start":{"line":2455,"column":2},"end":{"line":2464,"column":4}},"749":{"start":{"line":2456,"column":16},"end":{"line":2457,"column":35}},"750":{"start":{"line":2460,"column":4},"end":{"line":2462,"column":5}},"751":{"start":{"line":2461,"column":6},"end":{"line":2461,"column":37}},"752":{"start":{"line":2463,"column":4},"end":{"line":2463,"column":15}},"753":{"start":{"line":2473,"column":0},"end":{"line":2477,"column":2}},"754":{"start":{"line":2474,"column":15},"end":{"line":2474,"column":43}},"755":{"start":{"line":2475,"column":12},"end":{"line":2475,"column":44}},"756":{"start":{"line":2476,"column":2},"end":{"line":2476,"column":77}},"757":{"start":{"line":2487,"column":0},"end":{"line":2504,"column":2}},"758":{"start":{"line":2488,"column":2},"end":{"line":2502,"column":3}},"759":{"start":{"line":2489,"column":4},"end":{"line":2491,"column":5}},"760":{"start":{"line":2490,"column":6},"end":{"line":2490,"column":12}},"761":{"start":{"line":2492,"column":16},"end":{"line":2492,"column":39}},"762":{"start":{"line":2493,"column":4},"end":{"line":2500,"column":15}},"763":{"start":{"line":2495,"column":46},"end":{"line":2495,"column":64}},"764":{"start":{"line":2496,"column":8},"end":{"line":2496,"column":28}},"765":{"start":{"line":2497,"column":8},"end":{"line":2497,"column":14}},"766":{"start":{"line":2499,"column":8},"end":{"line":2499,"column":27}},"767":{"start":{"line":2500,"column":8},"end":{"line":2500,"column":14}},"768":{"start":{"line":2503,"column":2},"end":{"line":2503,"column":13}},"769":{"start":{"line":2511,"column":0},"end":{"line":2515,"column":2}},"770":{"start":{"line":2512,"column":15},"end":{"line":2512,"column":38}},"771":{"start":{"line":2513,"column":2},"end":{"line":2513,"column":67}},"772":{"start":{"line":2514,"column":2},"end":{"line":2514,"column":34}},"773":{"start":{"line":2525,"column":0},"end":{"line":2534,"column":2}},"774":{"start":{"line":2526,"column":10},"end":{"line":2526,"column":19}},"775":{"start":{"line":2527,"column":2},"end":{"line":2527,"column":30}},"776":{"start":{"line":2528,"column":2},"end":{"line":2533,"column":3}},"777":{"start":{"line":2529,"column":4},"end":{"line":2531,"column":7}},"778":{"start":{"line":2541,"column":0},"end":{"line":2543,"column":2}},"779":{"start":{"line":2542,"column":2},"end":{"line":2542,"column":92}},"780":{"start":{"line":2551,"column":0},"end":{"line":2554,"column":2}},"781":{"start":{"line":2552,"column":2},"end":{"line":2553,"column":22}},"782":{"start":{"line":2564,"column":0},"end":{"line":2567,"column":2}},"783":{"start":{"line":2565,"column":2},"end":{"line":2566,"column":22}},"784":{"start":{"line":2571,"column":0},"end":{"line":2573,"column":2}},"785":{"start":{"line":2572,"column":2},"end":{"line":2572,"column":51}},"786":{"start":{"line":2587,"column":0},"end":{"line":2589,"column":2}},"787":{"start":{"line":2588,"column":2},"end":{"line":2588,"column":61}},"788":{"start":{"line":2590,"column":0},"end":{"line":2590,"column":56}},"789":{"start":{"line":2591,"column":0},"end":{"line":2593,"column":1}},"790":{"start":{"line":2592,"column":2},"end":{"line":2592,"column":72}},"791":{"start":{"line":2596,"column":0},"end":{"line":2633,"column":1}},"792":{"start":{"line":2607,"column":2},"end":{"line":2609,"column":4}},"793":{"start":{"line":2608,"column":4},"end":{"line":2608,"column":74}},"794":{"start":{"line":2621,"column":2},"end":{"line":2632,"column":4}},"795":{"start":{"line":2622,"column":16},"end":{"line":2625,"column":67}},"796":{"start":{"line":2628,"column":4},"end":{"line":2630,"column":5}},"797":{"start":{"line":2629,"column":6},"end":{"line":2629,"column":37}},"798":{"start":{"line":2631,"column":4},"end":{"line":2631,"column":15}},"799":{"start":{"line":2641,"column":0},"end":{"line":2645,"column":2}},"800":{"start":{"line":2642,"column":15},"end":{"line":2642,"column":43}},"801":{"start":{"line":2643,"column":12},"end":{"line":2643,"column":44}},"802":{"start":{"line":2644,"column":2},"end":{"line":2644,"column":77}},"803":{"start":{"line":2655,"column":0},"end":{"line":2680,"column":2}},"804":{"start":{"line":2656,"column":2},"end":{"line":2678,"column":3}},"805":{"start":{"line":2657,"column":4},"end":{"line":2659,"column":5}},"806":{"start":{"line":2658,"column":6},"end":{"line":2658,"column":12}},"807":{"start":{"line":2660,"column":16},"end":{"line":2660,"column":39}},"808":{"start":{"line":2661,"column":4},"end":{"line":2676,"column":15}},"809":{"start":{"line":2663,"column":46},"end":{"line":2663,"column":64}},"810":{"start":{"line":2664,"column":8},"end":{"line":2664,"column":30}},"811":{"start":{"line":2665,"column":8},"end":{"line":2665,"column":14}},"812":{"start":{"line":2667,"column":46},"end":{"line":2667,"column":64}},"813":{"start":{"line":2668,"column":8},"end":{"line":2668,"column":27}},"814":{"start":{"line":2669,"column":8},"end":{"line":2669,"column":14}},"815":{"start":{"line":2671,"column":42},"end":{"line":2671,"column":59}},"816":{"start":{"line":2672,"column":8},"end":{"line":2672,"column":33}},"817":{"start":{"line":2673,"column":8},"end":{"line":2673,"column":14}},"818":{"start":{"line":2675,"column":8},"end":{"line":2675,"column":27}},"819":{"start":{"line":2676,"column":8},"end":{"line":2676,"column":14}},"820":{"start":{"line":2679,"column":2},"end":{"line":2679,"column":13}},"821":{"start":{"line":2687,"column":0},"end":{"line":2691,"column":2}},"822":{"start":{"line":2688,"column":15},"end":{"line":2688,"column":38}},"823":{"start":{"line":2689,"column":2},"end":{"line":2689,"column":67}},"824":{"start":{"line":2690,"column":2},"end":{"line":2690,"column":34}},"825":{"start":{"line":2701,"column":0},"end":{"line":2724,"column":2}},"826":{"start":{"line":2702,"column":10},"end":{"line":2702,"column":19}},"827":{"start":{"line":2703,"column":2},"end":{"line":2703,"column":32}},"828":{"start":{"line":2704,"column":2},"end":{"line":2709,"column":3}},"829":{"start":{"line":2705,"column":4},"end":{"line":2707,"column":7}},"830":{"start":{"line":2710,"column":2},"end":{"line":2710,"column":29}},"831":{"start":{"line":2711,"column":2},"end":{"line":2716,"column":3}},"832":{"start":{"line":2712,"column":4},"end":{"line":2714,"column":7}},"833":{"start":{"line":2717,"column":2},"end":{"line":2717,"column":30}},"834":{"start":{"line":2718,"column":2},"end":{"line":2723,"column":3}},"835":{"start":{"line":2719,"column":4},"end":{"line":2721,"column":7}},"836":{"start":{"line":2731,"column":0},"end":{"line":2733,"column":2}},"837":{"start":{"line":2732,"column":2},"end":{"line":2732,"column":92}},"838":{"start":{"line":2741,"column":0},"end":{"line":2744,"column":2}},"839":{"start":{"line":2742,"column":2},"end":{"line":2743,"column":24}},"840":{"start":{"line":2754,"column":0},"end":{"line":2757,"column":2}},"841":{"start":{"line":2755,"column":2},"end":{"line":2756,"column":24}},"842":{"start":{"line":2761,"column":0},"end":{"line":2763,"column":2}},"843":{"start":{"line":2762,"column":2},"end":{"line":2762,"column":51}},"844":{"start":{"line":2770,"column":0},"end":{"line":2772,"column":2}},"845":{"start":{"line":2771,"column":2},"end":{"line":2771,"column":92}},"846":{"start":{"line":2780,"column":0},"end":{"line":2783,"column":2}},"847":{"start":{"line":2781,"column":2},"end":{"line":2782,"column":21}},"848":{"start":{"line":2793,"column":0},"end":{"line":2796,"column":2}},"849":{"start":{"line":2794,"column":2},"end":{"line":2795,"column":21}},"850":{"start":{"line":2800,"column":0},"end":{"line":2802,"column":2}},"851":{"start":{"line":2801,"column":2},"end":{"line":2801,"column":51}},"852":{"start":{"line":2811,"column":0},"end":{"line":2813,"column":2}},"853":{"start":{"line":2812,"column":2},"end":{"line":2812,"column":82}},"854":{"start":{"line":2817,"column":0},"end":{"line":2819,"column":2}},"855":{"start":{"line":2818,"column":2},"end":{"line":2818,"column":53}},"856":{"start":{"line":2833,"column":0},"end":{"line":2835,"column":2}},"857":{"start":{"line":2834,"column":2},"end":{"line":2834,"column":89}},"858":{"start":{"line":2836,"column":0},"end":{"line":2836,"column":46}},"859":{"start":{"line":2837,"column":0},"end":{"line":2839,"column":1}},"860":{"start":{"line":2838,"column":2},"end":{"line":2838,"column":52}},"861":{"start":{"line":2845,"column":0},"end":{"line":2845,"column":39}},"862":{"start":{"line":2849,"column":0},"end":{"line":2893,"column":1}},"863":{"start":{"line":2860,"column":2},"end":{"line":2862,"column":4}},"864":{"start":{"line":2861,"column":4},"end":{"line":2861,"column":64}},"865":{"start":{"line":2874,"column":2},"end":{"line":2892,"column":4}},"866":{"start":{"line":2875,"column":16},"end":{"line":2885,"column":65}},"867":{"start":{"line":2888,"column":4},"end":{"line":2890,"column":5}},"868":{"start":{"line":2889,"column":6},"end":{"line":2889,"column":37}},"869":{"start":{"line":2891,"column":4},"end":{"line":2891,"column":15}},"870":{"start":{"line":2901,"column":0},"end":{"line":2905,"column":2}},"871":{"start":{"line":2902,"column":15},"end":{"line":2902,"column":43}},"872":{"start":{"line":2903,"column":12},"end":{"line":2903,"column":34}},"873":{"start":{"line":2904,"column":2},"end":{"line":2904,"column":67}},"874":{"start":{"line":2915,"column":0},"end":{"line":2967,"column":2}},"875":{"start":{"line":2916,"column":2},"end":{"line":2965,"column":3}},"876":{"start":{"line":2917,"column":4},"end":{"line":2919,"column":5}},"877":{"start":{"line":2918,"column":6},"end":{"line":2918,"column":12}},"878":{"start":{"line":2920,"column":16},"end":{"line":2920,"column":39}},"879":{"start":{"line":2921,"column":4},"end":{"line":2963,"column":15}},"880":{"start":{"line":2923,"column":20},"end":{"line":2923,"column":45}},"881":{"start":{"line":2924,"column":8},"end":{"line":2924,"column":83}},"882":{"start":{"line":2925,"column":8},"end":{"line":2925,"column":30}},"883":{"start":{"line":2926,"column":8},"end":{"line":2926,"column":14}},"884":{"start":{"line":2928,"column":20},"end":{"line":2928,"column":47}},"885":{"start":{"line":2929,"column":8},"end":{"line":2929,"column":85}},"886":{"start":{"line":2930,"column":8},"end":{"line":2930,"column":32}},"887":{"start":{"line":2931,"column":8},"end":{"line":2931,"column":14}},"888":{"start":{"line":2933,"column":41},"end":{"line":2933,"column":59}},"889":{"start":{"line":2934,"column":8},"end":{"line":2934,"column":28}},"890":{"start":{"line":2935,"column":8},"end":{"line":2935,"column":14}},"891":{"start":{"line":2937,"column":42},"end":{"line":2937,"column":59}},"892":{"start":{"line":2938,"column":8},"end":{"line":2938,"column":29}},"893":{"start":{"line":2939,"column":8},"end":{"line":2939,"column":14}},"894":{"start":{"line":2941,"column":41},"end":{"line":2941,"column":59}},"895":{"start":{"line":2942,"column":8},"end":{"line":2942,"column":32}},"896":{"start":{"line":2943,"column":8},"end":{"line":2943,"column":14}},"897":{"start":{"line":2945,"column":42},"end":{"line":2945,"column":59}},"898":{"start":{"line":2946,"column":8},"end":{"line":2946,"column":31}},"899":{"start":{"line":2947,"column":8},"end":{"line":2947,"column":14}},"900":{"start":{"line":2949,"column":41},"end":{"line":2949,"column":60}},"901":{"start":{"line":2950,"column":8},"end":{"line":2950,"column":30}},"902":{"start":{"line":2951,"column":8},"end":{"line":2951,"column":14}},"903":{"start":{"line":2953,"column":20},"end":{"line":2953,"column":50}},"904":{"start":{"line":2954,"column":8},"end":{"line":2954,"column":88}},"905":{"start":{"line":2955,"column":8},"end":{"line":2955,"column":35}},"906":{"start":{"line":2956,"column":8},"end":{"line":2956,"column":14}},"907":{"start":{"line":2958,"column":56},"end":{"line":2958,"column":73}},"908":{"start":{"line":2959,"column":8},"end":{"line":2959,"column":35}},"909":{"start":{"line":2960,"column":8},"end":{"line":2960,"column":14}},"910":{"start":{"line":2962,"column":8},"end":{"line":2962,"column":27}},"911":{"start":{"line":2963,"column":8},"end":{"line":2963,"column":14}},"912":{"start":{"line":2966,"column":2},"end":{"line":2966,"column":13}},"913":{"start":{"line":2974,"column":0},"end":{"line":2978,"column":2}},"914":{"start":{"line":2975,"column":15},"end":{"line":2975,"column":38}},"915":{"start":{"line":2976,"column":2},"end":{"line":2976,"column":57}},"916":{"start":{"line":2977,"column":2},"end":{"line":2977,"column":34}},"917":{"start":{"line":2988,"column":0},"end":{"line":3056,"column":2}},"918":{"start":{"line":2989,"column":10},"end":{"line":2989,"column":19}},"919":{"start":{"line":2990,"column":2},"end":{"line":2990,"column":27}},"920":{"start":{"line":2991,"column":2},"end":{"line":2997,"column":3}},"921":{"start":{"line":2992,"column":4},"end":{"line":2995,"column":49}},"922":{"start":{"line":2998,"column":2},"end":{"line":2998,"column":29}},"923":{"start":{"line":2999,"column":2},"end":{"line":3005,"column":3}},"924":{"start":{"line":3000,"column":4},"end":{"line":3003,"column":51}},"925":{"start":{"line":3006,"column":2},"end":{"line":3006,"column":25}},"926":{"start":{"line":3007,"column":2},"end":{"line":3012,"column":3}},"927":{"start":{"line":3008,"column":4},"end":{"line":3010,"column":7}},"928":{"start":{"line":3013,"column":2},"end":{"line":3013,"column":26}},"929":{"start":{"line":3014,"column":2},"end":{"line":3019,"column":3}},"930":{"start":{"line":3015,"column":4},"end":{"line":3017,"column":7}},"931":{"start":{"line":3020,"column":2},"end":{"line":3020,"column":29}},"932":{"start":{"line":3021,"column":2},"end":{"line":3026,"column":3}},"933":{"start":{"line":3022,"column":4},"end":{"line":3024,"column":7}},"934":{"start":{"line":3027,"column":2},"end":{"line":3027,"column":28}},"935":{"start":{"line":3028,"column":2},"end":{"line":3033,"column":3}},"936":{"start":{"line":3029,"column":4},"end":{"line":3031,"column":7}},"937":{"start":{"line":3034,"column":2},"end":{"line":3034,"column":27}},"938":{"start":{"line":3035,"column":2},"end":{"line":3040,"column":3}},"939":{"start":{"line":3036,"column":4},"end":{"line":3038,"column":7}},"940":{"start":{"line":3041,"column":2},"end":{"line":3041,"column":36}},"941":{"start":{"line":3042,"column":2},"end":{"line":3048,"column":3}},"942":{"start":{"line":3043,"column":4},"end":{"line":3046,"column":54}},"943":{"start":{"line":3049,"column":2},"end":{"line":3049,"column":32}},"944":{"start":{"line":3050,"column":2},"end":{"line":3055,"column":3}},"945":{"start":{"line":3051,"column":4},"end":{"line":3053,"column":7}},"946":{"start":{"line":3063,"column":0},"end":{"line":3066,"column":2}},"947":{"start":{"line":3064,"column":2},"end":{"line":3065,"column":64}},"948":{"start":{"line":3070,"column":0},"end":{"line":3072,"column":2}},"949":{"start":{"line":3071,"column":2},"end":{"line":3071,"column":47}},"950":{"start":{"line":3075,"column":0},"end":{"line":3077,"column":2}},"951":{"start":{"line":3076,"column":2},"end":{"line":3076,"column":29}},"952":{"start":{"line":3084,"column":0},"end":{"line":3086,"column":2}},"953":{"start":{"line":3085,"column":2},"end":{"line":3085,"column":48}},"954":{"start":{"line":3093,"column":0},"end":{"line":3096,"column":2}},"955":{"start":{"line":3094,"column":2},"end":{"line":3095,"column":66}},"956":{"start":{"line":3100,"column":0},"end":{"line":3102,"column":2}},"957":{"start":{"line":3101,"column":2},"end":{"line":3101,"column":47}},"958":{"start":{"line":3105,"column":0},"end":{"line":3107,"column":2}},"959":{"start":{"line":3106,"column":2},"end":{"line":3106,"column":31}},"960":{"start":{"line":3114,"column":0},"end":{"line":3116,"column":2}},"961":{"start":{"line":3115,"column":2},"end":{"line":3115,"column":48}},"962":{"start":{"line":3123,"column":0},"end":{"line":3125,"column":2}},"963":{"start":{"line":3124,"column":2},"end":{"line":3124,"column":77}},"964":{"start":{"line":3129,"column":0},"end":{"line":3131,"column":2}},"965":{"start":{"line":3130,"column":2},"end":{"line":3130,"column":49}},"966":{"start":{"line":3140,"column":0},"end":{"line":3142,"column":2}},"967":{"start":{"line":3141,"column":2},"end":{"line":3141,"column":82}},"968":{"start":{"line":3146,"column":0},"end":{"line":3148,"column":2}},"969":{"start":{"line":3147,"column":2},"end":{"line":3147,"column":53}},"970":{"start":{"line":3155,"column":0},"end":{"line":3157,"column":2}},"971":{"start":{"line":3156,"column":2},"end":{"line":3156,"column":77}},"972":{"start":{"line":3161,"column":0},"end":{"line":3163,"column":2}},"973":{"start":{"line":3162,"column":2},"end":{"line":3162,"column":49}},"974":{"start":{"line":3172,"column":0},"end":{"line":3174,"column":2}},"975":{"start":{"line":3173,"column":2},"end":{"line":3173,"column":82}},"976":{"start":{"line":3178,"column":0},"end":{"line":3180,"column":2}},"977":{"start":{"line":3179,"column":2},"end":{"line":3179,"column":53}},"978":{"start":{"line":3187,"column":0},"end":{"line":3189,"column":2}},"979":{"start":{"line":3188,"column":2},"end":{"line":3188,"column":78}},"980":{"start":{"line":3193,"column":0},"end":{"line":3195,"column":2}},"981":{"start":{"line":3194,"column":2},"end":{"line":3194,"column":52}},"982":{"start":{"line":3202,"column":0},"end":{"line":3205,"column":2}},"983":{"start":{"line":3203,"column":2},"end":{"line":3204,"column":77}},"984":{"start":{"line":3209,"column":0},"end":{"line":3211,"column":2}},"985":{"start":{"line":3210,"column":2},"end":{"line":3210,"column":55}},"986":{"start":{"line":3219,"column":0},"end":{"line":3221,"column":2}},"987":{"start":{"line":3220,"column":2},"end":{"line":3220,"column":109}},"988":{"start":{"line":3224,"column":0},"end":{"line":3226,"column":2}},"989":{"start":{"line":3225,"column":2},"end":{"line":3225,"column":31}},"990":{"start":{"line":3233,"column":0},"end":{"line":3235,"column":2}},"991":{"start":{"line":3234,"column":2},"end":{"line":3234,"column":92}},"992":{"start":{"line":3239,"column":0},"end":{"line":3241,"column":2}},"993":{"start":{"line":3240,"column":2},"end":{"line":3240,"column":50}},"994":{"start":{"line":3255,"column":0},"end":{"line":3257,"column":2}},"995":{"start":{"line":3256,"column":2},"end":{"line":3256,"column":93}},"996":{"start":{"line":3258,"column":0},"end":{"line":3258,"column":50}},"997":{"start":{"line":3259,"column":0},"end":{"line":3261,"column":1}},"998":{"start":{"line":3260,"column":2},"end":{"line":3260,"column":60}},"999":{"start":{"line":3267,"column":0},"end":{"line":3267,"column":43}},"1000":{"start":{"line":3271,"column":0},"end":{"line":3307,"column":1}},"1001":{"start":{"line":3282,"column":2},"end":{"line":3284,"column":4}},"1002":{"start":{"line":3283,"column":4},"end":{"line":3283,"column":68}},"1003":{"start":{"line":3296,"column":2},"end":{"line":3306,"column":4}},"1004":{"start":{"line":3297,"column":16},"end":{"line":3299,"column":51}},"1005":{"start":{"line":3302,"column":4},"end":{"line":3304,"column":5}},"1006":{"start":{"line":3303,"column":6},"end":{"line":3303,"column":37}},"1007":{"start":{"line":3305,"column":4},"end":{"line":3305,"column":15}},"1008":{"start":{"line":3315,"column":0},"end":{"line":3319,"column":2}},"1009":{"start":{"line":3316,"column":15},"end":{"line":3316,"column":43}},"1010":{"start":{"line":3317,"column":12},"end":{"line":3317,"column":38}},"1011":{"start":{"line":3318,"column":2},"end":{"line":3318,"column":71}},"1012":{"start":{"line":3329,"column":0},"end":{"line":3347,"column":2}},"1013":{"start":{"line":3330,"column":2},"end":{"line":3345,"column":3}},"1014":{"start":{"line":3331,"column":4},"end":{"line":3333,"column":5}},"1015":{"start":{"line":3332,"column":6},"end":{"line":3332,"column":12}},"1016":{"start":{"line":3334,"column":16},"end":{"line":3334,"column":39}},"1017":{"start":{"line":3335,"column":4},"end":{"line":3343,"column":15}},"1018":{"start":{"line":3337,"column":20},"end":{"line":3337,"column":42}},"1019":{"start":{"line":3338,"column":8},"end":{"line":3338,"column":80}},"1020":{"start":{"line":3339,"column":8},"end":{"line":3339,"column":28}},"1021":{"start":{"line":3340,"column":8},"end":{"line":3340,"column":14}},"1022":{"start":{"line":3342,"column":8},"end":{"line":3342,"column":27}},"1023":{"start":{"line":3343,"column":8},"end":{"line":3343,"column":14}},"1024":{"start":{"line":3346,"column":2},"end":{"line":3346,"column":13}},"1025":{"start":{"line":3354,"column":0},"end":{"line":3358,"column":2}},"1026":{"start":{"line":3355,"column":15},"end":{"line":3355,"column":38}},"1027":{"start":{"line":3356,"column":2},"end":{"line":3356,"column":61}},"1028":{"start":{"line":3357,"column":2},"end":{"line":3357,"column":34}},"1029":{"start":{"line":3368,"column":0},"end":{"line":3378,"column":2}},"1030":{"start":{"line":3369,"column":10},"end":{"line":3369,"column":19}},"1031":{"start":{"line":3370,"column":2},"end":{"line":3370,"column":29}},"1032":{"start":{"line":3371,"column":2},"end":{"line":3377,"column":3}},"1033":{"start":{"line":3372,"column":4},"end":{"line":3375,"column":46}},"1034":{"start":{"line":3385,"column":0},"end":{"line":3388,"column":2}},"1035":{"start":{"line":3386,"column":2},"end":{"line":3387,"column":69}},"1036":{"start":{"line":3392,"column":0},"end":{"line":3394,"column":2}},"1037":{"start":{"line":3393,"column":2},"end":{"line":3393,"column":55}},"1038":{"start":{"line":3402,"column":0},"end":{"line":3404,"column":2}},"1039":{"start":{"line":3403,"column":2},"end":{"line":3403,"column":97}},"1040":{"start":{"line":3407,"column":0},"end":{"line":3409,"column":2}},"1041":{"start":{"line":3408,"column":2},"end":{"line":3408,"column":24}},"1042":{"start":{"line":3423,"column":0},"end":{"line":3425,"column":2}},"1043":{"start":{"line":3424,"column":2},"end":{"line":3424,"column":61}},"1044":{"start":{"line":3426,"column":0},"end":{"line":3426,"column":52}},"1045":{"start":{"line":3427,"column":0},"end":{"line":3429,"column":1}},"1046":{"start":{"line":3428,"column":2},"end":{"line":3428,"column":64}},"1047":{"start":{"line":3432,"column":0},"end":{"line":3471,"column":1}},"1048":{"start":{"line":3443,"column":2},"end":{"line":3445,"column":4}},"1049":{"start":{"line":3444,"column":4},"end":{"line":3444,"column":70}},"1050":{"start":{"line":3457,"column":2},"end":{"line":3470,"column":4}},"1051":{"start":{"line":3458,"column":16},"end":{"line":3463,"column":60}},"1052":{"start":{"line":3466,"column":4},"end":{"line":3468,"column":5}},"1053":{"start":{"line":3467,"column":6},"end":{"line":3467,"column":37}},"1054":{"start":{"line":3469,"column":4},"end":{"line":3469,"column":15}},"1055":{"start":{"line":3479,"column":0},"end":{"line":3483,"column":2}},"1056":{"start":{"line":3480,"column":15},"end":{"line":3480,"column":43}},"1057":{"start":{"line":3481,"column":12},"end":{"line":3481,"column":40}},"1058":{"start":{"line":3482,"column":2},"end":{"line":3482,"column":73}},"1059":{"start":{"line":3493,"column":0},"end":{"line":3526,"column":2}},"1060":{"start":{"line":3494,"column":2},"end":{"line":3524,"column":3}},"1061":{"start":{"line":3495,"column":4},"end":{"line":3497,"column":5}},"1062":{"start":{"line":3496,"column":6},"end":{"line":3496,"column":12}},"1063":{"start":{"line":3498,"column":16},"end":{"line":3498,"column":39}},"1064":{"start":{"line":3499,"column":4},"end":{"line":3522,"column":15}},"1065":{"start":{"line":3501,"column":46},"end":{"line":3501,"column":64}},"1066":{"start":{"line":3502,"column":8},"end":{"line":3502,"column":27}},"1067":{"start":{"line":3503,"column":8},"end":{"line":3503,"column":14}},"1068":{"start":{"line":3505,"column":41},"end":{"line":3505,"column":60}},"1069":{"start":{"line":3506,"column":8},"end":{"line":3506,"column":29}},"1070":{"start":{"line":3507,"column":8},"end":{"line":3507,"column":14}},"1071":{"start":{"line":3509,"column":41},"end":{"line":3509,"column":60}},"1072":{"start":{"line":3510,"column":8},"end":{"line":3510,"column":27}},"1073":{"start":{"line":3511,"column":8},"end":{"line":3511,"column":14}},"1074":{"start":{"line":3513,"column":41},"end":{"line":3513,"column":60}},"1075":{"start":{"line":3514,"column":8},"end":{"line":3514,"column":29}},"1076":{"start":{"line":3515,"column":8},"end":{"line":3515,"column":14}},"1077":{"start":{"line":3517,"column":42},"end":{"line":3517,"column":59}},"1078":{"start":{"line":3518,"column":8},"end":{"line":3518,"column":26}},"1079":{"start":{"line":3519,"column":8},"end":{"line":3519,"column":14}},"1080":{"start":{"line":3521,"column":8},"end":{"line":3521,"column":27}},"1081":{"start":{"line":3522,"column":8},"end":{"line":3522,"column":14}},"1082":{"start":{"line":3525,"column":2},"end":{"line":3525,"column":13}},"1083":{"start":{"line":3533,"column":0},"end":{"line":3537,"column":2}},"1084":{"start":{"line":3534,"column":15},"end":{"line":3534,"column":38}},"1085":{"start":{"line":3535,"column":2},"end":{"line":3535,"column":63}},"1086":{"start":{"line":3536,"column":2},"end":{"line":3536,"column":34}},"1087":{"start":{"line":3547,"column":0},"end":{"line":3584,"column":2}},"1088":{"start":{"line":3548,"column":10},"end":{"line":3548,"column":19}},"1089":{"start":{"line":3549,"column":2},"end":{"line":3549,"column":29}},"1090":{"start":{"line":3550,"column":2},"end":{"line":3555,"column":3}},"1091":{"start":{"line":3551,"column":4},"end":{"line":3553,"column":7}},"1092":{"start":{"line":3556,"column":2},"end":{"line":3556,"column":26}},"1093":{"start":{"line":3557,"column":2},"end":{"line":3562,"column":3}},"1094":{"start":{"line":3558,"column":4},"end":{"line":3560,"column":7}},"1095":{"start":{"line":3563,"column":2},"end":{"line":3563,"column":24}},"1096":{"start":{"line":3564,"column":2},"end":{"line":3569,"column":3}},"1097":{"start":{"line":3565,"column":4},"end":{"line":3567,"column":7}},"1098":{"start":{"line":3570,"column":2},"end":{"line":3570,"column":26}},"1099":{"start":{"line":3571,"column":2},"end":{"line":3576,"column":3}},"1100":{"start":{"line":3572,"column":4},"end":{"line":3574,"column":7}},"1101":{"start":{"line":3577,"column":2},"end":{"line":3577,"column":23}},"1102":{"start":{"line":3578,"column":2},"end":{"line":3583,"column":3}},"1103":{"start":{"line":3579,"column":4},"end":{"line":3581,"column":7}},"1104":{"start":{"line":3591,"column":0},"end":{"line":3593,"column":2}},"1105":{"start":{"line":3592,"column":2},"end":{"line":3592,"column":92}},"1106":{"start":{"line":3601,"column":0},"end":{"line":3604,"column":2}},"1107":{"start":{"line":3602,"column":2},"end":{"line":3603,"column":21}},"1108":{"start":{"line":3614,"column":0},"end":{"line":3617,"column":2}},"1109":{"start":{"line":3615,"column":2},"end":{"line":3616,"column":21}},"1110":{"start":{"line":3621,"column":0},"end":{"line":3623,"column":2}},"1111":{"start":{"line":3622,"column":2},"end":{"line":3622,"column":51}},"1112":{"start":{"line":3630,"column":0},"end":{"line":3632,"column":2}},"1113":{"start":{"line":3631,"column":2},"end":{"line":3631,"column":77}},"1114":{"start":{"line":3636,"column":0},"end":{"line":3638,"column":2}},"1115":{"start":{"line":3637,"column":2},"end":{"line":3637,"column":49}},"1116":{"start":{"line":3645,"column":0},"end":{"line":3647,"column":2}},"1117":{"start":{"line":3646,"column":2},"end":{"line":3646,"column":77}},"1118":{"start":{"line":3651,"column":0},"end":{"line":3653,"column":2}},"1119":{"start":{"line":3652,"column":2},"end":{"line":3652,"column":49}},"1120":{"start":{"line":3660,"column":0},"end":{"line":3662,"column":2}},"1121":{"start":{"line":3661,"column":2},"end":{"line":3661,"column":77}},"1122":{"start":{"line":3666,"column":0},"end":{"line":3668,"column":2}},"1123":{"start":{"line":3667,"column":2},"end":{"line":3667,"column":49}},"1124":{"start":{"line":3677,"column":0},"end":{"line":3679,"column":2}},"1125":{"start":{"line":3678,"column":2},"end":{"line":3678,"column":82}},"1126":{"start":{"line":3683,"column":0},"end":{"line":3685,"column":2}},"1127":{"start":{"line":3684,"column":2},"end":{"line":3684,"column":53}},"1128":{"start":{"line":3699,"column":0},"end":{"line":3701,"column":2}},"1129":{"start":{"line":3700,"column":2},"end":{"line":3700,"column":61}},"1130":{"start":{"line":3702,"column":0},"end":{"line":3702,"column":52}},"1131":{"start":{"line":3703,"column":0},"end":{"line":3705,"column":1}},"1132":{"start":{"line":3704,"column":2},"end":{"line":3704,"column":64}},"1133":{"start":{"line":3708,"column":0},"end":{"line":3744,"column":1}},"1134":{"start":{"line":3719,"column":2},"end":{"line":3721,"column":4}},"1135":{"start":{"line":3720,"column":4},"end":{"line":3720,"column":70}},"1136":{"start":{"line":3733,"column":2},"end":{"line":3743,"column":4}},"1137":{"start":{"line":3734,"column":16},"end":{"line":3736,"column":57}},"1138":{"start":{"line":3739,"column":4},"end":{"line":3741,"column":5}},"1139":{"start":{"line":3740,"column":6},"end":{"line":3740,"column":37}},"1140":{"start":{"line":3742,"column":4},"end":{"line":3742,"column":15}},"1141":{"start":{"line":3752,"column":0},"end":{"line":3756,"column":2}},"1142":{"start":{"line":3753,"column":15},"end":{"line":3753,"column":43}},"1143":{"start":{"line":3754,"column":12},"end":{"line":3754,"column":40}},"1144":{"start":{"line":3755,"column":2},"end":{"line":3755,"column":73}},"1145":{"start":{"line":3766,"column":0},"end":{"line":3787,"column":2}},"1146":{"start":{"line":3767,"column":2},"end":{"line":3785,"column":3}},"1147":{"start":{"line":3768,"column":4},"end":{"line":3770,"column":5}},"1148":{"start":{"line":3769,"column":6},"end":{"line":3769,"column":12}},"1149":{"start":{"line":3771,"column":16},"end":{"line":3771,"column":39}},"1150":{"start":{"line":3772,"column":4},"end":{"line":3783,"column":15}},"1151":{"start":{"line":3774,"column":41},"end":{"line":3774,"column":60}},"1152":{"start":{"line":3775,"column":8},"end":{"line":3775,"column":29}},"1153":{"start":{"line":3776,"column":8},"end":{"line":3776,"column":14}},"1154":{"start":{"line":3778,"column":41},"end":{"line":3778,"column":60}},"1155":{"start":{"line":3779,"column":8},"end":{"line":3779,"column":27}},"1156":{"start":{"line":3780,"column":8},"end":{"line":3780,"column":14}},"1157":{"start":{"line":3782,"column":8},"end":{"line":3782,"column":27}},"1158":{"start":{"line":3783,"column":8},"end":{"line":3783,"column":14}},"1159":{"start":{"line":3786,"column":2},"end":{"line":3786,"column":13}},"1160":{"start":{"line":3794,"column":0},"end":{"line":3798,"column":2}},"1161":{"start":{"line":3795,"column":15},"end":{"line":3795,"column":38}},"1162":{"start":{"line":3796,"column":2},"end":{"line":3796,"column":63}},"1163":{"start":{"line":3797,"column":2},"end":{"line":3797,"column":34}},"1164":{"start":{"line":3808,"column":0},"end":{"line":3824,"column":2}},"1165":{"start":{"line":3809,"column":10},"end":{"line":3809,"column":19}},"1166":{"start":{"line":3810,"column":2},"end":{"line":3810,"column":26}},"1167":{"start":{"line":3811,"column":2},"end":{"line":3816,"column":3}},"1168":{"start":{"line":3812,"column":4},"end":{"line":3814,"column":7}},"1169":{"start":{"line":3817,"column":2},"end":{"line":3817,"column":24}},"1170":{"start":{"line":3818,"column":2},"end":{"line":3823,"column":3}},"1171":{"start":{"line":3819,"column":4},"end":{"line":3821,"column":7}},"1172":{"start":{"line":3831,"column":0},"end":{"line":3833,"column":2}},"1173":{"start":{"line":3832,"column":2},"end":{"line":3832,"column":77}},"1174":{"start":{"line":3837,"column":0},"end":{"line":3839,"column":2}},"1175":{"start":{"line":3838,"column":2},"end":{"line":3838,"column":49}},"1176":{"start":{"line":3846,"column":0},"end":{"line":3848,"column":2}},"1177":{"start":{"line":3847,"column":2},"end":{"line":3847,"column":77}},"1178":{"start":{"line":3852,"column":0},"end":{"line":3854,"column":2}},"1179":{"start":{"line":3853,"column":2},"end":{"line":3853,"column":49}},"1180":{"start":{"line":3868,"column":0},"end":{"line":3870,"column":2}},"1181":{"start":{"line":3869,"column":2},"end":{"line":3869,"column":61}},"1182":{"start":{"line":3871,"column":0},"end":{"line":3871,"column":56}},"1183":{"start":{"line":3872,"column":0},"end":{"line":3874,"column":1}},"1184":{"start":{"line":3873,"column":2},"end":{"line":3873,"column":72}},"1185":{"start":{"line":3877,"column":0},"end":{"line":3915,"column":1}},"1186":{"start":{"line":3888,"column":2},"end":{"line":3890,"column":4}},"1187":{"start":{"line":3889,"column":4},"end":{"line":3889,"column":74}},"1188":{"start":{"line":3902,"column":2},"end":{"line":3914,"column":4}},"1189":{"start":{"line":3903,"column":16},"end":{"line":3907,"column":89}},"1190":{"start":{"line":3910,"column":4},"end":{"line":3912,"column":5}},"1191":{"start":{"line":3911,"column":6},"end":{"line":3911,"column":37}},"1192":{"start":{"line":3913,"column":4},"end":{"line":3913,"column":15}},"1193":{"start":{"line":3923,"column":0},"end":{"line":3927,"column":2}},"1194":{"start":{"line":3924,"column":15},"end":{"line":3924,"column":43}},"1195":{"start":{"line":3925,"column":12},"end":{"line":3925,"column":44}},"1196":{"start":{"line":3926,"column":2},"end":{"line":3926,"column":77}},"1197":{"start":{"line":3937,"column":0},"end":{"line":3967,"column":2}},"1198":{"start":{"line":3938,"column":2},"end":{"line":3965,"column":3}},"1199":{"start":{"line":3939,"column":4},"end":{"line":3941,"column":5}},"1200":{"start":{"line":3940,"column":6},"end":{"line":3940,"column":12}},"1201":{"start":{"line":3942,"column":16},"end":{"line":3942,"column":39}},"1202":{"start":{"line":3943,"column":4},"end":{"line":3963,"column":15}},"1203":{"start":{"line":3945,"column":41},"end":{"line":3945,"column":60}},"1204":{"start":{"line":3946,"column":8},"end":{"line":3946,"column":28}},"1205":{"start":{"line":3947,"column":8},"end":{"line":3947,"column":14}},"1206":{"start":{"line":3949,"column":41},"end":{"line":3949,"column":60}},"1207":{"start":{"line":3950,"column":8},"end":{"line":3950,"column":29}},"1208":{"start":{"line":3951,"column":8},"end":{"line":3951,"column":14}},"1209":{"start":{"line":3953,"column":41},"end":{"line":3953,"column":60}},"1210":{"start":{"line":3954,"column":8},"end":{"line":3954,"column":27}},"1211":{"start":{"line":3955,"column":8},"end":{"line":3955,"column":14}},"1212":{"start":{"line":3957,"column":20},"end":{"line":3957,"column":49}},"1213":{"start":{"line":3958,"column":8},"end":{"line":3958,"column":87}},"1214":{"start":{"line":3959,"column":8},"end":{"line":3959,"column":27}},"1215":{"start":{"line":3960,"column":8},"end":{"line":3960,"column":14}},"1216":{"start":{"line":3962,"column":8},"end":{"line":3962,"column":27}},"1217":{"start":{"line":3963,"column":8},"end":{"line":3963,"column":14}},"1218":{"start":{"line":3966,"column":2},"end":{"line":3966,"column":13}},"1219":{"start":{"line":3974,"column":0},"end":{"line":3978,"column":2}},"1220":{"start":{"line":3975,"column":15},"end":{"line":3975,"column":38}},"1221":{"start":{"line":3976,"column":2},"end":{"line":3976,"column":67}},"1222":{"start":{"line":3977,"column":2},"end":{"line":3977,"column":34}},"1223":{"start":{"line":3988,"column":0},"end":{"line":4019,"column":2}},"1224":{"start":{"line":3989,"column":10},"end":{"line":3989,"column":19}},"1225":{"start":{"line":3990,"column":2},"end":{"line":3990,"column":25}},"1226":{"start":{"line":3991,"column":2},"end":{"line":3996,"column":3}},"1227":{"start":{"line":3992,"column":4},"end":{"line":3994,"column":7}},"1228":{"start":{"line":3997,"column":2},"end":{"line":3997,"column":26}},"1229":{"start":{"line":3998,"column":2},"end":{"line":4003,"column":3}},"1230":{"start":{"line":3999,"column":4},"end":{"line":4001,"column":7}},"1231":{"start":{"line":4004,"column":2},"end":{"line":4004,"column":24}},"1232":{"start":{"line":4005,"column":2},"end":{"line":4010,"column":3}},"1233":{"start":{"line":4006,"column":4},"end":{"line":4008,"column":7}},"1234":{"start":{"line":4011,"column":2},"end":{"line":4011,"column":24}},"1235":{"start":{"line":4012,"column":2},"end":{"line":4018,"column":3}},"1236":{"start":{"line":4013,"column":4},"end":{"line":4016,"column":53}},"1237":{"start":{"line":4026,"column":0},"end":{"line":4028,"column":2}},"1238":{"start":{"line":4027,"column":2},"end":{"line":4027,"column":77}},"1239":{"start":{"line":4032,"column":0},"end":{"line":4034,"column":2}},"1240":{"start":{"line":4033,"column":2},"end":{"line":4033,"column":49}},"1241":{"start":{"line":4041,"column":0},"end":{"line":4043,"column":2}},"1242":{"start":{"line":4042,"column":2},"end":{"line":4042,"column":77}},"1243":{"start":{"line":4047,"column":0},"end":{"line":4049,"column":2}},"1244":{"start":{"line":4048,"column":2},"end":{"line":4048,"column":49}},"1245":{"start":{"line":4056,"column":0},"end":{"line":4058,"column":2}},"1246":{"start":{"line":4057,"column":2},"end":{"line":4057,"column":77}},"1247":{"start":{"line":4062,"column":0},"end":{"line":4064,"column":2}},"1248":{"start":{"line":4063,"column":2},"end":{"line":4063,"column":49}},"1249":{"start":{"line":4071,"column":0},"end":{"line":4074,"column":2}},"1250":{"start":{"line":4072,"column":2},"end":{"line":4073,"column":68}},"1251":{"start":{"line":4078,"column":0},"end":{"line":4080,"column":2}},"1252":{"start":{"line":4079,"column":2},"end":{"line":4079,"column":47}},"1253":{"start":{"line":4083,"column":0},"end":{"line":4085,"column":2}},"1254":{"start":{"line":4084,"column":2},"end":{"line":4084,"column":26}},"1255":{"start":{"line":4092,"column":0},"end":{"line":4094,"column":2}},"1256":{"start":{"line":4093,"column":2},"end":{"line":4093,"column":48}},"1257":{"start":{"line":4108,"column":0},"end":{"line":4110,"column":2}},"1258":{"start":{"line":4109,"column":2},"end":{"line":4109,"column":61}},"1259":{"start":{"line":4111,"column":0},"end":{"line":4111,"column":57}},"1260":{"start":{"line":4112,"column":0},"end":{"line":4114,"column":1}},"1261":{"start":{"line":4113,"column":2},"end":{"line":4113,"column":74}},"1262":{"start":{"line":4117,"column":0},"end":{"line":4153,"column":1}},"1263":{"start":{"line":4128,"column":2},"end":{"line":4130,"column":4}},"1264":{"start":{"line":4129,"column":4},"end":{"line":4129,"column":75}},"1265":{"start":{"line":4142,"column":2},"end":{"line":4152,"column":4}},"1266":{"start":{"line":4143,"column":16},"end":{"line":4145,"column":92}},"1267":{"start":{"line":4148,"column":4},"end":{"line":4150,"column":5}},"1268":{"start":{"line":4149,"column":6},"end":{"line":4149,"column":37}},"1269":{"start":{"line":4151,"column":4},"end":{"line":4151,"column":15}},"1270":{"start":{"line":4161,"column":0},"end":{"line":4165,"column":2}},"1271":{"start":{"line":4162,"column":15},"end":{"line":4162,"column":43}},"1272":{"start":{"line":4163,"column":12},"end":{"line":4163,"column":45}},"1273":{"start":{"line":4164,"column":2},"end":{"line":4164,"column":78}},"1274":{"start":{"line":4175,"column":0},"end":{"line":4197,"column":2}},"1275":{"start":{"line":4176,"column":2},"end":{"line":4195,"column":3}},"1276":{"start":{"line":4177,"column":4},"end":{"line":4179,"column":5}},"1277":{"start":{"line":4178,"column":6},"end":{"line":4178,"column":12}},"1278":{"start":{"line":4180,"column":16},"end":{"line":4180,"column":39}},"1279":{"start":{"line":4181,"column":4},"end":{"line":4193,"column":15}},"1280":{"start":{"line":4183,"column":46},"end":{"line":4183,"column":64}},"1281":{"start":{"line":4184,"column":8},"end":{"line":4184,"column":35}},"1282":{"start":{"line":4185,"column":8},"end":{"line":4185,"column":14}},"1283":{"start":{"line":4187,"column":20},"end":{"line":4187,"column":48}},"1284":{"start":{"line":4188,"column":8},"end":{"line":4188,"column":86}},"1285":{"start":{"line":4189,"column":8},"end":{"line":4189,"column":29}},"1286":{"start":{"line":4190,"column":8},"end":{"line":4190,"column":14}},"1287":{"start":{"line":4192,"column":8},"end":{"line":4192,"column":27}},"1288":{"start":{"line":4193,"column":8},"end":{"line":4193,"column":14}},"1289":{"start":{"line":4196,"column":2},"end":{"line":4196,"column":13}},"1290":{"start":{"line":4204,"column":0},"end":{"line":4208,"column":2}},"1291":{"start":{"line":4205,"column":15},"end":{"line":4205,"column":38}},"1292":{"start":{"line":4206,"column":2},"end":{"line":4206,"column":68}},"1293":{"start":{"line":4207,"column":2},"end":{"line":4207,"column":34}},"1294":{"start":{"line":4218,"column":0},"end":{"line":4235,"column":2}},"1295":{"start":{"line":4219,"column":10},"end":{"line":4219,"column":19}},"1296":{"start":{"line":4220,"column":2},"end":{"line":4220,"column":37}},"1297":{"start":{"line":4221,"column":2},"end":{"line":4226,"column":3}},"1298":{"start":{"line":4222,"column":4},"end":{"line":4224,"column":7}},"1299":{"start":{"line":4227,"column":2},"end":{"line":4227,"column":26}},"1300":{"start":{"line":4228,"column":2},"end":{"line":4234,"column":3}},"1301":{"start":{"line":4229,"column":4},"end":{"line":4232,"column":52}},"1302":{"start":{"line":4242,"column":0},"end":{"line":4244,"column":2}},"1303":{"start":{"line":4243,"column":2},"end":{"line":4243,"column":92}},"1304":{"start":{"line":4252,"column":0},"end":{"line":4255,"column":2}},"1305":{"start":{"line":4253,"column":2},"end":{"line":4254,"column":29}},"1306":{"start":{"line":4265,"column":0},"end":{"line":4268,"column":2}},"1307":{"start":{"line":4266,"column":2},"end":{"line":4267,"column":29}},"1308":{"start":{"line":4272,"column":0},"end":{"line":4274,"column":2}},"1309":{"start":{"line":4273,"column":2},"end":{"line":4273,"column":51}},"1310":{"start":{"line":4281,"column":0},"end":{"line":4284,"column":2}},"1311":{"start":{"line":4282,"column":2},"end":{"line":4283,"column":67}},"1312":{"start":{"line":4288,"column":0},"end":{"line":4290,"column":2}},"1313":{"start":{"line":4289,"column":2},"end":{"line":4289,"column":47}},"1314":{"start":{"line":4293,"column":0},"end":{"line":4295,"column":2}},"1315":{"start":{"line":4294,"column":2},"end":{"line":4294,"column":28}},"1316":{"start":{"line":4302,"column":0},"end":{"line":4304,"column":2}},"1317":{"start":{"line":4303,"column":2},"end":{"line":4303,"column":48}},"1318":{"start":{"line":4318,"column":0},"end":{"line":4320,"column":2}},"1319":{"start":{"line":4319,"column":2},"end":{"line":4319,"column":100}},"1320":{"start":{"line":4321,"column":0},"end":{"line":4321,"column":57}},"1321":{"start":{"line":4322,"column":0},"end":{"line":4324,"column":1}},"1322":{"start":{"line":4323,"column":2},"end":{"line":4323,"column":74}},"1323":{"start":{"line":4330,"column":0},"end":{"line":4330,"column":50}},"1324":{"start":{"line":4334,"column":0},"end":{"line":4370,"column":1}},"1325":{"start":{"line":4345,"column":2},"end":{"line":4347,"column":4}},"1326":{"start":{"line":4346,"column":4},"end":{"line":4346,"column":75}},"1327":{"start":{"line":4359,"column":2},"end":{"line":4369,"column":4}},"1328":{"start":{"line":4360,"column":16},"end":{"line":4362,"column":54}},"1329":{"start":{"line":4365,"column":4},"end":{"line":4367,"column":5}},"1330":{"start":{"line":4366,"column":6},"end":{"line":4366,"column":37}},"1331":{"start":{"line":4368,"column":4},"end":{"line":4368,"column":15}},"1332":{"start":{"line":4378,"column":0},"end":{"line":4382,"column":2}},"1333":{"start":{"line":4379,"column":15},"end":{"line":4379,"column":43}},"1334":{"start":{"line":4380,"column":12},"end":{"line":4380,"column":45}},"1335":{"start":{"line":4381,"column":2},"end":{"line":4381,"column":78}},"1336":{"start":{"line":4392,"column":0},"end":{"line":4410,"column":2}},"1337":{"start":{"line":4393,"column":2},"end":{"line":4408,"column":3}},"1338":{"start":{"line":4394,"column":4},"end":{"line":4396,"column":5}},"1339":{"start":{"line":4395,"column":6},"end":{"line":4395,"column":12}},"1340":{"start":{"line":4397,"column":16},"end":{"line":4397,"column":39}},"1341":{"start":{"line":4398,"column":4},"end":{"line":4406,"column":15}},"1342":{"start":{"line":4400,"column":20},"end":{"line":4400,"column":45}},"1343":{"start":{"line":4401,"column":8},"end":{"line":4401,"column":83}},"1344":{"start":{"line":4402,"column":8},"end":{"line":4402,"column":29}},"1345":{"start":{"line":4403,"column":8},"end":{"line":4403,"column":14}},"1346":{"start":{"line":4405,"column":8},"end":{"line":4405,"column":27}},"1347":{"start":{"line":4406,"column":8},"end":{"line":4406,"column":14}},"1348":{"start":{"line":4409,"column":2},"end":{"line":4409,"column":13}},"1349":{"start":{"line":4417,"column":0},"end":{"line":4421,"column":2}},"1350":{"start":{"line":4418,"column":15},"end":{"line":4418,"column":38}},"1351":{"start":{"line":4419,"column":2},"end":{"line":4419,"column":68}},"1352":{"start":{"line":4420,"column":2},"end":{"line":4420,"column":34}},"1353":{"start":{"line":4431,"column":0},"end":{"line":4441,"column":2}},"1354":{"start":{"line":4432,"column":10},"end":{"line":4432,"column":19}},"1355":{"start":{"line":4433,"column":2},"end":{"line":4433,"column":30}},"1356":{"start":{"line":4434,"column":2},"end":{"line":4440,"column":3}},"1357":{"start":{"line":4435,"column":4},"end":{"line":4438,"column":49}},"1358":{"start":{"line":4448,"column":0},"end":{"line":4451,"column":2}},"1359":{"start":{"line":4449,"column":2},"end":{"line":4450,"column":72}},"1360":{"start":{"line":4455,"column":0},"end":{"line":4457,"column":2}},"1361":{"start":{"line":4456,"column":2},"end":{"line":4456,"column":55}},"1362":{"start":{"line":4465,"column":0},"end":{"line":4467,"column":2}},"1363":{"start":{"line":4466,"column":2},"end":{"line":4466,"column":98}},"1364":{"start":{"line":4470,"column":0},"end":{"line":4472,"column":2}},"1365":{"start":{"line":4471,"column":2},"end":{"line":4471,"column":25}},"1366":{"start":{"line":4486,"column":0},"end":{"line":4488,"column":2}},"1367":{"start":{"line":4487,"column":2},"end":{"line":4487,"column":61}},"1368":{"start":{"line":4489,"column":0},"end":{"line":4489,"column":55}},"1369":{"start":{"line":4490,"column":0},"end":{"line":4492,"column":1}},"1370":{"start":{"line":4491,"column":2},"end":{"line":4491,"column":70}},"1371":{"start":{"line":4495,"column":0},"end":{"line":4533,"column":1}},"1372":{"start":{"line":4506,"column":2},"end":{"line":4508,"column":4}},"1373":{"start":{"line":4507,"column":4},"end":{"line":4507,"column":73}},"1374":{"start":{"line":4520,"column":2},"end":{"line":4532,"column":4}},"1375":{"start":{"line":4521,"column":16},"end":{"line":4525,"column":57}},"1376":{"start":{"line":4528,"column":4},"end":{"line":4530,"column":5}},"1377":{"start":{"line":4529,"column":6},"end":{"line":4529,"column":37}},"1378":{"start":{"line":4531,"column":4},"end":{"line":4531,"column":15}},"1379":{"start":{"line":4541,"column":0},"end":{"line":4545,"column":2}},"1380":{"start":{"line":4542,"column":15},"end":{"line":4542,"column":43}},"1381":{"start":{"line":4543,"column":12},"end":{"line":4543,"column":43}},"1382":{"start":{"line":4544,"column":2},"end":{"line":4544,"column":76}},"1383":{"start":{"line":4555,"column":0},"end":{"line":4585,"column":2}},"1384":{"start":{"line":4556,"column":2},"end":{"line":4583,"column":3}},"1385":{"start":{"line":4557,"column":4},"end":{"line":4559,"column":5}},"1386":{"start":{"line":4558,"column":6},"end":{"line":4558,"column":12}},"1387":{"start":{"line":4560,"column":16},"end":{"line":4560,"column":39}},"1388":{"start":{"line":4561,"column":4},"end":{"line":4581,"column":15}},"1389":{"start":{"line":4563,"column":46},"end":{"line":4563,"column":64}},"1390":{"start":{"line":4564,"column":8},"end":{"line":4564,"column":27}},"1391":{"start":{"line":4565,"column":8},"end":{"line":4565,"column":14}},"1392":{"start":{"line":4567,"column":20},"end":{"line":4567,"column":51}},"1393":{"start":{"line":4568,"column":8},"end":{"line":4568,"column":89}},"1394":{"start":{"line":4569,"column":8},"end":{"line":4569,"column":29}},"1395":{"start":{"line":4570,"column":8},"end":{"line":4570,"column":14}},"1396":{"start":{"line":4572,"column":41},"end":{"line":4572,"column":59}},"1397":{"start":{"line":4573,"column":8},"end":{"line":4573,"column":30}},"1398":{"start":{"line":4574,"column":8},"end":{"line":4574,"column":14}},"1399":{"start":{"line":4576,"column":41},"end":{"line":4576,"column":59}},"1400":{"start":{"line":4577,"column":8},"end":{"line":4577,"column":27}},"1401":{"start":{"line":4578,"column":8},"end":{"line":4578,"column":14}},"1402":{"start":{"line":4580,"column":8},"end":{"line":4580,"column":27}},"1403":{"start":{"line":4581,"column":8},"end":{"line":4581,"column":14}},"1404":{"start":{"line":4584,"column":2},"end":{"line":4584,"column":13}},"1405":{"start":{"line":4592,"column":0},"end":{"line":4596,"column":2}},"1406":{"start":{"line":4593,"column":15},"end":{"line":4593,"column":38}},"1407":{"start":{"line":4594,"column":2},"end":{"line":4594,"column":66}},"1408":{"start":{"line":4595,"column":2},"end":{"line":4595,"column":34}},"1409":{"start":{"line":4606,"column":0},"end":{"line":4637,"column":2}},"1410":{"start":{"line":4607,"column":10},"end":{"line":4607,"column":19}},"1411":{"start":{"line":4608,"column":2},"end":{"line":4608,"column":29}},"1412":{"start":{"line":4609,"column":2},"end":{"line":4614,"column":3}},"1413":{"start":{"line":4610,"column":4},"end":{"line":4612,"column":7}},"1414":{"start":{"line":4615,"column":2},"end":{"line":4615,"column":26}},"1415":{"start":{"line":4616,"column":2},"end":{"line":4622,"column":3}},"1416":{"start":{"line":4617,"column":4},"end":{"line":4620,"column":55}},"1417":{"start":{"line":4623,"column":2},"end":{"line":4623,"column":27}},"1418":{"start":{"line":4624,"column":2},"end":{"line":4629,"column":3}},"1419":{"start":{"line":4625,"column":4},"end":{"line":4627,"column":7}},"1420":{"start":{"line":4630,"column":2},"end":{"line":4630,"column":24}},"1421":{"start":{"line":4631,"column":2},"end":{"line":4636,"column":3}},"1422":{"start":{"line":4632,"column":4},"end":{"line":4634,"column":7}},"1423":{"start":{"line":4644,"column":0},"end":{"line":4646,"column":2}},"1424":{"start":{"line":4645,"column":2},"end":{"line":4645,"column":92}},"1425":{"start":{"line":4654,"column":0},"end":{"line":4657,"column":2}},"1426":{"start":{"line":4655,"column":2},"end":{"line":4656,"column":21}},"1427":{"start":{"line":4667,"column":0},"end":{"line":4670,"column":2}},"1428":{"start":{"line":4668,"column":2},"end":{"line":4669,"column":21}},"1429":{"start":{"line":4674,"column":0},"end":{"line":4676,"column":2}},"1430":{"start":{"line":4675,"column":2},"end":{"line":4675,"column":51}},"1431":{"start":{"line":4683,"column":0},"end":{"line":4686,"column":2}},"1432":{"start":{"line":4684,"column":2},"end":{"line":4685,"column":70}},"1433":{"start":{"line":4690,"column":0},"end":{"line":4692,"column":2}},"1434":{"start":{"line":4691,"column":2},"end":{"line":4691,"column":47}},"1435":{"start":{"line":4695,"column":0},"end":{"line":4697,"column":2}},"1436":{"start":{"line":4696,"column":2},"end":{"line":4696,"column":28}},"1437":{"start":{"line":4704,"column":0},"end":{"line":4706,"column":2}},"1438":{"start":{"line":4705,"column":2},"end":{"line":4705,"column":48}},"1439":{"start":{"line":4713,"column":0},"end":{"line":4715,"column":2}},"1440":{"start":{"line":4714,"column":2},"end":{"line":4714,"column":77}},"1441":{"start":{"line":4719,"column":0},"end":{"line":4721,"column":2}},"1442":{"start":{"line":4720,"column":2},"end":{"line":4720,"column":49}},"1443":{"start":{"line":4728,"column":0},"end":{"line":4730,"column":2}},"1444":{"start":{"line":4729,"column":2},"end":{"line":4729,"column":77}},"1445":{"start":{"line":4734,"column":0},"end":{"line":4736,"column":2}},"1446":{"start":{"line":4735,"column":2},"end":{"line":4735,"column":49}},"1447":{"start":{"line":4750,"column":0},"end":{"line":4752,"column":2}},"1448":{"start":{"line":4751,"column":2},"end":{"line":4751,"column":102}},"1449":{"start":{"line":4753,"column":0},"end":{"line":4753,"column":59}},"1450":{"start":{"line":4754,"column":0},"end":{"line":4756,"column":1}},"1451":{"start":{"line":4755,"column":2},"end":{"line":4755,"column":78}},"1452":{"start":{"line":4762,"column":0},"end":{"line":4762,"column":52}},"1453":{"start":{"line":4766,"column":0},"end":{"line":4802,"column":1}},"1454":{"start":{"line":4777,"column":2},"end":{"line":4779,"column":4}},"1455":{"start":{"line":4778,"column":4},"end":{"line":4778,"column":77}},"1456":{"start":{"line":4791,"column":2},"end":{"line":4801,"column":4}},"1457":{"start":{"line":4792,"column":16},"end":{"line":4794,"column":60}},"1458":{"start":{"line":4797,"column":4},"end":{"line":4799,"column":5}},"1459":{"start":{"line":4798,"column":6},"end":{"line":4798,"column":37}},"1460":{"start":{"line":4800,"column":4},"end":{"line":4800,"column":15}},"1461":{"start":{"line":4810,"column":0},"end":{"line":4814,"column":2}},"1462":{"start":{"line":4811,"column":15},"end":{"line":4811,"column":43}},"1463":{"start":{"line":4812,"column":12},"end":{"line":4812,"column":47}},"1464":{"start":{"line":4813,"column":2},"end":{"line":4813,"column":80}},"1465":{"start":{"line":4824,"column":0},"end":{"line":4842,"column":2}},"1466":{"start":{"line":4825,"column":2},"end":{"line":4840,"column":3}},"1467":{"start":{"line":4826,"column":4},"end":{"line":4828,"column":5}},"1468":{"start":{"line":4827,"column":6},"end":{"line":4827,"column":12}},"1469":{"start":{"line":4829,"column":16},"end":{"line":4829,"column":39}},"1470":{"start":{"line":4830,"column":4},"end":{"line":4838,"column":15}},"1471":{"start":{"line":4832,"column":20},"end":{"line":4832,"column":51}},"1472":{"start":{"line":4833,"column":8},"end":{"line":4833,"column":89}},"1473":{"start":{"line":4834,"column":8},"end":{"line":4834,"column":29}},"1474":{"start":{"line":4835,"column":8},"end":{"line":4835,"column":14}},"1475":{"start":{"line":4837,"column":8},"end":{"line":4837,"column":27}},"1476":{"start":{"line":4838,"column":8},"end":{"line":4838,"column":14}},"1477":{"start":{"line":4841,"column":2},"end":{"line":4841,"column":13}},"1478":{"start":{"line":4849,"column":0},"end":{"line":4853,"column":2}},"1479":{"start":{"line":4850,"column":15},"end":{"line":4850,"column":38}},"1480":{"start":{"line":4851,"column":2},"end":{"line":4851,"column":70}},"1481":{"start":{"line":4852,"column":2},"end":{"line":4852,"column":34}},"1482":{"start":{"line":4863,"column":0},"end":{"line":4873,"column":2}},"1483":{"start":{"line":4864,"column":10},"end":{"line":4864,"column":19}},"1484":{"start":{"line":4865,"column":2},"end":{"line":4865,"column":30}},"1485":{"start":{"line":4866,"column":2},"end":{"line":4872,"column":3}},"1486":{"start":{"line":4867,"column":4},"end":{"line":4870,"column":55}},"1487":{"start":{"line":4880,"column":0},"end":{"line":4883,"column":2}},"1488":{"start":{"line":4881,"column":2},"end":{"line":4882,"column":78}},"1489":{"start":{"line":4887,"column":0},"end":{"line":4889,"column":2}},"1490":{"start":{"line":4888,"column":2},"end":{"line":4888,"column":55}},"1491":{"start":{"line":4897,"column":0},"end":{"line":4899,"column":2}},"1492":{"start":{"line":4898,"column":2},"end":{"line":4898,"column":106}},"1493":{"start":{"line":4902,"column":0},"end":{"line":4904,"column":2}},"1494":{"start":{"line":4903,"column":2},"end":{"line":4903,"column":25}},"1495":{"start":{"line":4918,"column":0},"end":{"line":4920,"column":2}},"1496":{"start":{"line":4919,"column":2},"end":{"line":4919,"column":61}},"1497":{"start":{"line":4921,"column":0},"end":{"line":4921,"column":54}},"1498":{"start":{"line":4922,"column":0},"end":{"line":4924,"column":1}},"1499":{"start":{"line":4923,"column":2},"end":{"line":4923,"column":68}},"1500":{"start":{"line":4927,"column":0},"end":{"line":4964,"column":1}},"1501":{"start":{"line":4938,"column":2},"end":{"line":4940,"column":4}},"1502":{"start":{"line":4939,"column":4},"end":{"line":4939,"column":72}},"1503":{"start":{"line":4952,"column":2},"end":{"line":4963,"column":4}},"1504":{"start":{"line":4953,"column":16},"end":{"line":4956,"column":60}},"1505":{"start":{"line":4959,"column":4},"end":{"line":4961,"column":5}},"1506":{"start":{"line":4960,"column":6},"end":{"line":4960,"column":37}},"1507":{"start":{"line":4962,"column":4},"end":{"line":4962,"column":15}},"1508":{"start":{"line":4972,"column":0},"end":{"line":4976,"column":2}},"1509":{"start":{"line":4973,"column":15},"end":{"line":4973,"column":43}},"1510":{"start":{"line":4974,"column":12},"end":{"line":4974,"column":42}},"1511":{"start":{"line":4975,"column":2},"end":{"line":4975,"column":75}},"1512":{"start":{"line":4986,"column":0},"end":{"line":5011,"column":2}},"1513":{"start":{"line":4987,"column":2},"end":{"line":5009,"column":3}},"1514":{"start":{"line":4988,"column":4},"end":{"line":4990,"column":5}},"1515":{"start":{"line":4989,"column":6},"end":{"line":4989,"column":12}},"1516":{"start":{"line":4991,"column":16},"end":{"line":4991,"column":39}},"1517":{"start":{"line":4992,"column":4},"end":{"line":5007,"column":15}},"1518":{"start":{"line":4994,"column":46},"end":{"line":4994,"column":64}},"1519":{"start":{"line":4995,"column":8},"end":{"line":4995,"column":27}},"1520":{"start":{"line":4996,"column":8},"end":{"line":4996,"column":14}},"1521":{"start":{"line":4998,"column":60},"end":{"line":4998,"column":77}},"1522":{"start":{"line":4999,"column":8},"end":{"line":4999,"column":28}},"1523":{"start":{"line":5000,"column":8},"end":{"line":5000,"column":14}},"1524":{"start":{"line":5002,"column":41},"end":{"line":5002,"column":60}},"1525":{"start":{"line":5003,"column":8},"end":{"line":5003,"column":29}},"1526":{"start":{"line":5004,"column":8},"end":{"line":5004,"column":14}},"1527":{"start":{"line":5006,"column":8},"end":{"line":5006,"column":27}},"1528":{"start":{"line":5007,"column":8},"end":{"line":5007,"column":14}},"1529":{"start":{"line":5010,"column":2},"end":{"line":5010,"column":13}},"1530":{"start":{"line":5018,"column":0},"end":{"line":5022,"column":2}},"1531":{"start":{"line":5019,"column":15},"end":{"line":5019,"column":38}},"1532":{"start":{"line":5020,"column":2},"end":{"line":5020,"column":65}},"1533":{"start":{"line":5021,"column":2},"end":{"line":5021,"column":34}},"1534":{"start":{"line":5032,"column":0},"end":{"line":5055,"column":2}},"1535":{"start":{"line":5033,"column":10},"end":{"line":5033,"column":19}},"1536":{"start":{"line":5034,"column":2},"end":{"line":5034,"column":29}},"1537":{"start":{"line":5035,"column":2},"end":{"line":5040,"column":3}},"1538":{"start":{"line":5036,"column":4},"end":{"line":5038,"column":7}},"1539":{"start":{"line":5041,"column":2},"end":{"line":5041,"column":25}},"1540":{"start":{"line":5042,"column":2},"end":{"line":5047,"column":3}},"1541":{"start":{"line":5043,"column":4},"end":{"line":5045,"column":7}},"1542":{"start":{"line":5048,"column":2},"end":{"line":5048,"column":26}},"1543":{"start":{"line":5049,"column":2},"end":{"line":5054,"column":3}},"1544":{"start":{"line":5050,"column":4},"end":{"line":5052,"column":7}},"1545":{"start":{"line":5062,"column":0},"end":{"line":5064,"column":2}},"1546":{"start":{"line":5063,"column":2},"end":{"line":5063,"column":92}},"1547":{"start":{"line":5072,"column":0},"end":{"line":5075,"column":2}},"1548":{"start":{"line":5073,"column":2},"end":{"line":5074,"column":21}},"1549":{"start":{"line":5085,"column":0},"end":{"line":5088,"column":2}},"1550":{"start":{"line":5086,"column":2},"end":{"line":5087,"column":21}},"1551":{"start":{"line":5092,"column":0},"end":{"line":5094,"column":2}},"1552":{"start":{"line":5093,"column":2},"end":{"line":5093,"column":51}},"1553":{"start":{"line":5101,"column":0},"end":{"line":5103,"column":2}},"1554":{"start":{"line":5102,"column":2},"end":{"line":5102,"column":96}},"1555":{"start":{"line":5107,"column":0},"end":{"line":5109,"column":2}},"1556":{"start":{"line":5108,"column":2},"end":{"line":5108,"column":50}},"1557":{"start":{"line":5116,"column":0},"end":{"line":5118,"column":2}},"1558":{"start":{"line":5117,"column":2},"end":{"line":5117,"column":78}},"1559":{"start":{"line":5122,"column":0},"end":{"line":5124,"column":2}},"1560":{"start":{"line":5123,"column":2},"end":{"line":5123,"column":52}},"1561":{"start":{"line":5138,"column":0},"end":{"line":5140,"column":2}},"1562":{"start":{"line":5139,"column":2},"end":{"line":5139,"column":101}},"1563":{"start":{"line":5141,"column":0},"end":{"line":5141,"column":58}},"1564":{"start":{"line":5142,"column":0},"end":{"line":5144,"column":1}},"1565":{"start":{"line":5143,"column":2},"end":{"line":5143,"column":76}},"1566":{"start":{"line":5150,"column":0},"end":{"line":5150,"column":51}},"1567":{"start":{"line":5154,"column":0},"end":{"line":5190,"column":1}},"1568":{"start":{"line":5165,"column":2},"end":{"line":5167,"column":4}},"1569":{"start":{"line":5166,"column":4},"end":{"line":5166,"column":76}},"1570":{"start":{"line":5179,"column":2},"end":{"line":5189,"column":4}},"1571":{"start":{"line":5180,"column":16},"end":{"line":5182,"column":59}},"1572":{"start":{"line":5185,"column":4},"end":{"line":5187,"column":5}},"1573":{"start":{"line":5186,"column":6},"end":{"line":5186,"column":37}},"1574":{"start":{"line":5188,"column":4},"end":{"line":5188,"column":15}},"1575":{"start":{"line":5198,"column":0},"end":{"line":5202,"column":2}},"1576":{"start":{"line":5199,"column":15},"end":{"line":5199,"column":43}},"1577":{"start":{"line":5200,"column":12},"end":{"line":5200,"column":46}},"1578":{"start":{"line":5201,"column":2},"end":{"line":5201,"column":79}},"1579":{"start":{"line":5212,"column":0},"end":{"line":5230,"column":2}},"1580":{"start":{"line":5213,"column":2},"end":{"line":5228,"column":3}},"1581":{"start":{"line":5214,"column":4},"end":{"line":5216,"column":5}},"1582":{"start":{"line":5215,"column":6},"end":{"line":5215,"column":12}},"1583":{"start":{"line":5217,"column":16},"end":{"line":5217,"column":39}},"1584":{"start":{"line":5218,"column":4},"end":{"line":5226,"column":15}},"1585":{"start":{"line":5220,"column":20},"end":{"line":5220,"column":50}},"1586":{"start":{"line":5221,"column":8},"end":{"line":5221,"column":88}},"1587":{"start":{"line":5222,"column":8},"end":{"line":5222,"column":30}},"1588":{"start":{"line":5223,"column":8},"end":{"line":5223,"column":14}},"1589":{"start":{"line":5225,"column":8},"end":{"line":5225,"column":27}},"1590":{"start":{"line":5226,"column":8},"end":{"line":5226,"column":14}},"1591":{"start":{"line":5229,"column":2},"end":{"line":5229,"column":13}},"1592":{"start":{"line":5237,"column":0},"end":{"line":5241,"column":2}},"1593":{"start":{"line":5238,"column":15},"end":{"line":5238,"column":38}},"1594":{"start":{"line":5239,"column":2},"end":{"line":5239,"column":69}},"1595":{"start":{"line":5240,"column":2},"end":{"line":5240,"column":34}},"1596":{"start":{"line":5251,"column":0},"end":{"line":5261,"column":2}},"1597":{"start":{"line":5252,"column":10},"end":{"line":5252,"column":19}},"1598":{"start":{"line":5253,"column":2},"end":{"line":5253,"column":31}},"1599":{"start":{"line":5254,"column":2},"end":{"line":5260,"column":3}},"1600":{"start":{"line":5255,"column":4},"end":{"line":5258,"column":54}},"1601":{"start":{"line":5268,"column":0},"end":{"line":5271,"column":2}},"1602":{"start":{"line":5269,"column":2},"end":{"line":5270,"column":77}},"1603":{"start":{"line":5275,"column":0},"end":{"line":5277,"column":2}},"1604":{"start":{"line":5276,"column":2},"end":{"line":5276,"column":55}},"1605":{"start":{"line":5285,"column":0},"end":{"line":5287,"column":2}},"1606":{"start":{"line":5286,"column":2},"end":{"line":5286,"column":105}},"1607":{"start":{"line":5290,"column":0},"end":{"line":5292,"column":2}},"1608":{"start":{"line":5291,"column":2},"end":{"line":5291,"column":26}},"1609":{"start":{"line":5306,"column":0},"end":{"line":5308,"column":2}},"1610":{"start":{"line":5307,"column":2},"end":{"line":5307,"column":61}},"1611":{"start":{"line":5309,"column":0},"end":{"line":5309,"column":54}},"1612":{"start":{"line":5310,"column":0},"end":{"line":5312,"column":1}},"1613":{"start":{"line":5311,"column":2},"end":{"line":5311,"column":68}},"1614":{"start":{"line":5315,"column":0},"end":{"line":5351,"column":1}},"1615":{"start":{"line":5326,"column":2},"end":{"line":5328,"column":4}},"1616":{"start":{"line":5327,"column":4},"end":{"line":5327,"column":72}},"1617":{"start":{"line":5340,"column":2},"end":{"line":5350,"column":4}},"1618":{"start":{"line":5341,"column":16},"end":{"line":5343,"column":58}},"1619":{"start":{"line":5346,"column":4},"end":{"line":5348,"column":5}},"1620":{"start":{"line":5347,"column":6},"end":{"line":5347,"column":37}},"1621":{"start":{"line":5349,"column":4},"end":{"line":5349,"column":15}},"1622":{"start":{"line":5359,"column":0},"end":{"line":5363,"column":2}},"1623":{"start":{"line":5360,"column":15},"end":{"line":5360,"column":43}},"1624":{"start":{"line":5361,"column":12},"end":{"line":5361,"column":42}},"1625":{"start":{"line":5362,"column":2},"end":{"line":5362,"column":75}},"1626":{"start":{"line":5373,"column":0},"end":{"line":5395,"column":2}},"1627":{"start":{"line":5374,"column":2},"end":{"line":5393,"column":3}},"1628":{"start":{"line":5375,"column":4},"end":{"line":5377,"column":5}},"1629":{"start":{"line":5376,"column":6},"end":{"line":5376,"column":12}},"1630":{"start":{"line":5378,"column":16},"end":{"line":5378,"column":39}},"1631":{"start":{"line":5379,"column":4},"end":{"line":5391,"column":15}},"1632":{"start":{"line":5381,"column":20},"end":{"line":5381,"column":42}},"1633":{"start":{"line":5382,"column":8},"end":{"line":5382,"column":80}},"1634":{"start":{"line":5383,"column":8},"end":{"line":5383,"column":25}},"1635":{"start":{"line":5384,"column":8},"end":{"line":5384,"column":14}},"1636":{"start":{"line":5386,"column":60},"end":{"line":5386,"column":77}},"1637":{"start":{"line":5387,"column":8},"end":{"line":5387,"column":28}},"1638":{"start":{"line":5388,"column":8},"end":{"line":5388,"column":14}},"1639":{"start":{"line":5390,"column":8},"end":{"line":5390,"column":27}},"1640":{"start":{"line":5391,"column":8},"end":{"line":5391,"column":14}},"1641":{"start":{"line":5394,"column":2},"end":{"line":5394,"column":13}},"1642":{"start":{"line":5402,"column":0},"end":{"line":5406,"column":2}},"1643":{"start":{"line":5403,"column":15},"end":{"line":5403,"column":38}},"1644":{"start":{"line":5404,"column":2},"end":{"line":5404,"column":65}},"1645":{"start":{"line":5405,"column":2},"end":{"line":5405,"column":34}},"1646":{"start":{"line":5416,"column":0},"end":{"line":5433,"column":2}},"1647":{"start":{"line":5417,"column":10},"end":{"line":5417,"column":19}},"1648":{"start":{"line":5418,"column":2},"end":{"line":5418,"column":22}},"1649":{"start":{"line":5419,"column":2},"end":{"line":5425,"column":3}},"1650":{"start":{"line":5420,"column":4},"end":{"line":5423,"column":46}},"1651":{"start":{"line":5426,"column":2},"end":{"line":5426,"column":25}},"1652":{"start":{"line":5427,"column":2},"end":{"line":5432,"column":3}},"1653":{"start":{"line":5428,"column":4},"end":{"line":5430,"column":7}},"1654":{"start":{"line":5440,"column":0},"end":{"line":5443,"column":2}},"1655":{"start":{"line":5441,"column":2},"end":{"line":5442,"column":61}},"1656":{"start":{"line":5447,"column":0},"end":{"line":5449,"column":2}},"1657":{"start":{"line":5448,"column":2},"end":{"line":5448,"column":47}},"1658":{"start":{"line":5452,"column":0},"end":{"line":5454,"column":2}},"1659":{"start":{"line":5453,"column":2},"end":{"line":5453,"column":24}},"1660":{"start":{"line":5461,"column":0},"end":{"line":5463,"column":2}},"1661":{"start":{"line":5462,"column":2},"end":{"line":5462,"column":48}},"1662":{"start":{"line":5470,"column":0},"end":{"line":5472,"column":2}},"1663":{"start":{"line":5471,"column":2},"end":{"line":5471,"column":96}},"1664":{"start":{"line":5476,"column":0},"end":{"line":5478,"column":2}},"1665":{"start":{"line":5477,"column":2},"end":{"line":5477,"column":50}},"1666":{"start":{"line":5492,"column":0},"end":{"line":5494,"column":2}},"1667":{"start":{"line":5493,"column":2},"end":{"line":5493,"column":61}},"1668":{"start":{"line":5495,"column":0},"end":{"line":5495,"column":50}},"1669":{"start":{"line":5496,"column":0},"end":{"line":5498,"column":1}},"1670":{"start":{"line":5497,"column":2},"end":{"line":5497,"column":60}},"1671":{"start":{"line":5501,"column":0},"end":{"line":5537,"column":1}},"1672":{"start":{"line":5512,"column":2},"end":{"line":5514,"column":4}},"1673":{"start":{"line":5513,"column":4},"end":{"line":5513,"column":68}},"1674":{"start":{"line":5526,"column":2},"end":{"line":5536,"column":4}},"1675":{"start":{"line":5527,"column":16},"end":{"line":5529,"column":90}},"1676":{"start":{"line":5532,"column":4},"end":{"line":5534,"column":5}},"1677":{"start":{"line":5533,"column":6},"end":{"line":5533,"column":37}},"1678":{"start":{"line":5535,"column":4},"end":{"line":5535,"column":15}},"1679":{"start":{"line":5545,"column":0},"end":{"line":5549,"column":2}},"1680":{"start":{"line":5546,"column":15},"end":{"line":5546,"column":43}},"1681":{"start":{"line":5547,"column":12},"end":{"line":5547,"column":38}},"1682":{"start":{"line":5548,"column":2},"end":{"line":5548,"column":71}},"1683":{"start":{"line":5559,"column":0},"end":{"line":5581,"column":2}},"1684":{"start":{"line":5560,"column":2},"end":{"line":5579,"column":3}},"1685":{"start":{"line":5561,"column":4},"end":{"line":5563,"column":5}},"1686":{"start":{"line":5562,"column":6},"end":{"line":5562,"column":12}},"1687":{"start":{"line":5564,"column":16},"end":{"line":5564,"column":39}},"1688":{"start":{"line":5565,"column":4},"end":{"line":5577,"column":15}},"1689":{"start":{"line":5567,"column":41},"end":{"line":5567,"column":60}},"1690":{"start":{"line":5568,"column":8},"end":{"line":5568,"column":33}},"1691":{"start":{"line":5569,"column":8},"end":{"line":5569,"column":14}},"1692":{"start":{"line":5571,"column":20},"end":{"line":5571,"column":44}},"1693":{"start":{"line":5572,"column":8},"end":{"line":5572,"column":82}},"1694":{"start":{"line":5573,"column":8},"end":{"line":5573,"column":30}},"1695":{"start":{"line":5574,"column":8},"end":{"line":5574,"column":14}},"1696":{"start":{"line":5576,"column":8},"end":{"line":5576,"column":27}},"1697":{"start":{"line":5577,"column":8},"end":{"line":5577,"column":14}},"1698":{"start":{"line":5580,"column":2},"end":{"line":5580,"column":13}},"1699":{"start":{"line":5588,"column":0},"end":{"line":5592,"column":2}},"1700":{"start":{"line":5589,"column":15},"end":{"line":5589,"column":38}},"1701":{"start":{"line":5590,"column":2},"end":{"line":5590,"column":61}},"1702":{"start":{"line":5591,"column":2},"end":{"line":5591,"column":34}},"1703":{"start":{"line":5602,"column":0},"end":{"line":5619,"column":2}},"1704":{"start":{"line":5603,"column":10},"end":{"line":5603,"column":19}},"1705":{"start":{"line":5604,"column":2},"end":{"line":5604,"column":30}},"1706":{"start":{"line":5605,"column":2},"end":{"line":5610,"column":3}},"1707":{"start":{"line":5606,"column":4},"end":{"line":5608,"column":7}},"1708":{"start":{"line":5611,"column":2},"end":{"line":5611,"column":27}},"1709":{"start":{"line":5612,"column":2},"end":{"line":5618,"column":3}},"1710":{"start":{"line":5613,"column":4},"end":{"line":5616,"column":48}},"1711":{"start":{"line":5626,"column":0},"end":{"line":5628,"column":2}},"1712":{"start":{"line":5627,"column":2},"end":{"line":5627,"column":78}},"1713":{"start":{"line":5632,"column":0},"end":{"line":5634,"column":2}},"1714":{"start":{"line":5633,"column":2},"end":{"line":5633,"column":52}},"1715":{"start":{"line":5641,"column":0},"end":{"line":5644,"column":2}},"1716":{"start":{"line":5642,"column":2},"end":{"line":5643,"column":63}},"1717":{"start":{"line":5648,"column":0},"end":{"line":5650,"column":2}},"1718":{"start":{"line":5649,"column":2},"end":{"line":5649,"column":47}},"1719":{"start":{"line":5653,"column":0},"end":{"line":5655,"column":2}},"1720":{"start":{"line":5654,"column":2},"end":{"line":5654,"column":29}},"1721":{"start":{"line":5662,"column":0},"end":{"line":5664,"column":2}},"1722":{"start":{"line":5663,"column":2},"end":{"line":5663,"column":48}},"1723":{"start":{"line":5678,"column":0},"end":{"line":5680,"column":2}},"1724":{"start":{"line":5679,"column":2},"end":{"line":5679,"column":61}},"1725":{"start":{"line":5681,"column":0},"end":{"line":5681,"column":54}},"1726":{"start":{"line":5682,"column":0},"end":{"line":5684,"column":1}},"1727":{"start":{"line":5683,"column":2},"end":{"line":5683,"column":68}},"1728":{"start":{"line":5687,"column":0},"end":{"line":5724,"column":1}},"1729":{"start":{"line":5698,"column":2},"end":{"line":5700,"column":4}},"1730":{"start":{"line":5699,"column":4},"end":{"line":5699,"column":72}},"1731":{"start":{"line":5712,"column":2},"end":{"line":5723,"column":4}},"1732":{"start":{"line":5713,"column":16},"end":{"line":5716,"column":61}},"1733":{"start":{"line":5719,"column":4},"end":{"line":5721,"column":5}},"1734":{"start":{"line":5720,"column":6},"end":{"line":5720,"column":37}},"1735":{"start":{"line":5722,"column":4},"end":{"line":5722,"column":15}},"1736":{"start":{"line":5732,"column":0},"end":{"line":5736,"column":2}},"1737":{"start":{"line":5733,"column":15},"end":{"line":5733,"column":43}},"1738":{"start":{"line":5734,"column":12},"end":{"line":5734,"column":42}},"1739":{"start":{"line":5735,"column":2},"end":{"line":5735,"column":75}},"1740":{"start":{"line":5746,"column":0},"end":{"line":5772,"column":2}},"1741":{"start":{"line":5747,"column":2},"end":{"line":5770,"column":3}},"1742":{"start":{"line":5748,"column":4},"end":{"line":5750,"column":5}},"1743":{"start":{"line":5749,"column":6},"end":{"line":5749,"column":12}},"1744":{"start":{"line":5751,"column":16},"end":{"line":5751,"column":39}},"1745":{"start":{"line":5752,"column":4},"end":{"line":5768,"column":15}},"1746":{"start":{"line":5754,"column":20},"end":{"line":5754,"column":49}},"1747":{"start":{"line":5755,"column":8},"end":{"line":5755,"column":87}},"1748":{"start":{"line":5756,"column":8},"end":{"line":5756,"column":26}},"1749":{"start":{"line":5757,"column":8},"end":{"line":5757,"column":14}},"1750":{"start":{"line":5759,"column":41},"end":{"line":5759,"column":60}},"1751":{"start":{"line":5760,"column":8},"end":{"line":5760,"column":30}},"1752":{"start":{"line":5761,"column":8},"end":{"line":5761,"column":14}},"1753":{"start":{"line":5763,"column":41},"end":{"line":5763,"column":60}},"1754":{"start":{"line":5764,"column":8},"end":{"line":5764,"column":30}},"1755":{"start":{"line":5765,"column":8},"end":{"line":5765,"column":14}},"1756":{"start":{"line":5767,"column":8},"end":{"line":5767,"column":27}},"1757":{"start":{"line":5768,"column":8},"end":{"line":5768,"column":14}},"1758":{"start":{"line":5771,"column":2},"end":{"line":5771,"column":13}},"1759":{"start":{"line":5779,"column":0},"end":{"line":5783,"column":2}},"1760":{"start":{"line":5780,"column":15},"end":{"line":5780,"column":38}},"1761":{"start":{"line":5781,"column":2},"end":{"line":5781,"column":65}},"1762":{"start":{"line":5782,"column":2},"end":{"line":5782,"column":34}},"1763":{"start":{"line":5793,"column":0},"end":{"line":5817,"column":2}},"1764":{"start":{"line":5794,"column":10},"end":{"line":5794,"column":19}},"1765":{"start":{"line":5795,"column":2},"end":{"line":5795,"column":23}},"1766":{"start":{"line":5796,"column":2},"end":{"line":5802,"column":3}},"1767":{"start":{"line":5797,"column":4},"end":{"line":5800,"column":53}},"1768":{"start":{"line":5803,"column":2},"end":{"line":5803,"column":27}},"1769":{"start":{"line":5804,"column":2},"end":{"line":5809,"column":3}},"1770":{"start":{"line":5805,"column":4},"end":{"line":5807,"column":7}},"1771":{"start":{"line":5810,"column":2},"end":{"line":5810,"column":27}},"1772":{"start":{"line":5811,"column":2},"end":{"line":5816,"column":3}},"1773":{"start":{"line":5812,"column":4},"end":{"line":5814,"column":7}},"1774":{"start":{"line":5824,"column":0},"end":{"line":5827,"column":2}},"1775":{"start":{"line":5825,"column":2},"end":{"line":5826,"column":68}},"1776":{"start":{"line":5831,"column":0},"end":{"line":5833,"column":2}},"1777":{"start":{"line":5832,"column":2},"end":{"line":5832,"column":47}},"1778":{"start":{"line":5836,"column":0},"end":{"line":5838,"column":2}},"1779":{"start":{"line":5837,"column":2},"end":{"line":5837,"column":25}},"1780":{"start":{"line":5845,"column":0},"end":{"line":5847,"column":2}},"1781":{"start":{"line":5846,"column":2},"end":{"line":5846,"column":48}},"1782":{"start":{"line":5854,"column":0},"end":{"line":5856,"column":2}},"1783":{"start":{"line":5855,"column":2},"end":{"line":5855,"column":78}},"1784":{"start":{"line":5860,"column":0},"end":{"line":5862,"column":2}},"1785":{"start":{"line":5861,"column":2},"end":{"line":5861,"column":52}},"1786":{"start":{"line":5869,"column":0},"end":{"line":5871,"column":2}},"1787":{"start":{"line":5870,"column":2},"end":{"line":5870,"column":78}},"1788":{"start":{"line":5875,"column":0},"end":{"line":5877,"column":2}},"1789":{"start":{"line":5876,"column":2},"end":{"line":5876,"column":52}},"1790":{"start":{"line":5891,"column":0},"end":{"line":5893,"column":2}},"1791":{"start":{"line":5892,"column":2},"end":{"line":5892,"column":61}},"1792":{"start":{"line":5894,"column":0},"end":{"line":5894,"column":49}},"1793":{"start":{"line":5895,"column":0},"end":{"line":5897,"column":1}},"1794":{"start":{"line":5896,"column":2},"end":{"line":5896,"column":58}},"1795":{"start":{"line":5900,"column":0},"end":{"line":5936,"column":1}},"1796":{"start":{"line":5911,"column":2},"end":{"line":5913,"column":4}},"1797":{"start":{"line":5912,"column":4},"end":{"line":5912,"column":67}},"1798":{"start":{"line":5925,"column":2},"end":{"line":5935,"column":4}},"1799":{"start":{"line":5926,"column":16},"end":{"line":5928,"column":57}},"1800":{"start":{"line":5931,"column":4},"end":{"line":5933,"column":5}},"1801":{"start":{"line":5932,"column":6},"end":{"line":5932,"column":37}},"1802":{"start":{"line":5934,"column":4},"end":{"line":5934,"column":15}},"1803":{"start":{"line":5944,"column":0},"end":{"line":5948,"column":2}},"1804":{"start":{"line":5945,"column":15},"end":{"line":5945,"column":43}},"1805":{"start":{"line":5946,"column":12},"end":{"line":5946,"column":37}},"1806":{"start":{"line":5947,"column":2},"end":{"line":5947,"column":70}},"1807":{"start":{"line":5958,"column":0},"end":{"line":5979,"column":2}},"1808":{"start":{"line":5959,"column":2},"end":{"line":5977,"column":3}},"1809":{"start":{"line":5960,"column":4},"end":{"line":5962,"column":5}},"1810":{"start":{"line":5961,"column":6},"end":{"line":5961,"column":12}},"1811":{"start":{"line":5963,"column":16},"end":{"line":5963,"column":39}},"1812":{"start":{"line":5964,"column":4},"end":{"line":5975,"column":15}},"1813":{"start":{"line":5966,"column":46},"end":{"line":5966,"column":64}},"1814":{"start":{"line":5967,"column":8},"end":{"line":5967,"column":29}},"1815":{"start":{"line":5968,"column":8},"end":{"line":5968,"column":14}},"1816":{"start":{"line":5970,"column":41},"end":{"line":5970,"column":60}},"1817":{"start":{"line":5971,"column":8},"end":{"line":5971,"column":27}},"1818":{"start":{"line":5972,"column":8},"end":{"line":5972,"column":14}},"1819":{"start":{"line":5974,"column":8},"end":{"line":5974,"column":27}},"1820":{"start":{"line":5975,"column":8},"end":{"line":5975,"column":14}},"1821":{"start":{"line":5978,"column":2},"end":{"line":5978,"column":13}},"1822":{"start":{"line":5986,"column":0},"end":{"line":5990,"column":2}},"1823":{"start":{"line":5987,"column":15},"end":{"line":5987,"column":38}},"1824":{"start":{"line":5988,"column":2},"end":{"line":5988,"column":60}},"1825":{"start":{"line":5989,"column":2},"end":{"line":5989,"column":34}},"1826":{"start":{"line":6000,"column":0},"end":{"line":6016,"column":2}},"1827":{"start":{"line":6001,"column":10},"end":{"line":6001,"column":19}},"1828":{"start":{"line":6002,"column":2},"end":{"line":6002,"column":31}},"1829":{"start":{"line":6003,"column":2},"end":{"line":6008,"column":3}},"1830":{"start":{"line":6004,"column":4},"end":{"line":6006,"column":7}},"1831":{"start":{"line":6009,"column":2},"end":{"line":6009,"column":24}},"1832":{"start":{"line":6010,"column":2},"end":{"line":6015,"column":3}},"1833":{"start":{"line":6011,"column":4},"end":{"line":6013,"column":7}},"1834":{"start":{"line":6023,"column":0},"end":{"line":6025,"column":2}},"1835":{"start":{"line":6024,"column":2},"end":{"line":6024,"column":92}},"1836":{"start":{"line":6033,"column":0},"end":{"line":6036,"column":2}},"1837":{"start":{"line":6034,"column":2},"end":{"line":6035,"column":23}},"1838":{"start":{"line":6046,"column":0},"end":{"line":6049,"column":2}},"1839":{"start":{"line":6047,"column":2},"end":{"line":6048,"column":23}},"1840":{"start":{"line":6053,"column":0},"end":{"line":6055,"column":2}},"1841":{"start":{"line":6054,"column":2},"end":{"line":6054,"column":51}},"1842":{"start":{"line":6062,"column":0},"end":{"line":6064,"column":2}},"1843":{"start":{"line":6063,"column":2},"end":{"line":6063,"column":77}},"1844":{"start":{"line":6068,"column":0},"end":{"line":6070,"column":2}},"1845":{"start":{"line":6069,"column":2},"end":{"line":6069,"column":49}},"1846":{"start":{"line":6084,"column":0},"end":{"line":6086,"column":2}},"1847":{"start":{"line":6085,"column":2},"end":{"line":6085,"column":61}},"1848":{"start":{"line":6087,"column":0},"end":{"line":6087,"column":46}},"1849":{"start":{"line":6088,"column":0},"end":{"line":6090,"column":1}},"1850":{"start":{"line":6089,"column":2},"end":{"line":6089,"column":52}},"1851":{"start":{"line":6093,"column":0},"end":{"line":6129,"column":1}},"1852":{"start":{"line":6104,"column":2},"end":{"line":6106,"column":4}},"1853":{"start":{"line":6105,"column":4},"end":{"line":6105,"column":64}},"1854":{"start":{"line":6118,"column":2},"end":{"line":6128,"column":4}},"1855":{"start":{"line":6119,"column":16},"end":{"line":6121,"column":37}},"1856":{"start":{"line":6124,"column":4},"end":{"line":6126,"column":5}},"1857":{"start":{"line":6125,"column":6},"end":{"line":6125,"column":37}},"1858":{"start":{"line":6127,"column":4},"end":{"line":6127,"column":15}},"1859":{"start":{"line":6137,"column":0},"end":{"line":6141,"column":2}},"1860":{"start":{"line":6138,"column":15},"end":{"line":6138,"column":43}},"1861":{"start":{"line":6139,"column":12},"end":{"line":6139,"column":34}},"1862":{"start":{"line":6140,"column":2},"end":{"line":6140,"column":67}},"1863":{"start":{"line":6151,"column":0},"end":{"line":6172,"column":2}},"1864":{"start":{"line":6152,"column":2},"end":{"line":6170,"column":3}},"1865":{"start":{"line":6153,"column":4},"end":{"line":6155,"column":5}},"1866":{"start":{"line":6154,"column":6},"end":{"line":6154,"column":12}},"1867":{"start":{"line":6156,"column":16},"end":{"line":6156,"column":39}},"1868":{"start":{"line":6157,"column":4},"end":{"line":6168,"column":15}},"1869":{"start":{"line":6159,"column":46},"end":{"line":6159,"column":64}},"1870":{"start":{"line":6160,"column":8},"end":{"line":6160,"column":32}},"1871":{"start":{"line":6161,"column":8},"end":{"line":6161,"column":14}},"1872":{"start":{"line":6163,"column":46},"end":{"line":6163,"column":64}},"1873":{"start":{"line":6164,"column":8},"end":{"line":6164,"column":29}},"1874":{"start":{"line":6165,"column":8},"end":{"line":6165,"column":14}},"1875":{"start":{"line":6167,"column":8},"end":{"line":6167,"column":27}},"1876":{"start":{"line":6168,"column":8},"end":{"line":6168,"column":14}},"1877":{"start":{"line":6171,"column":2},"end":{"line":6171,"column":13}},"1878":{"start":{"line":6179,"column":0},"end":{"line":6183,"column":2}},"1879":{"start":{"line":6180,"column":15},"end":{"line":6180,"column":38}},"1880":{"start":{"line":6181,"column":2},"end":{"line":6181,"column":57}},"1881":{"start":{"line":6182,"column":2},"end":{"line":6182,"column":34}},"1882":{"start":{"line":6193,"column":0},"end":{"line":6209,"column":2}},"1883":{"start":{"line":6194,"column":10},"end":{"line":6194,"column":19}},"1884":{"start":{"line":6195,"column":2},"end":{"line":6195,"column":34}},"1885":{"start":{"line":6196,"column":2},"end":{"line":6201,"column":3}},"1886":{"start":{"line":6197,"column":4},"end":{"line":6199,"column":7}},"1887":{"start":{"line":6202,"column":2},"end":{"line":6202,"column":31}},"1888":{"start":{"line":6203,"column":2},"end":{"line":6208,"column":3}},"1889":{"start":{"line":6204,"column":4},"end":{"line":6206,"column":7}},"1890":{"start":{"line":6216,"column":0},"end":{"line":6218,"column":2}},"1891":{"start":{"line":6217,"column":2},"end":{"line":6217,"column":92}},"1892":{"start":{"line":6226,"column":0},"end":{"line":6229,"column":2}},"1893":{"start":{"line":6227,"column":2},"end":{"line":6228,"column":26}},"1894":{"start":{"line":6239,"column":0},"end":{"line":6242,"column":2}},"1895":{"start":{"line":6240,"column":2},"end":{"line":6241,"column":26}},"1896":{"start":{"line":6246,"column":0},"end":{"line":6248,"column":2}},"1897":{"start":{"line":6247,"column":2},"end":{"line":6247,"column":51}},"1898":{"start":{"line":6255,"column":0},"end":{"line":6257,"column":2}},"1899":{"start":{"line":6256,"column":2},"end":{"line":6256,"column":92}},"1900":{"start":{"line":6265,"column":0},"end":{"line":6268,"column":2}},"1901":{"start":{"line":6266,"column":2},"end":{"line":6267,"column":23}},"1902":{"start":{"line":6278,"column":0},"end":{"line":6281,"column":2}},"1903":{"start":{"line":6279,"column":2},"end":{"line":6280,"column":23}},"1904":{"start":{"line":6285,"column":0},"end":{"line":6287,"column":2}},"1905":{"start":{"line":6286,"column":2},"end":{"line":6286,"column":51}},"1906":{"start":{"line":6301,"column":0},"end":{"line":6303,"column":2}},"1907":{"start":{"line":6302,"column":2},"end":{"line":6302,"column":61}},"1908":{"start":{"line":6304,"column":0},"end":{"line":6304,"column":52}},"1909":{"start":{"line":6305,"column":0},"end":{"line":6307,"column":1}},"1910":{"start":{"line":6306,"column":2},"end":{"line":6306,"column":64}},"1911":{"start":{"line":6310,"column":0},"end":{"line":6346,"column":1}},"1912":{"start":{"line":6321,"column":2},"end":{"line":6323,"column":4}},"1913":{"start":{"line":6322,"column":4},"end":{"line":6322,"column":70}},"1914":{"start":{"line":6335,"column":2},"end":{"line":6345,"column":4}},"1915":{"start":{"line":6336,"column":16},"end":{"line":6338,"column":58}},"1916":{"start":{"line":6341,"column":4},"end":{"line":6343,"column":5}},"1917":{"start":{"line":6342,"column":6},"end":{"line":6342,"column":37}},"1918":{"start":{"line":6344,"column":4},"end":{"line":6344,"column":15}},"1919":{"start":{"line":6354,"column":0},"end":{"line":6358,"column":2}},"1920":{"start":{"line":6355,"column":15},"end":{"line":6355,"column":43}},"1921":{"start":{"line":6356,"column":12},"end":{"line":6356,"column":40}},"1922":{"start":{"line":6357,"column":2},"end":{"line":6357,"column":73}},"1923":{"start":{"line":6368,"column":0},"end":{"line":6389,"column":2}},"1924":{"start":{"line":6369,"column":2},"end":{"line":6387,"column":3}},"1925":{"start":{"line":6370,"column":4},"end":{"line":6372,"column":5}},"1926":{"start":{"line":6371,"column":6},"end":{"line":6371,"column":12}},"1927":{"start":{"line":6373,"column":16},"end":{"line":6373,"column":39}},"1928":{"start":{"line":6374,"column":4},"end":{"line":6385,"column":15}},"1929":{"start":{"line":6376,"column":41},"end":{"line":6376,"column":60}},"1930":{"start":{"line":6377,"column":8},"end":{"line":6377,"column":25}},"1931":{"start":{"line":6378,"column":8},"end":{"line":6378,"column":14}},"1932":{"start":{"line":6380,"column":41},"end":{"line":6380,"column":60}},"1933":{"start":{"line":6381,"column":8},"end":{"line":6381,"column":28}},"1934":{"start":{"line":6382,"column":8},"end":{"line":6382,"column":14}},"1935":{"start":{"line":6384,"column":8},"end":{"line":6384,"column":27}},"1936":{"start":{"line":6385,"column":8},"end":{"line":6385,"column":14}},"1937":{"start":{"line":6388,"column":2},"end":{"line":6388,"column":13}},"1938":{"start":{"line":6396,"column":0},"end":{"line":6400,"column":2}},"1939":{"start":{"line":6397,"column":15},"end":{"line":6397,"column":38}},"1940":{"start":{"line":6398,"column":2},"end":{"line":6398,"column":63}},"1941":{"start":{"line":6399,"column":2},"end":{"line":6399,"column":34}},"1942":{"start":{"line":6410,"column":0},"end":{"line":6426,"column":2}},"1943":{"start":{"line":6411,"column":10},"end":{"line":6411,"column":19}},"1944":{"start":{"line":6412,"column":2},"end":{"line":6412,"column":22}},"1945":{"start":{"line":6413,"column":2},"end":{"line":6418,"column":3}},"1946":{"start":{"line":6414,"column":4},"end":{"line":6416,"column":7}},"1947":{"start":{"line":6419,"column":2},"end":{"line":6419,"column":25}},"1948":{"start":{"line":6420,"column":2},"end":{"line":6425,"column":3}},"1949":{"start":{"line":6421,"column":4},"end":{"line":6423,"column":7}},"1950":{"start":{"line":6433,"column":0},"end":{"line":6435,"column":2}},"1951":{"start":{"line":6434,"column":2},"end":{"line":6434,"column":78}},"1952":{"start":{"line":6439,"column":0},"end":{"line":6441,"column":2}},"1953":{"start":{"line":6440,"column":2},"end":{"line":6440,"column":52}},"1954":{"start":{"line":6448,"column":0},"end":{"line":6450,"column":2}},"1955":{"start":{"line":6449,"column":2},"end":{"line":6449,"column":77}},"1956":{"start":{"line":6454,"column":0},"end":{"line":6456,"column":2}},"1957":{"start":{"line":6455,"column":2},"end":{"line":6455,"column":49}},"1958":{"start":{"line":6470,"column":0},"end":{"line":6472,"column":2}},"1959":{"start":{"line":6471,"column":2},"end":{"line":6471,"column":100}},"1960":{"start":{"line":6473,"column":0},"end":{"line":6473,"column":57}},"1961":{"start":{"line":6474,"column":0},"end":{"line":6476,"column":1}},"1962":{"start":{"line":6475,"column":2},"end":{"line":6475,"column":74}},"1963":{"start":{"line":6482,"column":0},"end":{"line":6482,"column":50}},"1964":{"start":{"line":6486,"column":0},"end":{"line":6523,"column":1}},"1965":{"start":{"line":6497,"column":2},"end":{"line":6499,"column":4}},"1966":{"start":{"line":6498,"column":4},"end":{"line":6498,"column":75}},"1967":{"start":{"line":6511,"column":2},"end":{"line":6522,"column":4}},"1968":{"start":{"line":6512,"column":16},"end":{"line":6515,"column":55}},"1969":{"start":{"line":6518,"column":4},"end":{"line":6520,"column":5}},"1970":{"start":{"line":6519,"column":6},"end":{"line":6519,"column":37}},"1971":{"start":{"line":6521,"column":4},"end":{"line":6521,"column":15}},"1972":{"start":{"line":6531,"column":0},"end":{"line":6535,"column":2}},"1973":{"start":{"line":6532,"column":15},"end":{"line":6532,"column":43}},"1974":{"start":{"line":6533,"column":12},"end":{"line":6533,"column":45}},"1975":{"start":{"line":6534,"column":2},"end":{"line":6534,"column":78}},"1976":{"start":{"line":6545,"column":0},"end":{"line":6568,"column":2}},"1977":{"start":{"line":6546,"column":2},"end":{"line":6566,"column":3}},"1978":{"start":{"line":6547,"column":4},"end":{"line":6549,"column":5}},"1979":{"start":{"line":6548,"column":6},"end":{"line":6548,"column":12}},"1980":{"start":{"line":6550,"column":16},"end":{"line":6550,"column":39}},"1981":{"start":{"line":6551,"column":4},"end":{"line":6564,"column":15}},"1982":{"start":{"line":6553,"column":20},"end":{"line":6553,"column":45}},"1983":{"start":{"line":6554,"column":8},"end":{"line":6554,"column":83}},"1984":{"start":{"line":6555,"column":8},"end":{"line":6555,"column":30}},"1985":{"start":{"line":6556,"column":8},"end":{"line":6556,"column":14}},"1986":{"start":{"line":6558,"column":20},"end":{"line":6558,"column":46}},"1987":{"start":{"line":6559,"column":8},"end":{"line":6559,"column":84}},"1988":{"start":{"line":6560,"column":8},"end":{"line":6560,"column":29}},"1989":{"start":{"line":6561,"column":8},"end":{"line":6561,"column":14}},"1990":{"start":{"line":6563,"column":8},"end":{"line":6563,"column":27}},"1991":{"start":{"line":6564,"column":8},"end":{"line":6564,"column":14}},"1992":{"start":{"line":6567,"column":2},"end":{"line":6567,"column":13}},"1993":{"start":{"line":6575,"column":0},"end":{"line":6579,"column":2}},"1994":{"start":{"line":6576,"column":15},"end":{"line":6576,"column":38}},"1995":{"start":{"line":6577,"column":2},"end":{"line":6577,"column":68}},"1996":{"start":{"line":6578,"column":2},"end":{"line":6578,"column":34}},"1997":{"start":{"line":6589,"column":0},"end":{"line":6607,"column":2}},"1998":{"start":{"line":6590,"column":10},"end":{"line":6590,"column":19}},"1999":{"start":{"line":6591,"column":2},"end":{"line":6591,"column":27}},"2000":{"start":{"line":6592,"column":2},"end":{"line":6598,"column":3}},"2001":{"start":{"line":6593,"column":4},"end":{"line":6596,"column":49}},"2002":{"start":{"line":6599,"column":2},"end":{"line":6599,"column":30}},"2003":{"start":{"line":6600,"column":2},"end":{"line":6606,"column":3}},"2004":{"start":{"line":6601,"column":4},"end":{"line":6604,"column":50}},"2005":{"start":{"line":6614,"column":0},"end":{"line":6617,"column":2}},"2006":{"start":{"line":6615,"column":2},"end":{"line":6616,"column":64}},"2007":{"start":{"line":6621,"column":0},"end":{"line":6623,"column":2}},"2008":{"start":{"line":6622,"column":2},"end":{"line":6622,"column":47}},"2009":{"start":{"line":6626,"column":0},"end":{"line":6628,"column":2}},"2010":{"start":{"line":6627,"column":2},"end":{"line":6627,"column":29}},"2011":{"start":{"line":6635,"column":0},"end":{"line":6637,"column":2}},"2012":{"start":{"line":6636,"column":2},"end":{"line":6636,"column":48}},"2013":{"start":{"line":6644,"column":0},"end":{"line":6647,"column":2}},"2014":{"start":{"line":6645,"column":2},"end":{"line":6646,"column":73}},"2015":{"start":{"line":6651,"column":0},"end":{"line":6653,"column":2}},"2016":{"start":{"line":6652,"column":2},"end":{"line":6652,"column":55}},"2017":{"start":{"line":6661,"column":0},"end":{"line":6663,"column":2}},"2018":{"start":{"line":6662,"column":2},"end":{"line":6662,"column":101}},"2019":{"start":{"line":6666,"column":0},"end":{"line":6668,"column":2}},"2020":{"start":{"line":6667,"column":2},"end":{"line":6667,"column":25}},"2021":{"start":{"line":6682,"column":0},"end":{"line":6684,"column":2}},"2022":{"start":{"line":6683,"column":2},"end":{"line":6683,"column":93}},"2023":{"start":{"line":6685,"column":0},"end":{"line":6685,"column":50}},"2024":{"start":{"line":6686,"column":0},"end":{"line":6688,"column":1}},"2025":{"start":{"line":6687,"column":2},"end":{"line":6687,"column":60}},"2026":{"start":{"line":6694,"column":0},"end":{"line":6694,"column":43}},"2027":{"start":{"line":6698,"column":0},"end":{"line":6735,"column":1}},"2028":{"start":{"line":6709,"column":2},"end":{"line":6711,"column":4}},"2029":{"start":{"line":6710,"column":4},"end":{"line":6710,"column":68}},"2030":{"start":{"line":6723,"column":2},"end":{"line":6734,"column":4}},"2031":{"start":{"line":6724,"column":16},"end":{"line":6727,"column":60}},"2032":{"start":{"line":6730,"column":4},"end":{"line":6732,"column":5}},"2033":{"start":{"line":6731,"column":6},"end":{"line":6731,"column":37}},"2034":{"start":{"line":6733,"column":4},"end":{"line":6733,"column":15}},"2035":{"start":{"line":6743,"column":0},"end":{"line":6747,"column":2}},"2036":{"start":{"line":6744,"column":15},"end":{"line":6744,"column":43}},"2037":{"start":{"line":6745,"column":12},"end":{"line":6745,"column":38}},"2038":{"start":{"line":6746,"column":2},"end":{"line":6746,"column":71}},"2039":{"start":{"line":6757,"column":0},"end":{"line":6782,"column":2}},"2040":{"start":{"line":6758,"column":2},"end":{"line":6780,"column":3}},"2041":{"start":{"line":6759,"column":4},"end":{"line":6761,"column":5}},"2042":{"start":{"line":6760,"column":6},"end":{"line":6760,"column":12}},"2043":{"start":{"line":6762,"column":16},"end":{"line":6762,"column":39}},"2044":{"start":{"line":6763,"column":4},"end":{"line":6778,"column":15}},"2045":{"start":{"line":6765,"column":41},"end":{"line":6765,"column":60}},"2046":{"start":{"line":6766,"column":8},"end":{"line":6766,"column":25}},"2047":{"start":{"line":6767,"column":8},"end":{"line":6767,"column":14}},"2048":{"start":{"line":6769,"column":41},"end":{"line":6769,"column":60}},"2049":{"start":{"line":6770,"column":8},"end":{"line":6770,"column":33}},"2050":{"start":{"line":6771,"column":8},"end":{"line":6771,"column":14}},"2051":{"start":{"line":6773,"column":41},"end":{"line":6773,"column":60}},"2052":{"start":{"line":6774,"column":8},"end":{"line":6774,"column":29}},"2053":{"start":{"line":6775,"column":8},"end":{"line":6775,"column":14}},"2054":{"start":{"line":6777,"column":8},"end":{"line":6777,"column":27}},"2055":{"start":{"line":6778,"column":8},"end":{"line":6778,"column":14}},"2056":{"start":{"line":6781,"column":2},"end":{"line":6781,"column":13}},"2057":{"start":{"line":6789,"column":0},"end":{"line":6793,"column":2}},"2058":{"start":{"line":6790,"column":15},"end":{"line":6790,"column":38}},"2059":{"start":{"line":6791,"column":2},"end":{"line":6791,"column":61}},"2060":{"start":{"line":6792,"column":2},"end":{"line":6792,"column":34}},"2061":{"start":{"line":6803,"column":0},"end":{"line":6826,"column":2}},"2062":{"start":{"line":6804,"column":10},"end":{"line":6804,"column":19}},"2063":{"start":{"line":6805,"column":2},"end":{"line":6805,"column":22}},"2064":{"start":{"line":6806,"column":2},"end":{"line":6811,"column":3}},"2065":{"start":{"line":6807,"column":4},"end":{"line":6809,"column":7}},"2066":{"start":{"line":6812,"column":2},"end":{"line":6812,"column":34}},"2067":{"start":{"line":6813,"column":2},"end":{"line":6818,"column":3}},"2068":{"start":{"line":6814,"column":4},"end":{"line":6816,"column":7}},"2069":{"start":{"line":6819,"column":2},"end":{"line":6819,"column":26}},"2070":{"start":{"line":6820,"column":2},"end":{"line":6825,"column":3}},"2071":{"start":{"line":6821,"column":4},"end":{"line":6823,"column":7}},"2072":{"start":{"line":6833,"column":0},"end":{"line":6835,"column":2}},"2073":{"start":{"line":6834,"column":2},"end":{"line":6834,"column":78}},"2074":{"start":{"line":6839,"column":0},"end":{"line":6841,"column":2}},"2075":{"start":{"line":6840,"column":2},"end":{"line":6840,"column":52}},"2076":{"start":{"line":6848,"column":0},"end":{"line":6850,"column":2}},"2077":{"start":{"line":6849,"column":2},"end":{"line":6849,"column":79}},"2078":{"start":{"line":6854,"column":0},"end":{"line":6856,"column":2}},"2079":{"start":{"line":6855,"column":2},"end":{"line":6855,"column":46}},"2080":{"start":{"line":6863,"column":0},"end":{"line":6865,"column":2}},"2081":{"start":{"line":6864,"column":2},"end":{"line":6864,"column":61}},"2082":{"start":{"line":6868,"column":0},"end":{"line":6870,"column":2}},"2083":{"start":{"line":6869,"column":2},"end":{"line":6869,"column":29}},"2084":{"start":{"line":6877,"column":0},"end":{"line":6879,"column":2}},"2085":{"start":{"line":6878,"column":2},"end":{"line":6878,"column":78}},"2086":{"start":{"line":6883,"column":0},"end":{"line":6885,"column":2}},"2087":{"start":{"line":6884,"column":2},"end":{"line":6884,"column":52}},"2088":{"start":{"line":6899,"column":0},"end":{"line":6901,"column":2}},"2089":{"start":{"line":6900,"column":2},"end":{"line":6900,"column":93}},"2090":{"start":{"line":6902,"column":0},"end":{"line":6902,"column":50}},"2091":{"start":{"line":6903,"column":0},"end":{"line":6905,"column":1}},"2092":{"start":{"line":6904,"column":2},"end":{"line":6904,"column":60}},"2093":{"start":{"line":6911,"column":0},"end":{"line":6911,"column":43}},"2094":{"start":{"line":6915,"column":0},"end":{"line":6952,"column":1}},"2095":{"start":{"line":6926,"column":2},"end":{"line":6928,"column":4}},"2096":{"start":{"line":6927,"column":4},"end":{"line":6927,"column":68}},"2097":{"start":{"line":6940,"column":2},"end":{"line":6951,"column":4}},"2098":{"start":{"line":6941,"column":16},"end":{"line":6944,"column":56}},"2099":{"start":{"line":6947,"column":4},"end":{"line":6949,"column":5}},"2100":{"start":{"line":6948,"column":6},"end":{"line":6948,"column":37}},"2101":{"start":{"line":6950,"column":4},"end":{"line":6950,"column":15}},"2102":{"start":{"line":6960,"column":0},"end":{"line":6964,"column":2}},"2103":{"start":{"line":6961,"column":15},"end":{"line":6961,"column":43}},"2104":{"start":{"line":6962,"column":12},"end":{"line":6962,"column":38}},"2105":{"start":{"line":6963,"column":2},"end":{"line":6963,"column":71}},"2106":{"start":{"line":6974,"column":0},"end":{"line":6996,"column":2}},"2107":{"start":{"line":6975,"column":2},"end":{"line":6994,"column":3}},"2108":{"start":{"line":6976,"column":4},"end":{"line":6978,"column":5}},"2109":{"start":{"line":6977,"column":6},"end":{"line":6977,"column":12}},"2110":{"start":{"line":6979,"column":16},"end":{"line":6979,"column":39}},"2111":{"start":{"line":6980,"column":4},"end":{"line":6992,"column":15}},"2112":{"start":{"line":6982,"column":20},"end":{"line":6982,"column":42}},"2113":{"start":{"line":6983,"column":8},"end":{"line":6983,"column":80}},"2114":{"start":{"line":6984,"column":8},"end":{"line":6984,"column":28}},"2115":{"start":{"line":6985,"column":8},"end":{"line":6985,"column":14}},"2116":{"start":{"line":6987,"column":41},"end":{"line":6987,"column":60}},"2117":{"start":{"line":6988,"column":8},"end":{"line":6988,"column":25}},"2118":{"start":{"line":6989,"column":8},"end":{"line":6989,"column":14}},"2119":{"start":{"line":6991,"column":8},"end":{"line":6991,"column":27}},"2120":{"start":{"line":6992,"column":8},"end":{"line":6992,"column":14}},"2121":{"start":{"line":6995,"column":2},"end":{"line":6995,"column":13}},"2122":{"start":{"line":7003,"column":0},"end":{"line":7007,"column":2}},"2123":{"start":{"line":7004,"column":15},"end":{"line":7004,"column":38}},"2124":{"start":{"line":7005,"column":2},"end":{"line":7005,"column":61}},"2125":{"start":{"line":7006,"column":2},"end":{"line":7006,"column":34}},"2126":{"start":{"line":7017,"column":0},"end":{"line":7034,"column":2}},"2127":{"start":{"line":7018,"column":10},"end":{"line":7018,"column":19}},"2128":{"start":{"line":7019,"column":2},"end":{"line":7019,"column":29}},"2129":{"start":{"line":7020,"column":2},"end":{"line":7026,"column":3}},"2130":{"start":{"line":7021,"column":4},"end":{"line":7024,"column":46}},"2131":{"start":{"line":7027,"column":2},"end":{"line":7027,"column":22}},"2132":{"start":{"line":7028,"column":2},"end":{"line":7033,"column":3}},"2133":{"start":{"line":7029,"column":4},"end":{"line":7031,"column":7}},"2134":{"start":{"line":7041,"column":0},"end":{"line":7044,"column":2}},"2135":{"start":{"line":7042,"column":2},"end":{"line":7043,"column":69}},"2136":{"start":{"line":7048,"column":0},"end":{"line":7050,"column":2}},"2137":{"start":{"line":7049,"column":2},"end":{"line":7049,"column":55}},"2138":{"start":{"line":7058,"column":0},"end":{"line":7060,"column":2}},"2139":{"start":{"line":7059,"column":2},"end":{"line":7059,"column":97}},"2140":{"start":{"line":7063,"column":0},"end":{"line":7065,"column":2}},"2141":{"start":{"line":7064,"column":2},"end":{"line":7064,"column":24}},"2142":{"start":{"line":7072,"column":0},"end":{"line":7074,"column":2}},"2143":{"start":{"line":7073,"column":2},"end":{"line":7073,"column":78}},"2144":{"start":{"line":7078,"column":0},"end":{"line":7080,"column":2}},"2145":{"start":{"line":7079,"column":2},"end":{"line":7079,"column":52}},"2146":{"start":{"line":7094,"column":0},"end":{"line":7096,"column":2}},"2147":{"start":{"line":7095,"column":2},"end":{"line":7095,"column":61}},"2148":{"start":{"line":7097,"column":0},"end":{"line":7097,"column":49}},"2149":{"start":{"line":7098,"column":0},"end":{"line":7100,"column":1}},"2150":{"start":{"line":7099,"column":2},"end":{"line":7099,"column":58}},"2151":{"start":{"line":7103,"column":0},"end":{"line":7139,"column":1}},"2152":{"start":{"line":7114,"column":2},"end":{"line":7116,"column":4}},"2153":{"start":{"line":7115,"column":4},"end":{"line":7115,"column":67}},"2154":{"start":{"line":7128,"column":2},"end":{"line":7138,"column":4}},"2155":{"start":{"line":7129,"column":16},"end":{"line":7131,"column":43}},"2156":{"start":{"line":7134,"column":4},"end":{"line":7136,"column":5}},"2157":{"start":{"line":7135,"column":6},"end":{"line":7135,"column":37}},"2158":{"start":{"line":7137,"column":4},"end":{"line":7137,"column":15}},"2159":{"start":{"line":7147,"column":0},"end":{"line":7151,"column":2}},"2160":{"start":{"line":7148,"column":15},"end":{"line":7148,"column":43}},"2161":{"start":{"line":7149,"column":12},"end":{"line":7149,"column":37}},"2162":{"start":{"line":7150,"column":2},"end":{"line":7150,"column":70}},"2163":{"start":{"line":7161,"column":0},"end":{"line":7182,"column":2}},"2164":{"start":{"line":7162,"column":2},"end":{"line":7180,"column":3}},"2165":{"start":{"line":7163,"column":4},"end":{"line":7165,"column":5}},"2166":{"start":{"line":7164,"column":6},"end":{"line":7164,"column":12}},"2167":{"start":{"line":7166,"column":16},"end":{"line":7166,"column":39}},"2168":{"start":{"line":7167,"column":4},"end":{"line":7178,"column":15}},"2169":{"start":{"line":7169,"column":46},"end":{"line":7169,"column":64}},"2170":{"start":{"line":7170,"column":8},"end":{"line":7170,"column":30}},"2171":{"start":{"line":7171,"column":8},"end":{"line":7171,"column":14}},"2172":{"start":{"line":7173,"column":46},"end":{"line":7173,"column":64}},"2173":{"start":{"line":7174,"column":8},"end":{"line":7174,"column":32}},"2174":{"start":{"line":7175,"column":8},"end":{"line":7175,"column":14}},"2175":{"start":{"line":7177,"column":8},"end":{"line":7177,"column":27}},"2176":{"start":{"line":7178,"column":8},"end":{"line":7178,"column":14}},"2177":{"start":{"line":7181,"column":2},"end":{"line":7181,"column":13}},"2178":{"start":{"line":7189,"column":0},"end":{"line":7193,"column":2}},"2179":{"start":{"line":7190,"column":15},"end":{"line":7190,"column":38}},"2180":{"start":{"line":7191,"column":2},"end":{"line":7191,"column":60}},"2181":{"start":{"line":7192,"column":2},"end":{"line":7192,"column":34}},"2182":{"start":{"line":7203,"column":0},"end":{"line":7219,"column":2}},"2183":{"start":{"line":7204,"column":10},"end":{"line":7204,"column":19}},"2184":{"start":{"line":7205,"column":2},"end":{"line":7205,"column":32}},"2185":{"start":{"line":7206,"column":2},"end":{"line":7211,"column":3}},"2186":{"start":{"line":7207,"column":4},"end":{"line":7209,"column":7}},"2187":{"start":{"line":7212,"column":2},"end":{"line":7212,"column":34}},"2188":{"start":{"line":7213,"column":2},"end":{"line":7218,"column":3}},"2189":{"start":{"line":7214,"column":4},"end":{"line":7216,"column":7}},"2190":{"start":{"line":7226,"column":0},"end":{"line":7228,"column":2}},"2191":{"start":{"line":7227,"column":2},"end":{"line":7227,"column":92}},"2192":{"start":{"line":7236,"column":0},"end":{"line":7239,"column":2}},"2193":{"start":{"line":7237,"column":2},"end":{"line":7238,"column":24}},"2194":{"start":{"line":7249,"column":0},"end":{"line":7252,"column":2}},"2195":{"start":{"line":7250,"column":2},"end":{"line":7251,"column":24}},"2196":{"start":{"line":7256,"column":0},"end":{"line":7258,"column":2}},"2197":{"start":{"line":7257,"column":2},"end":{"line":7257,"column":51}},"2198":{"start":{"line":7265,"column":0},"end":{"line":7267,"column":2}},"2199":{"start":{"line":7266,"column":2},"end":{"line":7266,"column":92}},"2200":{"start":{"line":7275,"column":0},"end":{"line":7278,"column":2}},"2201":{"start":{"line":7276,"column":2},"end":{"line":7277,"column":26}},"2202":{"start":{"line":7288,"column":0},"end":{"line":7291,"column":2}},"2203":{"start":{"line":7289,"column":2},"end":{"line":7290,"column":26}},"2204":{"start":{"line":7295,"column":0},"end":{"line":7297,"column":2}},"2205":{"start":{"line":7296,"column":2},"end":{"line":7296,"column":51}},"2206":{"start":{"line":7311,"column":0},"end":{"line":7313,"column":2}},"2207":{"start":{"line":7312,"column":2},"end":{"line":7312,"column":61}},"2208":{"start":{"line":7314,"column":0},"end":{"line":7314,"column":46}},"2209":{"start":{"line":7315,"column":0},"end":{"line":7317,"column":1}},"2210":{"start":{"line":7316,"column":2},"end":{"line":7316,"column":52}},"2211":{"start":{"line":7320,"column":0},"end":{"line":7356,"column":1}},"2212":{"start":{"line":7331,"column":2},"end":{"line":7333,"column":4}},"2213":{"start":{"line":7332,"column":4},"end":{"line":7332,"column":64}},"2214":{"start":{"line":7345,"column":2},"end":{"line":7355,"column":4}},"2215":{"start":{"line":7346,"column":16},"end":{"line":7348,"column":60}},"2216":{"start":{"line":7351,"column":4},"end":{"line":7353,"column":5}},"2217":{"start":{"line":7352,"column":6},"end":{"line":7352,"column":37}},"2218":{"start":{"line":7354,"column":4},"end":{"line":7354,"column":15}},"2219":{"start":{"line":7364,"column":0},"end":{"line":7368,"column":2}},"2220":{"start":{"line":7365,"column":15},"end":{"line":7365,"column":43}},"2221":{"start":{"line":7366,"column":12},"end":{"line":7366,"column":34}},"2222":{"start":{"line":7367,"column":2},"end":{"line":7367,"column":67}},"2223":{"start":{"line":7378,"column":0},"end":{"line":7399,"column":2}},"2224":{"start":{"line":7379,"column":2},"end":{"line":7397,"column":3}},"2225":{"start":{"line":7380,"column":4},"end":{"line":7382,"column":5}},"2226":{"start":{"line":7381,"column":6},"end":{"line":7381,"column":12}},"2227":{"start":{"line":7383,"column":16},"end":{"line":7383,"column":39}},"2228":{"start":{"line":7384,"column":4},"end":{"line":7395,"column":15}},"2229":{"start":{"line":7386,"column":41},"end":{"line":7386,"column":60}},"2230":{"start":{"line":7387,"column":8},"end":{"line":7387,"column":27}},"2231":{"start":{"line":7388,"column":8},"end":{"line":7388,"column":14}},"2232":{"start":{"line":7390,"column":41},"end":{"line":7390,"column":60}},"2233":{"start":{"line":7391,"column":8},"end":{"line":7391,"column":30}},"2234":{"start":{"line":7392,"column":8},"end":{"line":7392,"column":14}},"2235":{"start":{"line":7394,"column":8},"end":{"line":7394,"column":27}},"2236":{"start":{"line":7395,"column":8},"end":{"line":7395,"column":14}},"2237":{"start":{"line":7398,"column":2},"end":{"line":7398,"column":13}},"2238":{"start":{"line":7406,"column":0},"end":{"line":7410,"column":2}},"2239":{"start":{"line":7407,"column":15},"end":{"line":7407,"column":38}},"2240":{"start":{"line":7408,"column":2},"end":{"line":7408,"column":57}},"2241":{"start":{"line":7409,"column":2},"end":{"line":7409,"column":34}},"2242":{"start":{"line":7420,"column":0},"end":{"line":7436,"column":2}},"2243":{"start":{"line":7421,"column":10},"end":{"line":7421,"column":19}},"2244":{"start":{"line":7422,"column":2},"end":{"line":7422,"column":24}},"2245":{"start":{"line":7423,"column":2},"end":{"line":7428,"column":3}},"2246":{"start":{"line":7424,"column":4},"end":{"line":7426,"column":7}},"2247":{"start":{"line":7429,"column":2},"end":{"line":7429,"column":27}},"2248":{"start":{"line":7430,"column":2},"end":{"line":7435,"column":3}},"2249":{"start":{"line":7431,"column":4},"end":{"line":7433,"column":7}},"2250":{"start":{"line":7443,"column":0},"end":{"line":7445,"column":2}},"2251":{"start":{"line":7444,"column":2},"end":{"line":7444,"column":78}},"2252":{"start":{"line":7449,"column":0},"end":{"line":7451,"column":2}},"2253":{"start":{"line":7450,"column":2},"end":{"line":7450,"column":52}},"2254":{"start":{"line":7458,"column":0},"end":{"line":7460,"column":2}},"2255":{"start":{"line":7459,"column":2},"end":{"line":7459,"column":77}},"2256":{"start":{"line":7464,"column":0},"end":{"line":7466,"column":2}},"2257":{"start":{"line":7465,"column":2},"end":{"line":7465,"column":49}},"2258":{"start":{"line":7480,"column":0},"end":{"line":7482,"column":2}},"2259":{"start":{"line":7481,"column":2},"end":{"line":7481,"column":61}},"2260":{"start":{"line":7483,"column":0},"end":{"line":7483,"column":50}},"2261":{"start":{"line":7484,"column":0},"end":{"line":7486,"column":1}},"2262":{"start":{"line":7485,"column":2},"end":{"line":7485,"column":60}},"2263":{"start":{"line":7489,"column":0},"end":{"line":7526,"column":1}},"2264":{"start":{"line":7500,"column":2},"end":{"line":7502,"column":4}},"2265":{"start":{"line":7501,"column":4},"end":{"line":7501,"column":68}},"2266":{"start":{"line":7514,"column":2},"end":{"line":7525,"column":4}},"2267":{"start":{"line":7515,"column":16},"end":{"line":7518,"column":47}},"2268":{"start":{"line":7521,"column":4},"end":{"line":7523,"column":5}},"2269":{"start":{"line":7522,"column":6},"end":{"line":7522,"column":37}},"2270":{"start":{"line":7524,"column":4},"end":{"line":7524,"column":15}},"2271":{"start":{"line":7534,"column":0},"end":{"line":7538,"column":2}},"2272":{"start":{"line":7535,"column":15},"end":{"line":7535,"column":43}},"2273":{"start":{"line":7536,"column":12},"end":{"line":7536,"column":38}},"2274":{"start":{"line":7537,"column":2},"end":{"line":7537,"column":71}},"2275":{"start":{"line":7548,"column":0},"end":{"line":7574,"column":2}},"2276":{"start":{"line":7549,"column":2},"end":{"line":7572,"column":3}},"2277":{"start":{"line":7550,"column":4},"end":{"line":7552,"column":5}},"2278":{"start":{"line":7551,"column":6},"end":{"line":7551,"column":12}},"2279":{"start":{"line":7553,"column":16},"end":{"line":7553,"column":39}},"2280":{"start":{"line":7554,"column":4},"end":{"line":7570,"column":15}},"2281":{"start":{"line":7556,"column":20},"end":{"line":7556,"column":42}},"2282":{"start":{"line":7557,"column":8},"end":{"line":7557,"column":80}},"2283":{"start":{"line":7558,"column":8},"end":{"line":7558,"column":27}},"2284":{"start":{"line":7559,"column":8},"end":{"line":7559,"column":14}},"2285":{"start":{"line":7561,"column":46},"end":{"line":7561,"column":64}},"2286":{"start":{"line":7562,"column":8},"end":{"line":7562,"column":28}},"2287":{"start":{"line":7563,"column":8},"end":{"line":7563,"column":14}},"2288":{"start":{"line":7565,"column":46},"end":{"line":7565,"column":64}},"2289":{"start":{"line":7566,"column":8},"end":{"line":7566,"column":34}},"2290":{"start":{"line":7567,"column":8},"end":{"line":7567,"column":14}},"2291":{"start":{"line":7569,"column":8},"end":{"line":7569,"column":27}},"2292":{"start":{"line":7570,"column":8},"end":{"line":7570,"column":14}},"2293":{"start":{"line":7573,"column":2},"end":{"line":7573,"column":13}},"2294":{"start":{"line":7581,"column":0},"end":{"line":7585,"column":2}},"2295":{"start":{"line":7582,"column":15},"end":{"line":7582,"column":38}},"2296":{"start":{"line":7583,"column":2},"end":{"line":7583,"column":61}},"2297":{"start":{"line":7584,"column":2},"end":{"line":7584,"column":34}},"2298":{"start":{"line":7595,"column":0},"end":{"line":7619,"column":2}},"2299":{"start":{"line":7596,"column":10},"end":{"line":7596,"column":19}},"2300":{"start":{"line":7597,"column":2},"end":{"line":7597,"column":24}},"2301":{"start":{"line":7598,"column":2},"end":{"line":7604,"column":3}},"2302":{"start":{"line":7599,"column":4},"end":{"line":7602,"column":46}},"2303":{"start":{"line":7605,"column":2},"end":{"line":7605,"column":30}},"2304":{"start":{"line":7606,"column":2},"end":{"line":7611,"column":3}},"2305":{"start":{"line":7607,"column":4},"end":{"line":7609,"column":7}},"2306":{"start":{"line":7612,"column":2},"end":{"line":7612,"column":36}},"2307":{"start":{"line":7613,"column":2},"end":{"line":7618,"column":3}},"2308":{"start":{"line":7614,"column":4},"end":{"line":7616,"column":7}},"2309":{"start":{"line":7626,"column":0},"end":{"line":7629,"column":2}},"2310":{"start":{"line":7627,"column":2},"end":{"line":7628,"column":61}},"2311":{"start":{"line":7633,"column":0},"end":{"line":7635,"column":2}},"2312":{"start":{"line":7634,"column":2},"end":{"line":7634,"column":47}},"2313":{"start":{"line":7638,"column":0},"end":{"line":7640,"column":2}},"2314":{"start":{"line":7639,"column":2},"end":{"line":7639,"column":26}},"2315":{"start":{"line":7647,"column":0},"end":{"line":7649,"column":2}},"2316":{"start":{"line":7648,"column":2},"end":{"line":7648,"column":48}},"2317":{"start":{"line":7656,"column":0},"end":{"line":7658,"column":2}},"2318":{"start":{"line":7657,"column":2},"end":{"line":7657,"column":92}},"2319":{"start":{"line":7666,"column":0},"end":{"line":7669,"column":2}},"2320":{"start":{"line":7667,"column":2},"end":{"line":7668,"column":22}},"2321":{"start":{"line":7679,"column":0},"end":{"line":7682,"column":2}},"2322":{"start":{"line":7680,"column":2},"end":{"line":7681,"column":22}},"2323":{"start":{"line":7686,"column":0},"end":{"line":7688,"column":2}},"2324":{"start":{"line":7687,"column":2},"end":{"line":7687,"column":51}},"2325":{"start":{"line":7695,"column":0},"end":{"line":7697,"column":2}},"2326":{"start":{"line":7696,"column":2},"end":{"line":7696,"column":92}},"2327":{"start":{"line":7705,"column":0},"end":{"line":7708,"column":2}},"2328":{"start":{"line":7706,"column":2},"end":{"line":7707,"column":28}},"2329":{"start":{"line":7718,"column":0},"end":{"line":7721,"column":2}},"2330":{"start":{"line":7719,"column":2},"end":{"line":7720,"column":28}},"2331":{"start":{"line":7725,"column":0},"end":{"line":7727,"column":2}},"2332":{"start":{"line":7726,"column":2},"end":{"line":7726,"column":51}},"2333":{"start":{"line":7741,"column":0},"end":{"line":7743,"column":2}},"2334":{"start":{"line":7742,"column":2},"end":{"line":7742,"column":61}},"2335":{"start":{"line":7744,"column":0},"end":{"line":7744,"column":53}},"2336":{"start":{"line":7745,"column":0},"end":{"line":7747,"column":1}},"2337":{"start":{"line":7746,"column":2},"end":{"line":7746,"column":66}},"2338":{"start":{"line":7750,"column":0},"end":{"line":7786,"column":1}},"2339":{"start":{"line":7761,"column":2},"end":{"line":7763,"column":4}},"2340":{"start":{"line":7762,"column":4},"end":{"line":7762,"column":71}},"2341":{"start":{"line":7775,"column":2},"end":{"line":7785,"column":4}},"2342":{"start":{"line":7776,"column":16},"end":{"line":7778,"column":65}},"2343":{"start":{"line":7781,"column":4},"end":{"line":7783,"column":5}},"2344":{"start":{"line":7782,"column":6},"end":{"line":7782,"column":37}},"2345":{"start":{"line":7784,"column":4},"end":{"line":7784,"column":15}},"2346":{"start":{"line":7794,"column":0},"end":{"line":7798,"column":2}},"2347":{"start":{"line":7795,"column":15},"end":{"line":7795,"column":43}},"2348":{"start":{"line":7796,"column":12},"end":{"line":7796,"column":41}},"2349":{"start":{"line":7797,"column":2},"end":{"line":7797,"column":74}},"2350":{"start":{"line":7808,"column":0},"end":{"line":7829,"column":2}},"2351":{"start":{"line":7809,"column":2},"end":{"line":7827,"column":3}},"2352":{"start":{"line":7810,"column":4},"end":{"line":7812,"column":5}},"2353":{"start":{"line":7811,"column":6},"end":{"line":7811,"column":12}},"2354":{"start":{"line":7813,"column":16},"end":{"line":7813,"column":39}},"2355":{"start":{"line":7814,"column":4},"end":{"line":7825,"column":15}},"2356":{"start":{"line":7816,"column":42},"end":{"line":7816,"column":59}},"2357":{"start":{"line":7817,"column":8},"end":{"line":7817,"column":31}},"2358":{"start":{"line":7818,"column":8},"end":{"line":7818,"column":14}},"2359":{"start":{"line":7820,"column":42},"end":{"line":7820,"column":59}},"2360":{"start":{"line":7821,"column":8},"end":{"line":7821,"column":31}},"2361":{"start":{"line":7822,"column":8},"end":{"line":7822,"column":14}},"2362":{"start":{"line":7824,"column":8},"end":{"line":7824,"column":27}},"2363":{"start":{"line":7825,"column":8},"end":{"line":7825,"column":14}},"2364":{"start":{"line":7828,"column":2},"end":{"line":7828,"column":13}},"2365":{"start":{"line":7836,"column":0},"end":{"line":7840,"column":2}},"2366":{"start":{"line":7837,"column":15},"end":{"line":7837,"column":38}},"2367":{"start":{"line":7838,"column":2},"end":{"line":7838,"column":64}},"2368":{"start":{"line":7839,"column":2},"end":{"line":7839,"column":34}},"2369":{"start":{"line":7850,"column":0},"end":{"line":7866,"column":2}},"2370":{"start":{"line":7851,"column":10},"end":{"line":7851,"column":19}},"2371":{"start":{"line":7852,"column":2},"end":{"line":7852,"column":28}},"2372":{"start":{"line":7853,"column":2},"end":{"line":7858,"column":3}},"2373":{"start":{"line":7854,"column":4},"end":{"line":7856,"column":7}},"2374":{"start":{"line":7859,"column":2},"end":{"line":7859,"column":28}},"2375":{"start":{"line":7860,"column":2},"end":{"line":7865,"column":3}},"2376":{"start":{"line":7861,"column":4},"end":{"line":7863,"column":7}},"2377":{"start":{"line":7875,"column":0},"end":{"line":7877,"column":2}},"2378":{"start":{"line":7876,"column":2},"end":{"line":7876,"column":82}},"2379":{"start":{"line":7881,"column":0},"end":{"line":7883,"column":2}},"2380":{"start":{"line":7882,"column":2},"end":{"line":7882,"column":53}},"2381":{"start":{"line":7892,"column":0},"end":{"line":7894,"column":2}},"2382":{"start":{"line":7893,"column":2},"end":{"line":7893,"column":82}},"2383":{"start":{"line":7898,"column":0},"end":{"line":7900,"column":2}},"2384":{"start":{"line":7899,"column":2},"end":{"line":7899,"column":53}},"2385":{"start":{"line":7914,"column":0},"end":{"line":7916,"column":2}},"2386":{"start":{"line":7915,"column":2},"end":{"line":7915,"column":94}},"2387":{"start":{"line":7917,"column":0},"end":{"line":7917,"column":51}},"2388":{"start":{"line":7918,"column":0},"end":{"line":7920,"column":1}},"2389":{"start":{"line":7919,"column":2},"end":{"line":7919,"column":62}},"2390":{"start":{"line":7926,"column":0},"end":{"line":7926,"column":44}},"2391":{"start":{"line":7930,"column":0},"end":{"line":7965,"column":1}},"2392":{"start":{"line":7941,"column":2},"end":{"line":7943,"column":4}},"2393":{"start":{"line":7942,"column":4},"end":{"line":7942,"column":69}},"2394":{"start":{"line":7955,"column":2},"end":{"line":7964,"column":4}},"2395":{"start":{"line":7956,"column":16},"end":{"line":7957,"column":54}},"2396":{"start":{"line":7960,"column":4},"end":{"line":7962,"column":5}},"2397":{"start":{"line":7961,"column":6},"end":{"line":7961,"column":37}},"2398":{"start":{"line":7963,"column":4},"end":{"line":7963,"column":15}},"2399":{"start":{"line":7973,"column":0},"end":{"line":7977,"column":2}},"2400":{"start":{"line":7974,"column":15},"end":{"line":7974,"column":43}},"2401":{"start":{"line":7975,"column":12},"end":{"line":7975,"column":39}},"2402":{"start":{"line":7976,"column":2},"end":{"line":7976,"column":72}},"2403":{"start":{"line":7987,"column":0},"end":{"line":8004,"column":2}},"2404":{"start":{"line":7988,"column":2},"end":{"line":8002,"column":3}},"2405":{"start":{"line":7989,"column":4},"end":{"line":7991,"column":5}},"2406":{"start":{"line":7990,"column":6},"end":{"line":7990,"column":12}},"2407":{"start":{"line":7992,"column":16},"end":{"line":7992,"column":39}},"2408":{"start":{"line":7993,"column":4},"end":{"line":8000,"column":15}},"2409":{"start":{"line":7995,"column":41},"end":{"line":7995,"column":60}},"2410":{"start":{"line":7996,"column":8},"end":{"line":7996,"column":26}},"2411":{"start":{"line":7997,"column":8},"end":{"line":7997,"column":14}},"2412":{"start":{"line":7999,"column":8},"end":{"line":7999,"column":27}},"2413":{"start":{"line":8000,"column":8},"end":{"line":8000,"column":14}},"2414":{"start":{"line":8003,"column":2},"end":{"line":8003,"column":13}},"2415":{"start":{"line":8011,"column":0},"end":{"line":8015,"column":2}},"2416":{"start":{"line":8012,"column":15},"end":{"line":8012,"column":38}},"2417":{"start":{"line":8013,"column":2},"end":{"line":8013,"column":62}},"2418":{"start":{"line":8014,"column":2},"end":{"line":8014,"column":34}},"2419":{"start":{"line":8025,"column":0},"end":{"line":8034,"column":2}},"2420":{"start":{"line":8026,"column":10},"end":{"line":8026,"column":19}},"2421":{"start":{"line":8027,"column":2},"end":{"line":8027,"column":27}},"2422":{"start":{"line":8028,"column":2},"end":{"line":8033,"column":3}},"2423":{"start":{"line":8029,"column":4},"end":{"line":8031,"column":7}},"2424":{"start":{"line":8041,"column":0},"end":{"line":8043,"column":2}},"2425":{"start":{"line":8042,"column":2},"end":{"line":8042,"column":79}},"2426":{"start":{"line":8047,"column":0},"end":{"line":8049,"column":2}},"2427":{"start":{"line":8048,"column":2},"end":{"line":8048,"column":46}},"2428":{"start":{"line":8056,"column":0},"end":{"line":8058,"column":2}},"2429":{"start":{"line":8057,"column":2},"end":{"line":8057,"column":61}},"2430":{"start":{"line":8061,"column":0},"end":{"line":8063,"column":2}},"2431":{"start":{"line":8062,"column":2},"end":{"line":8062,"column":22}},"2432":{"start":{"line":8077,"column":0},"end":{"line":8079,"column":2}},"2433":{"start":{"line":8078,"column":2},"end":{"line":8078,"column":61}},"2434":{"start":{"line":8080,"column":0},"end":{"line":8080,"column":52}},"2435":{"start":{"line":8081,"column":0},"end":{"line":8083,"column":1}},"2436":{"start":{"line":8082,"column":2},"end":{"line":8082,"column":64}},"2437":{"start":{"line":8086,"column":0},"end":{"line":8122,"column":1}},"2438":{"start":{"line":8097,"column":2},"end":{"line":8099,"column":4}},"2439":{"start":{"line":8098,"column":4},"end":{"line":8098,"column":70}},"2440":{"start":{"line":8111,"column":2},"end":{"line":8121,"column":4}},"2441":{"start":{"line":8112,"column":16},"end":{"line":8114,"column":111}},"2442":{"start":{"line":8117,"column":4},"end":{"line":8119,"column":5}},"2443":{"start":{"line":8118,"column":6},"end":{"line":8118,"column":37}},"2444":{"start":{"line":8120,"column":4},"end":{"line":8120,"column":15}},"2445":{"start":{"line":8130,"column":0},"end":{"line":8134,"column":2}},"2446":{"start":{"line":8131,"column":15},"end":{"line":8131,"column":43}},"2447":{"start":{"line":8132,"column":12},"end":{"line":8132,"column":40}},"2448":{"start":{"line":8133,"column":2},"end":{"line":8133,"column":73}},"2449":{"start":{"line":8144,"column":0},"end":{"line":8169,"column":2}},"2450":{"start":{"line":8145,"column":2},"end":{"line":8167,"column":3}},"2451":{"start":{"line":8146,"column":4},"end":{"line":8148,"column":5}},"2452":{"start":{"line":8147,"column":6},"end":{"line":8147,"column":12}},"2453":{"start":{"line":8149,"column":16},"end":{"line":8149,"column":39}},"2454":{"start":{"line":8150,"column":4},"end":{"line":8165,"column":15}},"2455":{"start":{"line":8152,"column":20},"end":{"line":8152,"column":38}},"2456":{"start":{"line":8153,"column":8},"end":{"line":8155,"column":11}},"2457":{"start":{"line":8154,"column":10},"end":{"line":8154,"column":144}},"2458":{"start":{"line":8156,"column":8},"end":{"line":8156,"column":14}},"2459":{"start":{"line":8158,"column":20},"end":{"line":8158,"column":38}},"2460":{"start":{"line":8159,"column":8},"end":{"line":8161,"column":11}},"2461":{"start":{"line":8160,"column":10},"end":{"line":8160,"column":191}},"2462":{"start":{"line":8162,"column":8},"end":{"line":8162,"column":14}},"2463":{"start":{"line":8164,"column":8},"end":{"line":8164,"column":27}},"2464":{"start":{"line":8165,"column":8},"end":{"line":8165,"column":14}},"2465":{"start":{"line":8168,"column":2},"end":{"line":8168,"column":13}},"2466":{"start":{"line":8176,"column":0},"end":{"line":8180,"column":2}},"2467":{"start":{"line":8177,"column":15},"end":{"line":8177,"column":38}},"2468":{"start":{"line":8178,"column":2},"end":{"line":8178,"column":63}},"2469":{"start":{"line":8179,"column":2},"end":{"line":8179,"column":34}},"2470":{"start":{"line":8190,"column":0},"end":{"line":8200,"column":2}},"2471":{"start":{"line":8191,"column":10},"end":{"line":8191,"column":19}},"2472":{"start":{"line":8192,"column":2},"end":{"line":8192,"column":33}},"2473":{"start":{"line":8193,"column":2},"end":{"line":8195,"column":3}},"2474":{"start":{"line":8194,"column":4},"end":{"line":8194,"column":115}},"2475":{"start":{"line":8196,"column":2},"end":{"line":8196,"column":33}},"2476":{"start":{"line":8197,"column":2},"end":{"line":8199,"column":3}},"2477":{"start":{"line":8198,"column":4},"end":{"line":8198,"column":164}},"2478":{"start":{"line":8209,"column":0},"end":{"line":8213,"column":2}},"2479":{"start":{"line":8210,"column":2},"end":{"line":8212,"column":11}},"2480":{"start":{"line":8216,"column":0},"end":{"line":8218,"column":2}},"2481":{"start":{"line":8217,"column":2},"end":{"line":8217,"column":30}},"2482":{"start":{"line":8227,"column":0},"end":{"line":8231,"column":2}},"2483":{"start":{"line":8228,"column":2},"end":{"line":8230,"column":29}},"2484":{"start":{"line":8234,"column":0},"end":{"line":8236,"column":2}},"2485":{"start":{"line":8235,"column":2},"end":{"line":8235,"column":30}},"2486":{"start":{"line":8250,"column":0},"end":{"line":8252,"column":2}},"2487":{"start":{"line":8251,"column":2},"end":{"line":8251,"column":61}},"2488":{"start":{"line":8253,"column":0},"end":{"line":8253,"column":52}},"2489":{"start":{"line":8254,"column":0},"end":{"line":8256,"column":1}},"2490":{"start":{"line":8255,"column":2},"end":{"line":8255,"column":64}},"2491":{"start":{"line":8259,"column":0},"end":{"line":8294,"column":1}},"2492":{"start":{"line":8270,"column":2},"end":{"line":8272,"column":4}},"2493":{"start":{"line":8271,"column":4},"end":{"line":8271,"column":70}},"2494":{"start":{"line":8284,"column":2},"end":{"line":8293,"column":4}},"2495":{"start":{"line":8285,"column":16},"end":{"line":8286,"column":87}},"2496":{"start":{"line":8289,"column":4},"end":{"line":8291,"column":5}},"2497":{"start":{"line":8290,"column":6},"end":{"line":8290,"column":37}},"2498":{"start":{"line":8292,"column":4},"end":{"line":8292,"column":15}},"2499":{"start":{"line":8302,"column":0},"end":{"line":8306,"column":2}},"2500":{"start":{"line":8303,"column":15},"end":{"line":8303,"column":43}},"2501":{"start":{"line":8304,"column":12},"end":{"line":8304,"column":40}},"2502":{"start":{"line":8305,"column":2},"end":{"line":8305,"column":73}},"2503":{"start":{"line":8316,"column":0},"end":{"line":8335,"column":2}},"2504":{"start":{"line":8317,"column":2},"end":{"line":8333,"column":3}},"2505":{"start":{"line":8318,"column":4},"end":{"line":8320,"column":5}},"2506":{"start":{"line":8319,"column":6},"end":{"line":8319,"column":12}},"2507":{"start":{"line":8321,"column":16},"end":{"line":8321,"column":39}},"2508":{"start":{"line":8322,"column":4},"end":{"line":8331,"column":15}},"2509":{"start":{"line":8324,"column":20},"end":{"line":8324,"column":37}},"2510":{"start":{"line":8325,"column":8},"end":{"line":8327,"column":11}},"2511":{"start":{"line":8326,"column":10},"end":{"line":8326,"column":144}},"2512":{"start":{"line":8328,"column":8},"end":{"line":8328,"column":14}},"2513":{"start":{"line":8330,"column":8},"end":{"line":8330,"column":27}},"2514":{"start":{"line":8331,"column":8},"end":{"line":8331,"column":14}},"2515":{"start":{"line":8334,"column":2},"end":{"line":8334,"column":13}},"2516":{"start":{"line":8342,"column":0},"end":{"line":8346,"column":2}},"2517":{"start":{"line":8343,"column":15},"end":{"line":8343,"column":38}},"2518":{"start":{"line":8344,"column":2},"end":{"line":8344,"column":63}},"2519":{"start":{"line":8345,"column":2},"end":{"line":8345,"column":34}},"2520":{"start":{"line":8356,"column":0},"end":{"line":8362,"column":2}},"2521":{"start":{"line":8357,"column":10},"end":{"line":8357,"column":19}},"2522":{"start":{"line":8358,"column":2},"end":{"line":8358,"column":32}},"2523":{"start":{"line":8359,"column":2},"end":{"line":8361,"column":3}},"2524":{"start":{"line":8360,"column":4},"end":{"line":8360,"column":115}},"2525":{"start":{"line":8371,"column":0},"end":{"line":8375,"column":2}},"2526":{"start":{"line":8372,"column":2},"end":{"line":8374,"column":11}},"2527":{"start":{"line":8378,"column":0},"end":{"line":8380,"column":2}},"2528":{"start":{"line":8379,"column":2},"end":{"line":8379,"column":29}},"2529":{"start":{"line":8394,"column":0},"end":{"line":8396,"column":2}},"2530":{"start":{"line":8395,"column":2},"end":{"line":8395,"column":94}},"2531":{"start":{"line":8397,"column":0},"end":{"line":8397,"column":51}},"2532":{"start":{"line":8398,"column":0},"end":{"line":8400,"column":1}},"2533":{"start":{"line":8399,"column":2},"end":{"line":8399,"column":62}},"2534":{"start":{"line":8406,"column":0},"end":{"line":8406,"column":44}},"2535":{"start":{"line":8410,"column":0},"end":{"line":8446,"column":1}},"2536":{"start":{"line":8421,"column":2},"end":{"line":8423,"column":4}},"2537":{"start":{"line":8422,"column":4},"end":{"line":8422,"column":69}},"2538":{"start":{"line":8435,"column":2},"end":{"line":8445,"column":4}},"2539":{"start":{"line":8436,"column":16},"end":{"line":8438,"column":54}},"2540":{"start":{"line":8441,"column":4},"end":{"line":8443,"column":5}},"2541":{"start":{"line":8442,"column":6},"end":{"line":8442,"column":37}},"2542":{"start":{"line":8444,"column":4},"end":{"line":8444,"column":15}},"2543":{"start":{"line":8454,"column":0},"end":{"line":8458,"column":2}},"2544":{"start":{"line":8455,"column":15},"end":{"line":8455,"column":43}},"2545":{"start":{"line":8456,"column":12},"end":{"line":8456,"column":39}},"2546":{"start":{"line":8457,"column":2},"end":{"line":8457,"column":72}},"2547":{"start":{"line":8468,"column":0},"end":{"line":8486,"column":2}},"2548":{"start":{"line":8469,"column":2},"end":{"line":8484,"column":3}},"2549":{"start":{"line":8470,"column":4},"end":{"line":8472,"column":5}},"2550":{"start":{"line":8471,"column":6},"end":{"line":8471,"column":12}},"2551":{"start":{"line":8473,"column":16},"end":{"line":8473,"column":39}},"2552":{"start":{"line":8474,"column":4},"end":{"line":8482,"column":15}},"2553":{"start":{"line":8476,"column":20},"end":{"line":8476,"column":45}},"2554":{"start":{"line":8477,"column":8},"end":{"line":8477,"column":83}},"2555":{"start":{"line":8478,"column":8},"end":{"line":8478,"column":29}},"2556":{"start":{"line":8479,"column":8},"end":{"line":8479,"column":14}},"2557":{"start":{"line":8481,"column":8},"end":{"line":8481,"column":27}},"2558":{"start":{"line":8482,"column":8},"end":{"line":8482,"column":14}},"2559":{"start":{"line":8485,"column":2},"end":{"line":8485,"column":13}},"2560":{"start":{"line":8493,"column":0},"end":{"line":8497,"column":2}},"2561":{"start":{"line":8494,"column":15},"end":{"line":8494,"column":38}},"2562":{"start":{"line":8495,"column":2},"end":{"line":8495,"column":62}},"2563":{"start":{"line":8496,"column":2},"end":{"line":8496,"column":34}},"2564":{"start":{"line":8507,"column":0},"end":{"line":8517,"column":2}},"2565":{"start":{"line":8508,"column":10},"end":{"line":8508,"column":19}},"2566":{"start":{"line":8509,"column":2},"end":{"line":8509,"column":30}},"2567":{"start":{"line":8510,"column":2},"end":{"line":8516,"column":3}},"2568":{"start":{"line":8511,"column":4},"end":{"line":8514,"column":49}},"2569":{"start":{"line":8524,"column":0},"end":{"line":8527,"column":2}},"2570":{"start":{"line":8525,"column":2},"end":{"line":8526,"column":72}},"2571":{"start":{"line":8531,"column":0},"end":{"line":8533,"column":2}},"2572":{"start":{"line":8532,"column":2},"end":{"line":8532,"column":55}},"2573":{"start":{"line":8541,"column":0},"end":{"line":8543,"column":2}},"2574":{"start":{"line":8542,"column":2},"end":{"line":8542,"column":98}},"2575":{"start":{"line":8546,"column":0},"end":{"line":8548,"column":2}},"2576":{"start":{"line":8547,"column":2},"end":{"line":8547,"column":25}},"2577":{"start":{"line":8562,"column":0},"end":{"line":8564,"column":2}},"2578":{"start":{"line":8563,"column":2},"end":{"line":8563,"column":98}},"2579":{"start":{"line":8565,"column":0},"end":{"line":8565,"column":55}},"2580":{"start":{"line":8566,"column":0},"end":{"line":8568,"column":1}},"2581":{"start":{"line":8567,"column":2},"end":{"line":8567,"column":70}},"2582":{"start":{"line":8574,"column":0},"end":{"line":8574,"column":48}},"2583":{"start":{"line":8578,"column":0},"end":{"line":8615,"column":1}},"2584":{"start":{"line":8589,"column":2},"end":{"line":8591,"column":4}},"2585":{"start":{"line":8590,"column":4},"end":{"line":8590,"column":73}},"2586":{"start":{"line":8603,"column":2},"end":{"line":8614,"column":4}},"2587":{"start":{"line":8604,"column":16},"end":{"line":8607,"column":54}},"2588":{"start":{"line":8610,"column":4},"end":{"line":8612,"column":5}},"2589":{"start":{"line":8611,"column":6},"end":{"line":8611,"column":37}},"2590":{"start":{"line":8613,"column":4},"end":{"line":8613,"column":15}},"2591":{"start":{"line":8623,"column":0},"end":{"line":8627,"column":2}},"2592":{"start":{"line":8624,"column":15},"end":{"line":8624,"column":43}},"2593":{"start":{"line":8625,"column":12},"end":{"line":8625,"column":43}},"2594":{"start":{"line":8626,"column":2},"end":{"line":8626,"column":76}},"2595":{"start":{"line":8637,"column":0},"end":{"line":8662,"column":2}},"2596":{"start":{"line":8638,"column":2},"end":{"line":8660,"column":3}},"2597":{"start":{"line":8639,"column":4},"end":{"line":8641,"column":5}},"2598":{"start":{"line":8640,"column":6},"end":{"line":8640,"column":12}},"2599":{"start":{"line":8642,"column":16},"end":{"line":8642,"column":39}},"2600":{"start":{"line":8643,"column":4},"end":{"line":8658,"column":15}},"2601":{"start":{"line":8645,"column":41},"end":{"line":8645,"column":60}},"2602":{"start":{"line":8646,"column":8},"end":{"line":8646,"column":27}},"2603":{"start":{"line":8647,"column":8},"end":{"line":8647,"column":14}},"2604":{"start":{"line":8649,"column":41},"end":{"line":8649,"column":60}},"2605":{"start":{"line":8650,"column":8},"end":{"line":8650,"column":27}},"2606":{"start":{"line":8651,"column":8},"end":{"line":8651,"column":14}},"2607":{"start":{"line":8653,"column":41},"end":{"line":8653,"column":60}},"2608":{"start":{"line":8654,"column":8},"end":{"line":8654,"column":26}},"2609":{"start":{"line":8655,"column":8},"end":{"line":8655,"column":14}},"2610":{"start":{"line":8657,"column":8},"end":{"line":8657,"column":27}},"2611":{"start":{"line":8658,"column":8},"end":{"line":8658,"column":14}},"2612":{"start":{"line":8661,"column":2},"end":{"line":8661,"column":13}},"2613":{"start":{"line":8669,"column":0},"end":{"line":8673,"column":2}},"2614":{"start":{"line":8670,"column":15},"end":{"line":8670,"column":38}},"2615":{"start":{"line":8671,"column":2},"end":{"line":8671,"column":66}},"2616":{"start":{"line":8672,"column":2},"end":{"line":8672,"column":34}},"2617":{"start":{"line":8683,"column":0},"end":{"line":8706,"column":2}},"2618":{"start":{"line":8684,"column":10},"end":{"line":8684,"column":19}},"2619":{"start":{"line":8685,"column":2},"end":{"line":8685,"column":24}},"2620":{"start":{"line":8686,"column":2},"end":{"line":8691,"column":3}},"2621":{"start":{"line":8687,"column":4},"end":{"line":8689,"column":7}},"2622":{"start":{"line":8692,"column":2},"end":{"line":8692,"column":24}},"2623":{"start":{"line":8693,"column":2},"end":{"line":8698,"column":3}},"2624":{"start":{"line":8694,"column":4},"end":{"line":8696,"column":7}},"2625":{"start":{"line":8699,"column":2},"end":{"line":8699,"column":27}},"2626":{"start":{"line":8700,"column":2},"end":{"line":8705,"column":3}},"2627":{"start":{"line":8701,"column":4},"end":{"line":8703,"column":7}},"2628":{"start":{"line":8713,"column":0},"end":{"line":8715,"column":2}},"2629":{"start":{"line":8714,"column":2},"end":{"line":8714,"column":78}},"2630":{"start":{"line":8719,"column":0},"end":{"line":8721,"column":2}},"2631":{"start":{"line":8720,"column":2},"end":{"line":8720,"column":52}},"2632":{"start":{"line":8728,"column":0},"end":{"line":8730,"column":2}},"2633":{"start":{"line":8729,"column":2},"end":{"line":8729,"column":78}},"2634":{"start":{"line":8734,"column":0},"end":{"line":8736,"column":2}},"2635":{"start":{"line":8735,"column":2},"end":{"line":8735,"column":52}},"2636":{"start":{"line":8743,"column":0},"end":{"line":8745,"column":2}},"2637":{"start":{"line":8744,"column":2},"end":{"line":8744,"column":79}},"2638":{"start":{"line":8749,"column":0},"end":{"line":8751,"column":2}},"2639":{"start":{"line":8750,"column":2},"end":{"line":8750,"column":46}},"2640":{"start":{"line":8758,"column":0},"end":{"line":8760,"column":2}},"2641":{"start":{"line":8759,"column":2},"end":{"line":8759,"column":61}},"2642":{"start":{"line":8763,"column":0},"end":{"line":8765,"column":2}},"2643":{"start":{"line":8764,"column":2},"end":{"line":8764,"column":22}},"2644":{"start":{"line":8779,"column":0},"end":{"line":8781,"column":2}},"2645":{"start":{"line":8780,"column":2},"end":{"line":8780,"column":61}},"2646":{"start":{"line":8782,"column":0},"end":{"line":8782,"column":61}},"2647":{"start":{"line":8783,"column":0},"end":{"line":8785,"column":1}},"2648":{"start":{"line":8784,"column":2},"end":{"line":8784,"column":82}},"2649":{"start":{"line":8788,"column":0},"end":{"line":8823,"column":1}},"2650":{"start":{"line":8799,"column":2},"end":{"line":8801,"column":4}},"2651":{"start":{"line":8800,"column":4},"end":{"line":8800,"column":79}},"2652":{"start":{"line":8813,"column":2},"end":{"line":8822,"column":4}},"2653":{"start":{"line":8814,"column":16},"end":{"line":8815,"column":57}},"2654":{"start":{"line":8818,"column":4},"end":{"line":8820,"column":5}},"2655":{"start":{"line":8819,"column":6},"end":{"line":8819,"column":37}},"2656":{"start":{"line":8821,"column":4},"end":{"line":8821,"column":15}},"2657":{"start":{"line":8831,"column":0},"end":{"line":8835,"column":2}},"2658":{"start":{"line":8832,"column":15},"end":{"line":8832,"column":43}},"2659":{"start":{"line":8833,"column":12},"end":{"line":8833,"column":49}},"2660":{"start":{"line":8834,"column":2},"end":{"line":8834,"column":82}},"2661":{"start":{"line":8845,"column":0},"end":{"line":8862,"column":2}},"2662":{"start":{"line":8846,"column":2},"end":{"line":8860,"column":3}},"2663":{"start":{"line":8847,"column":4},"end":{"line":8849,"column":5}},"2664":{"start":{"line":8848,"column":6},"end":{"line":8848,"column":12}},"2665":{"start":{"line":8850,"column":16},"end":{"line":8850,"column":39}},"2666":{"start":{"line":8851,"column":4},"end":{"line":8858,"column":15}},"2667":{"start":{"line":8853,"column":41},"end":{"line":8853,"column":60}},"2668":{"start":{"line":8854,"column":8},"end":{"line":8854,"column":26}},"2669":{"start":{"line":8855,"column":8},"end":{"line":8855,"column":14}},"2670":{"start":{"line":8857,"column":8},"end":{"line":8857,"column":27}},"2671":{"start":{"line":8858,"column":8},"end":{"line":8858,"column":14}},"2672":{"start":{"line":8861,"column":2},"end":{"line":8861,"column":13}},"2673":{"start":{"line":8869,"column":0},"end":{"line":8873,"column":2}},"2674":{"start":{"line":8870,"column":15},"end":{"line":8870,"column":38}},"2675":{"start":{"line":8871,"column":2},"end":{"line":8871,"column":72}},"2676":{"start":{"line":8872,"column":2},"end":{"line":8872,"column":34}},"2677":{"start":{"line":8883,"column":0},"end":{"line":8892,"column":2}},"2678":{"start":{"line":8884,"column":10},"end":{"line":8884,"column":19}},"2679":{"start":{"line":8885,"column":2},"end":{"line":8885,"column":23}},"2680":{"start":{"line":8886,"column":2},"end":{"line":8891,"column":3}},"2681":{"start":{"line":8887,"column":4},"end":{"line":8889,"column":7}},"2682":{"start":{"line":8899,"column":0},"end":{"line":8901,"column":2}},"2683":{"start":{"line":8900,"column":2},"end":{"line":8900,"column":78}},"2684":{"start":{"line":8905,"column":0},"end":{"line":8907,"column":2}},"2685":{"start":{"line":8906,"column":2},"end":{"line":8906,"column":52}},"2686":{"start":{"line":8921,"column":0},"end":{"line":8923,"column":2}},"2687":{"start":{"line":8922,"column":2},"end":{"line":8922,"column":101}},"2688":{"start":{"line":8924,"column":0},"end":{"line":8924,"column":58}},"2689":{"start":{"line":8925,"column":0},"end":{"line":8927,"column":1}},"2690":{"start":{"line":8926,"column":2},"end":{"line":8926,"column":76}},"2691":{"start":{"line":8933,"column":0},"end":{"line":8933,"column":51}},"2692":{"start":{"line":8937,"column":0},"end":{"line":8974,"column":1}},"2693":{"start":{"line":8948,"column":2},"end":{"line":8950,"column":4}},"2694":{"start":{"line":8949,"column":4},"end":{"line":8949,"column":76}},"2695":{"start":{"line":8962,"column":2},"end":{"line":8973,"column":4}},"2696":{"start":{"line":8963,"column":16},"end":{"line":8966,"column":57}},"2697":{"start":{"line":8969,"column":4},"end":{"line":8971,"column":5}},"2698":{"start":{"line":8970,"column":6},"end":{"line":8970,"column":37}},"2699":{"start":{"line":8972,"column":4},"end":{"line":8972,"column":15}},"2700":{"start":{"line":8982,"column":0},"end":{"line":8986,"column":2}},"2701":{"start":{"line":8983,"column":15},"end":{"line":8983,"column":43}},"2702":{"start":{"line":8984,"column":12},"end":{"line":8984,"column":46}},"2703":{"start":{"line":8985,"column":2},"end":{"line":8985,"column":79}},"2704":{"start":{"line":8996,"column":0},"end":{"line":9021,"column":2}},"2705":{"start":{"line":8997,"column":2},"end":{"line":9019,"column":3}},"2706":{"start":{"line":8998,"column":4},"end":{"line":9000,"column":5}},"2707":{"start":{"line":8999,"column":6},"end":{"line":8999,"column":12}},"2708":{"start":{"line":9001,"column":16},"end":{"line":9001,"column":39}},"2709":{"start":{"line":9002,"column":4},"end":{"line":9017,"column":15}},"2710":{"start":{"line":9004,"column":41},"end":{"line":9004,"column":60}},"2711":{"start":{"line":9005,"column":8},"end":{"line":9005,"column":26}},"2712":{"start":{"line":9006,"column":8},"end":{"line":9006,"column":14}},"2713":{"start":{"line":9008,"column":42},"end":{"line":9008,"column":59}},"2714":{"start":{"line":9009,"column":8},"end":{"line":9009,"column":25}},"2715":{"start":{"line":9010,"column":8},"end":{"line":9010,"column":14}},"2716":{"start":{"line":9012,"column":41},"end":{"line":9012,"column":60}},"2717":{"start":{"line":9013,"column":8},"end":{"line":9013,"column":29}},"2718":{"start":{"line":9014,"column":8},"end":{"line":9014,"column":14}},"2719":{"start":{"line":9016,"column":8},"end":{"line":9016,"column":27}},"2720":{"start":{"line":9017,"column":8},"end":{"line":9017,"column":14}},"2721":{"start":{"line":9020,"column":2},"end":{"line":9020,"column":13}},"2722":{"start":{"line":9028,"column":0},"end":{"line":9032,"column":2}},"2723":{"start":{"line":9029,"column":15},"end":{"line":9029,"column":38}},"2724":{"start":{"line":9030,"column":2},"end":{"line":9030,"column":69}},"2725":{"start":{"line":9031,"column":2},"end":{"line":9031,"column":34}},"2726":{"start":{"line":9042,"column":0},"end":{"line":9065,"column":2}},"2727":{"start":{"line":9043,"column":10},"end":{"line":9043,"column":19}},"2728":{"start":{"line":9044,"column":2},"end":{"line":9044,"column":23}},"2729":{"start":{"line":9045,"column":2},"end":{"line":9050,"column":3}},"2730":{"start":{"line":9046,"column":4},"end":{"line":9048,"column":7}},"2731":{"start":{"line":9051,"column":2},"end":{"line":9051,"column":22}},"2732":{"start":{"line":9052,"column":2},"end":{"line":9057,"column":3}},"2733":{"start":{"line":9053,"column":4},"end":{"line":9055,"column":7}},"2734":{"start":{"line":9058,"column":2},"end":{"line":9058,"column":30}},"2735":{"start":{"line":9059,"column":2},"end":{"line":9064,"column":3}},"2736":{"start":{"line":9060,"column":4},"end":{"line":9062,"column":7}},"2737":{"start":{"line":9072,"column":0},"end":{"line":9074,"column":2}},"2738":{"start":{"line":9073,"column":2},"end":{"line":9073,"column":78}},"2739":{"start":{"line":9078,"column":0},"end":{"line":9080,"column":2}},"2740":{"start":{"line":9079,"column":2},"end":{"line":9079,"column":52}},"2741":{"start":{"line":9089,"column":0},"end":{"line":9091,"column":2}},"2742":{"start":{"line":9090,"column":2},"end":{"line":9090,"column":82}},"2743":{"start":{"line":9095,"column":0},"end":{"line":9097,"column":2}},"2744":{"start":{"line":9096,"column":2},"end":{"line":9096,"column":53}},"2745":{"start":{"line":9104,"column":0},"end":{"line":9106,"column":2}},"2746":{"start":{"line":9105,"column":2},"end":{"line":9105,"column":79}},"2747":{"start":{"line":9110,"column":0},"end":{"line":9112,"column":2}},"2748":{"start":{"line":9111,"column":2},"end":{"line":9111,"column":46}},"2749":{"start":{"line":9119,"column":0},"end":{"line":9121,"column":2}},"2750":{"start":{"line":9120,"column":2},"end":{"line":9120,"column":61}},"2751":{"start":{"line":9124,"column":0},"end":{"line":9126,"column":2}},"2752":{"start":{"line":9125,"column":2},"end":{"line":9125,"column":25}},"2753":{"start":{"line":9132,"column":0},"end":{"line":9141,"column":25}},"2754":{"start":{"line":9147,"column":0},"end":{"line":9150,"column":34}},"2755":{"start":{"line":9153,"column":0},"end":{"line":9153,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":81,"column":31},"end":{"line":81,"column":32}},"loc":{"start":{"line":81,"column":51},"end":{"line":83,"column":1}},"line":81},"1":{"name":"(anonymous_1)","decl":{"start":{"line":101,"column":52},"end":{"line":101,"column":53}},"loc":{"start":{"line":101,"column":83},"end":{"line":103,"column":3}},"line":101},"2":{"name":"(anonymous_2)","decl":{"start":{"line":115,"column":42},"end":{"line":115,"column":43}},"loc":{"start":{"line":115,"column":74},"end":{"line":128,"column":3}},"line":115},"3":{"name":"(anonymous_3)","decl":{"start":{"line":137,"column":49},"end":{"line":137,"column":50}},"loc":{"start":{"line":137,"column":66},"end":{"line":141,"column":1}},"line":137},"4":{"name":"(anonymous_4)","decl":{"start":{"line":151,"column":59},"end":{"line":151,"column":60}},"loc":{"start":{"line":151,"column":82},"end":{"line":185,"column":1}},"line":151},"5":{"name":"(anonymous_5)","decl":{"start":{"line":192,"column":57},"end":{"line":192,"column":58}},"loc":{"start":{"line":192,"column":69},"end":{"line":196,"column":1}},"line":192},"6":{"name":"(anonymous_6)","decl":{"start":{"line":206,"column":55},"end":{"line":206,"column":56}},"loc":{"start":{"line":206,"column":82},"end":{"line":244,"column":1}},"line":206},"7":{"name":"(anonymous_7)","decl":{"start":{"line":251,"column":58},"end":{"line":251,"column":59}},"loc":{"start":{"line":251,"column":70},"end":{"line":253,"column":1}},"line":251},"8":{"name":"(anonymous_8)","decl":{"start":{"line":261,"column":64},"end":{"line":261,"column":65}},"loc":{"start":{"line":261,"column":76},"end":{"line":264,"column":1}},"line":261},"9":{"name":"(anonymous_9)","decl":{"start":{"line":274,"column":63},"end":{"line":274,"column":64}},"loc":{"start":{"line":274,"column":75},"end":{"line":277,"column":1}},"line":274},"10":{"name":"(anonymous_10)","decl":{"start":{"line":281,"column":58},"end":{"line":281,"column":59}},"loc":{"start":{"line":281,"column":75},"end":{"line":283,"column":1}},"line":281},"11":{"name":"(anonymous_11)","decl":{"start":{"line":290,"column":55},"end":{"line":290,"column":56}},"loc":{"start":{"line":290,"column":67},"end":{"line":292,"column":1}},"line":290},"12":{"name":"(anonymous_12)","decl":{"start":{"line":296,"column":55},"end":{"line":296,"column":56}},"loc":{"start":{"line":296,"column":72},"end":{"line":298,"column":1}},"line":296},"13":{"name":"(anonymous_13)","decl":{"start":{"line":305,"column":58},"end":{"line":305,"column":59}},"loc":{"start":{"line":305,"column":70},"end":{"line":307,"column":1}},"line":305},"14":{"name":"(anonymous_14)","decl":{"start":{"line":311,"column":58},"end":{"line":311,"column":59}},"loc":{"start":{"line":311,"column":75},"end":{"line":313,"column":1}},"line":311},"15":{"name":"(anonymous_15)","decl":{"start":{"line":320,"column":60},"end":{"line":320,"column":61}},"loc":{"start":{"line":320,"column":72},"end":{"line":322,"column":1}},"line":320},"16":{"name":"(anonymous_16)","decl":{"start":{"line":330,"column":66},"end":{"line":330,"column":67}},"loc":{"start":{"line":330,"column":78},"end":{"line":333,"column":1}},"line":330},"17":{"name":"(anonymous_17)","decl":{"start":{"line":343,"column":65},"end":{"line":343,"column":66}},"loc":{"start":{"line":343,"column":77},"end":{"line":346,"column":1}},"line":343},"18":{"name":"(anonymous_18)","decl":{"start":{"line":350,"column":60},"end":{"line":350,"column":61}},"loc":{"start":{"line":350,"column":77},"end":{"line":352,"column":1}},"line":350},"19":{"name":"(anonymous_19)","decl":{"start":{"line":359,"column":54},"end":{"line":359,"column":55}},"loc":{"start":{"line":359,"column":66},"end":{"line":362,"column":1}},"line":359},"20":{"name":"(anonymous_20)","decl":{"start":{"line":366,"column":54},"end":{"line":366,"column":55}},"loc":{"start":{"line":366,"column":71},"end":{"line":368,"column":1}},"line":366},"21":{"name":"(anonymous_21)","decl":{"start":{"line":371,"column":56},"end":{"line":371,"column":57}},"loc":{"start":{"line":371,"column":68},"end":{"line":373,"column":1}},"line":371},"22":{"name":"(anonymous_22)","decl":{"start":{"line":380,"column":54},"end":{"line":380,"column":55}},"loc":{"start":{"line":380,"column":66},"end":{"line":382,"column":1}},"line":380},"23":{"name":"(anonymous_23)","decl":{"start":{"line":396,"column":22},"end":{"line":396,"column":23}},"loc":{"start":{"line":396,"column":42},"end":{"line":398,"column":1}},"line":396},"24":{"name":"(anonymous_24)","decl":{"start":{"line":416,"column":43},"end":{"line":416,"column":44}},"loc":{"start":{"line":416,"column":74},"end":{"line":418,"column":3}},"line":416},"25":{"name":"(anonymous_25)","decl":{"start":{"line":430,"column":33},"end":{"line":430,"column":34}},"loc":{"start":{"line":430,"column":65},"end":{"line":443,"column":3}},"line":430},"26":{"name":"(anonymous_26)","decl":{"start":{"line":452,"column":40},"end":{"line":452,"column":41}},"loc":{"start":{"line":452,"column":57},"end":{"line":456,"column":1}},"line":452},"27":{"name":"(anonymous_27)","decl":{"start":{"line":466,"column":50},"end":{"line":466,"column":51}},"loc":{"start":{"line":466,"column":73},"end":{"line":499,"column":1}},"line":466},"28":{"name":"(anonymous_28)","decl":{"start":{"line":506,"column":48},"end":{"line":506,"column":49}},"loc":{"start":{"line":506,"column":60},"end":{"line":510,"column":1}},"line":506},"29":{"name":"(anonymous_29)","decl":{"start":{"line":520,"column":46},"end":{"line":520,"column":47}},"loc":{"start":{"line":520,"column":73},"end":{"line":557,"column":1}},"line":520},"30":{"name":"(anonymous_30)","decl":{"start":{"line":564,"column":41},"end":{"line":564,"column":42}},"loc":{"start":{"line":564,"column":53},"end":{"line":566,"column":1}},"line":564},"31":{"name":"(anonymous_31)","decl":{"start":{"line":570,"column":41},"end":{"line":570,"column":42}},"loc":{"start":{"line":570,"column":58},"end":{"line":572,"column":1}},"line":570},"32":{"name":"(anonymous_32)","decl":{"start":{"line":581,"column":42},"end":{"line":581,"column":43}},"loc":{"start":{"line":581,"column":54},"end":{"line":583,"column":1}},"line":581},"33":{"name":"(anonymous_33)","decl":{"start":{"line":587,"column":42},"end":{"line":587,"column":43}},"loc":{"start":{"line":587,"column":59},"end":{"line":589,"column":1}},"line":587},"34":{"name":"(anonymous_34)","decl":{"start":{"line":598,"column":43},"end":{"line":598,"column":44}},"loc":{"start":{"line":598,"column":55},"end":{"line":600,"column":1}},"line":598},"35":{"name":"(anonymous_35)","decl":{"start":{"line":604,"column":43},"end":{"line":604,"column":44}},"loc":{"start":{"line":604,"column":60},"end":{"line":606,"column":1}},"line":604},"36":{"name":"(anonymous_36)","decl":{"start":{"line":613,"column":45},"end":{"line":613,"column":46}},"loc":{"start":{"line":613,"column":57},"end":{"line":615,"column":1}},"line":613},"37":{"name":"(anonymous_37)","decl":{"start":{"line":619,"column":45},"end":{"line":619,"column":46}},"loc":{"start":{"line":619,"column":62},"end":{"line":621,"column":1}},"line":619},"38":{"name":"(anonymous_38)","decl":{"start":{"line":628,"column":43},"end":{"line":628,"column":44}},"loc":{"start":{"line":628,"column":55},"end":{"line":630,"column":1}},"line":628},"39":{"name":"(anonymous_39)","decl":{"start":{"line":634,"column":43},"end":{"line":634,"column":44}},"loc":{"start":{"line":634,"column":60},"end":{"line":636,"column":1}},"line":634},"40":{"name":"(anonymous_40)","decl":{"start":{"line":650,"column":24},"end":{"line":650,"column":25}},"loc":{"start":{"line":650,"column":44},"end":{"line":652,"column":1}},"line":650},"41":{"name":"(anonymous_41)","decl":{"start":{"line":670,"column":45},"end":{"line":670,"column":46}},"loc":{"start":{"line":670,"column":76},"end":{"line":672,"column":3}},"line":670},"42":{"name":"(anonymous_42)","decl":{"start":{"line":684,"column":35},"end":{"line":684,"column":36}},"loc":{"start":{"line":684,"column":67},"end":{"line":702,"column":3}},"line":684},"43":{"name":"(anonymous_43)","decl":{"start":{"line":711,"column":42},"end":{"line":711,"column":43}},"loc":{"start":{"line":711,"column":59},"end":{"line":715,"column":1}},"line":711},"44":{"name":"(anonymous_44)","decl":{"start":{"line":725,"column":52},"end":{"line":725,"column":53}},"loc":{"start":{"line":725,"column":75},"end":{"line":779,"column":1}},"line":725},"45":{"name":"(anonymous_45)","decl":{"start":{"line":786,"column":50},"end":{"line":786,"column":51}},"loc":{"start":{"line":786,"column":62},"end":{"line":790,"column":1}},"line":786},"46":{"name":"(anonymous_46)","decl":{"start":{"line":800,"column":48},"end":{"line":800,"column":49}},"loc":{"start":{"line":800,"column":75},"end":{"line":873,"column":1}},"line":800},"47":{"name":"(anonymous_47)","decl":{"start":{"line":880,"column":40},"end":{"line":880,"column":41}},"loc":{"start":{"line":880,"column":52},"end":{"line":883,"column":1}},"line":880},"48":{"name":"(anonymous_48)","decl":{"start":{"line":887,"column":40},"end":{"line":887,"column":41}},"loc":{"start":{"line":887,"column":57},"end":{"line":889,"column":1}},"line":887},"49":{"name":"(anonymous_49)","decl":{"start":{"line":892,"column":42},"end":{"line":892,"column":43}},"loc":{"start":{"line":892,"column":54},"end":{"line":894,"column":1}},"line":892},"50":{"name":"(anonymous_50)","decl":{"start":{"line":901,"column":40},"end":{"line":901,"column":41}},"loc":{"start":{"line":901,"column":52},"end":{"line":903,"column":1}},"line":901},"51":{"name":"(anonymous_51)","decl":{"start":{"line":910,"column":46},"end":{"line":910,"column":47}},"loc":{"start":{"line":910,"column":58},"end":{"line":912,"column":1}},"line":910},"52":{"name":"(anonymous_52)","decl":{"start":{"line":916,"column":46},"end":{"line":916,"column":47}},"loc":{"start":{"line":916,"column":63},"end":{"line":918,"column":1}},"line":916},"53":{"name":"(anonymous_53)","decl":{"start":{"line":925,"column":50},"end":{"line":925,"column":51}},"loc":{"start":{"line":925,"column":62},"end":{"line":927,"column":1}},"line":925},"54":{"name":"(anonymous_54)","decl":{"start":{"line":931,"column":50},"end":{"line":931,"column":51}},"loc":{"start":{"line":931,"column":67},"end":{"line":933,"column":1}},"line":931},"55":{"name":"(anonymous_55)","decl":{"start":{"line":940,"column":47},"end":{"line":940,"column":48}},"loc":{"start":{"line":940,"column":59},"end":{"line":942,"column":1}},"line":940},"56":{"name":"(anonymous_56)","decl":{"start":{"line":950,"column":53},"end":{"line":950,"column":54}},"loc":{"start":{"line":950,"column":65},"end":{"line":953,"column":1}},"line":950},"57":{"name":"(anonymous_57)","decl":{"start":{"line":963,"column":52},"end":{"line":963,"column":53}},"loc":{"start":{"line":963,"column":64},"end":{"line":966,"column":1}},"line":963},"58":{"name":"(anonymous_58)","decl":{"start":{"line":970,"column":47},"end":{"line":970,"column":48}},"loc":{"start":{"line":970,"column":64},"end":{"line":972,"column":1}},"line":970},"59":{"name":"(anonymous_59)","decl":{"start":{"line":979,"column":52},"end":{"line":979,"column":53}},"loc":{"start":{"line":979,"column":64},"end":{"line":981,"column":1}},"line":979},"60":{"name":"(anonymous_60)","decl":{"start":{"line":989,"column":58},"end":{"line":989,"column":59}},"loc":{"start":{"line":989,"column":70},"end":{"line":992,"column":1}},"line":989},"61":{"name":"(anonymous_61)","decl":{"start":{"line":1002,"column":57},"end":{"line":1002,"column":58}},"loc":{"start":{"line":1002,"column":69},"end":{"line":1005,"column":1}},"line":1002},"62":{"name":"(anonymous_62)","decl":{"start":{"line":1009,"column":52},"end":{"line":1009,"column":53}},"loc":{"start":{"line":1009,"column":69},"end":{"line":1011,"column":1}},"line":1009},"63":{"name":"(anonymous_63)","decl":{"start":{"line":1018,"column":50},"end":{"line":1018,"column":51}},"loc":{"start":{"line":1018,"column":62},"end":{"line":1020,"column":1}},"line":1018},"64":{"name":"(anonymous_64)","decl":{"start":{"line":1028,"column":56},"end":{"line":1028,"column":57}},"loc":{"start":{"line":1028,"column":68},"end":{"line":1031,"column":1}},"line":1028},"65":{"name":"(anonymous_65)","decl":{"start":{"line":1041,"column":55},"end":{"line":1041,"column":56}},"loc":{"start":{"line":1041,"column":67},"end":{"line":1044,"column":1}},"line":1041},"66":{"name":"(anonymous_66)","decl":{"start":{"line":1048,"column":50},"end":{"line":1048,"column":51}},"loc":{"start":{"line":1048,"column":67},"end":{"line":1050,"column":1}},"line":1048},"67":{"name":"(anonymous_67)","decl":{"start":{"line":1057,"column":46},"end":{"line":1057,"column":47}},"loc":{"start":{"line":1057,"column":58},"end":{"line":1059,"column":1}},"line":1057},"68":{"name":"(anonymous_68)","decl":{"start":{"line":1067,"column":52},"end":{"line":1067,"column":53}},"loc":{"start":{"line":1067,"column":64},"end":{"line":1070,"column":1}},"line":1067},"69":{"name":"(anonymous_69)","decl":{"start":{"line":1080,"column":51},"end":{"line":1080,"column":52}},"loc":{"start":{"line":1080,"column":63},"end":{"line":1083,"column":1}},"line":1080},"70":{"name":"(anonymous_70)","decl":{"start":{"line":1087,"column":46},"end":{"line":1087,"column":47}},"loc":{"start":{"line":1087,"column":63},"end":{"line":1089,"column":1}},"line":1087},"71":{"name":"(anonymous_71)","decl":{"start":{"line":1096,"column":47},"end":{"line":1096,"column":48}},"loc":{"start":{"line":1096,"column":59},"end":{"line":1098,"column":1}},"line":1096},"72":{"name":"(anonymous_72)","decl":{"start":{"line":1106,"column":53},"end":{"line":1106,"column":54}},"loc":{"start":{"line":1106,"column":65},"end":{"line":1109,"column":1}},"line":1106},"73":{"name":"(anonymous_73)","decl":{"start":{"line":1119,"column":52},"end":{"line":1119,"column":53}},"loc":{"start":{"line":1119,"column":64},"end":{"line":1122,"column":1}},"line":1119},"74":{"name":"(anonymous_74)","decl":{"start":{"line":1126,"column":47},"end":{"line":1126,"column":48}},"loc":{"start":{"line":1126,"column":64},"end":{"line":1128,"column":1}},"line":1126},"75":{"name":"(anonymous_75)","decl":{"start":{"line":1135,"column":54},"end":{"line":1135,"column":55}},"loc":{"start":{"line":1135,"column":66},"end":{"line":1137,"column":1}},"line":1135},"76":{"name":"(anonymous_76)","decl":{"start":{"line":1145,"column":60},"end":{"line":1145,"column":61}},"loc":{"start":{"line":1145,"column":72},"end":{"line":1148,"column":1}},"line":1145},"77":{"name":"(anonymous_77)","decl":{"start":{"line":1158,"column":59},"end":{"line":1158,"column":60}},"loc":{"start":{"line":1158,"column":71},"end":{"line":1161,"column":1}},"line":1158},"78":{"name":"(anonymous_78)","decl":{"start":{"line":1165,"column":54},"end":{"line":1165,"column":55}},"loc":{"start":{"line":1165,"column":71},"end":{"line":1167,"column":1}},"line":1165},"79":{"name":"(anonymous_79)","decl":{"start":{"line":1174,"column":50},"end":{"line":1174,"column":51}},"loc":{"start":{"line":1174,"column":62},"end":{"line":1176,"column":1}},"line":1174},"80":{"name":"(anonymous_80)","decl":{"start":{"line":1184,"column":56},"end":{"line":1184,"column":57}},"loc":{"start":{"line":1184,"column":68},"end":{"line":1187,"column":1}},"line":1184},"81":{"name":"(anonymous_81)","decl":{"start":{"line":1197,"column":55},"end":{"line":1197,"column":56}},"loc":{"start":{"line":1197,"column":67},"end":{"line":1200,"column":1}},"line":1197},"82":{"name":"(anonymous_82)","decl":{"start":{"line":1204,"column":50},"end":{"line":1204,"column":51}},"loc":{"start":{"line":1204,"column":67},"end":{"line":1206,"column":1}},"line":1204},"83":{"name":"(anonymous_83)","decl":{"start":{"line":1220,"column":25},"end":{"line":1220,"column":26}},"loc":{"start":{"line":1220,"column":45},"end":{"line":1222,"column":1}},"line":1220},"84":{"name":"(anonymous_84)","decl":{"start":{"line":1240,"column":46},"end":{"line":1240,"column":47}},"loc":{"start":{"line":1240,"column":77},"end":{"line":1242,"column":3}},"line":1240},"85":{"name":"(anonymous_85)","decl":{"start":{"line":1254,"column":36},"end":{"line":1254,"column":37}},"loc":{"start":{"line":1254,"column":68},"end":{"line":1263,"column":3}},"line":1254},"86":{"name":"(anonymous_86)","decl":{"start":{"line":1272,"column":43},"end":{"line":1272,"column":44}},"loc":{"start":{"line":1272,"column":60},"end":{"line":1276,"column":1}},"line":1272},"87":{"name":"(anonymous_87)","decl":{"start":{"line":1286,"column":53},"end":{"line":1286,"column":54}},"loc":{"start":{"line":1286,"column":76},"end":{"line":1303,"column":1}},"line":1286},"88":{"name":"(anonymous_88)","decl":{"start":{"line":1310,"column":51},"end":{"line":1310,"column":52}},"loc":{"start":{"line":1310,"column":63},"end":{"line":1314,"column":1}},"line":1310},"89":{"name":"(anonymous_89)","decl":{"start":{"line":1324,"column":49},"end":{"line":1324,"column":50}},"loc":{"start":{"line":1324,"column":76},"end":{"line":1333,"column":1}},"line":1324},"90":{"name":"(anonymous_90)","decl":{"start":{"line":1340,"column":45},"end":{"line":1340,"column":46}},"loc":{"start":{"line":1340,"column":57},"end":{"line":1342,"column":1}},"line":1340},"91":{"name":"(anonymous_91)","decl":{"start":{"line":1346,"column":45},"end":{"line":1346,"column":46}},"loc":{"start":{"line":1346,"column":62},"end":{"line":1348,"column":1}},"line":1346},"92":{"name":"(anonymous_92)","decl":{"start":{"line":1362,"column":20},"end":{"line":1362,"column":21}},"loc":{"start":{"line":1362,"column":40},"end":{"line":1364,"column":1}},"line":1362},"93":{"name":"(anonymous_93)","decl":{"start":{"line":1389,"column":41},"end":{"line":1389,"column":42}},"loc":{"start":{"line":1389,"column":72},"end":{"line":1391,"column":3}},"line":1389},"94":{"name":"(anonymous_94)","decl":{"start":{"line":1403,"column":31},"end":{"line":1403,"column":32}},"loc":{"start":{"line":1403,"column":63},"end":{"line":1415,"column":3}},"line":1403},"95":{"name":"(anonymous_95)","decl":{"start":{"line":1424,"column":38},"end":{"line":1424,"column":39}},"loc":{"start":{"line":1424,"column":55},"end":{"line":1428,"column":1}},"line":1424},"96":{"name":"(anonymous_96)","decl":{"start":{"line":1438,"column":48},"end":{"line":1438,"column":49}},"loc":{"start":{"line":1438,"column":71},"end":{"line":1467,"column":1}},"line":1438},"97":{"name":"(anonymous_97)","decl":{"start":{"line":1474,"column":46},"end":{"line":1474,"column":47}},"loc":{"start":{"line":1474,"column":58},"end":{"line":1478,"column":1}},"line":1474},"98":{"name":"(anonymous_98)","decl":{"start":{"line":1488,"column":44},"end":{"line":1488,"column":45}},"loc":{"start":{"line":1488,"column":71},"end":{"line":1518,"column":1}},"line":1488},"99":{"name":"(anonymous_99)","decl":{"start":{"line":1525,"column":38},"end":{"line":1525,"column":39}},"loc":{"start":{"line":1525,"column":50},"end":{"line":1527,"column":1}},"line":1525},"100":{"name":"(anonymous_100)","decl":{"start":{"line":1535,"column":44},"end":{"line":1535,"column":45}},"loc":{"start":{"line":1535,"column":56},"end":{"line":1538,"column":1}},"line":1535},"101":{"name":"(anonymous_101)","decl":{"start":{"line":1548,"column":43},"end":{"line":1548,"column":44}},"loc":{"start":{"line":1548,"column":55},"end":{"line":1551,"column":1}},"line":1548},"102":{"name":"(anonymous_102)","decl":{"start":{"line":1555,"column":38},"end":{"line":1555,"column":39}},"loc":{"start":{"line":1555,"column":55},"end":{"line":1557,"column":1}},"line":1555},"103":{"name":"(anonymous_103)","decl":{"start":{"line":1564,"column":45},"end":{"line":1564,"column":46}},"loc":{"start":{"line":1564,"column":57},"end":{"line":1566,"column":1}},"line":1564},"104":{"name":"(anonymous_104)","decl":{"start":{"line":1574,"column":51},"end":{"line":1574,"column":52}},"loc":{"start":{"line":1574,"column":63},"end":{"line":1577,"column":1}},"line":1574},"105":{"name":"(anonymous_105)","decl":{"start":{"line":1587,"column":50},"end":{"line":1587,"column":51}},"loc":{"start":{"line":1587,"column":62},"end":{"line":1590,"column":1}},"line":1587},"106":{"name":"(anonymous_106)","decl":{"start":{"line":1594,"column":45},"end":{"line":1594,"column":46}},"loc":{"start":{"line":1594,"column":62},"end":{"line":1596,"column":1}},"line":1594},"107":{"name":"(anonymous_107)","decl":{"start":{"line":1603,"column":41},"end":{"line":1603,"column":42}},"loc":{"start":{"line":1603,"column":69},"end":{"line":1605,"column":1}},"line":1603},"108":{"name":"(anonymous_108)","decl":{"start":{"line":1608,"column":47},"end":{"line":1608,"column":48}},"loc":{"start":{"line":1608,"column":59},"end":{"line":1610,"column":1}},"line":1608},"109":{"name":"(anonymous_109)","decl":{"start":{"line":1617,"column":39},"end":{"line":1617,"column":40}},"loc":{"start":{"line":1617,"column":51},"end":{"line":1619,"column":1}},"line":1617},"110":{"name":"(anonymous_110)","decl":{"start":{"line":1627,"column":45},"end":{"line":1627,"column":46}},"loc":{"start":{"line":1627,"column":57},"end":{"line":1630,"column":1}},"line":1627},"111":{"name":"(anonymous_111)","decl":{"start":{"line":1640,"column":44},"end":{"line":1640,"column":45}},"loc":{"start":{"line":1640,"column":56},"end":{"line":1643,"column":1}},"line":1640},"112":{"name":"(anonymous_112)","decl":{"start":{"line":1647,"column":39},"end":{"line":1647,"column":40}},"loc":{"start":{"line":1647,"column":56},"end":{"line":1649,"column":1}},"line":1647},"113":{"name":"(anonymous_113)","decl":{"start":{"line":1656,"column":40},"end":{"line":1656,"column":41}},"loc":{"start":{"line":1656,"column":52},"end":{"line":1658,"column":1}},"line":1656},"114":{"name":"(anonymous_114)","decl":{"start":{"line":1666,"column":46},"end":{"line":1666,"column":47}},"loc":{"start":{"line":1666,"column":58},"end":{"line":1669,"column":1}},"line":1666},"115":{"name":"(anonymous_115)","decl":{"start":{"line":1679,"column":45},"end":{"line":1679,"column":46}},"loc":{"start":{"line":1679,"column":57},"end":{"line":1682,"column":1}},"line":1679},"116":{"name":"(anonymous_116)","decl":{"start":{"line":1686,"column":40},"end":{"line":1686,"column":41}},"loc":{"start":{"line":1686,"column":57},"end":{"line":1688,"column":1}},"line":1686},"117":{"name":"(anonymous_117)","decl":{"start":{"line":1702,"column":21},"end":{"line":1702,"column":22}},"loc":{"start":{"line":1702,"column":41},"end":{"line":1704,"column":1}},"line":1702},"118":{"name":"(anonymous_118)","decl":{"start":{"line":1722,"column":42},"end":{"line":1722,"column":43}},"loc":{"start":{"line":1722,"column":73},"end":{"line":1724,"column":3}},"line":1722},"119":{"name":"(anonymous_119)","decl":{"start":{"line":1736,"column":32},"end":{"line":1736,"column":33}},"loc":{"start":{"line":1736,"column":64},"end":{"line":1748,"column":3}},"line":1736},"120":{"name":"(anonymous_120)","decl":{"start":{"line":1757,"column":39},"end":{"line":1757,"column":40}},"loc":{"start":{"line":1757,"column":56},"end":{"line":1761,"column":1}},"line":1757},"121":{"name":"(anonymous_121)","decl":{"start":{"line":1771,"column":49},"end":{"line":1771,"column":50}},"loc":{"start":{"line":1771,"column":72},"end":{"line":1800,"column":1}},"line":1771},"122":{"name":"(anonymous_122)","decl":{"start":{"line":1807,"column":47},"end":{"line":1807,"column":48}},"loc":{"start":{"line":1807,"column":59},"end":{"line":1811,"column":1}},"line":1807},"123":{"name":"(anonymous_123)","decl":{"start":{"line":1821,"column":45},"end":{"line":1821,"column":46}},"loc":{"start":{"line":1821,"column":72},"end":{"line":1851,"column":1}},"line":1821},"124":{"name":"(anonymous_124)","decl":{"start":{"line":1858,"column":40},"end":{"line":1858,"column":41}},"loc":{"start":{"line":1858,"column":52},"end":{"line":1860,"column":1}},"line":1858},"125":{"name":"(anonymous_125)","decl":{"start":{"line":1864,"column":40},"end":{"line":1864,"column":41}},"loc":{"start":{"line":1864,"column":57},"end":{"line":1866,"column":1}},"line":1864},"126":{"name":"(anonymous_126)","decl":{"start":{"line":1873,"column":42},"end":{"line":1873,"column":43}},"loc":{"start":{"line":1873,"column":54},"end":{"line":1875,"column":1}},"line":1873},"127":{"name":"(anonymous_127)","decl":{"start":{"line":1883,"column":48},"end":{"line":1883,"column":49}},"loc":{"start":{"line":1883,"column":60},"end":{"line":1886,"column":1}},"line":1883},"128":{"name":"(anonymous_128)","decl":{"start":{"line":1896,"column":47},"end":{"line":1896,"column":48}},"loc":{"start":{"line":1896,"column":59},"end":{"line":1899,"column":1}},"line":1896},"129":{"name":"(anonymous_129)","decl":{"start":{"line":1903,"column":42},"end":{"line":1903,"column":43}},"loc":{"start":{"line":1903,"column":59},"end":{"line":1905,"column":1}},"line":1903},"130":{"name":"(anonymous_130)","decl":{"start":{"line":1912,"column":40},"end":{"line":1912,"column":41}},"loc":{"start":{"line":1912,"column":52},"end":{"line":1914,"column":1}},"line":1912},"131":{"name":"(anonymous_131)","decl":{"start":{"line":1922,"column":46},"end":{"line":1922,"column":47}},"loc":{"start":{"line":1922,"column":58},"end":{"line":1925,"column":1}},"line":1922},"132":{"name":"(anonymous_132)","decl":{"start":{"line":1935,"column":45},"end":{"line":1935,"column":46}},"loc":{"start":{"line":1935,"column":57},"end":{"line":1938,"column":1}},"line":1935},"133":{"name":"(anonymous_133)","decl":{"start":{"line":1942,"column":40},"end":{"line":1942,"column":41}},"loc":{"start":{"line":1942,"column":57},"end":{"line":1944,"column":1}},"line":1942},"134":{"name":"(anonymous_134)","decl":{"start":{"line":1951,"column":41},"end":{"line":1951,"column":42}},"loc":{"start":{"line":1951,"column":53},"end":{"line":1953,"column":1}},"line":1951},"135":{"name":"(anonymous_135)","decl":{"start":{"line":1961,"column":47},"end":{"line":1961,"column":48}},"loc":{"start":{"line":1961,"column":59},"end":{"line":1964,"column":1}},"line":1961},"136":{"name":"(anonymous_136)","decl":{"start":{"line":1974,"column":46},"end":{"line":1974,"column":47}},"loc":{"start":{"line":1974,"column":58},"end":{"line":1977,"column":1}},"line":1974},"137":{"name":"(anonymous_137)","decl":{"start":{"line":1981,"column":41},"end":{"line":1981,"column":42}},"loc":{"start":{"line":1981,"column":58},"end":{"line":1983,"column":1}},"line":1981},"138":{"name":"(anonymous_138)","decl":{"start":{"line":1997,"column":20},"end":{"line":1997,"column":21}},"loc":{"start":{"line":1997,"column":40},"end":{"line":1999,"column":1}},"line":1997},"139":{"name":"(anonymous_139)","decl":{"start":{"line":2017,"column":41},"end":{"line":2017,"column":42}},"loc":{"start":{"line":2017,"column":72},"end":{"line":2019,"column":3}},"line":2017},"140":{"name":"(anonymous_140)","decl":{"start":{"line":2031,"column":31},"end":{"line":2031,"column":32}},"loc":{"start":{"line":2031,"column":63},"end":{"line":2040,"column":3}},"line":2031},"141":{"name":"(anonymous_141)","decl":{"start":{"line":2049,"column":38},"end":{"line":2049,"column":39}},"loc":{"start":{"line":2049,"column":55},"end":{"line":2053,"column":1}},"line":2049},"142":{"name":"(anonymous_142)","decl":{"start":{"line":2063,"column":48},"end":{"line":2063,"column":49}},"loc":{"start":{"line":2063,"column":71},"end":{"line":2076,"column":1}},"line":2063},"143":{"name":"(anonymous_143)","decl":{"start":{"line":2083,"column":46},"end":{"line":2083,"column":47}},"loc":{"start":{"line":2083,"column":58},"end":{"line":2087,"column":1}},"line":2083},"144":{"name":"(anonymous_144)","decl":{"start":{"line":2097,"column":44},"end":{"line":2097,"column":45}},"loc":{"start":{"line":2097,"column":71},"end":{"line":2099,"column":1}},"line":2097},"145":{"name":"(anonymous_145)","decl":{"start":{"line":2113,"column":26},"end":{"line":2113,"column":27}},"loc":{"start":{"line":2113,"column":46},"end":{"line":2115,"column":1}},"line":2113},"146":{"name":"(anonymous_146)","decl":{"start":{"line":2133,"column":47},"end":{"line":2133,"column":48}},"loc":{"start":{"line":2133,"column":78},"end":{"line":2135,"column":3}},"line":2133},"147":{"name":"(anonymous_147)","decl":{"start":{"line":2147,"column":37},"end":{"line":2147,"column":38}},"loc":{"start":{"line":2147,"column":69},"end":{"line":2156,"column":3}},"line":2147},"148":{"name":"(anonymous_148)","decl":{"start":{"line":2165,"column":44},"end":{"line":2165,"column":45}},"loc":{"start":{"line":2165,"column":61},"end":{"line":2169,"column":1}},"line":2165},"149":{"name":"(anonymous_149)","decl":{"start":{"line":2179,"column":54},"end":{"line":2179,"column":55}},"loc":{"start":{"line":2179,"column":77},"end":{"line":2196,"column":1}},"line":2179},"150":{"name":"(anonymous_150)","decl":{"start":{"line":2203,"column":52},"end":{"line":2203,"column":53}},"loc":{"start":{"line":2203,"column":64},"end":{"line":2207,"column":1}},"line":2203},"151":{"name":"(anonymous_151)","decl":{"start":{"line":2217,"column":50},"end":{"line":2217,"column":51}},"loc":{"start":{"line":2217,"column":77},"end":{"line":2226,"column":1}},"line":2217},"152":{"name":"(anonymous_152)","decl":{"start":{"line":2233,"column":45},"end":{"line":2233,"column":46}},"loc":{"start":{"line":2233,"column":57},"end":{"line":2235,"column":1}},"line":2233},"153":{"name":"(anonymous_153)","decl":{"start":{"line":2243,"column":51},"end":{"line":2243,"column":52}},"loc":{"start":{"line":2243,"column":63},"end":{"line":2246,"column":1}},"line":2243},"154":{"name":"(anonymous_154)","decl":{"start":{"line":2256,"column":50},"end":{"line":2256,"column":51}},"loc":{"start":{"line":2256,"column":62},"end":{"line":2259,"column":1}},"line":2256},"155":{"name":"(anonymous_155)","decl":{"start":{"line":2263,"column":45},"end":{"line":2263,"column":46}},"loc":{"start":{"line":2263,"column":62},"end":{"line":2265,"column":1}},"line":2263},"156":{"name":"(anonymous_156)","decl":{"start":{"line":2279,"column":27},"end":{"line":2279,"column":28}},"loc":{"start":{"line":2279,"column":47},"end":{"line":2281,"column":1}},"line":2279},"157":{"name":"(anonymous_157)","decl":{"start":{"line":2299,"column":48},"end":{"line":2299,"column":49}},"loc":{"start":{"line":2299,"column":79},"end":{"line":2301,"column":3}},"line":2299},"158":{"name":"(anonymous_158)","decl":{"start":{"line":2313,"column":38},"end":{"line":2313,"column":39}},"loc":{"start":{"line":2313,"column":70},"end":{"line":2322,"column":3}},"line":2313},"159":{"name":"(anonymous_159)","decl":{"start":{"line":2331,"column":45},"end":{"line":2331,"column":46}},"loc":{"start":{"line":2331,"column":62},"end":{"line":2335,"column":1}},"line":2331},"160":{"name":"(anonymous_160)","decl":{"start":{"line":2345,"column":55},"end":{"line":2345,"column":56}},"loc":{"start":{"line":2345,"column":78},"end":{"line":2362,"column":1}},"line":2345},"161":{"name":"(anonymous_161)","decl":{"start":{"line":2369,"column":53},"end":{"line":2369,"column":54}},"loc":{"start":{"line":2369,"column":65},"end":{"line":2373,"column":1}},"line":2369},"162":{"name":"(anonymous_162)","decl":{"start":{"line":2383,"column":51},"end":{"line":2383,"column":52}},"loc":{"start":{"line":2383,"column":78},"end":{"line":2392,"column":1}},"line":2383},"163":{"name":"(anonymous_163)","decl":{"start":{"line":2399,"column":46},"end":{"line":2399,"column":47}},"loc":{"start":{"line":2399,"column":58},"end":{"line":2401,"column":1}},"line":2399},"164":{"name":"(anonymous_164)","decl":{"start":{"line":2405,"column":46},"end":{"line":2405,"column":47}},"loc":{"start":{"line":2405,"column":63},"end":{"line":2407,"column":1}},"line":2405},"165":{"name":"(anonymous_165)","decl":{"start":{"line":2421,"column":29},"end":{"line":2421,"column":30}},"loc":{"start":{"line":2421,"column":49},"end":{"line":2423,"column":1}},"line":2421},"166":{"name":"(anonymous_166)","decl":{"start":{"line":2441,"column":50},"end":{"line":2441,"column":51}},"loc":{"start":{"line":2441,"column":81},"end":{"line":2443,"column":3}},"line":2441},"167":{"name":"(anonymous_167)","decl":{"start":{"line":2455,"column":40},"end":{"line":2455,"column":41}},"loc":{"start":{"line":2455,"column":72},"end":{"line":2464,"column":3}},"line":2455},"168":{"name":"(anonymous_168)","decl":{"start":{"line":2473,"column":47},"end":{"line":2473,"column":48}},"loc":{"start":{"line":2473,"column":64},"end":{"line":2477,"column":1}},"line":2473},"169":{"name":"(anonymous_169)","decl":{"start":{"line":2487,"column":57},"end":{"line":2487,"column":58}},"loc":{"start":{"line":2487,"column":80},"end":{"line":2504,"column":1}},"line":2487},"170":{"name":"(anonymous_170)","decl":{"start":{"line":2511,"column":55},"end":{"line":2511,"column":56}},"loc":{"start":{"line":2511,"column":67},"end":{"line":2515,"column":1}},"line":2511},"171":{"name":"(anonymous_171)","decl":{"start":{"line":2525,"column":53},"end":{"line":2525,"column":54}},"loc":{"start":{"line":2525,"column":80},"end":{"line":2534,"column":1}},"line":2525},"172":{"name":"(anonymous_172)","decl":{"start":{"line":2541,"column":48},"end":{"line":2541,"column":49}},"loc":{"start":{"line":2541,"column":60},"end":{"line":2543,"column":1}},"line":2541},"173":{"name":"(anonymous_173)","decl":{"start":{"line":2551,"column":54},"end":{"line":2551,"column":55}},"loc":{"start":{"line":2551,"column":66},"end":{"line":2554,"column":1}},"line":2551},"174":{"name":"(anonymous_174)","decl":{"start":{"line":2564,"column":53},"end":{"line":2564,"column":54}},"loc":{"start":{"line":2564,"column":65},"end":{"line":2567,"column":1}},"line":2564},"175":{"name":"(anonymous_175)","decl":{"start":{"line":2571,"column":48},"end":{"line":2571,"column":49}},"loc":{"start":{"line":2571,"column":65},"end":{"line":2573,"column":1}},"line":2571},"176":{"name":"(anonymous_176)","decl":{"start":{"line":2587,"column":29},"end":{"line":2587,"column":30}},"loc":{"start":{"line":2587,"column":49},"end":{"line":2589,"column":1}},"line":2587},"177":{"name":"(anonymous_177)","decl":{"start":{"line":2607,"column":50},"end":{"line":2607,"column":51}},"loc":{"start":{"line":2607,"column":81},"end":{"line":2609,"column":3}},"line":2607},"178":{"name":"(anonymous_178)","decl":{"start":{"line":2621,"column":40},"end":{"line":2621,"column":41}},"loc":{"start":{"line":2621,"column":72},"end":{"line":2632,"column":3}},"line":2621},"179":{"name":"(anonymous_179)","decl":{"start":{"line":2641,"column":47},"end":{"line":2641,"column":48}},"loc":{"start":{"line":2641,"column":64},"end":{"line":2645,"column":1}},"line":2641},"180":{"name":"(anonymous_180)","decl":{"start":{"line":2655,"column":57},"end":{"line":2655,"column":58}},"loc":{"start":{"line":2655,"column":80},"end":{"line":2680,"column":1}},"line":2655},"181":{"name":"(anonymous_181)","decl":{"start":{"line":2687,"column":55},"end":{"line":2687,"column":56}},"loc":{"start":{"line":2687,"column":67},"end":{"line":2691,"column":1}},"line":2687},"182":{"name":"(anonymous_182)","decl":{"start":{"line":2701,"column":53},"end":{"line":2701,"column":54}},"loc":{"start":{"line":2701,"column":80},"end":{"line":2724,"column":1}},"line":2701},"183":{"name":"(anonymous_183)","decl":{"start":{"line":2731,"column":50},"end":{"line":2731,"column":51}},"loc":{"start":{"line":2731,"column":62},"end":{"line":2733,"column":1}},"line":2731},"184":{"name":"(anonymous_184)","decl":{"start":{"line":2741,"column":56},"end":{"line":2741,"column":57}},"loc":{"start":{"line":2741,"column":68},"end":{"line":2744,"column":1}},"line":2741},"185":{"name":"(anonymous_185)","decl":{"start":{"line":2754,"column":55},"end":{"line":2754,"column":56}},"loc":{"start":{"line":2754,"column":67},"end":{"line":2757,"column":1}},"line":2754},"186":{"name":"(anonymous_186)","decl":{"start":{"line":2761,"column":50},"end":{"line":2761,"column":51}},"loc":{"start":{"line":2761,"column":67},"end":{"line":2763,"column":1}},"line":2761},"187":{"name":"(anonymous_187)","decl":{"start":{"line":2770,"column":47},"end":{"line":2770,"column":48}},"loc":{"start":{"line":2770,"column":59},"end":{"line":2772,"column":1}},"line":2770},"188":{"name":"(anonymous_188)","decl":{"start":{"line":2780,"column":53},"end":{"line":2780,"column":54}},"loc":{"start":{"line":2780,"column":65},"end":{"line":2783,"column":1}},"line":2780},"189":{"name":"(anonymous_189)","decl":{"start":{"line":2793,"column":52},"end":{"line":2793,"column":53}},"loc":{"start":{"line":2793,"column":64},"end":{"line":2796,"column":1}},"line":2793},"190":{"name":"(anonymous_190)","decl":{"start":{"line":2800,"column":47},"end":{"line":2800,"column":48}},"loc":{"start":{"line":2800,"column":64},"end":{"line":2802,"column":1}},"line":2800},"191":{"name":"(anonymous_191)","decl":{"start":{"line":2811,"column":53},"end":{"line":2811,"column":54}},"loc":{"start":{"line":2811,"column":65},"end":{"line":2813,"column":1}},"line":2811},"192":{"name":"(anonymous_192)","decl":{"start":{"line":2817,"column":53},"end":{"line":2817,"column":54}},"loc":{"start":{"line":2817,"column":70},"end":{"line":2819,"column":1}},"line":2817},"193":{"name":"(anonymous_193)","decl":{"start":{"line":2833,"column":19},"end":{"line":2833,"column":20}},"loc":{"start":{"line":2833,"column":39},"end":{"line":2835,"column":1}},"line":2833},"194":{"name":"(anonymous_194)","decl":{"start":{"line":2860,"column":40},"end":{"line":2860,"column":41}},"loc":{"start":{"line":2860,"column":71},"end":{"line":2862,"column":3}},"line":2860},"195":{"name":"(anonymous_195)","decl":{"start":{"line":2874,"column":30},"end":{"line":2874,"column":31}},"loc":{"start":{"line":2874,"column":62},"end":{"line":2892,"column":3}},"line":2874},"196":{"name":"(anonymous_196)","decl":{"start":{"line":2901,"column":37},"end":{"line":2901,"column":38}},"loc":{"start":{"line":2901,"column":54},"end":{"line":2905,"column":1}},"line":2901},"197":{"name":"(anonymous_197)","decl":{"start":{"line":2915,"column":47},"end":{"line":2915,"column":48}},"loc":{"start":{"line":2915,"column":70},"end":{"line":2967,"column":1}},"line":2915},"198":{"name":"(anonymous_198)","decl":{"start":{"line":2974,"column":45},"end":{"line":2974,"column":46}},"loc":{"start":{"line":2974,"column":57},"end":{"line":2978,"column":1}},"line":2974},"199":{"name":"(anonymous_199)","decl":{"start":{"line":2988,"column":43},"end":{"line":2988,"column":44}},"loc":{"start":{"line":2988,"column":70},"end":{"line":3056,"column":1}},"line":2988},"200":{"name":"(anonymous_200)","decl":{"start":{"line":3063,"column":40},"end":{"line":3063,"column":41}},"loc":{"start":{"line":3063,"column":52},"end":{"line":3066,"column":1}},"line":3063},"201":{"name":"(anonymous_201)","decl":{"start":{"line":3070,"column":40},"end":{"line":3070,"column":41}},"loc":{"start":{"line":3070,"column":57},"end":{"line":3072,"column":1}},"line":3070},"202":{"name":"(anonymous_202)","decl":{"start":{"line":3075,"column":42},"end":{"line":3075,"column":43}},"loc":{"start":{"line":3075,"column":54},"end":{"line":3077,"column":1}},"line":3075},"203":{"name":"(anonymous_203)","decl":{"start":{"line":3084,"column":40},"end":{"line":3084,"column":41}},"loc":{"start":{"line":3084,"column":52},"end":{"line":3086,"column":1}},"line":3084},"204":{"name":"(anonymous_204)","decl":{"start":{"line":3093,"column":42},"end":{"line":3093,"column":43}},"loc":{"start":{"line":3093,"column":54},"end":{"line":3096,"column":1}},"line":3093},"205":{"name":"(anonymous_205)","decl":{"start":{"line":3100,"column":42},"end":{"line":3100,"column":43}},"loc":{"start":{"line":3100,"column":59},"end":{"line":3102,"column":1}},"line":3100},"206":{"name":"(anonymous_206)","decl":{"start":{"line":3105,"column":44},"end":{"line":3105,"column":45}},"loc":{"start":{"line":3105,"column":56},"end":{"line":3107,"column":1}},"line":3105},"207":{"name":"(anonymous_207)","decl":{"start":{"line":3114,"column":42},"end":{"line":3114,"column":43}},"loc":{"start":{"line":3114,"column":54},"end":{"line":3116,"column":1}},"line":3114},"208":{"name":"(anonymous_208)","decl":{"start":{"line":3123,"column":38},"end":{"line":3123,"column":39}},"loc":{"start":{"line":3123,"column":50},"end":{"line":3125,"column":1}},"line":3123},"209":{"name":"(anonymous_209)","decl":{"start":{"line":3129,"column":38},"end":{"line":3129,"column":39}},"loc":{"start":{"line":3129,"column":55},"end":{"line":3131,"column":1}},"line":3129},"210":{"name":"(anonymous_210)","decl":{"start":{"line":3140,"column":39},"end":{"line":3140,"column":40}},"loc":{"start":{"line":3140,"column":51},"end":{"line":3142,"column":1}},"line":3140},"211":{"name":"(anonymous_211)","decl":{"start":{"line":3146,"column":39},"end":{"line":3146,"column":40}},"loc":{"start":{"line":3146,"column":56},"end":{"line":3148,"column":1}},"line":3146},"212":{"name":"(anonymous_212)","decl":{"start":{"line":3155,"column":42},"end":{"line":3155,"column":43}},"loc":{"start":{"line":3155,"column":54},"end":{"line":3157,"column":1}},"line":3155},"213":{"name":"(anonymous_213)","decl":{"start":{"line":3161,"column":42},"end":{"line":3161,"column":43}},"loc":{"start":{"line":3161,"column":59},"end":{"line":3163,"column":1}},"line":3161},"214":{"name":"(anonymous_214)","decl":{"start":{"line":3172,"column":41},"end":{"line":3172,"column":42}},"loc":{"start":{"line":3172,"column":53},"end":{"line":3174,"column":1}},"line":3172},"215":{"name":"(anonymous_215)","decl":{"start":{"line":3178,"column":41},"end":{"line":3178,"column":42}},"loc":{"start":{"line":3178,"column":58},"end":{"line":3180,"column":1}},"line":3178},"216":{"name":"(anonymous_216)","decl":{"start":{"line":3187,"column":40},"end":{"line":3187,"column":41}},"loc":{"start":{"line":3187,"column":52},"end":{"line":3189,"column":1}},"line":3187},"217":{"name":"(anonymous_217)","decl":{"start":{"line":3193,"column":40},"end":{"line":3193,"column":41}},"loc":{"start":{"line":3193,"column":57},"end":{"line":3195,"column":1}},"line":3193},"218":{"name":"(anonymous_218)","decl":{"start":{"line":3202,"column":49},"end":{"line":3202,"column":50}},"loc":{"start":{"line":3202,"column":61},"end":{"line":3205,"column":1}},"line":3202},"219":{"name":"(anonymous_219)","decl":{"start":{"line":3209,"column":49},"end":{"line":3209,"column":50}},"loc":{"start":{"line":3209,"column":66},"end":{"line":3211,"column":1}},"line":3209},"220":{"name":"(anonymous_220)","decl":{"start":{"line":3219,"column":45},"end":{"line":3219,"column":46}},"loc":{"start":{"line":3219,"column":77},"end":{"line":3221,"column":1}},"line":3219},"221":{"name":"(anonymous_221)","decl":{"start":{"line":3224,"column":51},"end":{"line":3224,"column":52}},"loc":{"start":{"line":3224,"column":63},"end":{"line":3226,"column":1}},"line":3224},"222":{"name":"(anonymous_222)","decl":{"start":{"line":3233,"column":45},"end":{"line":3233,"column":46}},"loc":{"start":{"line":3233,"column":57},"end":{"line":3235,"column":1}},"line":3233},"223":{"name":"(anonymous_223)","decl":{"start":{"line":3239,"column":45},"end":{"line":3239,"column":46}},"loc":{"start":{"line":3239,"column":62},"end":{"line":3241,"column":1}},"line":3239},"224":{"name":"(anonymous_224)","decl":{"start":{"line":3255,"column":23},"end":{"line":3255,"column":24}},"loc":{"start":{"line":3255,"column":43},"end":{"line":3257,"column":1}},"line":3255},"225":{"name":"(anonymous_225)","decl":{"start":{"line":3282,"column":44},"end":{"line":3282,"column":45}},"loc":{"start":{"line":3282,"column":75},"end":{"line":3284,"column":3}},"line":3282},"226":{"name":"(anonymous_226)","decl":{"start":{"line":3296,"column":34},"end":{"line":3296,"column":35}},"loc":{"start":{"line":3296,"column":66},"end":{"line":3306,"column":3}},"line":3296},"227":{"name":"(anonymous_227)","decl":{"start":{"line":3315,"column":41},"end":{"line":3315,"column":42}},"loc":{"start":{"line":3315,"column":58},"end":{"line":3319,"column":1}},"line":3315},"228":{"name":"(anonymous_228)","decl":{"start":{"line":3329,"column":51},"end":{"line":3329,"column":52}},"loc":{"start":{"line":3329,"column":74},"end":{"line":3347,"column":1}},"line":3329},"229":{"name":"(anonymous_229)","decl":{"start":{"line":3354,"column":49},"end":{"line":3354,"column":50}},"loc":{"start":{"line":3354,"column":61},"end":{"line":3358,"column":1}},"line":3354},"230":{"name":"(anonymous_230)","decl":{"start":{"line":3368,"column":47},"end":{"line":3368,"column":48}},"loc":{"start":{"line":3368,"column":74},"end":{"line":3378,"column":1}},"line":3368},"231":{"name":"(anonymous_231)","decl":{"start":{"line":3385,"column":46},"end":{"line":3385,"column":47}},"loc":{"start":{"line":3385,"column":58},"end":{"line":3388,"column":1}},"line":3385},"232":{"name":"(anonymous_232)","decl":{"start":{"line":3392,"column":46},"end":{"line":3392,"column":47}},"loc":{"start":{"line":3392,"column":63},"end":{"line":3394,"column":1}},"line":3392},"233":{"name":"(anonymous_233)","decl":{"start":{"line":3402,"column":42},"end":{"line":3402,"column":43}},"loc":{"start":{"line":3402,"column":74},"end":{"line":3404,"column":1}},"line":3402},"234":{"name":"(anonymous_234)","decl":{"start":{"line":3407,"column":48},"end":{"line":3407,"column":49}},"loc":{"start":{"line":3407,"column":60},"end":{"line":3409,"column":1}},"line":3407},"235":{"name":"(anonymous_235)","decl":{"start":{"line":3423,"column":25},"end":{"line":3423,"column":26}},"loc":{"start":{"line":3423,"column":45},"end":{"line":3425,"column":1}},"line":3423},"236":{"name":"(anonymous_236)","decl":{"start":{"line":3443,"column":46},"end":{"line":3443,"column":47}},"loc":{"start":{"line":3443,"column":77},"end":{"line":3445,"column":3}},"line":3443},"237":{"name":"(anonymous_237)","decl":{"start":{"line":3457,"column":36},"end":{"line":3457,"column":37}},"loc":{"start":{"line":3457,"column":68},"end":{"line":3470,"column":3}},"line":3457},"238":{"name":"(anonymous_238)","decl":{"start":{"line":3479,"column":43},"end":{"line":3479,"column":44}},"loc":{"start":{"line":3479,"column":60},"end":{"line":3483,"column":1}},"line":3479},"239":{"name":"(anonymous_239)","decl":{"start":{"line":3493,"column":53},"end":{"line":3493,"column":54}},"loc":{"start":{"line":3493,"column":76},"end":{"line":3526,"column":1}},"line":3493},"240":{"name":"(anonymous_240)","decl":{"start":{"line":3533,"column":51},"end":{"line":3533,"column":52}},"loc":{"start":{"line":3533,"column":63},"end":{"line":3537,"column":1}},"line":3533},"241":{"name":"(anonymous_241)","decl":{"start":{"line":3547,"column":49},"end":{"line":3547,"column":50}},"loc":{"start":{"line":3547,"column":76},"end":{"line":3584,"column":1}},"line":3547},"242":{"name":"(anonymous_242)","decl":{"start":{"line":3591,"column":43},"end":{"line":3591,"column":44}},"loc":{"start":{"line":3591,"column":55},"end":{"line":3593,"column":1}},"line":3591},"243":{"name":"(anonymous_243)","decl":{"start":{"line":3601,"column":49},"end":{"line":3601,"column":50}},"loc":{"start":{"line":3601,"column":61},"end":{"line":3604,"column":1}},"line":3601},"244":{"name":"(anonymous_244)","decl":{"start":{"line":3614,"column":48},"end":{"line":3614,"column":49}},"loc":{"start":{"line":3614,"column":60},"end":{"line":3617,"column":1}},"line":3614},"245":{"name":"(anonymous_245)","decl":{"start":{"line":3621,"column":43},"end":{"line":3621,"column":44}},"loc":{"start":{"line":3621,"column":60},"end":{"line":3623,"column":1}},"line":3621},"246":{"name":"(anonymous_246)","decl":{"start":{"line":3630,"column":45},"end":{"line":3630,"column":46}},"loc":{"start":{"line":3630,"column":57},"end":{"line":3632,"column":1}},"line":3630},"247":{"name":"(anonymous_247)","decl":{"start":{"line":3636,"column":45},"end":{"line":3636,"column":46}},"loc":{"start":{"line":3636,"column":62},"end":{"line":3638,"column":1}},"line":3636},"248":{"name":"(anonymous_248)","decl":{"start":{"line":3645,"column":43},"end":{"line":3645,"column":44}},"loc":{"start":{"line":3645,"column":55},"end":{"line":3647,"column":1}},"line":3645},"249":{"name":"(anonymous_249)","decl":{"start":{"line":3651,"column":43},"end":{"line":3651,"column":44}},"loc":{"start":{"line":3651,"column":60},"end":{"line":3653,"column":1}},"line":3651},"250":{"name":"(anonymous_250)","decl":{"start":{"line":3660,"column":45},"end":{"line":3660,"column":46}},"loc":{"start":{"line":3660,"column":57},"end":{"line":3662,"column":1}},"line":3660},"251":{"name":"(anonymous_251)","decl":{"start":{"line":3666,"column":45},"end":{"line":3666,"column":46}},"loc":{"start":{"line":3666,"column":62},"end":{"line":3668,"column":1}},"line":3666},"252":{"name":"(anonymous_252)","decl":{"start":{"line":3677,"column":42},"end":{"line":3677,"column":43}},"loc":{"start":{"line":3677,"column":54},"end":{"line":3679,"column":1}},"line":3677},"253":{"name":"(anonymous_253)","decl":{"start":{"line":3683,"column":42},"end":{"line":3683,"column":43}},"loc":{"start":{"line":3683,"column":59},"end":{"line":3685,"column":1}},"line":3683},"254":{"name":"(anonymous_254)","decl":{"start":{"line":3699,"column":25},"end":{"line":3699,"column":26}},"loc":{"start":{"line":3699,"column":45},"end":{"line":3701,"column":1}},"line":3699},"255":{"name":"(anonymous_255)","decl":{"start":{"line":3719,"column":46},"end":{"line":3719,"column":47}},"loc":{"start":{"line":3719,"column":77},"end":{"line":3721,"column":3}},"line":3719},"256":{"name":"(anonymous_256)","decl":{"start":{"line":3733,"column":36},"end":{"line":3733,"column":37}},"loc":{"start":{"line":3733,"column":68},"end":{"line":3743,"column":3}},"line":3733},"257":{"name":"(anonymous_257)","decl":{"start":{"line":3752,"column":43},"end":{"line":3752,"column":44}},"loc":{"start":{"line":3752,"column":60},"end":{"line":3756,"column":1}},"line":3752},"258":{"name":"(anonymous_258)","decl":{"start":{"line":3766,"column":53},"end":{"line":3766,"column":54}},"loc":{"start":{"line":3766,"column":76},"end":{"line":3787,"column":1}},"line":3766},"259":{"name":"(anonymous_259)","decl":{"start":{"line":3794,"column":51},"end":{"line":3794,"column":52}},"loc":{"start":{"line":3794,"column":63},"end":{"line":3798,"column":1}},"line":3794},"260":{"name":"(anonymous_260)","decl":{"start":{"line":3808,"column":49},"end":{"line":3808,"column":50}},"loc":{"start":{"line":3808,"column":76},"end":{"line":3824,"column":1}},"line":3808},"261":{"name":"(anonymous_261)","decl":{"start":{"line":3831,"column":45},"end":{"line":3831,"column":46}},"loc":{"start":{"line":3831,"column":57},"end":{"line":3833,"column":1}},"line":3831},"262":{"name":"(anonymous_262)","decl":{"start":{"line":3837,"column":45},"end":{"line":3837,"column":46}},"loc":{"start":{"line":3837,"column":62},"end":{"line":3839,"column":1}},"line":3837},"263":{"name":"(anonymous_263)","decl":{"start":{"line":3846,"column":43},"end":{"line":3846,"column":44}},"loc":{"start":{"line":3846,"column":55},"end":{"line":3848,"column":1}},"line":3846},"264":{"name":"(anonymous_264)","decl":{"start":{"line":3852,"column":43},"end":{"line":3852,"column":44}},"loc":{"start":{"line":3852,"column":60},"end":{"line":3854,"column":1}},"line":3852},"265":{"name":"(anonymous_265)","decl":{"start":{"line":3868,"column":29},"end":{"line":3868,"column":30}},"loc":{"start":{"line":3868,"column":49},"end":{"line":3870,"column":1}},"line":3868},"266":{"name":"(anonymous_266)","decl":{"start":{"line":3888,"column":50},"end":{"line":3888,"column":51}},"loc":{"start":{"line":3888,"column":81},"end":{"line":3890,"column":3}},"line":3888},"267":{"name":"(anonymous_267)","decl":{"start":{"line":3902,"column":40},"end":{"line":3902,"column":41}},"loc":{"start":{"line":3902,"column":72},"end":{"line":3914,"column":3}},"line":3902},"268":{"name":"(anonymous_268)","decl":{"start":{"line":3923,"column":47},"end":{"line":3923,"column":48}},"loc":{"start":{"line":3923,"column":64},"end":{"line":3927,"column":1}},"line":3923},"269":{"name":"(anonymous_269)","decl":{"start":{"line":3937,"column":57},"end":{"line":3937,"column":58}},"loc":{"start":{"line":3937,"column":80},"end":{"line":3967,"column":1}},"line":3937},"270":{"name":"(anonymous_270)","decl":{"start":{"line":3974,"column":55},"end":{"line":3974,"column":56}},"loc":{"start":{"line":3974,"column":67},"end":{"line":3978,"column":1}},"line":3974},"271":{"name":"(anonymous_271)","decl":{"start":{"line":3988,"column":53},"end":{"line":3988,"column":54}},"loc":{"start":{"line":3988,"column":80},"end":{"line":4019,"column":1}},"line":3988},"272":{"name":"(anonymous_272)","decl":{"start":{"line":4026,"column":48},"end":{"line":4026,"column":49}},"loc":{"start":{"line":4026,"column":60},"end":{"line":4028,"column":1}},"line":4026},"273":{"name":"(anonymous_273)","decl":{"start":{"line":4032,"column":48},"end":{"line":4032,"column":49}},"loc":{"start":{"line":4032,"column":65},"end":{"line":4034,"column":1}},"line":4032},"274":{"name":"(anonymous_274)","decl":{"start":{"line":4041,"column":49},"end":{"line":4041,"column":50}},"loc":{"start":{"line":4041,"column":61},"end":{"line":4043,"column":1}},"line":4041},"275":{"name":"(anonymous_275)","decl":{"start":{"line":4047,"column":49},"end":{"line":4047,"column":50}},"loc":{"start":{"line":4047,"column":66},"end":{"line":4049,"column":1}},"line":4047},"276":{"name":"(anonymous_276)","decl":{"start":{"line":4056,"column":47},"end":{"line":4056,"column":48}},"loc":{"start":{"line":4056,"column":59},"end":{"line":4058,"column":1}},"line":4056},"277":{"name":"(anonymous_277)","decl":{"start":{"line":4062,"column":47},"end":{"line":4062,"column":48}},"loc":{"start":{"line":4062,"column":64},"end":{"line":4064,"column":1}},"line":4062},"278":{"name":"(anonymous_278)","decl":{"start":{"line":4071,"column":47},"end":{"line":4071,"column":48}},"loc":{"start":{"line":4071,"column":59},"end":{"line":4074,"column":1}},"line":4071},"279":{"name":"(anonymous_279)","decl":{"start":{"line":4078,"column":47},"end":{"line":4078,"column":48}},"loc":{"start":{"line":4078,"column":64},"end":{"line":4080,"column":1}},"line":4078},"280":{"name":"(anonymous_280)","decl":{"start":{"line":4083,"column":49},"end":{"line":4083,"column":50}},"loc":{"start":{"line":4083,"column":61},"end":{"line":4085,"column":1}},"line":4083},"281":{"name":"(anonymous_281)","decl":{"start":{"line":4092,"column":47},"end":{"line":4092,"column":48}},"loc":{"start":{"line":4092,"column":59},"end":{"line":4094,"column":1}},"line":4092},"282":{"name":"(anonymous_282)","decl":{"start":{"line":4108,"column":30},"end":{"line":4108,"column":31}},"loc":{"start":{"line":4108,"column":50},"end":{"line":4110,"column":1}},"line":4108},"283":{"name":"(anonymous_283)","decl":{"start":{"line":4128,"column":51},"end":{"line":4128,"column":52}},"loc":{"start":{"line":4128,"column":82},"end":{"line":4130,"column":3}},"line":4128},"284":{"name":"(anonymous_284)","decl":{"start":{"line":4142,"column":41},"end":{"line":4142,"column":42}},"loc":{"start":{"line":4142,"column":73},"end":{"line":4152,"column":3}},"line":4142},"285":{"name":"(anonymous_285)","decl":{"start":{"line":4161,"column":48},"end":{"line":4161,"column":49}},"loc":{"start":{"line":4161,"column":65},"end":{"line":4165,"column":1}},"line":4161},"286":{"name":"(anonymous_286)","decl":{"start":{"line":4175,"column":58},"end":{"line":4175,"column":59}},"loc":{"start":{"line":4175,"column":81},"end":{"line":4197,"column":1}},"line":4175},"287":{"name":"(anonymous_287)","decl":{"start":{"line":4204,"column":56},"end":{"line":4204,"column":57}},"loc":{"start":{"line":4204,"column":68},"end":{"line":4208,"column":1}},"line":4204},"288":{"name":"(anonymous_288)","decl":{"start":{"line":4218,"column":54},"end":{"line":4218,"column":55}},"loc":{"start":{"line":4218,"column":81},"end":{"line":4235,"column":1}},"line":4218},"289":{"name":"(anonymous_289)","decl":{"start":{"line":4242,"column":56},"end":{"line":4242,"column":57}},"loc":{"start":{"line":4242,"column":68},"end":{"line":4244,"column":1}},"line":4242},"290":{"name":"(anonymous_290)","decl":{"start":{"line":4252,"column":62},"end":{"line":4252,"column":63}},"loc":{"start":{"line":4252,"column":74},"end":{"line":4255,"column":1}},"line":4252},"291":{"name":"(anonymous_291)","decl":{"start":{"line":4265,"column":61},"end":{"line":4265,"column":62}},"loc":{"start":{"line":4265,"column":73},"end":{"line":4268,"column":1}},"line":4265},"292":{"name":"(anonymous_292)","decl":{"start":{"line":4272,"column":56},"end":{"line":4272,"column":57}},"loc":{"start":{"line":4272,"column":73},"end":{"line":4274,"column":1}},"line":4272},"293":{"name":"(anonymous_293)","decl":{"start":{"line":4281,"column":50},"end":{"line":4281,"column":51}},"loc":{"start":{"line":4281,"column":62},"end":{"line":4284,"column":1}},"line":4281},"294":{"name":"(anonymous_294)","decl":{"start":{"line":4288,"column":50},"end":{"line":4288,"column":51}},"loc":{"start":{"line":4288,"column":67},"end":{"line":4290,"column":1}},"line":4288},"295":{"name":"(anonymous_295)","decl":{"start":{"line":4293,"column":52},"end":{"line":4293,"column":53}},"loc":{"start":{"line":4293,"column":64},"end":{"line":4295,"column":1}},"line":4293},"296":{"name":"(anonymous_296)","decl":{"start":{"line":4302,"column":50},"end":{"line":4302,"column":51}},"loc":{"start":{"line":4302,"column":62},"end":{"line":4304,"column":1}},"line":4302},"297":{"name":"(anonymous_297)","decl":{"start":{"line":4318,"column":30},"end":{"line":4318,"column":31}},"loc":{"start":{"line":4318,"column":50},"end":{"line":4320,"column":1}},"line":4318},"298":{"name":"(anonymous_298)","decl":{"start":{"line":4345,"column":51},"end":{"line":4345,"column":52}},"loc":{"start":{"line":4345,"column":82},"end":{"line":4347,"column":3}},"line":4345},"299":{"name":"(anonymous_299)","decl":{"start":{"line":4359,"column":41},"end":{"line":4359,"column":42}},"loc":{"start":{"line":4359,"column":73},"end":{"line":4369,"column":3}},"line":4359},"300":{"name":"(anonymous_300)","decl":{"start":{"line":4378,"column":48},"end":{"line":4378,"column":49}},"loc":{"start":{"line":4378,"column":65},"end":{"line":4382,"column":1}},"line":4378},"301":{"name":"(anonymous_301)","decl":{"start":{"line":4392,"column":58},"end":{"line":4392,"column":59}},"loc":{"start":{"line":4392,"column":81},"end":{"line":4410,"column":1}},"line":4392},"302":{"name":"(anonymous_302)","decl":{"start":{"line":4417,"column":56},"end":{"line":4417,"column":57}},"loc":{"start":{"line":4417,"column":68},"end":{"line":4421,"column":1}},"line":4417},"303":{"name":"(anonymous_303)","decl":{"start":{"line":4431,"column":54},"end":{"line":4431,"column":55}},"loc":{"start":{"line":4431,"column":81},"end":{"line":4441,"column":1}},"line":4431},"304":{"name":"(anonymous_304)","decl":{"start":{"line":4448,"column":54},"end":{"line":4448,"column":55}},"loc":{"start":{"line":4448,"column":66},"end":{"line":4451,"column":1}},"line":4448},"305":{"name":"(anonymous_305)","decl":{"start":{"line":4455,"column":54},"end":{"line":4455,"column":55}},"loc":{"start":{"line":4455,"column":71},"end":{"line":4457,"column":1}},"line":4455},"306":{"name":"(anonymous_306)","decl":{"start":{"line":4465,"column":50},"end":{"line":4465,"column":51}},"loc":{"start":{"line":4465,"column":82},"end":{"line":4467,"column":1}},"line":4465},"307":{"name":"(anonymous_307)","decl":{"start":{"line":4470,"column":56},"end":{"line":4470,"column":57}},"loc":{"start":{"line":4470,"column":68},"end":{"line":4472,"column":1}},"line":4470},"308":{"name":"(anonymous_308)","decl":{"start":{"line":4486,"column":28},"end":{"line":4486,"column":29}},"loc":{"start":{"line":4486,"column":48},"end":{"line":4488,"column":1}},"line":4486},"309":{"name":"(anonymous_309)","decl":{"start":{"line":4506,"column":49},"end":{"line":4506,"column":50}},"loc":{"start":{"line":4506,"column":80},"end":{"line":4508,"column":3}},"line":4506},"310":{"name":"(anonymous_310)","decl":{"start":{"line":4520,"column":39},"end":{"line":4520,"column":40}},"loc":{"start":{"line":4520,"column":71},"end":{"line":4532,"column":3}},"line":4520},"311":{"name":"(anonymous_311)","decl":{"start":{"line":4541,"column":46},"end":{"line":4541,"column":47}},"loc":{"start":{"line":4541,"column":63},"end":{"line":4545,"column":1}},"line":4541},"312":{"name":"(anonymous_312)","decl":{"start":{"line":4555,"column":56},"end":{"line":4555,"column":57}},"loc":{"start":{"line":4555,"column":79},"end":{"line":4585,"column":1}},"line":4555},"313":{"name":"(anonymous_313)","decl":{"start":{"line":4592,"column":54},"end":{"line":4592,"column":55}},"loc":{"start":{"line":4592,"column":66},"end":{"line":4596,"column":1}},"line":4592},"314":{"name":"(anonymous_314)","decl":{"start":{"line":4606,"column":52},"end":{"line":4606,"column":53}},"loc":{"start":{"line":4606,"column":79},"end":{"line":4637,"column":1}},"line":4606},"315":{"name":"(anonymous_315)","decl":{"start":{"line":4644,"column":46},"end":{"line":4644,"column":47}},"loc":{"start":{"line":4644,"column":58},"end":{"line":4646,"column":1}},"line":4644},"316":{"name":"(anonymous_316)","decl":{"start":{"line":4654,"column":52},"end":{"line":4654,"column":53}},"loc":{"start":{"line":4654,"column":64},"end":{"line":4657,"column":1}},"line":4654},"317":{"name":"(anonymous_317)","decl":{"start":{"line":4667,"column":51},"end":{"line":4667,"column":52}},"loc":{"start":{"line":4667,"column":63},"end":{"line":4670,"column":1}},"line":4667},"318":{"name":"(anonymous_318)","decl":{"start":{"line":4674,"column":46},"end":{"line":4674,"column":47}},"loc":{"start":{"line":4674,"column":63},"end":{"line":4676,"column":1}},"line":4674},"319":{"name":"(anonymous_319)","decl":{"start":{"line":4683,"column":48},"end":{"line":4683,"column":49}},"loc":{"start":{"line":4683,"column":60},"end":{"line":4686,"column":1}},"line":4683},"320":{"name":"(anonymous_320)","decl":{"start":{"line":4690,"column":48},"end":{"line":4690,"column":49}},"loc":{"start":{"line":4690,"column":65},"end":{"line":4692,"column":1}},"line":4690},"321":{"name":"(anonymous_321)","decl":{"start":{"line":4695,"column":50},"end":{"line":4695,"column":51}},"loc":{"start":{"line":4695,"column":62},"end":{"line":4697,"column":1}},"line":4695},"322":{"name":"(anonymous_322)","decl":{"start":{"line":4704,"column":48},"end":{"line":4704,"column":49}},"loc":{"start":{"line":4704,"column":60},"end":{"line":4706,"column":1}},"line":4704},"323":{"name":"(anonymous_323)","decl":{"start":{"line":4713,"column":49},"end":{"line":4713,"column":50}},"loc":{"start":{"line":4713,"column":61},"end":{"line":4715,"column":1}},"line":4713},"324":{"name":"(anonymous_324)","decl":{"start":{"line":4719,"column":49},"end":{"line":4719,"column":50}},"loc":{"start":{"line":4719,"column":66},"end":{"line":4721,"column":1}},"line":4719},"325":{"name":"(anonymous_325)","decl":{"start":{"line":4728,"column":46},"end":{"line":4728,"column":47}},"loc":{"start":{"line":4728,"column":58},"end":{"line":4730,"column":1}},"line":4728},"326":{"name":"(anonymous_326)","decl":{"start":{"line":4734,"column":46},"end":{"line":4734,"column":47}},"loc":{"start":{"line":4734,"column":63},"end":{"line":4736,"column":1}},"line":4734},"327":{"name":"(anonymous_327)","decl":{"start":{"line":4750,"column":32},"end":{"line":4750,"column":33}},"loc":{"start":{"line":4750,"column":52},"end":{"line":4752,"column":1}},"line":4750},"328":{"name":"(anonymous_328)","decl":{"start":{"line":4777,"column":53},"end":{"line":4777,"column":54}},"loc":{"start":{"line":4777,"column":84},"end":{"line":4779,"column":3}},"line":4777},"329":{"name":"(anonymous_329)","decl":{"start":{"line":4791,"column":43},"end":{"line":4791,"column":44}},"loc":{"start":{"line":4791,"column":75},"end":{"line":4801,"column":3}},"line":4791},"330":{"name":"(anonymous_330)","decl":{"start":{"line":4810,"column":50},"end":{"line":4810,"column":51}},"loc":{"start":{"line":4810,"column":67},"end":{"line":4814,"column":1}},"line":4810},"331":{"name":"(anonymous_331)","decl":{"start":{"line":4824,"column":60},"end":{"line":4824,"column":61}},"loc":{"start":{"line":4824,"column":83},"end":{"line":4842,"column":1}},"line":4824},"332":{"name":"(anonymous_332)","decl":{"start":{"line":4849,"column":58},"end":{"line":4849,"column":59}},"loc":{"start":{"line":4849,"column":70},"end":{"line":4853,"column":1}},"line":4849},"333":{"name":"(anonymous_333)","decl":{"start":{"line":4863,"column":56},"end":{"line":4863,"column":57}},"loc":{"start":{"line":4863,"column":83},"end":{"line":4873,"column":1}},"line":4863},"334":{"name":"(anonymous_334)","decl":{"start":{"line":4880,"column":56},"end":{"line":4880,"column":57}},"loc":{"start":{"line":4880,"column":68},"end":{"line":4883,"column":1}},"line":4880},"335":{"name":"(anonymous_335)","decl":{"start":{"line":4887,"column":56},"end":{"line":4887,"column":57}},"loc":{"start":{"line":4887,"column":73},"end":{"line":4889,"column":1}},"line":4887},"336":{"name":"(anonymous_336)","decl":{"start":{"line":4897,"column":52},"end":{"line":4897,"column":53}},"loc":{"start":{"line":4897,"column":84},"end":{"line":4899,"column":1}},"line":4897},"337":{"name":"(anonymous_337)","decl":{"start":{"line":4902,"column":58},"end":{"line":4902,"column":59}},"loc":{"start":{"line":4902,"column":70},"end":{"line":4904,"column":1}},"line":4902},"338":{"name":"(anonymous_338)","decl":{"start":{"line":4918,"column":27},"end":{"line":4918,"column":28}},"loc":{"start":{"line":4918,"column":47},"end":{"line":4920,"column":1}},"line":4918},"339":{"name":"(anonymous_339)","decl":{"start":{"line":4938,"column":48},"end":{"line":4938,"column":49}},"loc":{"start":{"line":4938,"column":79},"end":{"line":4940,"column":3}},"line":4938},"340":{"name":"(anonymous_340)","decl":{"start":{"line":4952,"column":38},"end":{"line":4952,"column":39}},"loc":{"start":{"line":4952,"column":70},"end":{"line":4963,"column":3}},"line":4952},"341":{"name":"(anonymous_341)","decl":{"start":{"line":4972,"column":45},"end":{"line":4972,"column":46}},"loc":{"start":{"line":4972,"column":62},"end":{"line":4976,"column":1}},"line":4972},"342":{"name":"(anonymous_342)","decl":{"start":{"line":4986,"column":55},"end":{"line":4986,"column":56}},"loc":{"start":{"line":4986,"column":78},"end":{"line":5011,"column":1}},"line":4986},"343":{"name":"(anonymous_343)","decl":{"start":{"line":5018,"column":53},"end":{"line":5018,"column":54}},"loc":{"start":{"line":5018,"column":65},"end":{"line":5022,"column":1}},"line":5018},"344":{"name":"(anonymous_344)","decl":{"start":{"line":5032,"column":51},"end":{"line":5032,"column":52}},"loc":{"start":{"line":5032,"column":78},"end":{"line":5055,"column":1}},"line":5032},"345":{"name":"(anonymous_345)","decl":{"start":{"line":5062,"column":45},"end":{"line":5062,"column":46}},"loc":{"start":{"line":5062,"column":57},"end":{"line":5064,"column":1}},"line":5062},"346":{"name":"(anonymous_346)","decl":{"start":{"line":5072,"column":51},"end":{"line":5072,"column":52}},"loc":{"start":{"line":5072,"column":63},"end":{"line":5075,"column":1}},"line":5072},"347":{"name":"(anonymous_347)","decl":{"start":{"line":5085,"column":50},"end":{"line":5085,"column":51}},"loc":{"start":{"line":5085,"column":62},"end":{"line":5088,"column":1}},"line":5085},"348":{"name":"(anonymous_348)","decl":{"start":{"line":5092,"column":45},"end":{"line":5092,"column":46}},"loc":{"start":{"line":5092,"column":62},"end":{"line":5094,"column":1}},"line":5092},"349":{"name":"(anonymous_349)","decl":{"start":{"line":5101,"column":46},"end":{"line":5101,"column":47}},"loc":{"start":{"line":5101,"column":58},"end":{"line":5103,"column":1}},"line":5101},"350":{"name":"(anonymous_350)","decl":{"start":{"line":5107,"column":46},"end":{"line":5107,"column":47}},"loc":{"start":{"line":5107,"column":63},"end":{"line":5109,"column":1}},"line":5107},"351":{"name":"(anonymous_351)","decl":{"start":{"line":5116,"column":47},"end":{"line":5116,"column":48}},"loc":{"start":{"line":5116,"column":59},"end":{"line":5118,"column":1}},"line":5116},"352":{"name":"(anonymous_352)","decl":{"start":{"line":5122,"column":47},"end":{"line":5122,"column":48}},"loc":{"start":{"line":5122,"column":64},"end":{"line":5124,"column":1}},"line":5122},"353":{"name":"(anonymous_353)","decl":{"start":{"line":5138,"column":31},"end":{"line":5138,"column":32}},"loc":{"start":{"line":5138,"column":51},"end":{"line":5140,"column":1}},"line":5138},"354":{"name":"(anonymous_354)","decl":{"start":{"line":5165,"column":52},"end":{"line":5165,"column":53}},"loc":{"start":{"line":5165,"column":83},"end":{"line":5167,"column":3}},"line":5165},"355":{"name":"(anonymous_355)","decl":{"start":{"line":5179,"column":42},"end":{"line":5179,"column":43}},"loc":{"start":{"line":5179,"column":74},"end":{"line":5189,"column":3}},"line":5179},"356":{"name":"(anonymous_356)","decl":{"start":{"line":5198,"column":49},"end":{"line":5198,"column":50}},"loc":{"start":{"line":5198,"column":66},"end":{"line":5202,"column":1}},"line":5198},"357":{"name":"(anonymous_357)","decl":{"start":{"line":5212,"column":59},"end":{"line":5212,"column":60}},"loc":{"start":{"line":5212,"column":82},"end":{"line":5230,"column":1}},"line":5212},"358":{"name":"(anonymous_358)","decl":{"start":{"line":5237,"column":57},"end":{"line":5237,"column":58}},"loc":{"start":{"line":5237,"column":69},"end":{"line":5241,"column":1}},"line":5237},"359":{"name":"(anonymous_359)","decl":{"start":{"line":5251,"column":55},"end":{"line":5251,"column":56}},"loc":{"start":{"line":5251,"column":82},"end":{"line":5261,"column":1}},"line":5251},"360":{"name":"(anonymous_360)","decl":{"start":{"line":5268,"column":56},"end":{"line":5268,"column":57}},"loc":{"start":{"line":5268,"column":68},"end":{"line":5271,"column":1}},"line":5268},"361":{"name":"(anonymous_361)","decl":{"start":{"line":5275,"column":56},"end":{"line":5275,"column":57}},"loc":{"start":{"line":5275,"column":73},"end":{"line":5277,"column":1}},"line":5275},"362":{"name":"(anonymous_362)","decl":{"start":{"line":5285,"column":52},"end":{"line":5285,"column":53}},"loc":{"start":{"line":5285,"column":84},"end":{"line":5287,"column":1}},"line":5285},"363":{"name":"(anonymous_363)","decl":{"start":{"line":5290,"column":58},"end":{"line":5290,"column":59}},"loc":{"start":{"line":5290,"column":70},"end":{"line":5292,"column":1}},"line":5290},"364":{"name":"(anonymous_364)","decl":{"start":{"line":5306,"column":27},"end":{"line":5306,"column":28}},"loc":{"start":{"line":5306,"column":47},"end":{"line":5308,"column":1}},"line":5306},"365":{"name":"(anonymous_365)","decl":{"start":{"line":5326,"column":48},"end":{"line":5326,"column":49}},"loc":{"start":{"line":5326,"column":79},"end":{"line":5328,"column":3}},"line":5326},"366":{"name":"(anonymous_366)","decl":{"start":{"line":5340,"column":38},"end":{"line":5340,"column":39}},"loc":{"start":{"line":5340,"column":70},"end":{"line":5350,"column":3}},"line":5340},"367":{"name":"(anonymous_367)","decl":{"start":{"line":5359,"column":45},"end":{"line":5359,"column":46}},"loc":{"start":{"line":5359,"column":62},"end":{"line":5363,"column":1}},"line":5359},"368":{"name":"(anonymous_368)","decl":{"start":{"line":5373,"column":55},"end":{"line":5373,"column":56}},"loc":{"start":{"line":5373,"column":78},"end":{"line":5395,"column":1}},"line":5373},"369":{"name":"(anonymous_369)","decl":{"start":{"line":5402,"column":53},"end":{"line":5402,"column":54}},"loc":{"start":{"line":5402,"column":65},"end":{"line":5406,"column":1}},"line":5402},"370":{"name":"(anonymous_370)","decl":{"start":{"line":5416,"column":51},"end":{"line":5416,"column":52}},"loc":{"start":{"line":5416,"column":78},"end":{"line":5433,"column":1}},"line":5416},"371":{"name":"(anonymous_371)","decl":{"start":{"line":5440,"column":43},"end":{"line":5440,"column":44}},"loc":{"start":{"line":5440,"column":55},"end":{"line":5443,"column":1}},"line":5440},"372":{"name":"(anonymous_372)","decl":{"start":{"line":5447,"column":43},"end":{"line":5447,"column":44}},"loc":{"start":{"line":5447,"column":60},"end":{"line":5449,"column":1}},"line":5447},"373":{"name":"(anonymous_373)","decl":{"start":{"line":5452,"column":45},"end":{"line":5452,"column":46}},"loc":{"start":{"line":5452,"column":57},"end":{"line":5454,"column":1}},"line":5452},"374":{"name":"(anonymous_374)","decl":{"start":{"line":5461,"column":43},"end":{"line":5461,"column":44}},"loc":{"start":{"line":5461,"column":55},"end":{"line":5463,"column":1}},"line":5461},"375":{"name":"(anonymous_375)","decl":{"start":{"line":5470,"column":46},"end":{"line":5470,"column":47}},"loc":{"start":{"line":5470,"column":58},"end":{"line":5472,"column":1}},"line":5470},"376":{"name":"(anonymous_376)","decl":{"start":{"line":5476,"column":46},"end":{"line":5476,"column":47}},"loc":{"start":{"line":5476,"column":63},"end":{"line":5478,"column":1}},"line":5476},"377":{"name":"(anonymous_377)","decl":{"start":{"line":5492,"column":23},"end":{"line":5492,"column":24}},"loc":{"start":{"line":5492,"column":43},"end":{"line":5494,"column":1}},"line":5492},"378":{"name":"(anonymous_378)","decl":{"start":{"line":5512,"column":44},"end":{"line":5512,"column":45}},"loc":{"start":{"line":5512,"column":75},"end":{"line":5514,"column":3}},"line":5512},"379":{"name":"(anonymous_379)","decl":{"start":{"line":5526,"column":34},"end":{"line":5526,"column":35}},"loc":{"start":{"line":5526,"column":66},"end":{"line":5536,"column":3}},"line":5526},"380":{"name":"(anonymous_380)","decl":{"start":{"line":5545,"column":41},"end":{"line":5545,"column":42}},"loc":{"start":{"line":5545,"column":58},"end":{"line":5549,"column":1}},"line":5545},"381":{"name":"(anonymous_381)","decl":{"start":{"line":5559,"column":51},"end":{"line":5559,"column":52}},"loc":{"start":{"line":5559,"column":74},"end":{"line":5581,"column":1}},"line":5559},"382":{"name":"(anonymous_382)","decl":{"start":{"line":5588,"column":49},"end":{"line":5588,"column":50}},"loc":{"start":{"line":5588,"column":61},"end":{"line":5592,"column":1}},"line":5588},"383":{"name":"(anonymous_383)","decl":{"start":{"line":5602,"column":47},"end":{"line":5602,"column":48}},"loc":{"start":{"line":5602,"column":74},"end":{"line":5619,"column":1}},"line":5602},"384":{"name":"(anonymous_384)","decl":{"start":{"line":5626,"column":47},"end":{"line":5626,"column":48}},"loc":{"start":{"line":5626,"column":59},"end":{"line":5628,"column":1}},"line":5626},"385":{"name":"(anonymous_385)","decl":{"start":{"line":5632,"column":47},"end":{"line":5632,"column":48}},"loc":{"start":{"line":5632,"column":64},"end":{"line":5634,"column":1}},"line":5632},"386":{"name":"(anonymous_386)","decl":{"start":{"line":5641,"column":44},"end":{"line":5641,"column":45}},"loc":{"start":{"line":5641,"column":56},"end":{"line":5644,"column":1}},"line":5641},"387":{"name":"(anonymous_387)","decl":{"start":{"line":5648,"column":44},"end":{"line":5648,"column":45}},"loc":{"start":{"line":5648,"column":61},"end":{"line":5650,"column":1}},"line":5648},"388":{"name":"(anonymous_388)","decl":{"start":{"line":5653,"column":46},"end":{"line":5653,"column":47}},"loc":{"start":{"line":5653,"column":58},"end":{"line":5655,"column":1}},"line":5653},"389":{"name":"(anonymous_389)","decl":{"start":{"line":5662,"column":44},"end":{"line":5662,"column":45}},"loc":{"start":{"line":5662,"column":56},"end":{"line":5664,"column":1}},"line":5662},"390":{"name":"(anonymous_390)","decl":{"start":{"line":5678,"column":27},"end":{"line":5678,"column":28}},"loc":{"start":{"line":5678,"column":47},"end":{"line":5680,"column":1}},"line":5678},"391":{"name":"(anonymous_391)","decl":{"start":{"line":5698,"column":48},"end":{"line":5698,"column":49}},"loc":{"start":{"line":5698,"column":79},"end":{"line":5700,"column":3}},"line":5698},"392":{"name":"(anonymous_392)","decl":{"start":{"line":5712,"column":38},"end":{"line":5712,"column":39}},"loc":{"start":{"line":5712,"column":70},"end":{"line":5723,"column":3}},"line":5712},"393":{"name":"(anonymous_393)","decl":{"start":{"line":5732,"column":45},"end":{"line":5732,"column":46}},"loc":{"start":{"line":5732,"column":62},"end":{"line":5736,"column":1}},"line":5732},"394":{"name":"(anonymous_394)","decl":{"start":{"line":5746,"column":55},"end":{"line":5746,"column":56}},"loc":{"start":{"line":5746,"column":78},"end":{"line":5772,"column":1}},"line":5746},"395":{"name":"(anonymous_395)","decl":{"start":{"line":5779,"column":53},"end":{"line":5779,"column":54}},"loc":{"start":{"line":5779,"column":65},"end":{"line":5783,"column":1}},"line":5779},"396":{"name":"(anonymous_396)","decl":{"start":{"line":5793,"column":51},"end":{"line":5793,"column":52}},"loc":{"start":{"line":5793,"column":78},"end":{"line":5817,"column":1}},"line":5793},"397":{"name":"(anonymous_397)","decl":{"start":{"line":5824,"column":44},"end":{"line":5824,"column":45}},"loc":{"start":{"line":5824,"column":56},"end":{"line":5827,"column":1}},"line":5824},"398":{"name":"(anonymous_398)","decl":{"start":{"line":5831,"column":44},"end":{"line":5831,"column":45}},"loc":{"start":{"line":5831,"column":61},"end":{"line":5833,"column":1}},"line":5831},"399":{"name":"(anonymous_399)","decl":{"start":{"line":5836,"column":46},"end":{"line":5836,"column":47}},"loc":{"start":{"line":5836,"column":58},"end":{"line":5838,"column":1}},"line":5836},"400":{"name":"(anonymous_400)","decl":{"start":{"line":5845,"column":44},"end":{"line":5845,"column":45}},"loc":{"start":{"line":5845,"column":56},"end":{"line":5847,"column":1}},"line":5845},"401":{"name":"(anonymous_401)","decl":{"start":{"line":5854,"column":48},"end":{"line":5854,"column":49}},"loc":{"start":{"line":5854,"column":60},"end":{"line":5856,"column":1}},"line":5854},"402":{"name":"(anonymous_402)","decl":{"start":{"line":5860,"column":48},"end":{"line":5860,"column":49}},"loc":{"start":{"line":5860,"column":65},"end":{"line":5862,"column":1}},"line":5860},"403":{"name":"(anonymous_403)","decl":{"start":{"line":5869,"column":48},"end":{"line":5869,"column":49}},"loc":{"start":{"line":5869,"column":60},"end":{"line":5871,"column":1}},"line":5869},"404":{"name":"(anonymous_404)","decl":{"start":{"line":5875,"column":48},"end":{"line":5875,"column":49}},"loc":{"start":{"line":5875,"column":65},"end":{"line":5877,"column":1}},"line":5875},"405":{"name":"(anonymous_405)","decl":{"start":{"line":5891,"column":22},"end":{"line":5891,"column":23}},"loc":{"start":{"line":5891,"column":42},"end":{"line":5893,"column":1}},"line":5891},"406":{"name":"(anonymous_406)","decl":{"start":{"line":5911,"column":43},"end":{"line":5911,"column":44}},"loc":{"start":{"line":5911,"column":74},"end":{"line":5913,"column":3}},"line":5911},"407":{"name":"(anonymous_407)","decl":{"start":{"line":5925,"column":33},"end":{"line":5925,"column":34}},"loc":{"start":{"line":5925,"column":65},"end":{"line":5935,"column":3}},"line":5925},"408":{"name":"(anonymous_408)","decl":{"start":{"line":5944,"column":40},"end":{"line":5944,"column":41}},"loc":{"start":{"line":5944,"column":57},"end":{"line":5948,"column":1}},"line":5944},"409":{"name":"(anonymous_409)","decl":{"start":{"line":5958,"column":50},"end":{"line":5958,"column":51}},"loc":{"start":{"line":5958,"column":73},"end":{"line":5979,"column":1}},"line":5958},"410":{"name":"(anonymous_410)","decl":{"start":{"line":5986,"column":48},"end":{"line":5986,"column":49}},"loc":{"start":{"line":5986,"column":60},"end":{"line":5990,"column":1}},"line":5986},"411":{"name":"(anonymous_411)","decl":{"start":{"line":6000,"column":46},"end":{"line":6000,"column":47}},"loc":{"start":{"line":6000,"column":73},"end":{"line":6016,"column":1}},"line":6000},"412":{"name":"(anonymous_412)","decl":{"start":{"line":6023,"column":42},"end":{"line":6023,"column":43}},"loc":{"start":{"line":6023,"column":54},"end":{"line":6025,"column":1}},"line":6023},"413":{"name":"(anonymous_413)","decl":{"start":{"line":6033,"column":48},"end":{"line":6033,"column":49}},"loc":{"start":{"line":6033,"column":60},"end":{"line":6036,"column":1}},"line":6033},"414":{"name":"(anonymous_414)","decl":{"start":{"line":6046,"column":47},"end":{"line":6046,"column":48}},"loc":{"start":{"line":6046,"column":59},"end":{"line":6049,"column":1}},"line":6046},"415":{"name":"(anonymous_415)","decl":{"start":{"line":6053,"column":42},"end":{"line":6053,"column":43}},"loc":{"start":{"line":6053,"column":59},"end":{"line":6055,"column":1}},"line":6053},"416":{"name":"(anonymous_416)","decl":{"start":{"line":6062,"column":40},"end":{"line":6062,"column":41}},"loc":{"start":{"line":6062,"column":52},"end":{"line":6064,"column":1}},"line":6062},"417":{"name":"(anonymous_417)","decl":{"start":{"line":6068,"column":40},"end":{"line":6068,"column":41}},"loc":{"start":{"line":6068,"column":57},"end":{"line":6070,"column":1}},"line":6068},"418":{"name":"(anonymous_418)","decl":{"start":{"line":6084,"column":19},"end":{"line":6084,"column":20}},"loc":{"start":{"line":6084,"column":39},"end":{"line":6086,"column":1}},"line":6084},"419":{"name":"(anonymous_419)","decl":{"start":{"line":6104,"column":40},"end":{"line":6104,"column":41}},"loc":{"start":{"line":6104,"column":71},"end":{"line":6106,"column":3}},"line":6104},"420":{"name":"(anonymous_420)","decl":{"start":{"line":6118,"column":30},"end":{"line":6118,"column":31}},"loc":{"start":{"line":6118,"column":62},"end":{"line":6128,"column":3}},"line":6118},"421":{"name":"(anonymous_421)","decl":{"start":{"line":6137,"column":37},"end":{"line":6137,"column":38}},"loc":{"start":{"line":6137,"column":54},"end":{"line":6141,"column":1}},"line":6137},"422":{"name":"(anonymous_422)","decl":{"start":{"line":6151,"column":47},"end":{"line":6151,"column":48}},"loc":{"start":{"line":6151,"column":70},"end":{"line":6172,"column":1}},"line":6151},"423":{"name":"(anonymous_423)","decl":{"start":{"line":6179,"column":45},"end":{"line":6179,"column":46}},"loc":{"start":{"line":6179,"column":57},"end":{"line":6183,"column":1}},"line":6179},"424":{"name":"(anonymous_424)","decl":{"start":{"line":6193,"column":43},"end":{"line":6193,"column":44}},"loc":{"start":{"line":6193,"column":70},"end":{"line":6209,"column":1}},"line":6193},"425":{"name":"(anonymous_425)","decl":{"start":{"line":6216,"column":42},"end":{"line":6216,"column":43}},"loc":{"start":{"line":6216,"column":54},"end":{"line":6218,"column":1}},"line":6216},"426":{"name":"(anonymous_426)","decl":{"start":{"line":6226,"column":48},"end":{"line":6226,"column":49}},"loc":{"start":{"line":6226,"column":60},"end":{"line":6229,"column":1}},"line":6226},"427":{"name":"(anonymous_427)","decl":{"start":{"line":6239,"column":47},"end":{"line":6239,"column":48}},"loc":{"start":{"line":6239,"column":59},"end":{"line":6242,"column":1}},"line":6239},"428":{"name":"(anonymous_428)","decl":{"start":{"line":6246,"column":42},"end":{"line":6246,"column":43}},"loc":{"start":{"line":6246,"column":59},"end":{"line":6248,"column":1}},"line":6246},"429":{"name":"(anonymous_429)","decl":{"start":{"line":6255,"column":39},"end":{"line":6255,"column":40}},"loc":{"start":{"line":6255,"column":51},"end":{"line":6257,"column":1}},"line":6255},"430":{"name":"(anonymous_430)","decl":{"start":{"line":6265,"column":45},"end":{"line":6265,"column":46}},"loc":{"start":{"line":6265,"column":57},"end":{"line":6268,"column":1}},"line":6265},"431":{"name":"(anonymous_431)","decl":{"start":{"line":6278,"column":44},"end":{"line":6278,"column":45}},"loc":{"start":{"line":6278,"column":56},"end":{"line":6281,"column":1}},"line":6278},"432":{"name":"(anonymous_432)","decl":{"start":{"line":6285,"column":39},"end":{"line":6285,"column":40}},"loc":{"start":{"line":6285,"column":56},"end":{"line":6287,"column":1}},"line":6285},"433":{"name":"(anonymous_433)","decl":{"start":{"line":6301,"column":25},"end":{"line":6301,"column":26}},"loc":{"start":{"line":6301,"column":45},"end":{"line":6303,"column":1}},"line":6301},"434":{"name":"(anonymous_434)","decl":{"start":{"line":6321,"column":46},"end":{"line":6321,"column":47}},"loc":{"start":{"line":6321,"column":77},"end":{"line":6323,"column":3}},"line":6321},"435":{"name":"(anonymous_435)","decl":{"start":{"line":6335,"column":36},"end":{"line":6335,"column":37}},"loc":{"start":{"line":6335,"column":68},"end":{"line":6345,"column":3}},"line":6335},"436":{"name":"(anonymous_436)","decl":{"start":{"line":6354,"column":43},"end":{"line":6354,"column":44}},"loc":{"start":{"line":6354,"column":60},"end":{"line":6358,"column":1}},"line":6354},"437":{"name":"(anonymous_437)","decl":{"start":{"line":6368,"column":53},"end":{"line":6368,"column":54}},"loc":{"start":{"line":6368,"column":76},"end":{"line":6389,"column":1}},"line":6368},"438":{"name":"(anonymous_438)","decl":{"start":{"line":6396,"column":51},"end":{"line":6396,"column":52}},"loc":{"start":{"line":6396,"column":63},"end":{"line":6400,"column":1}},"line":6396},"439":{"name":"(anonymous_439)","decl":{"start":{"line":6410,"column":49},"end":{"line":6410,"column":50}},"loc":{"start":{"line":6410,"column":76},"end":{"line":6426,"column":1}},"line":6410},"440":{"name":"(anonymous_440)","decl":{"start":{"line":6433,"column":41},"end":{"line":6433,"column":42}},"loc":{"start":{"line":6433,"column":53},"end":{"line":6435,"column":1}},"line":6433},"441":{"name":"(anonymous_441)","decl":{"start":{"line":6439,"column":41},"end":{"line":6439,"column":42}},"loc":{"start":{"line":6439,"column":58},"end":{"line":6441,"column":1}},"line":6439},"442":{"name":"(anonymous_442)","decl":{"start":{"line":6448,"column":44},"end":{"line":6448,"column":45}},"loc":{"start":{"line":6448,"column":56},"end":{"line":6450,"column":1}},"line":6448},"443":{"name":"(anonymous_443)","decl":{"start":{"line":6454,"column":44},"end":{"line":6454,"column":45}},"loc":{"start":{"line":6454,"column":61},"end":{"line":6456,"column":1}},"line":6454},"444":{"name":"(anonymous_444)","decl":{"start":{"line":6470,"column":30},"end":{"line":6470,"column":31}},"loc":{"start":{"line":6470,"column":50},"end":{"line":6472,"column":1}},"line":6470},"445":{"name":"(anonymous_445)","decl":{"start":{"line":6497,"column":51},"end":{"line":6497,"column":52}},"loc":{"start":{"line":6497,"column":82},"end":{"line":6499,"column":3}},"line":6497},"446":{"name":"(anonymous_446)","decl":{"start":{"line":6511,"column":41},"end":{"line":6511,"column":42}},"loc":{"start":{"line":6511,"column":73},"end":{"line":6522,"column":3}},"line":6511},"447":{"name":"(anonymous_447)","decl":{"start":{"line":6531,"column":48},"end":{"line":6531,"column":49}},"loc":{"start":{"line":6531,"column":65},"end":{"line":6535,"column":1}},"line":6531},"448":{"name":"(anonymous_448)","decl":{"start":{"line":6545,"column":58},"end":{"line":6545,"column":59}},"loc":{"start":{"line":6545,"column":81},"end":{"line":6568,"column":1}},"line":6545},"449":{"name":"(anonymous_449)","decl":{"start":{"line":6575,"column":56},"end":{"line":6575,"column":57}},"loc":{"start":{"line":6575,"column":68},"end":{"line":6579,"column":1}},"line":6575},"450":{"name":"(anonymous_450)","decl":{"start":{"line":6589,"column":54},"end":{"line":6589,"column":55}},"loc":{"start":{"line":6589,"column":81},"end":{"line":6607,"column":1}},"line":6589},"451":{"name":"(anonymous_451)","decl":{"start":{"line":6614,"column":51},"end":{"line":6614,"column":52}},"loc":{"start":{"line":6614,"column":63},"end":{"line":6617,"column":1}},"line":6614},"452":{"name":"(anonymous_452)","decl":{"start":{"line":6621,"column":51},"end":{"line":6621,"column":52}},"loc":{"start":{"line":6621,"column":68},"end":{"line":6623,"column":1}},"line":6621},"453":{"name":"(anonymous_453)","decl":{"start":{"line":6626,"column":53},"end":{"line":6626,"column":54}},"loc":{"start":{"line":6626,"column":65},"end":{"line":6628,"column":1}},"line":6626},"454":{"name":"(anonymous_454)","decl":{"start":{"line":6635,"column":51},"end":{"line":6635,"column":52}},"loc":{"start":{"line":6635,"column":63},"end":{"line":6637,"column":1}},"line":6635},"455":{"name":"(anonymous_455)","decl":{"start":{"line":6644,"column":54},"end":{"line":6644,"column":55}},"loc":{"start":{"line":6644,"column":66},"end":{"line":6647,"column":1}},"line":6644},"456":{"name":"(anonymous_456)","decl":{"start":{"line":6651,"column":54},"end":{"line":6651,"column":55}},"loc":{"start":{"line":6651,"column":71},"end":{"line":6653,"column":1}},"line":6651},"457":{"name":"(anonymous_457)","decl":{"start":{"line":6661,"column":50},"end":{"line":6661,"column":51}},"loc":{"start":{"line":6661,"column":82},"end":{"line":6663,"column":1}},"line":6661},"458":{"name":"(anonymous_458)","decl":{"start":{"line":6666,"column":56},"end":{"line":6666,"column":57}},"loc":{"start":{"line":6666,"column":68},"end":{"line":6668,"column":1}},"line":6666},"459":{"name":"(anonymous_459)","decl":{"start":{"line":6682,"column":23},"end":{"line":6682,"column":24}},"loc":{"start":{"line":6682,"column":43},"end":{"line":6684,"column":1}},"line":6682},"460":{"name":"(anonymous_460)","decl":{"start":{"line":6709,"column":44},"end":{"line":6709,"column":45}},"loc":{"start":{"line":6709,"column":75},"end":{"line":6711,"column":3}},"line":6709},"461":{"name":"(anonymous_461)","decl":{"start":{"line":6723,"column":34},"end":{"line":6723,"column":35}},"loc":{"start":{"line":6723,"column":66},"end":{"line":6734,"column":3}},"line":6723},"462":{"name":"(anonymous_462)","decl":{"start":{"line":6743,"column":41},"end":{"line":6743,"column":42}},"loc":{"start":{"line":6743,"column":58},"end":{"line":6747,"column":1}},"line":6743},"463":{"name":"(anonymous_463)","decl":{"start":{"line":6757,"column":51},"end":{"line":6757,"column":52}},"loc":{"start":{"line":6757,"column":74},"end":{"line":6782,"column":1}},"line":6757},"464":{"name":"(anonymous_464)","decl":{"start":{"line":6789,"column":49},"end":{"line":6789,"column":50}},"loc":{"start":{"line":6789,"column":61},"end":{"line":6793,"column":1}},"line":6789},"465":{"name":"(anonymous_465)","decl":{"start":{"line":6803,"column":47},"end":{"line":6803,"column":48}},"loc":{"start":{"line":6803,"column":74},"end":{"line":6826,"column":1}},"line":6803},"466":{"name":"(anonymous_466)","decl":{"start":{"line":6833,"column":39},"end":{"line":6833,"column":40}},"loc":{"start":{"line":6833,"column":51},"end":{"line":6835,"column":1}},"line":6833},"467":{"name":"(anonymous_467)","decl":{"start":{"line":6839,"column":39},"end":{"line":6839,"column":40}},"loc":{"start":{"line":6839,"column":56},"end":{"line":6841,"column":1}},"line":6839},"468":{"name":"(anonymous_468)","decl":{"start":{"line":6848,"column":51},"end":{"line":6848,"column":52}},"loc":{"start":{"line":6848,"column":63},"end":{"line":6850,"column":1}},"line":6848},"469":{"name":"(anonymous_469)","decl":{"start":{"line":6854,"column":51},"end":{"line":6854,"column":52}},"loc":{"start":{"line":6854,"column":68},"end":{"line":6856,"column":1}},"line":6854},"470":{"name":"(anonymous_470)","decl":{"start":{"line":6863,"column":47},"end":{"line":6863,"column":48}},"loc":{"start":{"line":6863,"column":75},"end":{"line":6865,"column":1}},"line":6863},"471":{"name":"(anonymous_471)","decl":{"start":{"line":6868,"column":53},"end":{"line":6868,"column":54}},"loc":{"start":{"line":6868,"column":65},"end":{"line":6870,"column":1}},"line":6868},"472":{"name":"(anonymous_472)","decl":{"start":{"line":6877,"column":43},"end":{"line":6877,"column":44}},"loc":{"start":{"line":6877,"column":55},"end":{"line":6879,"column":1}},"line":6877},"473":{"name":"(anonymous_473)","decl":{"start":{"line":6883,"column":43},"end":{"line":6883,"column":44}},"loc":{"start":{"line":6883,"column":60},"end":{"line":6885,"column":1}},"line":6883},"474":{"name":"(anonymous_474)","decl":{"start":{"line":6899,"column":23},"end":{"line":6899,"column":24}},"loc":{"start":{"line":6899,"column":43},"end":{"line":6901,"column":1}},"line":6899},"475":{"name":"(anonymous_475)","decl":{"start":{"line":6926,"column":44},"end":{"line":6926,"column":45}},"loc":{"start":{"line":6926,"column":75},"end":{"line":6928,"column":3}},"line":6926},"476":{"name":"(anonymous_476)","decl":{"start":{"line":6940,"column":34},"end":{"line":6940,"column":35}},"loc":{"start":{"line":6940,"column":66},"end":{"line":6951,"column":3}},"line":6940},"477":{"name":"(anonymous_477)","decl":{"start":{"line":6960,"column":41},"end":{"line":6960,"column":42}},"loc":{"start":{"line":6960,"column":58},"end":{"line":6964,"column":1}},"line":6960},"478":{"name":"(anonymous_478)","decl":{"start":{"line":6974,"column":51},"end":{"line":6974,"column":52}},"loc":{"start":{"line":6974,"column":74},"end":{"line":6996,"column":1}},"line":6974},"479":{"name":"(anonymous_479)","decl":{"start":{"line":7003,"column":49},"end":{"line":7003,"column":50}},"loc":{"start":{"line":7003,"column":61},"end":{"line":7007,"column":1}},"line":7003},"480":{"name":"(anonymous_480)","decl":{"start":{"line":7017,"column":47},"end":{"line":7017,"column":48}},"loc":{"start":{"line":7017,"column":74},"end":{"line":7034,"column":1}},"line":7017},"481":{"name":"(anonymous_481)","decl":{"start":{"line":7041,"column":46},"end":{"line":7041,"column":47}},"loc":{"start":{"line":7041,"column":58},"end":{"line":7044,"column":1}},"line":7041},"482":{"name":"(anonymous_482)","decl":{"start":{"line":7048,"column":46},"end":{"line":7048,"column":47}},"loc":{"start":{"line":7048,"column":63},"end":{"line":7050,"column":1}},"line":7048},"483":{"name":"(anonymous_483)","decl":{"start":{"line":7058,"column":42},"end":{"line":7058,"column":43}},"loc":{"start":{"line":7058,"column":74},"end":{"line":7060,"column":1}},"line":7058},"484":{"name":"(anonymous_484)","decl":{"start":{"line":7063,"column":48},"end":{"line":7063,"column":49}},"loc":{"start":{"line":7063,"column":60},"end":{"line":7065,"column":1}},"line":7063},"485":{"name":"(anonymous_485)","decl":{"start":{"line":7072,"column":39},"end":{"line":7072,"column":40}},"loc":{"start":{"line":7072,"column":51},"end":{"line":7074,"column":1}},"line":7072},"486":{"name":"(anonymous_486)","decl":{"start":{"line":7078,"column":39},"end":{"line":7078,"column":40}},"loc":{"start":{"line":7078,"column":56},"end":{"line":7080,"column":1}},"line":7078},"487":{"name":"(anonymous_487)","decl":{"start":{"line":7094,"column":22},"end":{"line":7094,"column":23}},"loc":{"start":{"line":7094,"column":42},"end":{"line":7096,"column":1}},"line":7094},"488":{"name":"(anonymous_488)","decl":{"start":{"line":7114,"column":43},"end":{"line":7114,"column":44}},"loc":{"start":{"line":7114,"column":74},"end":{"line":7116,"column":3}},"line":7114},"489":{"name":"(anonymous_489)","decl":{"start":{"line":7128,"column":33},"end":{"line":7128,"column":34}},"loc":{"start":{"line":7128,"column":65},"end":{"line":7138,"column":3}},"line":7128},"490":{"name":"(anonymous_490)","decl":{"start":{"line":7147,"column":40},"end":{"line":7147,"column":41}},"loc":{"start":{"line":7147,"column":57},"end":{"line":7151,"column":1}},"line":7147},"491":{"name":"(anonymous_491)","decl":{"start":{"line":7161,"column":50},"end":{"line":7161,"column":51}},"loc":{"start":{"line":7161,"column":73},"end":{"line":7182,"column":1}},"line":7161},"492":{"name":"(anonymous_492)","decl":{"start":{"line":7189,"column":48},"end":{"line":7189,"column":49}},"loc":{"start":{"line":7189,"column":60},"end":{"line":7193,"column":1}},"line":7189},"493":{"name":"(anonymous_493)","decl":{"start":{"line":7203,"column":46},"end":{"line":7203,"column":47}},"loc":{"start":{"line":7203,"column":73},"end":{"line":7219,"column":1}},"line":7203},"494":{"name":"(anonymous_494)","decl":{"start":{"line":7226,"column":43},"end":{"line":7226,"column":44}},"loc":{"start":{"line":7226,"column":55},"end":{"line":7228,"column":1}},"line":7226},"495":{"name":"(anonymous_495)","decl":{"start":{"line":7236,"column":49},"end":{"line":7236,"column":50}},"loc":{"start":{"line":7236,"column":61},"end":{"line":7239,"column":1}},"line":7236},"496":{"name":"(anonymous_496)","decl":{"start":{"line":7249,"column":48},"end":{"line":7249,"column":49}},"loc":{"start":{"line":7249,"column":60},"end":{"line":7252,"column":1}},"line":7249},"497":{"name":"(anonymous_497)","decl":{"start":{"line":7256,"column":43},"end":{"line":7256,"column":44}},"loc":{"start":{"line":7256,"column":60},"end":{"line":7258,"column":1}},"line":7256},"498":{"name":"(anonymous_498)","decl":{"start":{"line":7265,"column":45},"end":{"line":7265,"column":46}},"loc":{"start":{"line":7265,"column":57},"end":{"line":7267,"column":1}},"line":7265},"499":{"name":"(anonymous_499)","decl":{"start":{"line":7275,"column":51},"end":{"line":7275,"column":52}},"loc":{"start":{"line":7275,"column":63},"end":{"line":7278,"column":1}},"line":7275},"500":{"name":"(anonymous_500)","decl":{"start":{"line":7288,"column":50},"end":{"line":7288,"column":51}},"loc":{"start":{"line":7288,"column":62},"end":{"line":7291,"column":1}},"line":7288},"501":{"name":"(anonymous_501)","decl":{"start":{"line":7295,"column":45},"end":{"line":7295,"column":46}},"loc":{"start":{"line":7295,"column":62},"end":{"line":7297,"column":1}},"line":7295},"502":{"name":"(anonymous_502)","decl":{"start":{"line":7311,"column":19},"end":{"line":7311,"column":20}},"loc":{"start":{"line":7311,"column":39},"end":{"line":7313,"column":1}},"line":7311},"503":{"name":"(anonymous_503)","decl":{"start":{"line":7331,"column":40},"end":{"line":7331,"column":41}},"loc":{"start":{"line":7331,"column":71},"end":{"line":7333,"column":3}},"line":7331},"504":{"name":"(anonymous_504)","decl":{"start":{"line":7345,"column":30},"end":{"line":7345,"column":31}},"loc":{"start":{"line":7345,"column":62},"end":{"line":7355,"column":3}},"line":7345},"505":{"name":"(anonymous_505)","decl":{"start":{"line":7364,"column":37},"end":{"line":7364,"column":38}},"loc":{"start":{"line":7364,"column":54},"end":{"line":7368,"column":1}},"line":7364},"506":{"name":"(anonymous_506)","decl":{"start":{"line":7378,"column":47},"end":{"line":7378,"column":48}},"loc":{"start":{"line":7378,"column":70},"end":{"line":7399,"column":1}},"line":7378},"507":{"name":"(anonymous_507)","decl":{"start":{"line":7406,"column":45},"end":{"line":7406,"column":46}},"loc":{"start":{"line":7406,"column":57},"end":{"line":7410,"column":1}},"line":7406},"508":{"name":"(anonymous_508)","decl":{"start":{"line":7420,"column":43},"end":{"line":7420,"column":44}},"loc":{"start":{"line":7420,"column":70},"end":{"line":7436,"column":1}},"line":7420},"509":{"name":"(anonymous_509)","decl":{"start":{"line":7443,"column":37},"end":{"line":7443,"column":38}},"loc":{"start":{"line":7443,"column":49},"end":{"line":7445,"column":1}},"line":7443},"510":{"name":"(anonymous_510)","decl":{"start":{"line":7449,"column":37},"end":{"line":7449,"column":38}},"loc":{"start":{"line":7449,"column":54},"end":{"line":7451,"column":1}},"line":7449},"511":{"name":"(anonymous_511)","decl":{"start":{"line":7458,"column":40},"end":{"line":7458,"column":41}},"loc":{"start":{"line":7458,"column":52},"end":{"line":7460,"column":1}},"line":7458},"512":{"name":"(anonymous_512)","decl":{"start":{"line":7464,"column":40},"end":{"line":7464,"column":41}},"loc":{"start":{"line":7464,"column":57},"end":{"line":7466,"column":1}},"line":7464},"513":{"name":"(anonymous_513)","decl":{"start":{"line":7480,"column":23},"end":{"line":7480,"column":24}},"loc":{"start":{"line":7480,"column":43},"end":{"line":7482,"column":1}},"line":7480},"514":{"name":"(anonymous_514)","decl":{"start":{"line":7500,"column":44},"end":{"line":7500,"column":45}},"loc":{"start":{"line":7500,"column":75},"end":{"line":7502,"column":3}},"line":7500},"515":{"name":"(anonymous_515)","decl":{"start":{"line":7514,"column":34},"end":{"line":7514,"column":35}},"loc":{"start":{"line":7514,"column":66},"end":{"line":7525,"column":3}},"line":7514},"516":{"name":"(anonymous_516)","decl":{"start":{"line":7534,"column":41},"end":{"line":7534,"column":42}},"loc":{"start":{"line":7534,"column":58},"end":{"line":7538,"column":1}},"line":7534},"517":{"name":"(anonymous_517)","decl":{"start":{"line":7548,"column":51},"end":{"line":7548,"column":52}},"loc":{"start":{"line":7548,"column":74},"end":{"line":7574,"column":1}},"line":7548},"518":{"name":"(anonymous_518)","decl":{"start":{"line":7581,"column":49},"end":{"line":7581,"column":50}},"loc":{"start":{"line":7581,"column":61},"end":{"line":7585,"column":1}},"line":7581},"519":{"name":"(anonymous_519)","decl":{"start":{"line":7595,"column":47},"end":{"line":7595,"column":48}},"loc":{"start":{"line":7595,"column":74},"end":{"line":7619,"column":1}},"line":7595},"520":{"name":"(anonymous_520)","decl":{"start":{"line":7626,"column":41},"end":{"line":7626,"column":42}},"loc":{"start":{"line":7626,"column":53},"end":{"line":7629,"column":1}},"line":7626},"521":{"name":"(anonymous_521)","decl":{"start":{"line":7633,"column":41},"end":{"line":7633,"column":42}},"loc":{"start":{"line":7633,"column":58},"end":{"line":7635,"column":1}},"line":7633},"522":{"name":"(anonymous_522)","decl":{"start":{"line":7638,"column":43},"end":{"line":7638,"column":44}},"loc":{"start":{"line":7638,"column":55},"end":{"line":7640,"column":1}},"line":7638},"523":{"name":"(anonymous_523)","decl":{"start":{"line":7647,"column":41},"end":{"line":7647,"column":42}},"loc":{"start":{"line":7647,"column":53},"end":{"line":7649,"column":1}},"line":7647},"524":{"name":"(anonymous_524)","decl":{"start":{"line":7656,"column":42},"end":{"line":7656,"column":43}},"loc":{"start":{"line":7656,"column":54},"end":{"line":7658,"column":1}},"line":7656},"525":{"name":"(anonymous_525)","decl":{"start":{"line":7666,"column":48},"end":{"line":7666,"column":49}},"loc":{"start":{"line":7666,"column":60},"end":{"line":7669,"column":1}},"line":7666},"526":{"name":"(anonymous_526)","decl":{"start":{"line":7679,"column":47},"end":{"line":7679,"column":48}},"loc":{"start":{"line":7679,"column":59},"end":{"line":7682,"column":1}},"line":7679},"527":{"name":"(anonymous_527)","decl":{"start":{"line":7686,"column":42},"end":{"line":7686,"column":43}},"loc":{"start":{"line":7686,"column":59},"end":{"line":7688,"column":1}},"line":7686},"528":{"name":"(anonymous_528)","decl":{"start":{"line":7695,"column":48},"end":{"line":7695,"column":49}},"loc":{"start":{"line":7695,"column":60},"end":{"line":7697,"column":1}},"line":7695},"529":{"name":"(anonymous_529)","decl":{"start":{"line":7705,"column":54},"end":{"line":7705,"column":55}},"loc":{"start":{"line":7705,"column":66},"end":{"line":7708,"column":1}},"line":7705},"530":{"name":"(anonymous_530)","decl":{"start":{"line":7718,"column":53},"end":{"line":7718,"column":54}},"loc":{"start":{"line":7718,"column":65},"end":{"line":7721,"column":1}},"line":7718},"531":{"name":"(anonymous_531)","decl":{"start":{"line":7725,"column":48},"end":{"line":7725,"column":49}},"loc":{"start":{"line":7725,"column":65},"end":{"line":7727,"column":1}},"line":7725},"532":{"name":"(anonymous_532)","decl":{"start":{"line":7741,"column":26},"end":{"line":7741,"column":27}},"loc":{"start":{"line":7741,"column":46},"end":{"line":7743,"column":1}},"line":7741},"533":{"name":"(anonymous_533)","decl":{"start":{"line":7761,"column":47},"end":{"line":7761,"column":48}},"loc":{"start":{"line":7761,"column":78},"end":{"line":7763,"column":3}},"line":7761},"534":{"name":"(anonymous_534)","decl":{"start":{"line":7775,"column":37},"end":{"line":7775,"column":38}},"loc":{"start":{"line":7775,"column":69},"end":{"line":7785,"column":3}},"line":7775},"535":{"name":"(anonymous_535)","decl":{"start":{"line":7794,"column":44},"end":{"line":7794,"column":45}},"loc":{"start":{"line":7794,"column":61},"end":{"line":7798,"column":1}},"line":7794},"536":{"name":"(anonymous_536)","decl":{"start":{"line":7808,"column":54},"end":{"line":7808,"column":55}},"loc":{"start":{"line":7808,"column":77},"end":{"line":7829,"column":1}},"line":7808},"537":{"name":"(anonymous_537)","decl":{"start":{"line":7836,"column":52},"end":{"line":7836,"column":53}},"loc":{"start":{"line":7836,"column":64},"end":{"line":7840,"column":1}},"line":7836},"538":{"name":"(anonymous_538)","decl":{"start":{"line":7850,"column":50},"end":{"line":7850,"column":51}},"loc":{"start":{"line":7850,"column":77},"end":{"line":7866,"column":1}},"line":7850},"539":{"name":"(anonymous_539)","decl":{"start":{"line":7875,"column":48},"end":{"line":7875,"column":49}},"loc":{"start":{"line":7875,"column":60},"end":{"line":7877,"column":1}},"line":7875},"540":{"name":"(anonymous_540)","decl":{"start":{"line":7881,"column":48},"end":{"line":7881,"column":49}},"loc":{"start":{"line":7881,"column":65},"end":{"line":7883,"column":1}},"line":7881},"541":{"name":"(anonymous_541)","decl":{"start":{"line":7892,"column":48},"end":{"line":7892,"column":49}},"loc":{"start":{"line":7892,"column":60},"end":{"line":7894,"column":1}},"line":7892},"542":{"name":"(anonymous_542)","decl":{"start":{"line":7898,"column":48},"end":{"line":7898,"column":49}},"loc":{"start":{"line":7898,"column":65},"end":{"line":7900,"column":1}},"line":7898},"543":{"name":"(anonymous_543)","decl":{"start":{"line":7914,"column":24},"end":{"line":7914,"column":25}},"loc":{"start":{"line":7914,"column":44},"end":{"line":7916,"column":1}},"line":7914},"544":{"name":"(anonymous_544)","decl":{"start":{"line":7941,"column":45},"end":{"line":7941,"column":46}},"loc":{"start":{"line":7941,"column":76},"end":{"line":7943,"column":3}},"line":7941},"545":{"name":"(anonymous_545)","decl":{"start":{"line":7955,"column":35},"end":{"line":7955,"column":36}},"loc":{"start":{"line":7955,"column":67},"end":{"line":7964,"column":3}},"line":7955},"546":{"name":"(anonymous_546)","decl":{"start":{"line":7973,"column":42},"end":{"line":7973,"column":43}},"loc":{"start":{"line":7973,"column":59},"end":{"line":7977,"column":1}},"line":7973},"547":{"name":"(anonymous_547)","decl":{"start":{"line":7987,"column":52},"end":{"line":7987,"column":53}},"loc":{"start":{"line":7987,"column":75},"end":{"line":8004,"column":1}},"line":7987},"548":{"name":"(anonymous_548)","decl":{"start":{"line":8011,"column":50},"end":{"line":8011,"column":51}},"loc":{"start":{"line":8011,"column":62},"end":{"line":8015,"column":1}},"line":8011},"549":{"name":"(anonymous_549)","decl":{"start":{"line":8025,"column":48},"end":{"line":8025,"column":49}},"loc":{"start":{"line":8025,"column":75},"end":{"line":8034,"column":1}},"line":8025},"550":{"name":"(anonymous_550)","decl":{"start":{"line":8041,"column":45},"end":{"line":8041,"column":46}},"loc":{"start":{"line":8041,"column":57},"end":{"line":8043,"column":1}},"line":8041},"551":{"name":"(anonymous_551)","decl":{"start":{"line":8047,"column":45},"end":{"line":8047,"column":46}},"loc":{"start":{"line":8047,"column":62},"end":{"line":8049,"column":1}},"line":8047},"552":{"name":"(anonymous_552)","decl":{"start":{"line":8056,"column":41},"end":{"line":8056,"column":42}},"loc":{"start":{"line":8056,"column":69},"end":{"line":8058,"column":1}},"line":8056},"553":{"name":"(anonymous_553)","decl":{"start":{"line":8061,"column":47},"end":{"line":8061,"column":48}},"loc":{"start":{"line":8061,"column":59},"end":{"line":8063,"column":1}},"line":8061},"554":{"name":"(anonymous_554)","decl":{"start":{"line":8077,"column":25},"end":{"line":8077,"column":26}},"loc":{"start":{"line":8077,"column":45},"end":{"line":8079,"column":1}},"line":8077},"555":{"name":"(anonymous_555)","decl":{"start":{"line":8097,"column":46},"end":{"line":8097,"column":47}},"loc":{"start":{"line":8097,"column":77},"end":{"line":8099,"column":3}},"line":8097},"556":{"name":"(anonymous_556)","decl":{"start":{"line":8111,"column":36},"end":{"line":8111,"column":37}},"loc":{"start":{"line":8111,"column":68},"end":{"line":8121,"column":3}},"line":8111},"557":{"name":"(anonymous_557)","decl":{"start":{"line":8130,"column":43},"end":{"line":8130,"column":44}},"loc":{"start":{"line":8130,"column":60},"end":{"line":8134,"column":1}},"line":8130},"558":{"name":"(anonymous_558)","decl":{"start":{"line":8144,"column":53},"end":{"line":8144,"column":54}},"loc":{"start":{"line":8144,"column":76},"end":{"line":8169,"column":1}},"line":8144},"559":{"name":"(anonymous_559)","decl":{"start":{"line":8153,"column":34},"end":{"line":8153,"column":35}},"loc":{"start":{"line":8153,"column":61},"end":{"line":8155,"column":9}},"line":8153},"560":{"name":"(anonymous_560)","decl":{"start":{"line":8159,"column":34},"end":{"line":8159,"column":35}},"loc":{"start":{"line":8159,"column":61},"end":{"line":8161,"column":9}},"line":8159},"561":{"name":"(anonymous_561)","decl":{"start":{"line":8176,"column":51},"end":{"line":8176,"column":52}},"loc":{"start":{"line":8176,"column":63},"end":{"line":8180,"column":1}},"line":8176},"562":{"name":"(anonymous_562)","decl":{"start":{"line":8190,"column":49},"end":{"line":8190,"column":50}},"loc":{"start":{"line":8190,"column":76},"end":{"line":8200,"column":1}},"line":8190},"563":{"name":"(anonymous_563)","decl":{"start":{"line":8209,"column":48},"end":{"line":8209,"column":49}},"loc":{"start":{"line":8209,"column":76},"end":{"line":8213,"column":1}},"line":8209},"564":{"name":"(anonymous_564)","decl":{"start":{"line":8216,"column":50},"end":{"line":8216,"column":51}},"loc":{"start":{"line":8216,"column":62},"end":{"line":8218,"column":1}},"line":8216},"565":{"name":"(anonymous_565)","decl":{"start":{"line":8227,"column":48},"end":{"line":8227,"column":49}},"loc":{"start":{"line":8227,"column":76},"end":{"line":8231,"column":1}},"line":8227},"566":{"name":"(anonymous_566)","decl":{"start":{"line":8234,"column":50},"end":{"line":8234,"column":51}},"loc":{"start":{"line":8234,"column":62},"end":{"line":8236,"column":1}},"line":8234},"567":{"name":"(anonymous_567)","decl":{"start":{"line":8250,"column":25},"end":{"line":8250,"column":26}},"loc":{"start":{"line":8250,"column":45},"end":{"line":8252,"column":1}},"line":8250},"568":{"name":"(anonymous_568)","decl":{"start":{"line":8270,"column":46},"end":{"line":8270,"column":47}},"loc":{"start":{"line":8270,"column":77},"end":{"line":8272,"column":3}},"line":8270},"569":{"name":"(anonymous_569)","decl":{"start":{"line":8284,"column":36},"end":{"line":8284,"column":37}},"loc":{"start":{"line":8284,"column":68},"end":{"line":8293,"column":3}},"line":8284},"570":{"name":"(anonymous_570)","decl":{"start":{"line":8302,"column":43},"end":{"line":8302,"column":44}},"loc":{"start":{"line":8302,"column":60},"end":{"line":8306,"column":1}},"line":8302},"571":{"name":"(anonymous_571)","decl":{"start":{"line":8316,"column":53},"end":{"line":8316,"column":54}},"loc":{"start":{"line":8316,"column":76},"end":{"line":8335,"column":1}},"line":8316},"572":{"name":"(anonymous_572)","decl":{"start":{"line":8325,"column":34},"end":{"line":8325,"column":35}},"loc":{"start":{"line":8325,"column":61},"end":{"line":8327,"column":9}},"line":8325},"573":{"name":"(anonymous_573)","decl":{"start":{"line":8342,"column":51},"end":{"line":8342,"column":52}},"loc":{"start":{"line":8342,"column":63},"end":{"line":8346,"column":1}},"line":8342},"574":{"name":"(anonymous_574)","decl":{"start":{"line":8356,"column":49},"end":{"line":8356,"column":50}},"loc":{"start":{"line":8356,"column":76},"end":{"line":8362,"column":1}},"line":8356},"575":{"name":"(anonymous_575)","decl":{"start":{"line":8371,"column":47},"end":{"line":8371,"column":48}},"loc":{"start":{"line":8371,"column":75},"end":{"line":8375,"column":1}},"line":8371},"576":{"name":"(anonymous_576)","decl":{"start":{"line":8378,"column":49},"end":{"line":8378,"column":50}},"loc":{"start":{"line":8378,"column":61},"end":{"line":8380,"column":1}},"line":8378},"577":{"name":"(anonymous_577)","decl":{"start":{"line":8394,"column":24},"end":{"line":8394,"column":25}},"loc":{"start":{"line":8394,"column":44},"end":{"line":8396,"column":1}},"line":8394},"578":{"name":"(anonymous_578)","decl":{"start":{"line":8421,"column":45},"end":{"line":8421,"column":46}},"loc":{"start":{"line":8421,"column":76},"end":{"line":8423,"column":3}},"line":8421},"579":{"name":"(anonymous_579)","decl":{"start":{"line":8435,"column":35},"end":{"line":8435,"column":36}},"loc":{"start":{"line":8435,"column":67},"end":{"line":8445,"column":3}},"line":8435},"580":{"name":"(anonymous_580)","decl":{"start":{"line":8454,"column":42},"end":{"line":8454,"column":43}},"loc":{"start":{"line":8454,"column":59},"end":{"line":8458,"column":1}},"line":8454},"581":{"name":"(anonymous_581)","decl":{"start":{"line":8468,"column":52},"end":{"line":8468,"column":53}},"loc":{"start":{"line":8468,"column":75},"end":{"line":8486,"column":1}},"line":8468},"582":{"name":"(anonymous_582)","decl":{"start":{"line":8493,"column":50},"end":{"line":8493,"column":51}},"loc":{"start":{"line":8493,"column":62},"end":{"line":8497,"column":1}},"line":8493},"583":{"name":"(anonymous_583)","decl":{"start":{"line":8507,"column":48},"end":{"line":8507,"column":49}},"loc":{"start":{"line":8507,"column":75},"end":{"line":8517,"column":1}},"line":8507},"584":{"name":"(anonymous_584)","decl":{"start":{"line":8524,"column":48},"end":{"line":8524,"column":49}},"loc":{"start":{"line":8524,"column":60},"end":{"line":8527,"column":1}},"line":8524},"585":{"name":"(anonymous_585)","decl":{"start":{"line":8531,"column":48},"end":{"line":8531,"column":49}},"loc":{"start":{"line":8531,"column":65},"end":{"line":8533,"column":1}},"line":8531},"586":{"name":"(anonymous_586)","decl":{"start":{"line":8541,"column":44},"end":{"line":8541,"column":45}},"loc":{"start":{"line":8541,"column":76},"end":{"line":8543,"column":1}},"line":8541},"587":{"name":"(anonymous_587)","decl":{"start":{"line":8546,"column":50},"end":{"line":8546,"column":51}},"loc":{"start":{"line":8546,"column":62},"end":{"line":8548,"column":1}},"line":8546},"588":{"name":"(anonymous_588)","decl":{"start":{"line":8562,"column":28},"end":{"line":8562,"column":29}},"loc":{"start":{"line":8562,"column":48},"end":{"line":8564,"column":1}},"line":8562},"589":{"name":"(anonymous_589)","decl":{"start":{"line":8589,"column":49},"end":{"line":8589,"column":50}},"loc":{"start":{"line":8589,"column":80},"end":{"line":8591,"column":3}},"line":8589},"590":{"name":"(anonymous_590)","decl":{"start":{"line":8603,"column":39},"end":{"line":8603,"column":40}},"loc":{"start":{"line":8603,"column":71},"end":{"line":8614,"column":3}},"line":8603},"591":{"name":"(anonymous_591)","decl":{"start":{"line":8623,"column":46},"end":{"line":8623,"column":47}},"loc":{"start":{"line":8623,"column":63},"end":{"line":8627,"column":1}},"line":8623},"592":{"name":"(anonymous_592)","decl":{"start":{"line":8637,"column":56},"end":{"line":8637,"column":57}},"loc":{"start":{"line":8637,"column":79},"end":{"line":8662,"column":1}},"line":8637},"593":{"name":"(anonymous_593)","decl":{"start":{"line":8669,"column":54},"end":{"line":8669,"column":55}},"loc":{"start":{"line":8669,"column":66},"end":{"line":8673,"column":1}},"line":8669},"594":{"name":"(anonymous_594)","decl":{"start":{"line":8683,"column":52},"end":{"line":8683,"column":53}},"loc":{"start":{"line":8683,"column":79},"end":{"line":8706,"column":1}},"line":8683},"595":{"name":"(anonymous_595)","decl":{"start":{"line":8713,"column":46},"end":{"line":8713,"column":47}},"loc":{"start":{"line":8713,"column":58},"end":{"line":8715,"column":1}},"line":8713},"596":{"name":"(anonymous_596)","decl":{"start":{"line":8719,"column":46},"end":{"line":8719,"column":47}},"loc":{"start":{"line":8719,"column":63},"end":{"line":8721,"column":1}},"line":8719},"597":{"name":"(anonymous_597)","decl":{"start":{"line":8728,"column":46},"end":{"line":8728,"column":47}},"loc":{"start":{"line":8728,"column":58},"end":{"line":8730,"column":1}},"line":8728},"598":{"name":"(anonymous_598)","decl":{"start":{"line":8734,"column":46},"end":{"line":8734,"column":47}},"loc":{"start":{"line":8734,"column":63},"end":{"line":8736,"column":1}},"line":8734},"599":{"name":"(anonymous_599)","decl":{"start":{"line":8743,"column":49},"end":{"line":8743,"column":50}},"loc":{"start":{"line":8743,"column":61},"end":{"line":8745,"column":1}},"line":8743},"600":{"name":"(anonymous_600)","decl":{"start":{"line":8749,"column":49},"end":{"line":8749,"column":50}},"loc":{"start":{"line":8749,"column":66},"end":{"line":8751,"column":1}},"line":8749},"601":{"name":"(anonymous_601)","decl":{"start":{"line":8758,"column":45},"end":{"line":8758,"column":46}},"loc":{"start":{"line":8758,"column":73},"end":{"line":8760,"column":1}},"line":8758},"602":{"name":"(anonymous_602)","decl":{"start":{"line":8763,"column":51},"end":{"line":8763,"column":52}},"loc":{"start":{"line":8763,"column":63},"end":{"line":8765,"column":1}},"line":8763},"603":{"name":"(anonymous_603)","decl":{"start":{"line":8779,"column":34},"end":{"line":8779,"column":35}},"loc":{"start":{"line":8779,"column":54},"end":{"line":8781,"column":1}},"line":8779},"604":{"name":"(anonymous_604)","decl":{"start":{"line":8799,"column":55},"end":{"line":8799,"column":56}},"loc":{"start":{"line":8799,"column":86},"end":{"line":8801,"column":3}},"line":8799},"605":{"name":"(anonymous_605)","decl":{"start":{"line":8813,"column":45},"end":{"line":8813,"column":46}},"loc":{"start":{"line":8813,"column":77},"end":{"line":8822,"column":3}},"line":8813},"606":{"name":"(anonymous_606)","decl":{"start":{"line":8831,"column":52},"end":{"line":8831,"column":53}},"loc":{"start":{"line":8831,"column":69},"end":{"line":8835,"column":1}},"line":8831},"607":{"name":"(anonymous_607)","decl":{"start":{"line":8845,"column":62},"end":{"line":8845,"column":63}},"loc":{"start":{"line":8845,"column":85},"end":{"line":8862,"column":1}},"line":8845},"608":{"name":"(anonymous_608)","decl":{"start":{"line":8869,"column":60},"end":{"line":8869,"column":61}},"loc":{"start":{"line":8869,"column":72},"end":{"line":8873,"column":1}},"line":8869},"609":{"name":"(anonymous_609)","decl":{"start":{"line":8883,"column":58},"end":{"line":8883,"column":59}},"loc":{"start":{"line":8883,"column":85},"end":{"line":8892,"column":1}},"line":8883},"610":{"name":"(anonymous_610)","decl":{"start":{"line":8899,"column":51},"end":{"line":8899,"column":52}},"loc":{"start":{"line":8899,"column":63},"end":{"line":8901,"column":1}},"line":8899},"611":{"name":"(anonymous_611)","decl":{"start":{"line":8905,"column":51},"end":{"line":8905,"column":52}},"loc":{"start":{"line":8905,"column":68},"end":{"line":8907,"column":1}},"line":8905},"612":{"name":"(anonymous_612)","decl":{"start":{"line":8921,"column":31},"end":{"line":8921,"column":32}},"loc":{"start":{"line":8921,"column":51},"end":{"line":8923,"column":1}},"line":8921},"613":{"name":"(anonymous_613)","decl":{"start":{"line":8948,"column":52},"end":{"line":8948,"column":53}},"loc":{"start":{"line":8948,"column":83},"end":{"line":8950,"column":3}},"line":8948},"614":{"name":"(anonymous_614)","decl":{"start":{"line":8962,"column":42},"end":{"line":8962,"column":43}},"loc":{"start":{"line":8962,"column":74},"end":{"line":8973,"column":3}},"line":8962},"615":{"name":"(anonymous_615)","decl":{"start":{"line":8982,"column":49},"end":{"line":8982,"column":50}},"loc":{"start":{"line":8982,"column":66},"end":{"line":8986,"column":1}},"line":8982},"616":{"name":"(anonymous_616)","decl":{"start":{"line":8996,"column":59},"end":{"line":8996,"column":60}},"loc":{"start":{"line":8996,"column":82},"end":{"line":9021,"column":1}},"line":8996},"617":{"name":"(anonymous_617)","decl":{"start":{"line":9028,"column":57},"end":{"line":9028,"column":58}},"loc":{"start":{"line":9028,"column":69},"end":{"line":9032,"column":1}},"line":9028},"618":{"name":"(anonymous_618)","decl":{"start":{"line":9042,"column":55},"end":{"line":9042,"column":56}},"loc":{"start":{"line":9042,"column":82},"end":{"line":9065,"column":1}},"line":9042},"619":{"name":"(anonymous_619)","decl":{"start":{"line":9072,"column":48},"end":{"line":9072,"column":49}},"loc":{"start":{"line":9072,"column":60},"end":{"line":9074,"column":1}},"line":9072},"620":{"name":"(anonymous_620)","decl":{"start":{"line":9078,"column":48},"end":{"line":9078,"column":49}},"loc":{"start":{"line":9078,"column":65},"end":{"line":9080,"column":1}},"line":9078},"621":{"name":"(anonymous_621)","decl":{"start":{"line":9089,"column":47},"end":{"line":9089,"column":48}},"loc":{"start":{"line":9089,"column":59},"end":{"line":9091,"column":1}},"line":9089},"622":{"name":"(anonymous_622)","decl":{"start":{"line":9095,"column":47},"end":{"line":9095,"column":48}},"loc":{"start":{"line":9095,"column":64},"end":{"line":9097,"column":1}},"line":9095},"623":{"name":"(anonymous_623)","decl":{"start":{"line":9104,"column":55},"end":{"line":9104,"column":56}},"loc":{"start":{"line":9104,"column":67},"end":{"line":9106,"column":1}},"line":9104},"624":{"name":"(anonymous_624)","decl":{"start":{"line":9110,"column":55},"end":{"line":9110,"column":56}},"loc":{"start":{"line":9110,"column":72},"end":{"line":9112,"column":1}},"line":9110},"625":{"name":"(anonymous_625)","decl":{"start":{"line":9119,"column":51},"end":{"line":9119,"column":52}},"loc":{"start":{"line":9119,"column":79},"end":{"line":9121,"column":1}},"line":9119},"626":{"name":"(anonymous_626)","decl":{"start":{"line":9124,"column":57},"end":{"line":9124,"column":58}},"loc":{"start":{"line":9124,"column":69},"end":{"line":9126,"column":1}},"line":9124}},"branchMap":{"0":{"loc":{"start":{"line":85,"column":0},"end":{"line":87,"column":1}},"type":"if","locations":[{"start":{"line":85,"column":0},"end":{"line":87,"column":1}},{"start":{"line":85,"column":0},"end":{"line":87,"column":1}}],"line":85},"1":{"loc":{"start":{"line":85,"column":4},"end":{"line":85,"column":27}},"type":"binary-expr","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":14}},{"start":{"line":85,"column":18},"end":{"line":85,"column":27}}],"line":85},"2":{"loc":{"start":{"line":90,"column":0},"end":{"line":129,"column":1}},"type":"if","locations":[{"start":{"line":90,"column":0},"end":{"line":129,"column":1}},{"start":{"line":90,"column":0},"end":{"line":129,"column":1}}],"line":90},"3":{"loc":{"start":{"line":121,"column":17},"end":{"line":121,"column":95}},"type":"binary-expr","locations":[{"start":{"line":121,"column":18},"end":{"line":121,"column":40}},{"start":{"line":121,"column":45},"end":{"line":121,"column":95}}],"line":121},"4":{"loc":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},{"start":{"line":124,"column":4},"end":{"line":126,"column":5}}],"line":124},"5":{"loc":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},{"start":{"line":153,"column":4},"end":{"line":155,"column":5}}],"line":153},"6":{"loc":{"start":{"line":157,"column":4},"end":{"line":181,"column":15}},"type":"switch","locations":[{"start":{"line":158,"column":6},"end":{"line":161,"column":14}},{"start":{"line":162,"column":6},"end":{"line":165,"column":14}},{"start":{"line":166,"column":6},"end":{"line":169,"column":14}},{"start":{"line":170,"column":6},"end":{"line":173,"column":14}},{"start":{"line":174,"column":6},"end":{"line":178,"column":14}},{"start":{"line":179,"column":6},"end":{"line":181,"column":14}}],"line":157},"7":{"loc":{"start":{"line":209,"column":2},"end":{"line":214,"column":3}},"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":214,"column":3}},{"start":{"line":209,"column":2},"end":{"line":214,"column":3}}],"line":209},"8":{"loc":{"start":{"line":216,"column":2},"end":{"line":221,"column":3}},"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":221,"column":3}},{"start":{"line":216,"column":2},"end":{"line":221,"column":3}}],"line":216},"9":{"loc":{"start":{"line":223,"column":2},"end":{"line":228,"column":3}},"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":228,"column":3}},{"start":{"line":223,"column":2},"end":{"line":228,"column":3}}],"line":223},"10":{"loc":{"start":{"line":230,"column":2},"end":{"line":235,"column":3}},"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":235,"column":3}},{"start":{"line":230,"column":2},"end":{"line":235,"column":3}}],"line":230},"11":{"loc":{"start":{"line":237,"column":2},"end":{"line":243,"column":3}},"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":243,"column":3}},{"start":{"line":237,"column":2},"end":{"line":243,"column":3}}],"line":237},"12":{"loc":{"start":{"line":400,"column":0},"end":{"line":402,"column":1}},"type":"if","locations":[{"start":{"line":400,"column":0},"end":{"line":402,"column":1}},{"start":{"line":400,"column":0},"end":{"line":402,"column":1}}],"line":400},"13":{"loc":{"start":{"line":400,"column":4},"end":{"line":400,"column":27}},"type":"binary-expr","locations":[{"start":{"line":400,"column":4},"end":{"line":400,"column":14}},{"start":{"line":400,"column":18},"end":{"line":400,"column":27}}],"line":400},"14":{"loc":{"start":{"line":405,"column":0},"end":{"line":444,"column":1}},"type":"if","locations":[{"start":{"line":405,"column":0},"end":{"line":444,"column":1}},{"start":{"line":405,"column":0},"end":{"line":444,"column":1}}],"line":405},"15":{"loc":{"start":{"line":439,"column":4},"end":{"line":441,"column":5}},"type":"if","locations":[{"start":{"line":439,"column":4},"end":{"line":441,"column":5}},{"start":{"line":439,"column":4},"end":{"line":441,"column":5}}],"line":439},"16":{"loc":{"start":{"line":468,"column":4},"end":{"line":470,"column":5}},"type":"if","locations":[{"start":{"line":468,"column":4},"end":{"line":470,"column":5}},{"start":{"line":468,"column":4},"end":{"line":470,"column":5}}],"line":468},"17":{"loc":{"start":{"line":472,"column":4},"end":{"line":495,"column":15}},"type":"switch","locations":[{"start":{"line":473,"column":6},"end":{"line":476,"column":14}},{"start":{"line":477,"column":6},"end":{"line":480,"column":14}},{"start":{"line":481,"column":6},"end":{"line":484,"column":14}},{"start":{"line":485,"column":6},"end":{"line":488,"column":14}},{"start":{"line":489,"column":6},"end":{"line":492,"column":14}},{"start":{"line":493,"column":6},"end":{"line":495,"column":14}}],"line":472},"18":{"loc":{"start":{"line":523,"column":2},"end":{"line":528,"column":3}},"type":"if","locations":[{"start":{"line":523,"column":2},"end":{"line":528,"column":3}},{"start":{"line":523,"column":2},"end":{"line":528,"column":3}}],"line":523},"19":{"loc":{"start":{"line":530,"column":2},"end":{"line":535,"column":3}},"type":"if","locations":[{"start":{"line":530,"column":2},"end":{"line":535,"column":3}},{"start":{"line":530,"column":2},"end":{"line":535,"column":3}}],"line":530},"20":{"loc":{"start":{"line":537,"column":2},"end":{"line":542,"column":3}},"type":"if","locations":[{"start":{"line":537,"column":2},"end":{"line":542,"column":3}},{"start":{"line":537,"column":2},"end":{"line":542,"column":3}}],"line":537},"21":{"loc":{"start":{"line":544,"column":2},"end":{"line":549,"column":3}},"type":"if","locations":[{"start":{"line":544,"column":2},"end":{"line":549,"column":3}},{"start":{"line":544,"column":2},"end":{"line":549,"column":3}}],"line":544},"22":{"loc":{"start":{"line":551,"column":2},"end":{"line":556,"column":3}},"type":"if","locations":[{"start":{"line":551,"column":2},"end":{"line":556,"column":3}},{"start":{"line":551,"column":2},"end":{"line":556,"column":3}}],"line":551},"23":{"loc":{"start":{"line":654,"column":0},"end":{"line":656,"column":1}},"type":"if","locations":[{"start":{"line":654,"column":0},"end":{"line":656,"column":1}},{"start":{"line":654,"column":0},"end":{"line":656,"column":1}}],"line":654},"24":{"loc":{"start":{"line":654,"column":4},"end":{"line":654,"column":27}},"type":"binary-expr","locations":[{"start":{"line":654,"column":4},"end":{"line":654,"column":14}},{"start":{"line":654,"column":18},"end":{"line":654,"column":27}}],"line":654},"25":{"loc":{"start":{"line":659,"column":0},"end":{"line":703,"column":1}},"type":"if","locations":[{"start":{"line":659,"column":0},"end":{"line":703,"column":1}},{"start":{"line":659,"column":0},"end":{"line":703,"column":1}}],"line":659},"26":{"loc":{"start":{"line":686,"column":10},"end":{"line":686,"column":79}},"type":"binary-expr","locations":[{"start":{"line":686,"column":11},"end":{"line":686,"column":26}},{"start":{"line":686,"column":31},"end":{"line":686,"column":79}}],"line":686},"27":{"loc":{"start":{"line":698,"column":4},"end":{"line":700,"column":5}},"type":"if","locations":[{"start":{"line":698,"column":4},"end":{"line":700,"column":5}},{"start":{"line":698,"column":4},"end":{"line":700,"column":5}}],"line":698},"28":{"loc":{"start":{"line":727,"column":4},"end":{"line":729,"column":5}},"type":"if","locations":[{"start":{"line":727,"column":4},"end":{"line":729,"column":5}},{"start":{"line":727,"column":4},"end":{"line":729,"column":5}}],"line":727},"29":{"loc":{"start":{"line":731,"column":4},"end":{"line":775,"column":15}},"type":"switch","locations":[{"start":{"line":732,"column":6},"end":{"line":736,"column":14}},{"start":{"line":737,"column":6},"end":{"line":740,"column":14}},{"start":{"line":741,"column":6},"end":{"line":744,"column":14}},{"start":{"line":745,"column":6},"end":{"line":748,"column":14}},{"start":{"line":749,"column":6},"end":{"line":752,"column":14}},{"start":{"line":753,"column":6},"end":{"line":756,"column":14}},{"start":{"line":757,"column":6},"end":{"line":760,"column":14}},{"start":{"line":761,"column":6},"end":{"line":764,"column":14}},{"start":{"line":765,"column":6},"end":{"line":768,"column":14}},{"start":{"line":769,"column":6},"end":{"line":772,"column":14}},{"start":{"line":773,"column":6},"end":{"line":775,"column":14}}],"line":731},"30":{"loc":{"start":{"line":803,"column":2},"end":{"line":809,"column":3}},"type":"if","locations":[{"start":{"line":803,"column":2},"end":{"line":809,"column":3}},{"start":{"line":803,"column":2},"end":{"line":809,"column":3}}],"line":803},"31":{"loc":{"start":{"line":811,"column":2},"end":{"line":816,"column":3}},"type":"if","locations":[{"start":{"line":811,"column":2},"end":{"line":816,"column":3}},{"start":{"line":811,"column":2},"end":{"line":816,"column":3}}],"line":811},"32":{"loc":{"start":{"line":818,"column":2},"end":{"line":823,"column":3}},"type":"if","locations":[{"start":{"line":818,"column":2},"end":{"line":823,"column":3}},{"start":{"line":818,"column":2},"end":{"line":823,"column":3}}],"line":818},"33":{"loc":{"start":{"line":825,"column":2},"end":{"line":830,"column":3}},"type":"if","locations":[{"start":{"line":825,"column":2},"end":{"line":830,"column":3}},{"start":{"line":825,"column":2},"end":{"line":830,"column":3}}],"line":825},"34":{"loc":{"start":{"line":832,"column":2},"end":{"line":837,"column":3}},"type":"if","locations":[{"start":{"line":832,"column":2},"end":{"line":837,"column":3}},{"start":{"line":832,"column":2},"end":{"line":837,"column":3}}],"line":832},"35":{"loc":{"start":{"line":839,"column":2},"end":{"line":844,"column":3}},"type":"if","locations":[{"start":{"line":839,"column":2},"end":{"line":844,"column":3}},{"start":{"line":839,"column":2},"end":{"line":844,"column":3}}],"line":839},"36":{"loc":{"start":{"line":846,"column":2},"end":{"line":851,"column":3}},"type":"if","locations":[{"start":{"line":846,"column":2},"end":{"line":851,"column":3}},{"start":{"line":846,"column":2},"end":{"line":851,"column":3}}],"line":846},"37":{"loc":{"start":{"line":853,"column":2},"end":{"line":858,"column":3}},"type":"if","locations":[{"start":{"line":853,"column":2},"end":{"line":858,"column":3}},{"start":{"line":853,"column":2},"end":{"line":858,"column":3}}],"line":853},"38":{"loc":{"start":{"line":860,"column":2},"end":{"line":865,"column":3}},"type":"if","locations":[{"start":{"line":860,"column":2},"end":{"line":865,"column":3}},{"start":{"line":860,"column":2},"end":{"line":865,"column":3}}],"line":860},"39":{"loc":{"start":{"line":867,"column":2},"end":{"line":872,"column":3}},"type":"if","locations":[{"start":{"line":867,"column":2},"end":{"line":872,"column":3}},{"start":{"line":867,"column":2},"end":{"line":872,"column":3}}],"line":867},"40":{"loc":{"start":{"line":1224,"column":0},"end":{"line":1226,"column":1}},"type":"if","locations":[{"start":{"line":1224,"column":0},"end":{"line":1226,"column":1}},{"start":{"line":1224,"column":0},"end":{"line":1226,"column":1}}],"line":1224},"41":{"loc":{"start":{"line":1224,"column":4},"end":{"line":1224,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1224,"column":4},"end":{"line":1224,"column":14}},{"start":{"line":1224,"column":18},"end":{"line":1224,"column":27}}],"line":1224},"42":{"loc":{"start":{"line":1229,"column":0},"end":{"line":1264,"column":1}},"type":"if","locations":[{"start":{"line":1229,"column":0},"end":{"line":1264,"column":1}},{"start":{"line":1229,"column":0},"end":{"line":1264,"column":1}}],"line":1229},"43":{"loc":{"start":{"line":1259,"column":4},"end":{"line":1261,"column":5}},"type":"if","locations":[{"start":{"line":1259,"column":4},"end":{"line":1261,"column":5}},{"start":{"line":1259,"column":4},"end":{"line":1261,"column":5}}],"line":1259},"44":{"loc":{"start":{"line":1288,"column":4},"end":{"line":1290,"column":5}},"type":"if","locations":[{"start":{"line":1288,"column":4},"end":{"line":1290,"column":5}},{"start":{"line":1288,"column":4},"end":{"line":1290,"column":5}}],"line":1288},"45":{"loc":{"start":{"line":1292,"column":4},"end":{"line":1299,"column":15}},"type":"switch","locations":[{"start":{"line":1293,"column":6},"end":{"line":1296,"column":14}},{"start":{"line":1297,"column":6},"end":{"line":1299,"column":14}}],"line":1292},"46":{"loc":{"start":{"line":1327,"column":2},"end":{"line":1332,"column":3}},"type":"if","locations":[{"start":{"line":1327,"column":2},"end":{"line":1332,"column":3}},{"start":{"line":1327,"column":2},"end":{"line":1332,"column":3}}],"line":1327},"47":{"loc":{"start":{"line":1366,"column":0},"end":{"line":1368,"column":1}},"type":"if","locations":[{"start":{"line":1366,"column":0},"end":{"line":1368,"column":1}},{"start":{"line":1366,"column":0},"end":{"line":1368,"column":1}}],"line":1366},"48":{"loc":{"start":{"line":1366,"column":4},"end":{"line":1366,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1366,"column":4},"end":{"line":1366,"column":14}},{"start":{"line":1366,"column":18},"end":{"line":1366,"column":27}}],"line":1366},"49":{"loc":{"start":{"line":1378,"column":0},"end":{"line":1416,"column":1}},"type":"if","locations":[{"start":{"line":1378,"column":0},"end":{"line":1416,"column":1}},{"start":{"line":1378,"column":0},"end":{"line":1416,"column":1}}],"line":1378},"50":{"loc":{"start":{"line":1411,"column":4},"end":{"line":1413,"column":5}},"type":"if","locations":[{"start":{"line":1411,"column":4},"end":{"line":1413,"column":5}},{"start":{"line":1411,"column":4},"end":{"line":1413,"column":5}}],"line":1411},"51":{"loc":{"start":{"line":1440,"column":4},"end":{"line":1442,"column":5}},"type":"if","locations":[{"start":{"line":1440,"column":4},"end":{"line":1442,"column":5}},{"start":{"line":1440,"column":4},"end":{"line":1442,"column":5}}],"line":1440},"52":{"loc":{"start":{"line":1444,"column":4},"end":{"line":1463,"column":15}},"type":"switch","locations":[{"start":{"line":1445,"column":6},"end":{"line":1448,"column":14}},{"start":{"line":1449,"column":6},"end":{"line":1452,"column":14}},{"start":{"line":1453,"column":6},"end":{"line":1456,"column":14}},{"start":{"line":1457,"column":6},"end":{"line":1460,"column":14}},{"start":{"line":1461,"column":6},"end":{"line":1463,"column":14}}],"line":1444},"53":{"loc":{"start":{"line":1491,"column":2},"end":{"line":1496,"column":3}},"type":"if","locations":[{"start":{"line":1491,"column":2},"end":{"line":1496,"column":3}},{"start":{"line":1491,"column":2},"end":{"line":1496,"column":3}}],"line":1491},"54":{"loc":{"start":{"line":1498,"column":2},"end":{"line":1503,"column":3}},"type":"if","locations":[{"start":{"line":1498,"column":2},"end":{"line":1503,"column":3}},{"start":{"line":1498,"column":2},"end":{"line":1503,"column":3}}],"line":1498},"55":{"loc":{"start":{"line":1505,"column":2},"end":{"line":1510,"column":3}},"type":"if","locations":[{"start":{"line":1505,"column":2},"end":{"line":1510,"column":3}},{"start":{"line":1505,"column":2},"end":{"line":1510,"column":3}}],"line":1505},"56":{"loc":{"start":{"line":1512,"column":2},"end":{"line":1517,"column":3}},"type":"if","locations":[{"start":{"line":1512,"column":2},"end":{"line":1517,"column":3}},{"start":{"line":1512,"column":2},"end":{"line":1517,"column":3}}],"line":1512},"57":{"loc":{"start":{"line":1595,"column":33},"end":{"line":1595,"column":44}},"type":"binary-expr","locations":[{"start":{"line":1595,"column":33},"end":{"line":1595,"column":38}},{"start":{"line":1595,"column":42},"end":{"line":1595,"column":44}}],"line":1595},"58":{"loc":{"start":{"line":1706,"column":0},"end":{"line":1708,"column":1}},"type":"if","locations":[{"start":{"line":1706,"column":0},"end":{"line":1708,"column":1}},{"start":{"line":1706,"column":0},"end":{"line":1708,"column":1}}],"line":1706},"59":{"loc":{"start":{"line":1706,"column":4},"end":{"line":1706,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1706,"column":4},"end":{"line":1706,"column":14}},{"start":{"line":1706,"column":18},"end":{"line":1706,"column":27}}],"line":1706},"60":{"loc":{"start":{"line":1711,"column":0},"end":{"line":1749,"column":1}},"type":"if","locations":[{"start":{"line":1711,"column":0},"end":{"line":1749,"column":1}},{"start":{"line":1711,"column":0},"end":{"line":1749,"column":1}}],"line":1711},"61":{"loc":{"start":{"line":1744,"column":4},"end":{"line":1746,"column":5}},"type":"if","locations":[{"start":{"line":1744,"column":4},"end":{"line":1746,"column":5}},{"start":{"line":1744,"column":4},"end":{"line":1746,"column":5}}],"line":1744},"62":{"loc":{"start":{"line":1773,"column":4},"end":{"line":1775,"column":5}},"type":"if","locations":[{"start":{"line":1773,"column":4},"end":{"line":1775,"column":5}},{"start":{"line":1773,"column":4},"end":{"line":1775,"column":5}}],"line":1773},"63":{"loc":{"start":{"line":1777,"column":4},"end":{"line":1796,"column":15}},"type":"switch","locations":[{"start":{"line":1778,"column":6},"end":{"line":1781,"column":14}},{"start":{"line":1782,"column":6},"end":{"line":1785,"column":14}},{"start":{"line":1786,"column":6},"end":{"line":1789,"column":14}},{"start":{"line":1790,"column":6},"end":{"line":1793,"column":14}},{"start":{"line":1794,"column":6},"end":{"line":1796,"column":14}}],"line":1777},"64":{"loc":{"start":{"line":1824,"column":2},"end":{"line":1829,"column":3}},"type":"if","locations":[{"start":{"line":1824,"column":2},"end":{"line":1829,"column":3}},{"start":{"line":1824,"column":2},"end":{"line":1829,"column":3}}],"line":1824},"65":{"loc":{"start":{"line":1831,"column":2},"end":{"line":1836,"column":3}},"type":"if","locations":[{"start":{"line":1831,"column":2},"end":{"line":1836,"column":3}},{"start":{"line":1831,"column":2},"end":{"line":1836,"column":3}}],"line":1831},"66":{"loc":{"start":{"line":1838,"column":2},"end":{"line":1843,"column":3}},"type":"if","locations":[{"start":{"line":1838,"column":2},"end":{"line":1843,"column":3}},{"start":{"line":1838,"column":2},"end":{"line":1843,"column":3}}],"line":1838},"67":{"loc":{"start":{"line":1845,"column":2},"end":{"line":1850,"column":3}},"type":"if","locations":[{"start":{"line":1845,"column":2},"end":{"line":1850,"column":3}},{"start":{"line":1845,"column":2},"end":{"line":1850,"column":3}}],"line":1845},"68":{"loc":{"start":{"line":2001,"column":0},"end":{"line":2003,"column":1}},"type":"if","locations":[{"start":{"line":2001,"column":0},"end":{"line":2003,"column":1}},{"start":{"line":2001,"column":0},"end":{"line":2003,"column":1}}],"line":2001},"69":{"loc":{"start":{"line":2001,"column":4},"end":{"line":2001,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2001,"column":4},"end":{"line":2001,"column":14}},{"start":{"line":2001,"column":18},"end":{"line":2001,"column":27}}],"line":2001},"70":{"loc":{"start":{"line":2006,"column":0},"end":{"line":2041,"column":1}},"type":"if","locations":[{"start":{"line":2006,"column":0},"end":{"line":2041,"column":1}},{"start":{"line":2006,"column":0},"end":{"line":2041,"column":1}}],"line":2006},"71":{"loc":{"start":{"line":2036,"column":4},"end":{"line":2038,"column":5}},"type":"if","locations":[{"start":{"line":2036,"column":4},"end":{"line":2038,"column":5}},{"start":{"line":2036,"column":4},"end":{"line":2038,"column":5}}],"line":2036},"72":{"loc":{"start":{"line":2065,"column":4},"end":{"line":2067,"column":5}},"type":"if","locations":[{"start":{"line":2065,"column":4},"end":{"line":2067,"column":5}},{"start":{"line":2065,"column":4},"end":{"line":2067,"column":5}}],"line":2065},"73":{"loc":{"start":{"line":2069,"column":4},"end":{"line":2072,"column":15}},"type":"switch","locations":[{"start":{"line":2070,"column":6},"end":{"line":2072,"column":14}}],"line":2069},"74":{"loc":{"start":{"line":2117,"column":0},"end":{"line":2119,"column":1}},"type":"if","locations":[{"start":{"line":2117,"column":0},"end":{"line":2119,"column":1}},{"start":{"line":2117,"column":0},"end":{"line":2119,"column":1}}],"line":2117},"75":{"loc":{"start":{"line":2117,"column":4},"end":{"line":2117,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2117,"column":4},"end":{"line":2117,"column":14}},{"start":{"line":2117,"column":18},"end":{"line":2117,"column":27}}],"line":2117},"76":{"loc":{"start":{"line":2122,"column":0},"end":{"line":2157,"column":1}},"type":"if","locations":[{"start":{"line":2122,"column":0},"end":{"line":2157,"column":1}},{"start":{"line":2122,"column":0},"end":{"line":2157,"column":1}}],"line":2122},"77":{"loc":{"start":{"line":2152,"column":4},"end":{"line":2154,"column":5}},"type":"if","locations":[{"start":{"line":2152,"column":4},"end":{"line":2154,"column":5}},{"start":{"line":2152,"column":4},"end":{"line":2154,"column":5}}],"line":2152},"78":{"loc":{"start":{"line":2181,"column":4},"end":{"line":2183,"column":5}},"type":"if","locations":[{"start":{"line":2181,"column":4},"end":{"line":2183,"column":5}},{"start":{"line":2181,"column":4},"end":{"line":2183,"column":5}}],"line":2181},"79":{"loc":{"start":{"line":2185,"column":4},"end":{"line":2192,"column":15}},"type":"switch","locations":[{"start":{"line":2186,"column":6},"end":{"line":2189,"column":14}},{"start":{"line":2190,"column":6},"end":{"line":2192,"column":14}}],"line":2185},"80":{"loc":{"start":{"line":2220,"column":2},"end":{"line":2225,"column":3}},"type":"if","locations":[{"start":{"line":2220,"column":2},"end":{"line":2225,"column":3}},{"start":{"line":2220,"column":2},"end":{"line":2225,"column":3}}],"line":2220},"81":{"loc":{"start":{"line":2283,"column":0},"end":{"line":2285,"column":1}},"type":"if","locations":[{"start":{"line":2283,"column":0},"end":{"line":2285,"column":1}},{"start":{"line":2283,"column":0},"end":{"line":2285,"column":1}}],"line":2283},"82":{"loc":{"start":{"line":2283,"column":4},"end":{"line":2283,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2283,"column":4},"end":{"line":2283,"column":14}},{"start":{"line":2283,"column":18},"end":{"line":2283,"column":27}}],"line":2283},"83":{"loc":{"start":{"line":2288,"column":0},"end":{"line":2323,"column":1}},"type":"if","locations":[{"start":{"line":2288,"column":0},"end":{"line":2323,"column":1}},{"start":{"line":2288,"column":0},"end":{"line":2323,"column":1}}],"line":2288},"84":{"loc":{"start":{"line":2318,"column":4},"end":{"line":2320,"column":5}},"type":"if","locations":[{"start":{"line":2318,"column":4},"end":{"line":2320,"column":5}},{"start":{"line":2318,"column":4},"end":{"line":2320,"column":5}}],"line":2318},"85":{"loc":{"start":{"line":2347,"column":4},"end":{"line":2349,"column":5}},"type":"if","locations":[{"start":{"line":2347,"column":4},"end":{"line":2349,"column":5}},{"start":{"line":2347,"column":4},"end":{"line":2349,"column":5}}],"line":2347},"86":{"loc":{"start":{"line":2351,"column":4},"end":{"line":2358,"column":15}},"type":"switch","locations":[{"start":{"line":2352,"column":6},"end":{"line":2355,"column":14}},{"start":{"line":2356,"column":6},"end":{"line":2358,"column":14}}],"line":2351},"87":{"loc":{"start":{"line":2386,"column":2},"end":{"line":2391,"column":3}},"type":"if","locations":[{"start":{"line":2386,"column":2},"end":{"line":2391,"column":3}},{"start":{"line":2386,"column":2},"end":{"line":2391,"column":3}}],"line":2386},"88":{"loc":{"start":{"line":2425,"column":0},"end":{"line":2427,"column":1}},"type":"if","locations":[{"start":{"line":2425,"column":0},"end":{"line":2427,"column":1}},{"start":{"line":2425,"column":0},"end":{"line":2427,"column":1}}],"line":2425},"89":{"loc":{"start":{"line":2425,"column":4},"end":{"line":2425,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2425,"column":4},"end":{"line":2425,"column":14}},{"start":{"line":2425,"column":18},"end":{"line":2425,"column":27}}],"line":2425},"90":{"loc":{"start":{"line":2430,"column":0},"end":{"line":2465,"column":1}},"type":"if","locations":[{"start":{"line":2430,"column":0},"end":{"line":2465,"column":1}},{"start":{"line":2430,"column":0},"end":{"line":2465,"column":1}}],"line":2430},"91":{"loc":{"start":{"line":2460,"column":4},"end":{"line":2462,"column":5}},"type":"if","locations":[{"start":{"line":2460,"column":4},"end":{"line":2462,"column":5}},{"start":{"line":2460,"column":4},"end":{"line":2462,"column":5}}],"line":2460},"92":{"loc":{"start":{"line":2489,"column":4},"end":{"line":2491,"column":5}},"type":"if","locations":[{"start":{"line":2489,"column":4},"end":{"line":2491,"column":5}},{"start":{"line":2489,"column":4},"end":{"line":2491,"column":5}}],"line":2489},"93":{"loc":{"start":{"line":2493,"column":4},"end":{"line":2500,"column":15}},"type":"switch","locations":[{"start":{"line":2494,"column":6},"end":{"line":2497,"column":14}},{"start":{"line":2498,"column":6},"end":{"line":2500,"column":14}}],"line":2493},"94":{"loc":{"start":{"line":2528,"column":2},"end":{"line":2533,"column":3}},"type":"if","locations":[{"start":{"line":2528,"column":2},"end":{"line":2533,"column":3}},{"start":{"line":2528,"column":2},"end":{"line":2533,"column":3}}],"line":2528},"95":{"loc":{"start":{"line":2591,"column":0},"end":{"line":2593,"column":1}},"type":"if","locations":[{"start":{"line":2591,"column":0},"end":{"line":2593,"column":1}},{"start":{"line":2591,"column":0},"end":{"line":2593,"column":1}}],"line":2591},"96":{"loc":{"start":{"line":2591,"column":4},"end":{"line":2591,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2591,"column":4},"end":{"line":2591,"column":14}},{"start":{"line":2591,"column":18},"end":{"line":2591,"column":27}}],"line":2591},"97":{"loc":{"start":{"line":2596,"column":0},"end":{"line":2633,"column":1}},"type":"if","locations":[{"start":{"line":2596,"column":0},"end":{"line":2633,"column":1}},{"start":{"line":2596,"column":0},"end":{"line":2633,"column":1}}],"line":2596},"98":{"loc":{"start":{"line":2628,"column":4},"end":{"line":2630,"column":5}},"type":"if","locations":[{"start":{"line":2628,"column":4},"end":{"line":2630,"column":5}},{"start":{"line":2628,"column":4},"end":{"line":2630,"column":5}}],"line":2628},"99":{"loc":{"start":{"line":2657,"column":4},"end":{"line":2659,"column":5}},"type":"if","locations":[{"start":{"line":2657,"column":4},"end":{"line":2659,"column":5}},{"start":{"line":2657,"column":4},"end":{"line":2659,"column":5}}],"line":2657},"100":{"loc":{"start":{"line":2661,"column":4},"end":{"line":2676,"column":15}},"type":"switch","locations":[{"start":{"line":2662,"column":6},"end":{"line":2665,"column":14}},{"start":{"line":2666,"column":6},"end":{"line":2669,"column":14}},{"start":{"line":2670,"column":6},"end":{"line":2673,"column":14}},{"start":{"line":2674,"column":6},"end":{"line":2676,"column":14}}],"line":2661},"101":{"loc":{"start":{"line":2704,"column":2},"end":{"line":2709,"column":3}},"type":"if","locations":[{"start":{"line":2704,"column":2},"end":{"line":2709,"column":3}},{"start":{"line":2704,"column":2},"end":{"line":2709,"column":3}}],"line":2704},"102":{"loc":{"start":{"line":2711,"column":2},"end":{"line":2716,"column":3}},"type":"if","locations":[{"start":{"line":2711,"column":2},"end":{"line":2716,"column":3}},{"start":{"line":2711,"column":2},"end":{"line":2716,"column":3}}],"line":2711},"103":{"loc":{"start":{"line":2718,"column":2},"end":{"line":2723,"column":3}},"type":"if","locations":[{"start":{"line":2718,"column":2},"end":{"line":2723,"column":3}},{"start":{"line":2718,"column":2},"end":{"line":2723,"column":3}}],"line":2718},"104":{"loc":{"start":{"line":2837,"column":0},"end":{"line":2839,"column":1}},"type":"if","locations":[{"start":{"line":2837,"column":0},"end":{"line":2839,"column":1}},{"start":{"line":2837,"column":0},"end":{"line":2839,"column":1}}],"line":2837},"105":{"loc":{"start":{"line":2837,"column":4},"end":{"line":2837,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2837,"column":4},"end":{"line":2837,"column":14}},{"start":{"line":2837,"column":18},"end":{"line":2837,"column":27}}],"line":2837},"106":{"loc":{"start":{"line":2849,"column":0},"end":{"line":2893,"column":1}},"type":"if","locations":[{"start":{"line":2849,"column":0},"end":{"line":2893,"column":1}},{"start":{"line":2849,"column":0},"end":{"line":2893,"column":1}}],"line":2849},"107":{"loc":{"start":{"line":2876,"column":15},"end":{"line":2876,"column":89}},"type":"binary-expr","locations":[{"start":{"line":2876,"column":16},"end":{"line":2876,"column":36}},{"start":{"line":2876,"column":41},"end":{"line":2876,"column":89}}],"line":2876},"108":{"loc":{"start":{"line":2877,"column":17},"end":{"line":2877,"column":95}},"type":"binary-expr","locations":[{"start":{"line":2877,"column":18},"end":{"line":2877,"column":40}},{"start":{"line":2877,"column":45},"end":{"line":2877,"column":95}}],"line":2877},"109":{"loc":{"start":{"line":2888,"column":4},"end":{"line":2890,"column":5}},"type":"if","locations":[{"start":{"line":2888,"column":4},"end":{"line":2890,"column":5}},{"start":{"line":2888,"column":4},"end":{"line":2890,"column":5}}],"line":2888},"110":{"loc":{"start":{"line":2917,"column":4},"end":{"line":2919,"column":5}},"type":"if","locations":[{"start":{"line":2917,"column":4},"end":{"line":2919,"column":5}},{"start":{"line":2917,"column":4},"end":{"line":2919,"column":5}}],"line":2917},"111":{"loc":{"start":{"line":2921,"column":4},"end":{"line":2963,"column":15}},"type":"switch","locations":[{"start":{"line":2922,"column":6},"end":{"line":2926,"column":14}},{"start":{"line":2927,"column":6},"end":{"line":2931,"column":14}},{"start":{"line":2932,"column":6},"end":{"line":2935,"column":14}},{"start":{"line":2936,"column":6},"end":{"line":2939,"column":14}},{"start":{"line":2940,"column":6},"end":{"line":2943,"column":14}},{"start":{"line":2944,"column":6},"end":{"line":2947,"column":14}},{"start":{"line":2948,"column":6},"end":{"line":2951,"column":14}},{"start":{"line":2952,"column":6},"end":{"line":2956,"column":14}},{"start":{"line":2957,"column":6},"end":{"line":2960,"column":14}},{"start":{"line":2961,"column":6},"end":{"line":2963,"column":14}}],"line":2921},"112":{"loc":{"start":{"line":2991,"column":2},"end":{"line":2997,"column":3}},"type":"if","locations":[{"start":{"line":2991,"column":2},"end":{"line":2997,"column":3}},{"start":{"line":2991,"column":2},"end":{"line":2997,"column":3}}],"line":2991},"113":{"loc":{"start":{"line":2999,"column":2},"end":{"line":3005,"column":3}},"type":"if","locations":[{"start":{"line":2999,"column":2},"end":{"line":3005,"column":3}},{"start":{"line":2999,"column":2},"end":{"line":3005,"column":3}}],"line":2999},"114":{"loc":{"start":{"line":3007,"column":2},"end":{"line":3012,"column":3}},"type":"if","locations":[{"start":{"line":3007,"column":2},"end":{"line":3012,"column":3}},{"start":{"line":3007,"column":2},"end":{"line":3012,"column":3}}],"line":3007},"115":{"loc":{"start":{"line":3014,"column":2},"end":{"line":3019,"column":3}},"type":"if","locations":[{"start":{"line":3014,"column":2},"end":{"line":3019,"column":3}},{"start":{"line":3014,"column":2},"end":{"line":3019,"column":3}}],"line":3014},"116":{"loc":{"start":{"line":3021,"column":2},"end":{"line":3026,"column":3}},"type":"if","locations":[{"start":{"line":3021,"column":2},"end":{"line":3026,"column":3}},{"start":{"line":3021,"column":2},"end":{"line":3026,"column":3}}],"line":3021},"117":{"loc":{"start":{"line":3028,"column":2},"end":{"line":3033,"column":3}},"type":"if","locations":[{"start":{"line":3028,"column":2},"end":{"line":3033,"column":3}},{"start":{"line":3028,"column":2},"end":{"line":3033,"column":3}}],"line":3028},"118":{"loc":{"start":{"line":3035,"column":2},"end":{"line":3040,"column":3}},"type":"if","locations":[{"start":{"line":3035,"column":2},"end":{"line":3040,"column":3}},{"start":{"line":3035,"column":2},"end":{"line":3040,"column":3}}],"line":3035},"119":{"loc":{"start":{"line":3042,"column":2},"end":{"line":3048,"column":3}},"type":"if","locations":[{"start":{"line":3042,"column":2},"end":{"line":3048,"column":3}},{"start":{"line":3042,"column":2},"end":{"line":3048,"column":3}}],"line":3042},"120":{"loc":{"start":{"line":3050,"column":2},"end":{"line":3055,"column":3}},"type":"if","locations":[{"start":{"line":3050,"column":2},"end":{"line":3055,"column":3}},{"start":{"line":3050,"column":2},"end":{"line":3055,"column":3}}],"line":3050},"121":{"loc":{"start":{"line":3259,"column":0},"end":{"line":3261,"column":1}},"type":"if","locations":[{"start":{"line":3259,"column":0},"end":{"line":3261,"column":1}},{"start":{"line":3259,"column":0},"end":{"line":3261,"column":1}}],"line":3259},"122":{"loc":{"start":{"line":3259,"column":4},"end":{"line":3259,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3259,"column":4},"end":{"line":3259,"column":14}},{"start":{"line":3259,"column":18},"end":{"line":3259,"column":27}}],"line":3259},"123":{"loc":{"start":{"line":3271,"column":0},"end":{"line":3307,"column":1}},"type":"if","locations":[{"start":{"line":3271,"column":0},"end":{"line":3307,"column":1}},{"start":{"line":3271,"column":0},"end":{"line":3307,"column":1}}],"line":3271},"124":{"loc":{"start":{"line":3302,"column":4},"end":{"line":3304,"column":5}},"type":"if","locations":[{"start":{"line":3302,"column":4},"end":{"line":3304,"column":5}},{"start":{"line":3302,"column":4},"end":{"line":3304,"column":5}}],"line":3302},"125":{"loc":{"start":{"line":3331,"column":4},"end":{"line":3333,"column":5}},"type":"if","locations":[{"start":{"line":3331,"column":4},"end":{"line":3333,"column":5}},{"start":{"line":3331,"column":4},"end":{"line":3333,"column":5}}],"line":3331},"126":{"loc":{"start":{"line":3335,"column":4},"end":{"line":3343,"column":15}},"type":"switch","locations":[{"start":{"line":3336,"column":6},"end":{"line":3340,"column":14}},{"start":{"line":3341,"column":6},"end":{"line":3343,"column":14}}],"line":3335},"127":{"loc":{"start":{"line":3371,"column":2},"end":{"line":3377,"column":3}},"type":"if","locations":[{"start":{"line":3371,"column":2},"end":{"line":3377,"column":3}},{"start":{"line":3371,"column":2},"end":{"line":3377,"column":3}}],"line":3371},"128":{"loc":{"start":{"line":3427,"column":0},"end":{"line":3429,"column":1}},"type":"if","locations":[{"start":{"line":3427,"column":0},"end":{"line":3429,"column":1}},{"start":{"line":3427,"column":0},"end":{"line":3429,"column":1}}],"line":3427},"129":{"loc":{"start":{"line":3427,"column":4},"end":{"line":3427,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3427,"column":4},"end":{"line":3427,"column":14}},{"start":{"line":3427,"column":18},"end":{"line":3427,"column":27}}],"line":3427},"130":{"loc":{"start":{"line":3432,"column":0},"end":{"line":3471,"column":1}},"type":"if","locations":[{"start":{"line":3432,"column":0},"end":{"line":3471,"column":1}},{"start":{"line":3432,"column":0},"end":{"line":3471,"column":1}}],"line":3432},"131":{"loc":{"start":{"line":3466,"column":4},"end":{"line":3468,"column":5}},"type":"if","locations":[{"start":{"line":3466,"column":4},"end":{"line":3468,"column":5}},{"start":{"line":3466,"column":4},"end":{"line":3468,"column":5}}],"line":3466},"132":{"loc":{"start":{"line":3495,"column":4},"end":{"line":3497,"column":5}},"type":"if","locations":[{"start":{"line":3495,"column":4},"end":{"line":3497,"column":5}},{"start":{"line":3495,"column":4},"end":{"line":3497,"column":5}}],"line":3495},"133":{"loc":{"start":{"line":3499,"column":4},"end":{"line":3522,"column":15}},"type":"switch","locations":[{"start":{"line":3500,"column":6},"end":{"line":3503,"column":14}},{"start":{"line":3504,"column":6},"end":{"line":3507,"column":14}},{"start":{"line":3508,"column":6},"end":{"line":3511,"column":14}},{"start":{"line":3512,"column":6},"end":{"line":3515,"column":14}},{"start":{"line":3516,"column":6},"end":{"line":3519,"column":14}},{"start":{"line":3520,"column":6},"end":{"line":3522,"column":14}}],"line":3499},"134":{"loc":{"start":{"line":3550,"column":2},"end":{"line":3555,"column":3}},"type":"if","locations":[{"start":{"line":3550,"column":2},"end":{"line":3555,"column":3}},{"start":{"line":3550,"column":2},"end":{"line":3555,"column":3}}],"line":3550},"135":{"loc":{"start":{"line":3557,"column":2},"end":{"line":3562,"column":3}},"type":"if","locations":[{"start":{"line":3557,"column":2},"end":{"line":3562,"column":3}},{"start":{"line":3557,"column":2},"end":{"line":3562,"column":3}}],"line":3557},"136":{"loc":{"start":{"line":3564,"column":2},"end":{"line":3569,"column":3}},"type":"if","locations":[{"start":{"line":3564,"column":2},"end":{"line":3569,"column":3}},{"start":{"line":3564,"column":2},"end":{"line":3569,"column":3}}],"line":3564},"137":{"loc":{"start":{"line":3571,"column":2},"end":{"line":3576,"column":3}},"type":"if","locations":[{"start":{"line":3571,"column":2},"end":{"line":3576,"column":3}},{"start":{"line":3571,"column":2},"end":{"line":3576,"column":3}}],"line":3571},"138":{"loc":{"start":{"line":3578,"column":2},"end":{"line":3583,"column":3}},"type":"if","locations":[{"start":{"line":3578,"column":2},"end":{"line":3583,"column":3}},{"start":{"line":3578,"column":2},"end":{"line":3583,"column":3}}],"line":3578},"139":{"loc":{"start":{"line":3703,"column":0},"end":{"line":3705,"column":1}},"type":"if","locations":[{"start":{"line":3703,"column":0},"end":{"line":3705,"column":1}},{"start":{"line":3703,"column":0},"end":{"line":3705,"column":1}}],"line":3703},"140":{"loc":{"start":{"line":3703,"column":4},"end":{"line":3703,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3703,"column":4},"end":{"line":3703,"column":14}},{"start":{"line":3703,"column":18},"end":{"line":3703,"column":27}}],"line":3703},"141":{"loc":{"start":{"line":3708,"column":0},"end":{"line":3744,"column":1}},"type":"if","locations":[{"start":{"line":3708,"column":0},"end":{"line":3744,"column":1}},{"start":{"line":3708,"column":0},"end":{"line":3744,"column":1}}],"line":3708},"142":{"loc":{"start":{"line":3739,"column":4},"end":{"line":3741,"column":5}},"type":"if","locations":[{"start":{"line":3739,"column":4},"end":{"line":3741,"column":5}},{"start":{"line":3739,"column":4},"end":{"line":3741,"column":5}}],"line":3739},"143":{"loc":{"start":{"line":3768,"column":4},"end":{"line":3770,"column":5}},"type":"if","locations":[{"start":{"line":3768,"column":4},"end":{"line":3770,"column":5}},{"start":{"line":3768,"column":4},"end":{"line":3770,"column":5}}],"line":3768},"144":{"loc":{"start":{"line":3772,"column":4},"end":{"line":3783,"column":15}},"type":"switch","locations":[{"start":{"line":3773,"column":6},"end":{"line":3776,"column":14}},{"start":{"line":3777,"column":6},"end":{"line":3780,"column":14}},{"start":{"line":3781,"column":6},"end":{"line":3783,"column":14}}],"line":3772},"145":{"loc":{"start":{"line":3811,"column":2},"end":{"line":3816,"column":3}},"type":"if","locations":[{"start":{"line":3811,"column":2},"end":{"line":3816,"column":3}},{"start":{"line":3811,"column":2},"end":{"line":3816,"column":3}}],"line":3811},"146":{"loc":{"start":{"line":3818,"column":2},"end":{"line":3823,"column":3}},"type":"if","locations":[{"start":{"line":3818,"column":2},"end":{"line":3823,"column":3}},{"start":{"line":3818,"column":2},"end":{"line":3823,"column":3}}],"line":3818},"147":{"loc":{"start":{"line":3872,"column":0},"end":{"line":3874,"column":1}},"type":"if","locations":[{"start":{"line":3872,"column":0},"end":{"line":3874,"column":1}},{"start":{"line":3872,"column":0},"end":{"line":3874,"column":1}}],"line":3872},"148":{"loc":{"start":{"line":3872,"column":4},"end":{"line":3872,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3872,"column":4},"end":{"line":3872,"column":14}},{"start":{"line":3872,"column":18},"end":{"line":3872,"column":27}}],"line":3872},"149":{"loc":{"start":{"line":3877,"column":0},"end":{"line":3915,"column":1}},"type":"if","locations":[{"start":{"line":3877,"column":0},"end":{"line":3915,"column":1}},{"start":{"line":3877,"column":0},"end":{"line":3915,"column":1}}],"line":3877},"150":{"loc":{"start":{"line":3907,"column":12},"end":{"line":3907,"column":87}},"type":"binary-expr","locations":[{"start":{"line":3907,"column":13},"end":{"line":3907,"column":30}},{"start":{"line":3907,"column":35},"end":{"line":3907,"column":87}}],"line":3907},"151":{"loc":{"start":{"line":3910,"column":4},"end":{"line":3912,"column":5}},"type":"if","locations":[{"start":{"line":3910,"column":4},"end":{"line":3912,"column":5}},{"start":{"line":3910,"column":4},"end":{"line":3912,"column":5}}],"line":3910},"152":{"loc":{"start":{"line":3939,"column":4},"end":{"line":3941,"column":5}},"type":"if","locations":[{"start":{"line":3939,"column":4},"end":{"line":3941,"column":5}},{"start":{"line":3939,"column":4},"end":{"line":3941,"column":5}}],"line":3939},"153":{"loc":{"start":{"line":3943,"column":4},"end":{"line":3963,"column":15}},"type":"switch","locations":[{"start":{"line":3944,"column":6},"end":{"line":3947,"column":14}},{"start":{"line":3948,"column":6},"end":{"line":3951,"column":14}},{"start":{"line":3952,"column":6},"end":{"line":3955,"column":14}},{"start":{"line":3956,"column":6},"end":{"line":3960,"column":14}},{"start":{"line":3961,"column":6},"end":{"line":3963,"column":14}}],"line":3943},"154":{"loc":{"start":{"line":3991,"column":2},"end":{"line":3996,"column":3}},"type":"if","locations":[{"start":{"line":3991,"column":2},"end":{"line":3996,"column":3}},{"start":{"line":3991,"column":2},"end":{"line":3996,"column":3}}],"line":3991},"155":{"loc":{"start":{"line":3998,"column":2},"end":{"line":4003,"column":3}},"type":"if","locations":[{"start":{"line":3998,"column":2},"end":{"line":4003,"column":3}},{"start":{"line":3998,"column":2},"end":{"line":4003,"column":3}}],"line":3998},"156":{"loc":{"start":{"line":4005,"column":2},"end":{"line":4010,"column":3}},"type":"if","locations":[{"start":{"line":4005,"column":2},"end":{"line":4010,"column":3}},{"start":{"line":4005,"column":2},"end":{"line":4010,"column":3}}],"line":4005},"157":{"loc":{"start":{"line":4012,"column":2},"end":{"line":4018,"column":3}},"type":"if","locations":[{"start":{"line":4012,"column":2},"end":{"line":4018,"column":3}},{"start":{"line":4012,"column":2},"end":{"line":4018,"column":3}}],"line":4012},"158":{"loc":{"start":{"line":4112,"column":0},"end":{"line":4114,"column":1}},"type":"if","locations":[{"start":{"line":4112,"column":0},"end":{"line":4114,"column":1}},{"start":{"line":4112,"column":0},"end":{"line":4114,"column":1}}],"line":4112},"159":{"loc":{"start":{"line":4112,"column":4},"end":{"line":4112,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4112,"column":4},"end":{"line":4112,"column":14}},{"start":{"line":4112,"column":18},"end":{"line":4112,"column":27}}],"line":4112},"160":{"loc":{"start":{"line":4117,"column":0},"end":{"line":4153,"column":1}},"type":"if","locations":[{"start":{"line":4117,"column":0},"end":{"line":4153,"column":1}},{"start":{"line":4117,"column":0},"end":{"line":4153,"column":1}}],"line":4117},"161":{"loc":{"start":{"line":4145,"column":14},"end":{"line":4145,"column":90}},"type":"binary-expr","locations":[{"start":{"line":4145,"column":15},"end":{"line":4145,"column":34}},{"start":{"line":4145,"column":39},"end":{"line":4145,"column":90}}],"line":4145},"162":{"loc":{"start":{"line":4148,"column":4},"end":{"line":4150,"column":5}},"type":"if","locations":[{"start":{"line":4148,"column":4},"end":{"line":4150,"column":5}},{"start":{"line":4148,"column":4},"end":{"line":4150,"column":5}}],"line":4148},"163":{"loc":{"start":{"line":4177,"column":4},"end":{"line":4179,"column":5}},"type":"if","locations":[{"start":{"line":4177,"column":4},"end":{"line":4179,"column":5}},{"start":{"line":4177,"column":4},"end":{"line":4179,"column":5}}],"line":4177},"164":{"loc":{"start":{"line":4181,"column":4},"end":{"line":4193,"column":15}},"type":"switch","locations":[{"start":{"line":4182,"column":6},"end":{"line":4185,"column":14}},{"start":{"line":4186,"column":6},"end":{"line":4190,"column":14}},{"start":{"line":4191,"column":6},"end":{"line":4193,"column":14}}],"line":4181},"165":{"loc":{"start":{"line":4221,"column":2},"end":{"line":4226,"column":3}},"type":"if","locations":[{"start":{"line":4221,"column":2},"end":{"line":4226,"column":3}},{"start":{"line":4221,"column":2},"end":{"line":4226,"column":3}}],"line":4221},"166":{"loc":{"start":{"line":4228,"column":2},"end":{"line":4234,"column":3}},"type":"if","locations":[{"start":{"line":4228,"column":2},"end":{"line":4234,"column":3}},{"start":{"line":4228,"column":2},"end":{"line":4234,"column":3}}],"line":4228},"167":{"loc":{"start":{"line":4322,"column":0},"end":{"line":4324,"column":1}},"type":"if","locations":[{"start":{"line":4322,"column":0},"end":{"line":4324,"column":1}},{"start":{"line":4322,"column":0},"end":{"line":4324,"column":1}}],"line":4322},"168":{"loc":{"start":{"line":4322,"column":4},"end":{"line":4322,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4322,"column":4},"end":{"line":4322,"column":14}},{"start":{"line":4322,"column":18},"end":{"line":4322,"column":27}}],"line":4322},"169":{"loc":{"start":{"line":4334,"column":0},"end":{"line":4370,"column":1}},"type":"if","locations":[{"start":{"line":4334,"column":0},"end":{"line":4370,"column":1}},{"start":{"line":4334,"column":0},"end":{"line":4370,"column":1}}],"line":4334},"170":{"loc":{"start":{"line":4365,"column":4},"end":{"line":4367,"column":5}},"type":"if","locations":[{"start":{"line":4365,"column":4},"end":{"line":4367,"column":5}},{"start":{"line":4365,"column":4},"end":{"line":4367,"column":5}}],"line":4365},"171":{"loc":{"start":{"line":4394,"column":4},"end":{"line":4396,"column":5}},"type":"if","locations":[{"start":{"line":4394,"column":4},"end":{"line":4396,"column":5}},{"start":{"line":4394,"column":4},"end":{"line":4396,"column":5}}],"line":4394},"172":{"loc":{"start":{"line":4398,"column":4},"end":{"line":4406,"column":15}},"type":"switch","locations":[{"start":{"line":4399,"column":6},"end":{"line":4403,"column":14}},{"start":{"line":4404,"column":6},"end":{"line":4406,"column":14}}],"line":4398},"173":{"loc":{"start":{"line":4434,"column":2},"end":{"line":4440,"column":3}},"type":"if","locations":[{"start":{"line":4434,"column":2},"end":{"line":4440,"column":3}},{"start":{"line":4434,"column":2},"end":{"line":4440,"column":3}}],"line":4434},"174":{"loc":{"start":{"line":4490,"column":0},"end":{"line":4492,"column":1}},"type":"if","locations":[{"start":{"line":4490,"column":0},"end":{"line":4492,"column":1}},{"start":{"line":4490,"column":0},"end":{"line":4492,"column":1}}],"line":4490},"175":{"loc":{"start":{"line":4490,"column":4},"end":{"line":4490,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4490,"column":4},"end":{"line":4490,"column":14}},{"start":{"line":4490,"column":18},"end":{"line":4490,"column":27}}],"line":4490},"176":{"loc":{"start":{"line":4495,"column":0},"end":{"line":4533,"column":1}},"type":"if","locations":[{"start":{"line":4495,"column":0},"end":{"line":4533,"column":1}},{"start":{"line":4495,"column":0},"end":{"line":4533,"column":1}}],"line":4495},"177":{"loc":{"start":{"line":4523,"column":14},"end":{"line":4523,"column":93}},"type":"binary-expr","locations":[{"start":{"line":4523,"column":15},"end":{"line":4523,"column":34}},{"start":{"line":4523,"column":39},"end":{"line":4523,"column":93}}],"line":4523},"178":{"loc":{"start":{"line":4528,"column":4},"end":{"line":4530,"column":5}},"type":"if","locations":[{"start":{"line":4528,"column":4},"end":{"line":4530,"column":5}},{"start":{"line":4528,"column":4},"end":{"line":4530,"column":5}}],"line":4528},"179":{"loc":{"start":{"line":4557,"column":4},"end":{"line":4559,"column":5}},"type":"if","locations":[{"start":{"line":4557,"column":4},"end":{"line":4559,"column":5}},{"start":{"line":4557,"column":4},"end":{"line":4559,"column":5}}],"line":4557},"180":{"loc":{"start":{"line":4561,"column":4},"end":{"line":4581,"column":15}},"type":"switch","locations":[{"start":{"line":4562,"column":6},"end":{"line":4565,"column":14}},{"start":{"line":4566,"column":6},"end":{"line":4570,"column":14}},{"start":{"line":4571,"column":6},"end":{"line":4574,"column":14}},{"start":{"line":4575,"column":6},"end":{"line":4578,"column":14}},{"start":{"line":4579,"column":6},"end":{"line":4581,"column":14}}],"line":4561},"181":{"loc":{"start":{"line":4609,"column":2},"end":{"line":4614,"column":3}},"type":"if","locations":[{"start":{"line":4609,"column":2},"end":{"line":4614,"column":3}},{"start":{"line":4609,"column":2},"end":{"line":4614,"column":3}}],"line":4609},"182":{"loc":{"start":{"line":4616,"column":2},"end":{"line":4622,"column":3}},"type":"if","locations":[{"start":{"line":4616,"column":2},"end":{"line":4622,"column":3}},{"start":{"line":4616,"column":2},"end":{"line":4622,"column":3}}],"line":4616},"183":{"loc":{"start":{"line":4624,"column":2},"end":{"line":4629,"column":3}},"type":"if","locations":[{"start":{"line":4624,"column":2},"end":{"line":4629,"column":3}},{"start":{"line":4624,"column":2},"end":{"line":4629,"column":3}}],"line":4624},"184":{"loc":{"start":{"line":4631,"column":2},"end":{"line":4636,"column":3}},"type":"if","locations":[{"start":{"line":4631,"column":2},"end":{"line":4636,"column":3}},{"start":{"line":4631,"column":2},"end":{"line":4636,"column":3}}],"line":4631},"185":{"loc":{"start":{"line":4754,"column":0},"end":{"line":4756,"column":1}},"type":"if","locations":[{"start":{"line":4754,"column":0},"end":{"line":4756,"column":1}},{"start":{"line":4754,"column":0},"end":{"line":4756,"column":1}}],"line":4754},"186":{"loc":{"start":{"line":4754,"column":4},"end":{"line":4754,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4754,"column":4},"end":{"line":4754,"column":14}},{"start":{"line":4754,"column":18},"end":{"line":4754,"column":27}}],"line":4754},"187":{"loc":{"start":{"line":4766,"column":0},"end":{"line":4802,"column":1}},"type":"if","locations":[{"start":{"line":4766,"column":0},"end":{"line":4802,"column":1}},{"start":{"line":4766,"column":0},"end":{"line":4802,"column":1}}],"line":4766},"188":{"loc":{"start":{"line":4797,"column":4},"end":{"line":4799,"column":5}},"type":"if","locations":[{"start":{"line":4797,"column":4},"end":{"line":4799,"column":5}},{"start":{"line":4797,"column":4},"end":{"line":4799,"column":5}}],"line":4797},"189":{"loc":{"start":{"line":4826,"column":4},"end":{"line":4828,"column":5}},"type":"if","locations":[{"start":{"line":4826,"column":4},"end":{"line":4828,"column":5}},{"start":{"line":4826,"column":4},"end":{"line":4828,"column":5}}],"line":4826},"190":{"loc":{"start":{"line":4830,"column":4},"end":{"line":4838,"column":15}},"type":"switch","locations":[{"start":{"line":4831,"column":6},"end":{"line":4835,"column":14}},{"start":{"line":4836,"column":6},"end":{"line":4838,"column":14}}],"line":4830},"191":{"loc":{"start":{"line":4866,"column":2},"end":{"line":4872,"column":3}},"type":"if","locations":[{"start":{"line":4866,"column":2},"end":{"line":4872,"column":3}},{"start":{"line":4866,"column":2},"end":{"line":4872,"column":3}}],"line":4866},"192":{"loc":{"start":{"line":4922,"column":0},"end":{"line":4924,"column":1}},"type":"if","locations":[{"start":{"line":4922,"column":0},"end":{"line":4924,"column":1}},{"start":{"line":4922,"column":0},"end":{"line":4924,"column":1}}],"line":4922},"193":{"loc":{"start":{"line":4922,"column":4},"end":{"line":4922,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4922,"column":4},"end":{"line":4922,"column":14}},{"start":{"line":4922,"column":18},"end":{"line":4922,"column":27}}],"line":4922},"194":{"loc":{"start":{"line":4927,"column":0},"end":{"line":4964,"column":1}},"type":"if","locations":[{"start":{"line":4927,"column":0},"end":{"line":4964,"column":1}},{"start":{"line":4927,"column":0},"end":{"line":4964,"column":1}}],"line":4927},"195":{"loc":{"start":{"line":4959,"column":4},"end":{"line":4961,"column":5}},"type":"if","locations":[{"start":{"line":4959,"column":4},"end":{"line":4961,"column":5}},{"start":{"line":4959,"column":4},"end":{"line":4961,"column":5}}],"line":4959},"196":{"loc":{"start":{"line":4988,"column":4},"end":{"line":4990,"column":5}},"type":"if","locations":[{"start":{"line":4988,"column":4},"end":{"line":4990,"column":5}},{"start":{"line":4988,"column":4},"end":{"line":4990,"column":5}}],"line":4988},"197":{"loc":{"start":{"line":4992,"column":4},"end":{"line":5007,"column":15}},"type":"switch","locations":[{"start":{"line":4993,"column":6},"end":{"line":4996,"column":14}},{"start":{"line":4997,"column":6},"end":{"line":5000,"column":14}},{"start":{"line":5001,"column":6},"end":{"line":5004,"column":14}},{"start":{"line":5005,"column":6},"end":{"line":5007,"column":14}}],"line":4992},"198":{"loc":{"start":{"line":5035,"column":2},"end":{"line":5040,"column":3}},"type":"if","locations":[{"start":{"line":5035,"column":2},"end":{"line":5040,"column":3}},{"start":{"line":5035,"column":2},"end":{"line":5040,"column":3}}],"line":5035},"199":{"loc":{"start":{"line":5042,"column":2},"end":{"line":5047,"column":3}},"type":"if","locations":[{"start":{"line":5042,"column":2},"end":{"line":5047,"column":3}},{"start":{"line":5042,"column":2},"end":{"line":5047,"column":3}}],"line":5042},"200":{"loc":{"start":{"line":5049,"column":2},"end":{"line":5054,"column":3}},"type":"if","locations":[{"start":{"line":5049,"column":2},"end":{"line":5054,"column":3}},{"start":{"line":5049,"column":2},"end":{"line":5054,"column":3}}],"line":5049},"201":{"loc":{"start":{"line":5142,"column":0},"end":{"line":5144,"column":1}},"type":"if","locations":[{"start":{"line":5142,"column":0},"end":{"line":5144,"column":1}},{"start":{"line":5142,"column":0},"end":{"line":5144,"column":1}}],"line":5142},"202":{"loc":{"start":{"line":5142,"column":4},"end":{"line":5142,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5142,"column":4},"end":{"line":5142,"column":14}},{"start":{"line":5142,"column":18},"end":{"line":5142,"column":27}}],"line":5142},"203":{"loc":{"start":{"line":5154,"column":0},"end":{"line":5190,"column":1}},"type":"if","locations":[{"start":{"line":5154,"column":0},"end":{"line":5190,"column":1}},{"start":{"line":5154,"column":0},"end":{"line":5190,"column":1}}],"line":5154},"204":{"loc":{"start":{"line":5185,"column":4},"end":{"line":5187,"column":5}},"type":"if","locations":[{"start":{"line":5185,"column":4},"end":{"line":5187,"column":5}},{"start":{"line":5185,"column":4},"end":{"line":5187,"column":5}}],"line":5185},"205":{"loc":{"start":{"line":5214,"column":4},"end":{"line":5216,"column":5}},"type":"if","locations":[{"start":{"line":5214,"column":4},"end":{"line":5216,"column":5}},{"start":{"line":5214,"column":4},"end":{"line":5216,"column":5}}],"line":5214},"206":{"loc":{"start":{"line":5218,"column":4},"end":{"line":5226,"column":15}},"type":"switch","locations":[{"start":{"line":5219,"column":6},"end":{"line":5223,"column":14}},{"start":{"line":5224,"column":6},"end":{"line":5226,"column":14}}],"line":5218},"207":{"loc":{"start":{"line":5254,"column":2},"end":{"line":5260,"column":3}},"type":"if","locations":[{"start":{"line":5254,"column":2},"end":{"line":5260,"column":3}},{"start":{"line":5254,"column":2},"end":{"line":5260,"column":3}}],"line":5254},"208":{"loc":{"start":{"line":5310,"column":0},"end":{"line":5312,"column":1}},"type":"if","locations":[{"start":{"line":5310,"column":0},"end":{"line":5312,"column":1}},{"start":{"line":5310,"column":0},"end":{"line":5312,"column":1}}],"line":5310},"209":{"loc":{"start":{"line":5310,"column":4},"end":{"line":5310,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5310,"column":4},"end":{"line":5310,"column":14}},{"start":{"line":5310,"column":18},"end":{"line":5310,"column":27}}],"line":5310},"210":{"loc":{"start":{"line":5315,"column":0},"end":{"line":5351,"column":1}},"type":"if","locations":[{"start":{"line":5315,"column":0},"end":{"line":5351,"column":1}},{"start":{"line":5315,"column":0},"end":{"line":5351,"column":1}}],"line":5315},"211":{"loc":{"start":{"line":5342,"column":10},"end":{"line":5342,"column":76}},"type":"binary-expr","locations":[{"start":{"line":5342,"column":11},"end":{"line":5342,"column":26}},{"start":{"line":5342,"column":31},"end":{"line":5342,"column":76}}],"line":5342},"212":{"loc":{"start":{"line":5346,"column":4},"end":{"line":5348,"column":5}},"type":"if","locations":[{"start":{"line":5346,"column":4},"end":{"line":5348,"column":5}},{"start":{"line":5346,"column":4},"end":{"line":5348,"column":5}}],"line":5346},"213":{"loc":{"start":{"line":5375,"column":4},"end":{"line":5377,"column":5}},"type":"if","locations":[{"start":{"line":5375,"column":4},"end":{"line":5377,"column":5}},{"start":{"line":5375,"column":4},"end":{"line":5377,"column":5}}],"line":5375},"214":{"loc":{"start":{"line":5379,"column":4},"end":{"line":5391,"column":15}},"type":"switch","locations":[{"start":{"line":5380,"column":6},"end":{"line":5384,"column":14}},{"start":{"line":5385,"column":6},"end":{"line":5388,"column":14}},{"start":{"line":5389,"column":6},"end":{"line":5391,"column":14}}],"line":5379},"215":{"loc":{"start":{"line":5419,"column":2},"end":{"line":5425,"column":3}},"type":"if","locations":[{"start":{"line":5419,"column":2},"end":{"line":5425,"column":3}},{"start":{"line":5419,"column":2},"end":{"line":5425,"column":3}}],"line":5419},"216":{"loc":{"start":{"line":5427,"column":2},"end":{"line":5432,"column":3}},"type":"if","locations":[{"start":{"line":5427,"column":2},"end":{"line":5432,"column":3}},{"start":{"line":5427,"column":2},"end":{"line":5432,"column":3}}],"line":5427},"217":{"loc":{"start":{"line":5496,"column":0},"end":{"line":5498,"column":1}},"type":"if","locations":[{"start":{"line":5496,"column":0},"end":{"line":5498,"column":1}},{"start":{"line":5496,"column":0},"end":{"line":5498,"column":1}}],"line":5496},"218":{"loc":{"start":{"line":5496,"column":4},"end":{"line":5496,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5496,"column":4},"end":{"line":5496,"column":14}},{"start":{"line":5496,"column":18},"end":{"line":5496,"column":27}}],"line":5496},"219":{"loc":{"start":{"line":5501,"column":0},"end":{"line":5537,"column":1}},"type":"if","locations":[{"start":{"line":5501,"column":0},"end":{"line":5537,"column":1}},{"start":{"line":5501,"column":0},"end":{"line":5537,"column":1}}],"line":5501},"220":{"loc":{"start":{"line":5529,"column":15},"end":{"line":5529,"column":88}},"type":"binary-expr","locations":[{"start":{"line":5529,"column":16},"end":{"line":5529,"column":36}},{"start":{"line":5529,"column":41},"end":{"line":5529,"column":88}}],"line":5529},"221":{"loc":{"start":{"line":5532,"column":4},"end":{"line":5534,"column":5}},"type":"if","locations":[{"start":{"line":5532,"column":4},"end":{"line":5534,"column":5}},{"start":{"line":5532,"column":4},"end":{"line":5534,"column":5}}],"line":5532},"222":{"loc":{"start":{"line":5561,"column":4},"end":{"line":5563,"column":5}},"type":"if","locations":[{"start":{"line":5561,"column":4},"end":{"line":5563,"column":5}},{"start":{"line":5561,"column":4},"end":{"line":5563,"column":5}}],"line":5561},"223":{"loc":{"start":{"line":5565,"column":4},"end":{"line":5577,"column":15}},"type":"switch","locations":[{"start":{"line":5566,"column":6},"end":{"line":5569,"column":14}},{"start":{"line":5570,"column":6},"end":{"line":5574,"column":14}},{"start":{"line":5575,"column":6},"end":{"line":5577,"column":14}}],"line":5565},"224":{"loc":{"start":{"line":5605,"column":2},"end":{"line":5610,"column":3}},"type":"if","locations":[{"start":{"line":5605,"column":2},"end":{"line":5610,"column":3}},{"start":{"line":5605,"column":2},"end":{"line":5610,"column":3}}],"line":5605},"225":{"loc":{"start":{"line":5612,"column":2},"end":{"line":5618,"column":3}},"type":"if","locations":[{"start":{"line":5612,"column":2},"end":{"line":5618,"column":3}},{"start":{"line":5612,"column":2},"end":{"line":5618,"column":3}}],"line":5612},"226":{"loc":{"start":{"line":5682,"column":0},"end":{"line":5684,"column":1}},"type":"if","locations":[{"start":{"line":5682,"column":0},"end":{"line":5684,"column":1}},{"start":{"line":5682,"column":0},"end":{"line":5684,"column":1}}],"line":5682},"227":{"loc":{"start":{"line":5682,"column":4},"end":{"line":5682,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5682,"column":4},"end":{"line":5682,"column":14}},{"start":{"line":5682,"column":18},"end":{"line":5682,"column":27}}],"line":5682},"228":{"loc":{"start":{"line":5687,"column":0},"end":{"line":5724,"column":1}},"type":"if","locations":[{"start":{"line":5687,"column":0},"end":{"line":5724,"column":1}},{"start":{"line":5687,"column":0},"end":{"line":5724,"column":1}}],"line":5687},"229":{"loc":{"start":{"line":5714,"column":11},"end":{"line":5714,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5714,"column":12},"end":{"line":5714,"column":28}},{"start":{"line":5714,"column":33},"end":{"line":5714,"column":85}}],"line":5714},"230":{"loc":{"start":{"line":5719,"column":4},"end":{"line":5721,"column":5}},"type":"if","locations":[{"start":{"line":5719,"column":4},"end":{"line":5721,"column":5}},{"start":{"line":5719,"column":4},"end":{"line":5721,"column":5}}],"line":5719},"231":{"loc":{"start":{"line":5748,"column":4},"end":{"line":5750,"column":5}},"type":"if","locations":[{"start":{"line":5748,"column":4},"end":{"line":5750,"column":5}},{"start":{"line":5748,"column":4},"end":{"line":5750,"column":5}}],"line":5748},"232":{"loc":{"start":{"line":5752,"column":4},"end":{"line":5768,"column":15}},"type":"switch","locations":[{"start":{"line":5753,"column":6},"end":{"line":5757,"column":14}},{"start":{"line":5758,"column":6},"end":{"line":5761,"column":14}},{"start":{"line":5762,"column":6},"end":{"line":5765,"column":14}},{"start":{"line":5766,"column":6},"end":{"line":5768,"column":14}}],"line":5752},"233":{"loc":{"start":{"line":5796,"column":2},"end":{"line":5802,"column":3}},"type":"if","locations":[{"start":{"line":5796,"column":2},"end":{"line":5802,"column":3}},{"start":{"line":5796,"column":2},"end":{"line":5802,"column":3}}],"line":5796},"234":{"loc":{"start":{"line":5804,"column":2},"end":{"line":5809,"column":3}},"type":"if","locations":[{"start":{"line":5804,"column":2},"end":{"line":5809,"column":3}},{"start":{"line":5804,"column":2},"end":{"line":5809,"column":3}}],"line":5804},"235":{"loc":{"start":{"line":5811,"column":2},"end":{"line":5816,"column":3}},"type":"if","locations":[{"start":{"line":5811,"column":2},"end":{"line":5816,"column":3}},{"start":{"line":5811,"column":2},"end":{"line":5816,"column":3}}],"line":5811},"236":{"loc":{"start":{"line":5895,"column":0},"end":{"line":5897,"column":1}},"type":"if","locations":[{"start":{"line":5895,"column":0},"end":{"line":5897,"column":1}},{"start":{"line":5895,"column":0},"end":{"line":5897,"column":1}}],"line":5895},"237":{"loc":{"start":{"line":5895,"column":4},"end":{"line":5895,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5895,"column":4},"end":{"line":5895,"column":14}},{"start":{"line":5895,"column":18},"end":{"line":5895,"column":27}}],"line":5895},"238":{"loc":{"start":{"line":5900,"column":0},"end":{"line":5936,"column":1}},"type":"if","locations":[{"start":{"line":5900,"column":0},"end":{"line":5936,"column":1}},{"start":{"line":5900,"column":0},"end":{"line":5936,"column":1}}],"line":5900},"239":{"loc":{"start":{"line":5931,"column":4},"end":{"line":5933,"column":5}},"type":"if","locations":[{"start":{"line":5931,"column":4},"end":{"line":5933,"column":5}},{"start":{"line":5931,"column":4},"end":{"line":5933,"column":5}}],"line":5931},"240":{"loc":{"start":{"line":5960,"column":4},"end":{"line":5962,"column":5}},"type":"if","locations":[{"start":{"line":5960,"column":4},"end":{"line":5962,"column":5}},{"start":{"line":5960,"column":4},"end":{"line":5962,"column":5}}],"line":5960},"241":{"loc":{"start":{"line":5964,"column":4},"end":{"line":5975,"column":15}},"type":"switch","locations":[{"start":{"line":5965,"column":6},"end":{"line":5968,"column":14}},{"start":{"line":5969,"column":6},"end":{"line":5972,"column":14}},{"start":{"line":5973,"column":6},"end":{"line":5975,"column":14}}],"line":5964},"242":{"loc":{"start":{"line":6003,"column":2},"end":{"line":6008,"column":3}},"type":"if","locations":[{"start":{"line":6003,"column":2},"end":{"line":6008,"column":3}},{"start":{"line":6003,"column":2},"end":{"line":6008,"column":3}}],"line":6003},"243":{"loc":{"start":{"line":6010,"column":2},"end":{"line":6015,"column":3}},"type":"if","locations":[{"start":{"line":6010,"column":2},"end":{"line":6015,"column":3}},{"start":{"line":6010,"column":2},"end":{"line":6015,"column":3}}],"line":6010},"244":{"loc":{"start":{"line":6088,"column":0},"end":{"line":6090,"column":1}},"type":"if","locations":[{"start":{"line":6088,"column":0},"end":{"line":6090,"column":1}},{"start":{"line":6088,"column":0},"end":{"line":6090,"column":1}}],"line":6088},"245":{"loc":{"start":{"line":6088,"column":4},"end":{"line":6088,"column":27}},"type":"binary-expr","locations":[{"start":{"line":6088,"column":4},"end":{"line":6088,"column":14}},{"start":{"line":6088,"column":18},"end":{"line":6088,"column":27}}],"line":6088},"246":{"loc":{"start":{"line":6093,"column":0},"end":{"line":6129,"column":1}},"type":"if","locations":[{"start":{"line":6093,"column":0},"end":{"line":6129,"column":1}},{"start":{"line":6093,"column":0},"end":{"line":6129,"column":1}}],"line":6093},"247":{"loc":{"start":{"line":6124,"column":4},"end":{"line":6126,"column":5}},"type":"if","locations":[{"start":{"line":6124,"column":4},"end":{"line":6126,"column":5}},{"start":{"line":6124,"column":4},"end":{"line":6126,"column":5}}],"line":6124},"248":{"loc":{"start":{"line":6153,"column":4},"end":{"line":6155,"column":5}},"type":"if","locations":[{"start":{"line":6153,"column":4},"end":{"line":6155,"column":5}},{"start":{"line":6153,"column":4},"end":{"line":6155,"column":5}}],"line":6153},"249":{"loc":{"start":{"line":6157,"column":4},"end":{"line":6168,"column":15}},"type":"switch","locations":[{"start":{"line":6158,"column":6},"end":{"line":6161,"column":14}},{"start":{"line":6162,"column":6},"end":{"line":6165,"column":14}},{"start":{"line":6166,"column":6},"end":{"line":6168,"column":14}}],"line":6157},"250":{"loc":{"start":{"line":6196,"column":2},"end":{"line":6201,"column":3}},"type":"if","locations":[{"start":{"line":6196,"column":2},"end":{"line":6201,"column":3}},{"start":{"line":6196,"column":2},"end":{"line":6201,"column":3}}],"line":6196},"251":{"loc":{"start":{"line":6203,"column":2},"end":{"line":6208,"column":3}},"type":"if","locations":[{"start":{"line":6203,"column":2},"end":{"line":6208,"column":3}},{"start":{"line":6203,"column":2},"end":{"line":6208,"column":3}}],"line":6203},"252":{"loc":{"start":{"line":6305,"column":0},"end":{"line":6307,"column":1}},"type":"if","locations":[{"start":{"line":6305,"column":0},"end":{"line":6307,"column":1}},{"start":{"line":6305,"column":0},"end":{"line":6307,"column":1}}],"line":6305},"253":{"loc":{"start":{"line":6305,"column":4},"end":{"line":6305,"column":27}},"type":"binary-expr","locations":[{"start":{"line":6305,"column":4},"end":{"line":6305,"column":14}},{"start":{"line":6305,"column":18},"end":{"line":6305,"column":27}}],"line":6305},"254":{"loc":{"start":{"line":6310,"column":0},"end":{"line":6346,"column":1}},"type":"if","locations":[{"start":{"line":6310,"column":0},"end":{"line":6346,"column":1}},{"start":{"line":6310,"column":0},"end":{"line":6346,"column":1}}],"line":6310},"255":{"loc":{"start":{"line":6341,"column":4},"end":{"line":6343,"column":5}},"type":"if","locations":[{"start":{"line":6341,"column":4},"end":{"line":6343,"column":5}},{"start":{"line":6341,"column":4},"end":{"line":6343,"column":5}}],"line":6341},"256":{"loc":{"start":{"line":6370,"column":4},"end":{"line":6372,"column":5}},"type":"if","locations":[{"start":{"line":6370,"column":4},"end":{"line":6372,"column":5}},{"start":{"line":6370,"column":4},"end":{"line":6372,"column":5}}],"line":6370},"257":{"loc":{"start":{"line":6374,"column":4},"end":{"line":6385,"column":15}},"type":"switch","locations":[{"start":{"line":6375,"column":6},"end":{"line":6378,"column":14}},{"start":{"line":6379,"column":6},"end":{"line":6382,"column":14}},{"start":{"line":6383,"column":6},"end":{"line":6385,"column":14}}],"line":6374},"258":{"loc":{"start":{"line":6413,"column":2},"end":{"line":6418,"column":3}},"type":"if","locations":[{"start":{"line":6413,"column":2},"end":{"line":6418,"column":3}},{"start":{"line":6413,"column":2},"end":{"line":6418,"column":3}}],"line":6413},"259":{"loc":{"start":{"line":6420,"column":2},"end":{"line":6425,"column":3}},"type":"if","locations":[{"start":{"line":6420,"column":2},"end":{"line":6425,"column":3}},{"start":{"line":6420,"column":2},"end":{"line":6425,"column":3}}],"line":6420},"260":{"loc":{"start":{"line":6474,"column":0},"end":{"line":6476,"column":1}},"type":"if","locations":[{"start":{"line":6474,"column":0},"end":{"line":6476,"column":1}},{"start":{"line":6474,"column":0},"end":{"line":6476,"column":1}}],"line":6474},"261":{"loc":{"start":{"line":6474,"column":4},"end":{"line":6474,"column":27}},"type":"binary-expr","locations":[{"start":{"line":6474,"column":4},"end":{"line":6474,"column":14}},{"start":{"line":6474,"column":18},"end":{"line":6474,"column":27}}],"line":6474},"262":{"loc":{"start":{"line":6486,"column":0},"end":{"line":6523,"column":1}},"type":"if","locations":[{"start":{"line":6486,"column":0},"end":{"line":6523,"column":1}},{"start":{"line":6486,"column":0},"end":{"line":6523,"column":1}}],"line":6486},"263":{"loc":{"start":{"line":6513,"column":15},"end":{"line":6513,"column":89}},"type":"binary-expr","locations":[{"start":{"line":6513,"column":16},"end":{"line":6513,"column":36}},{"start":{"line":6513,"column":41},"end":{"line":6513,"column":89}}],"line":6513},"264":{"loc":{"start":{"line":6518,"column":4},"end":{"line":6520,"column":5}},"type":"if","locations":[{"start":{"line":6518,"column":4},"end":{"line":6520,"column":5}},{"start":{"line":6518,"column":4},"end":{"line":6520,"column":5}}],"line":6518},"265":{"loc":{"start":{"line":6547,"column":4},"end":{"line":6549,"column":5}},"type":"if","locations":[{"start":{"line":6547,"column":4},"end":{"line":6549,"column":5}},{"start":{"line":6547,"column":4},"end":{"line":6549,"column":5}}],"line":6547},"266":{"loc":{"start":{"line":6551,"column":4},"end":{"line":6564,"column":15}},"type":"switch","locations":[{"start":{"line":6552,"column":6},"end":{"line":6556,"column":14}},{"start":{"line":6557,"column":6},"end":{"line":6561,"column":14}},{"start":{"line":6562,"column":6},"end":{"line":6564,"column":14}}],"line":6551},"267":{"loc":{"start":{"line":6592,"column":2},"end":{"line":6598,"column":3}},"type":"if","locations":[{"start":{"line":6592,"column":2},"end":{"line":6598,"column":3}},{"start":{"line":6592,"column":2},"end":{"line":6598,"column":3}}],"line":6592},"268":{"loc":{"start":{"line":6600,"column":2},"end":{"line":6606,"column":3}},"type":"if","locations":[{"start":{"line":6600,"column":2},"end":{"line":6606,"column":3}},{"start":{"line":6600,"column":2},"end":{"line":6606,"column":3}}],"line":6600},"269":{"loc":{"start":{"line":6686,"column":0},"end":{"line":6688,"column":1}},"type":"if","locations":[{"start":{"line":6686,"column":0},"end":{"line":6688,"column":1}},{"start":{"line":6686,"column":0},"end":{"line":6688,"column":1}}],"line":6686},"270":{"loc":{"start":{"line":6686,"column":4},"end":{"line":6686,"column":27}},"type":"binary-expr","locations":[{"start":{"line":6686,"column":4},"end":{"line":6686,"column":14}},{"start":{"line":6686,"column":18},"end":{"line":6686,"column":27}}],"line":6686},"271":{"loc":{"start":{"line":6698,"column":0},"end":{"line":6735,"column":1}},"type":"if","locations":[{"start":{"line":6698,"column":0},"end":{"line":6735,"column":1}},{"start":{"line":6698,"column":0},"end":{"line":6735,"column":1}}],"line":6698},"272":{"loc":{"start":{"line":6730,"column":4},"end":{"line":6732,"column":5}},"type":"if","locations":[{"start":{"line":6730,"column":4},"end":{"line":6732,"column":5}},{"start":{"line":6730,"column":4},"end":{"line":6732,"column":5}}],"line":6730},"273":{"loc":{"start":{"line":6759,"column":4},"end":{"line":6761,"column":5}},"type":"if","locations":[{"start":{"line":6759,"column":4},"end":{"line":6761,"column":5}},{"start":{"line":6759,"column":4},"end":{"line":6761,"column":5}}],"line":6759},"274":{"loc":{"start":{"line":6763,"column":4},"end":{"line":6778,"column":15}},"type":"switch","locations":[{"start":{"line":6764,"column":6},"end":{"line":6767,"column":14}},{"start":{"line":6768,"column":6},"end":{"line":6771,"column":14}},{"start":{"line":6772,"column":6},"end":{"line":6775,"column":14}},{"start":{"line":6776,"column":6},"end":{"line":6778,"column":14}}],"line":6763},"275":{"loc":{"start":{"line":6806,"column":2},"end":{"line":6811,"column":3}},"type":"if","locations":[{"start":{"line":6806,"column":2},"end":{"line":6811,"column":3}},{"start":{"line":6806,"column":2},"end":{"line":6811,"column":3}}],"line":6806},"276":{"loc":{"start":{"line":6813,"column":2},"end":{"line":6818,"column":3}},"type":"if","locations":[{"start":{"line":6813,"column":2},"end":{"line":6818,"column":3}},{"start":{"line":6813,"column":2},"end":{"line":6818,"column":3}}],"line":6813},"277":{"loc":{"start":{"line":6820,"column":2},"end":{"line":6825,"column":3}},"type":"if","locations":[{"start":{"line":6820,"column":2},"end":{"line":6825,"column":3}},{"start":{"line":6820,"column":2},"end":{"line":6825,"column":3}}],"line":6820},"278":{"loc":{"start":{"line":6855,"column":33},"end":{"line":6855,"column":44}},"type":"binary-expr","locations":[{"start":{"line":6855,"column":33},"end":{"line":6855,"column":38}},{"start":{"line":6855,"column":42},"end":{"line":6855,"column":44}}],"line":6855},"279":{"loc":{"start":{"line":6903,"column":0},"end":{"line":6905,"column":1}},"type":"if","locations":[{"start":{"line":6903,"column":0},"end":{"line":6905,"column":1}},{"start":{"line":6903,"column":0},"end":{"line":6905,"column":1}}],"line":6903},"280":{"loc":{"start":{"line":6903,"column":4},"end":{"line":6903,"column":27}},"type":"binary-expr","locations":[{"start":{"line":6903,"column":4},"end":{"line":6903,"column":14}},{"start":{"line":6903,"column":18},"end":{"line":6903,"column":27}}],"line":6903},"281":{"loc":{"start":{"line":6915,"column":0},"end":{"line":6952,"column":1}},"type":"if","locations":[{"start":{"line":6915,"column":0},"end":{"line":6952,"column":1}},{"start":{"line":6915,"column":0},"end":{"line":6952,"column":1}}],"line":6915},"282":{"loc":{"start":{"line":6947,"column":4},"end":{"line":6949,"column":5}},"type":"if","locations":[{"start":{"line":6947,"column":4},"end":{"line":6949,"column":5}},{"start":{"line":6947,"column":4},"end":{"line":6949,"column":5}}],"line":6947},"283":{"loc":{"start":{"line":6976,"column":4},"end":{"line":6978,"column":5}},"type":"if","locations":[{"start":{"line":6976,"column":4},"end":{"line":6978,"column":5}},{"start":{"line":6976,"column":4},"end":{"line":6978,"column":5}}],"line":6976},"284":{"loc":{"start":{"line":6980,"column":4},"end":{"line":6992,"column":15}},"type":"switch","locations":[{"start":{"line":6981,"column":6},"end":{"line":6985,"column":14}},{"start":{"line":6986,"column":6},"end":{"line":6989,"column":14}},{"start":{"line":6990,"column":6},"end":{"line":6992,"column":14}}],"line":6980},"285":{"loc":{"start":{"line":7020,"column":2},"end":{"line":7026,"column":3}},"type":"if","locations":[{"start":{"line":7020,"column":2},"end":{"line":7026,"column":3}},{"start":{"line":7020,"column":2},"end":{"line":7026,"column":3}}],"line":7020},"286":{"loc":{"start":{"line":7028,"column":2},"end":{"line":7033,"column":3}},"type":"if","locations":[{"start":{"line":7028,"column":2},"end":{"line":7033,"column":3}},{"start":{"line":7028,"column":2},"end":{"line":7033,"column":3}}],"line":7028},"287":{"loc":{"start":{"line":7098,"column":0},"end":{"line":7100,"column":1}},"type":"if","locations":[{"start":{"line":7098,"column":0},"end":{"line":7100,"column":1}},{"start":{"line":7098,"column":0},"end":{"line":7100,"column":1}}],"line":7098},"288":{"loc":{"start":{"line":7098,"column":4},"end":{"line":7098,"column":27}},"type":"binary-expr","locations":[{"start":{"line":7098,"column":4},"end":{"line":7098,"column":14}},{"start":{"line":7098,"column":18},"end":{"line":7098,"column":27}}],"line":7098},"289":{"loc":{"start":{"line":7103,"column":0},"end":{"line":7139,"column":1}},"type":"if","locations":[{"start":{"line":7103,"column":0},"end":{"line":7139,"column":1}},{"start":{"line":7103,"column":0},"end":{"line":7139,"column":1}}],"line":7103},"290":{"loc":{"start":{"line":7134,"column":4},"end":{"line":7136,"column":5}},"type":"if","locations":[{"start":{"line":7134,"column":4},"end":{"line":7136,"column":5}},{"start":{"line":7134,"column":4},"end":{"line":7136,"column":5}}],"line":7134},"291":{"loc":{"start":{"line":7163,"column":4},"end":{"line":7165,"column":5}},"type":"if","locations":[{"start":{"line":7163,"column":4},"end":{"line":7165,"column":5}},{"start":{"line":7163,"column":4},"end":{"line":7165,"column":5}}],"line":7163},"292":{"loc":{"start":{"line":7167,"column":4},"end":{"line":7178,"column":15}},"type":"switch","locations":[{"start":{"line":7168,"column":6},"end":{"line":7171,"column":14}},{"start":{"line":7172,"column":6},"end":{"line":7175,"column":14}},{"start":{"line":7176,"column":6},"end":{"line":7178,"column":14}}],"line":7167},"293":{"loc":{"start":{"line":7206,"column":2},"end":{"line":7211,"column":3}},"type":"if","locations":[{"start":{"line":7206,"column":2},"end":{"line":7211,"column":3}},{"start":{"line":7206,"column":2},"end":{"line":7211,"column":3}}],"line":7206},"294":{"loc":{"start":{"line":7213,"column":2},"end":{"line":7218,"column":3}},"type":"if","locations":[{"start":{"line":7213,"column":2},"end":{"line":7218,"column":3}},{"start":{"line":7213,"column":2},"end":{"line":7218,"column":3}}],"line":7213},"295":{"loc":{"start":{"line":7315,"column":0},"end":{"line":7317,"column":1}},"type":"if","locations":[{"start":{"line":7315,"column":0},"end":{"line":7317,"column":1}},{"start":{"line":7315,"column":0},"end":{"line":7317,"column":1}}],"line":7315},"296":{"loc":{"start":{"line":7315,"column":4},"end":{"line":7315,"column":27}},"type":"binary-expr","locations":[{"start":{"line":7315,"column":4},"end":{"line":7315,"column":14}},{"start":{"line":7315,"column":18},"end":{"line":7315,"column":27}}],"line":7315},"297":{"loc":{"start":{"line":7320,"column":0},"end":{"line":7356,"column":1}},"type":"if","locations":[{"start":{"line":7320,"column":0},"end":{"line":7356,"column":1}},{"start":{"line":7320,"column":0},"end":{"line":7356,"column":1}}],"line":7320},"298":{"loc":{"start":{"line":7351,"column":4},"end":{"line":7353,"column":5}},"type":"if","locations":[{"start":{"line":7351,"column":4},"end":{"line":7353,"column":5}},{"start":{"line":7351,"column":4},"end":{"line":7353,"column":5}}],"line":7351},"299":{"loc":{"start":{"line":7380,"column":4},"end":{"line":7382,"column":5}},"type":"if","locations":[{"start":{"line":7380,"column":4},"end":{"line":7382,"column":5}},{"start":{"line":7380,"column":4},"end":{"line":7382,"column":5}}],"line":7380},"300":{"loc":{"start":{"line":7384,"column":4},"end":{"line":7395,"column":15}},"type":"switch","locations":[{"start":{"line":7385,"column":6},"end":{"line":7388,"column":14}},{"start":{"line":7389,"column":6},"end":{"line":7392,"column":14}},{"start":{"line":7393,"column":6},"end":{"line":7395,"column":14}}],"line":7384},"301":{"loc":{"start":{"line":7423,"column":2},"end":{"line":7428,"column":3}},"type":"if","locations":[{"start":{"line":7423,"column":2},"end":{"line":7428,"column":3}},{"start":{"line":7423,"column":2},"end":{"line":7428,"column":3}}],"line":7423},"302":{"loc":{"start":{"line":7430,"column":2},"end":{"line":7435,"column":3}},"type":"if","locations":[{"start":{"line":7430,"column":2},"end":{"line":7435,"column":3}},{"start":{"line":7430,"column":2},"end":{"line":7435,"column":3}}],"line":7430},"303":{"loc":{"start":{"line":7484,"column":0},"end":{"line":7486,"column":1}},"type":"if","locations":[{"start":{"line":7484,"column":0},"end":{"line":7486,"column":1}},{"start":{"line":7484,"column":0},"end":{"line":7486,"column":1}}],"line":7484},"304":{"loc":{"start":{"line":7484,"column":4},"end":{"line":7484,"column":27}},"type":"binary-expr","locations":[{"start":{"line":7484,"column":4},"end":{"line":7484,"column":14}},{"start":{"line":7484,"column":18},"end":{"line":7484,"column":27}}],"line":7484},"305":{"loc":{"start":{"line":7489,"column":0},"end":{"line":7526,"column":1}},"type":"if","locations":[{"start":{"line":7489,"column":0},"end":{"line":7526,"column":1}},{"start":{"line":7489,"column":0},"end":{"line":7526,"column":1}}],"line":7489},"306":{"loc":{"start":{"line":7516,"column":12},"end":{"line":7516,"column":80}},"type":"binary-expr","locations":[{"start":{"line":7516,"column":13},"end":{"line":7516,"column":30}},{"start":{"line":7516,"column":35},"end":{"line":7516,"column":80}}],"line":7516},"307":{"loc":{"start":{"line":7521,"column":4},"end":{"line":7523,"column":5}},"type":"if","locations":[{"start":{"line":7521,"column":4},"end":{"line":7523,"column":5}},{"start":{"line":7521,"column":4},"end":{"line":7523,"column":5}}],"line":7521},"308":{"loc":{"start":{"line":7550,"column":4},"end":{"line":7552,"column":5}},"type":"if","locations":[{"start":{"line":7550,"column":4},"end":{"line":7552,"column":5}},{"start":{"line":7550,"column":4},"end":{"line":7552,"column":5}}],"line":7550},"309":{"loc":{"start":{"line":7554,"column":4},"end":{"line":7570,"column":15}},"type":"switch","locations":[{"start":{"line":7555,"column":6},"end":{"line":7559,"column":14}},{"start":{"line":7560,"column":6},"end":{"line":7563,"column":14}},{"start":{"line":7564,"column":6},"end":{"line":7567,"column":14}},{"start":{"line":7568,"column":6},"end":{"line":7570,"column":14}}],"line":7554},"310":{"loc":{"start":{"line":7598,"column":2},"end":{"line":7604,"column":3}},"type":"if","locations":[{"start":{"line":7598,"column":2},"end":{"line":7604,"column":3}},{"start":{"line":7598,"column":2},"end":{"line":7604,"column":3}}],"line":7598},"311":{"loc":{"start":{"line":7606,"column":2},"end":{"line":7611,"column":3}},"type":"if","locations":[{"start":{"line":7606,"column":2},"end":{"line":7611,"column":3}},{"start":{"line":7606,"column":2},"end":{"line":7611,"column":3}}],"line":7606},"312":{"loc":{"start":{"line":7613,"column":2},"end":{"line":7618,"column":3}},"type":"if","locations":[{"start":{"line":7613,"column":2},"end":{"line":7618,"column":3}},{"start":{"line":7613,"column":2},"end":{"line":7618,"column":3}}],"line":7613},"313":{"loc":{"start":{"line":7745,"column":0},"end":{"line":7747,"column":1}},"type":"if","locations":[{"start":{"line":7745,"column":0},"end":{"line":7747,"column":1}},{"start":{"line":7745,"column":0},"end":{"line":7747,"column":1}}],"line":7745},"314":{"loc":{"start":{"line":7745,"column":4},"end":{"line":7745,"column":27}},"type":"binary-expr","locations":[{"start":{"line":7745,"column":4},"end":{"line":7745,"column":14}},{"start":{"line":7745,"column":18},"end":{"line":7745,"column":27}}],"line":7745},"315":{"loc":{"start":{"line":7750,"column":0},"end":{"line":7786,"column":1}},"type":"if","locations":[{"start":{"line":7750,"column":0},"end":{"line":7786,"column":1}},{"start":{"line":7750,"column":0},"end":{"line":7786,"column":1}}],"line":7750},"316":{"loc":{"start":{"line":7781,"column":4},"end":{"line":7783,"column":5}},"type":"if","locations":[{"start":{"line":7781,"column":4},"end":{"line":7783,"column":5}},{"start":{"line":7781,"column":4},"end":{"line":7783,"column":5}}],"line":7781},"317":{"loc":{"start":{"line":7810,"column":4},"end":{"line":7812,"column":5}},"type":"if","locations":[{"start":{"line":7810,"column":4},"end":{"line":7812,"column":5}},{"start":{"line":7810,"column":4},"end":{"line":7812,"column":5}}],"line":7810},"318":{"loc":{"start":{"line":7814,"column":4},"end":{"line":7825,"column":15}},"type":"switch","locations":[{"start":{"line":7815,"column":6},"end":{"line":7818,"column":14}},{"start":{"line":7819,"column":6},"end":{"line":7822,"column":14}},{"start":{"line":7823,"column":6},"end":{"line":7825,"column":14}}],"line":7814},"319":{"loc":{"start":{"line":7853,"column":2},"end":{"line":7858,"column":3}},"type":"if","locations":[{"start":{"line":7853,"column":2},"end":{"line":7858,"column":3}},{"start":{"line":7853,"column":2},"end":{"line":7858,"column":3}}],"line":7853},"320":{"loc":{"start":{"line":7860,"column":2},"end":{"line":7865,"column":3}},"type":"if","locations":[{"start":{"line":7860,"column":2},"end":{"line":7865,"column":3}},{"start":{"line":7860,"column":2},"end":{"line":7865,"column":3}}],"line":7860},"321":{"loc":{"start":{"line":7918,"column":0},"end":{"line":7920,"column":1}},"type":"if","locations":[{"start":{"line":7918,"column":0},"end":{"line":7920,"column":1}},{"start":{"line":7918,"column":0},"end":{"line":7920,"column":1}}],"line":7918},"322":{"loc":{"start":{"line":7918,"column":4},"end":{"line":7918,"column":27}},"type":"binary-expr","locations":[{"start":{"line":7918,"column":4},"end":{"line":7918,"column":14}},{"start":{"line":7918,"column":18},"end":{"line":7918,"column":27}}],"line":7918},"323":{"loc":{"start":{"line":7930,"column":0},"end":{"line":7965,"column":1}},"type":"if","locations":[{"start":{"line":7930,"column":0},"end":{"line":7965,"column":1}},{"start":{"line":7930,"column":0},"end":{"line":7965,"column":1}}],"line":7930},"324":{"loc":{"start":{"line":7960,"column":4},"end":{"line":7962,"column":5}},"type":"if","locations":[{"start":{"line":7960,"column":4},"end":{"line":7962,"column":5}},{"start":{"line":7960,"column":4},"end":{"line":7962,"column":5}}],"line":7960},"325":{"loc":{"start":{"line":7989,"column":4},"end":{"line":7991,"column":5}},"type":"if","locations":[{"start":{"line":7989,"column":4},"end":{"line":7991,"column":5}},{"start":{"line":7989,"column":4},"end":{"line":7991,"column":5}}],"line":7989},"326":{"loc":{"start":{"line":7993,"column":4},"end":{"line":8000,"column":15}},"type":"switch","locations":[{"start":{"line":7994,"column":6},"end":{"line":7997,"column":14}},{"start":{"line":7998,"column":6},"end":{"line":8000,"column":14}}],"line":7993},"327":{"loc":{"start":{"line":8028,"column":2},"end":{"line":8033,"column":3}},"type":"if","locations":[{"start":{"line":8028,"column":2},"end":{"line":8033,"column":3}},{"start":{"line":8028,"column":2},"end":{"line":8033,"column":3}}],"line":8028},"328":{"loc":{"start":{"line":8048,"column":33},"end":{"line":8048,"column":44}},"type":"binary-expr","locations":[{"start":{"line":8048,"column":33},"end":{"line":8048,"column":38}},{"start":{"line":8048,"column":42},"end":{"line":8048,"column":44}}],"line":8048},"329":{"loc":{"start":{"line":8081,"column":0},"end":{"line":8083,"column":1}},"type":"if","locations":[{"start":{"line":8081,"column":0},"end":{"line":8083,"column":1}},{"start":{"line":8081,"column":0},"end":{"line":8083,"column":1}}],"line":8081},"330":{"loc":{"start":{"line":8081,"column":4},"end":{"line":8081,"column":27}},"type":"binary-expr","locations":[{"start":{"line":8081,"column":4},"end":{"line":8081,"column":14}},{"start":{"line":8081,"column":18},"end":{"line":8081,"column":27}}],"line":8081},"331":{"loc":{"start":{"line":8086,"column":0},"end":{"line":8122,"column":1}},"type":"if","locations":[{"start":{"line":8086,"column":0},"end":{"line":8122,"column":1}},{"start":{"line":8086,"column":0},"end":{"line":8122,"column":1}}],"line":8086},"332":{"loc":{"start":{"line":8113,"column":17},"end":{"line":8113,"column":87}},"type":"cond-expr","locations":[{"start":{"line":8113,"column":44},"end":{"line":8113,"column":82}},{"start":{"line":8113,"column":85},"end":{"line":8113,"column":87}}],"line":8113},"333":{"loc":{"start":{"line":8114,"column":17},"end":{"line":8114,"column":109}},"type":"cond-expr","locations":[{"start":{"line":8114,"column":44},"end":{"line":8114,"column":104}},{"start":{"line":8114,"column":107},"end":{"line":8114,"column":109}}],"line":8114},"334":{"loc":{"start":{"line":8117,"column":4},"end":{"line":8119,"column":5}},"type":"if","locations":[{"start":{"line":8117,"column":4},"end":{"line":8119,"column":5}},{"start":{"line":8117,"column":4},"end":{"line":8119,"column":5}}],"line":8117},"335":{"loc":{"start":{"line":8146,"column":4},"end":{"line":8148,"column":5}},"type":"if","locations":[{"start":{"line":8146,"column":4},"end":{"line":8148,"column":5}},{"start":{"line":8146,"column":4},"end":{"line":8148,"column":5}}],"line":8146},"336":{"loc":{"start":{"line":8150,"column":4},"end":{"line":8165,"column":15}},"type":"switch","locations":[{"start":{"line":8151,"column":6},"end":{"line":8156,"column":14}},{"start":{"line":8157,"column":6},"end":{"line":8162,"column":14}},{"start":{"line":8163,"column":6},"end":{"line":8165,"column":14}}],"line":8150},"337":{"loc":{"start":{"line":8193,"column":2},"end":{"line":8195,"column":3}},"type":"if","locations":[{"start":{"line":8193,"column":2},"end":{"line":8195,"column":3}},{"start":{"line":8193,"column":2},"end":{"line":8195,"column":3}}],"line":8193},"338":{"loc":{"start":{"line":8193,"column":6},"end":{"line":8193,"column":28}},"type":"binary-expr","locations":[{"start":{"line":8193,"column":6},"end":{"line":8193,"column":7}},{"start":{"line":8193,"column":11},"end":{"line":8193,"column":28}}],"line":8193},"339":{"loc":{"start":{"line":8197,"column":2},"end":{"line":8199,"column":3}},"type":"if","locations":[{"start":{"line":8197,"column":2},"end":{"line":8199,"column":3}},{"start":{"line":8197,"column":2},"end":{"line":8199,"column":3}}],"line":8197},"340":{"loc":{"start":{"line":8197,"column":6},"end":{"line":8197,"column":28}},"type":"binary-expr","locations":[{"start":{"line":8197,"column":6},"end":{"line":8197,"column":7}},{"start":{"line":8197,"column":11},"end":{"line":8197,"column":28}}],"line":8197},"341":{"loc":{"start":{"line":8254,"column":0},"end":{"line":8256,"column":1}},"type":"if","locations":[{"start":{"line":8254,"column":0},"end":{"line":8256,"column":1}},{"start":{"line":8254,"column":0},"end":{"line":8256,"column":1}}],"line":8254},"342":{"loc":{"start":{"line":8254,"column":4},"end":{"line":8254,"column":27}},"type":"binary-expr","locations":[{"start":{"line":8254,"column":4},"end":{"line":8254,"column":14}},{"start":{"line":8254,"column":18},"end":{"line":8254,"column":27}}],"line":8254},"343":{"loc":{"start":{"line":8259,"column":0},"end":{"line":8294,"column":1}},"type":"if","locations":[{"start":{"line":8259,"column":0},"end":{"line":8294,"column":1}},{"start":{"line":8259,"column":0},"end":{"line":8294,"column":1}}],"line":8259},"344":{"loc":{"start":{"line":8286,"column":16},"end":{"line":8286,"column":85}},"type":"cond-expr","locations":[{"start":{"line":8286,"column":42},"end":{"line":8286,"column":80}},{"start":{"line":8286,"column":83},"end":{"line":8286,"column":85}}],"line":8286},"345":{"loc":{"start":{"line":8289,"column":4},"end":{"line":8291,"column":5}},"type":"if","locations":[{"start":{"line":8289,"column":4},"end":{"line":8291,"column":5}},{"start":{"line":8289,"column":4},"end":{"line":8291,"column":5}}],"line":8289},"346":{"loc":{"start":{"line":8318,"column":4},"end":{"line":8320,"column":5}},"type":"if","locations":[{"start":{"line":8318,"column":4},"end":{"line":8320,"column":5}},{"start":{"line":8318,"column":4},"end":{"line":8320,"column":5}}],"line":8318},"347":{"loc":{"start":{"line":8322,"column":4},"end":{"line":8331,"column":15}},"type":"switch","locations":[{"start":{"line":8323,"column":6},"end":{"line":8328,"column":14}},{"start":{"line":8329,"column":6},"end":{"line":8331,"column":14}}],"line":8322},"348":{"loc":{"start":{"line":8359,"column":2},"end":{"line":8361,"column":3}},"type":"if","locations":[{"start":{"line":8359,"column":2},"end":{"line":8361,"column":3}},{"start":{"line":8359,"column":2},"end":{"line":8361,"column":3}}],"line":8359},"349":{"loc":{"start":{"line":8359,"column":6},"end":{"line":8359,"column":28}},"type":"binary-expr","locations":[{"start":{"line":8359,"column":6},"end":{"line":8359,"column":7}},{"start":{"line":8359,"column":11},"end":{"line":8359,"column":28}}],"line":8359},"350":{"loc":{"start":{"line":8398,"column":0},"end":{"line":8400,"column":1}},"type":"if","locations":[{"start":{"line":8398,"column":0},"end":{"line":8400,"column":1}},{"start":{"line":8398,"column":0},"end":{"line":8400,"column":1}}],"line":8398},"351":{"loc":{"start":{"line":8398,"column":4},"end":{"line":8398,"column":27}},"type":"binary-expr","locations":[{"start":{"line":8398,"column":4},"end":{"line":8398,"column":14}},{"start":{"line":8398,"column":18},"end":{"line":8398,"column":27}}],"line":8398},"352":{"loc":{"start":{"line":8410,"column":0},"end":{"line":8446,"column":1}},"type":"if","locations":[{"start":{"line":8410,"column":0},"end":{"line":8446,"column":1}},{"start":{"line":8410,"column":0},"end":{"line":8446,"column":1}}],"line":8410},"353":{"loc":{"start":{"line":8441,"column":4},"end":{"line":8443,"column":5}},"type":"if","locations":[{"start":{"line":8441,"column":4},"end":{"line":8443,"column":5}},{"start":{"line":8441,"column":4},"end":{"line":8443,"column":5}}],"line":8441},"354":{"loc":{"start":{"line":8470,"column":4},"end":{"line":8472,"column":5}},"type":"if","locations":[{"start":{"line":8470,"column":4},"end":{"line":8472,"column":5}},{"start":{"line":8470,"column":4},"end":{"line":8472,"column":5}}],"line":8470},"355":{"loc":{"start":{"line":8474,"column":4},"end":{"line":8482,"column":15}},"type":"switch","locations":[{"start":{"line":8475,"column":6},"end":{"line":8479,"column":14}},{"start":{"line":8480,"column":6},"end":{"line":8482,"column":14}}],"line":8474},"356":{"loc":{"start":{"line":8510,"column":2},"end":{"line":8516,"column":3}},"type":"if","locations":[{"start":{"line":8510,"column":2},"end":{"line":8516,"column":3}},{"start":{"line":8510,"column":2},"end":{"line":8516,"column":3}}],"line":8510},"357":{"loc":{"start":{"line":8566,"column":0},"end":{"line":8568,"column":1}},"type":"if","locations":[{"start":{"line":8566,"column":0},"end":{"line":8568,"column":1}},{"start":{"line":8566,"column":0},"end":{"line":8568,"column":1}}],"line":8566},"358":{"loc":{"start":{"line":8566,"column":4},"end":{"line":8566,"column":27}},"type":"binary-expr","locations":[{"start":{"line":8566,"column":4},"end":{"line":8566,"column":14}},{"start":{"line":8566,"column":18},"end":{"line":8566,"column":27}}],"line":8566},"359":{"loc":{"start":{"line":8578,"column":0},"end":{"line":8615,"column":1}},"type":"if","locations":[{"start":{"line":8578,"column":0},"end":{"line":8615,"column":1}},{"start":{"line":8578,"column":0},"end":{"line":8615,"column":1}}],"line":8578},"360":{"loc":{"start":{"line":8610,"column":4},"end":{"line":8612,"column":5}},"type":"if","locations":[{"start":{"line":8610,"column":4},"end":{"line":8612,"column":5}},{"start":{"line":8610,"column":4},"end":{"line":8612,"column":5}}],"line":8610},"361":{"loc":{"start":{"line":8639,"column":4},"end":{"line":8641,"column":5}},"type":"if","locations":[{"start":{"line":8639,"column":4},"end":{"line":8641,"column":5}},{"start":{"line":8639,"column":4},"end":{"line":8641,"column":5}}],"line":8639},"362":{"loc":{"start":{"line":8643,"column":4},"end":{"line":8658,"column":15}},"type":"switch","locations":[{"start":{"line":8644,"column":6},"end":{"line":8647,"column":14}},{"start":{"line":8648,"column":6},"end":{"line":8651,"column":14}},{"start":{"line":8652,"column":6},"end":{"line":8655,"column":14}},{"start":{"line":8656,"column":6},"end":{"line":8658,"column":14}}],"line":8643},"363":{"loc":{"start":{"line":8686,"column":2},"end":{"line":8691,"column":3}},"type":"if","locations":[{"start":{"line":8686,"column":2},"end":{"line":8691,"column":3}},{"start":{"line":8686,"column":2},"end":{"line":8691,"column":3}}],"line":8686},"364":{"loc":{"start":{"line":8693,"column":2},"end":{"line":8698,"column":3}},"type":"if","locations":[{"start":{"line":8693,"column":2},"end":{"line":8698,"column":3}},{"start":{"line":8693,"column":2},"end":{"line":8698,"column":3}}],"line":8693},"365":{"loc":{"start":{"line":8700,"column":2},"end":{"line":8705,"column":3}},"type":"if","locations":[{"start":{"line":8700,"column":2},"end":{"line":8705,"column":3}},{"start":{"line":8700,"column":2},"end":{"line":8705,"column":3}}],"line":8700},"366":{"loc":{"start":{"line":8750,"column":33},"end":{"line":8750,"column":44}},"type":"binary-expr","locations":[{"start":{"line":8750,"column":33},"end":{"line":8750,"column":38}},{"start":{"line":8750,"column":42},"end":{"line":8750,"column":44}}],"line":8750},"367":{"loc":{"start":{"line":8783,"column":0},"end":{"line":8785,"column":1}},"type":"if","locations":[{"start":{"line":8783,"column":0},"end":{"line":8785,"column":1}},{"start":{"line":8783,"column":0},"end":{"line":8785,"column":1}}],"line":8783},"368":{"loc":{"start":{"line":8783,"column":4},"end":{"line":8783,"column":27}},"type":"binary-expr","locations":[{"start":{"line":8783,"column":4},"end":{"line":8783,"column":14}},{"start":{"line":8783,"column":18},"end":{"line":8783,"column":27}}],"line":8783},"369":{"loc":{"start":{"line":8788,"column":0},"end":{"line":8823,"column":1}},"type":"if","locations":[{"start":{"line":8788,"column":0},"end":{"line":8823,"column":1}},{"start":{"line":8788,"column":0},"end":{"line":8823,"column":1}}],"line":8788},"370":{"loc":{"start":{"line":8818,"column":4},"end":{"line":8820,"column":5}},"type":"if","locations":[{"start":{"line":8818,"column":4},"end":{"line":8820,"column":5}},{"start":{"line":8818,"column":4},"end":{"line":8820,"column":5}}],"line":8818},"371":{"loc":{"start":{"line":8847,"column":4},"end":{"line":8849,"column":5}},"type":"if","locations":[{"start":{"line":8847,"column":4},"end":{"line":8849,"column":5}},{"start":{"line":8847,"column":4},"end":{"line":8849,"column":5}}],"line":8847},"372":{"loc":{"start":{"line":8851,"column":4},"end":{"line":8858,"column":15}},"type":"switch","locations":[{"start":{"line":8852,"column":6},"end":{"line":8855,"column":14}},{"start":{"line":8856,"column":6},"end":{"line":8858,"column":14}}],"line":8851},"373":{"loc":{"start":{"line":8886,"column":2},"end":{"line":8891,"column":3}},"type":"if","locations":[{"start":{"line":8886,"column":2},"end":{"line":8891,"column":3}},{"start":{"line":8886,"column":2},"end":{"line":8891,"column":3}}],"line":8886},"374":{"loc":{"start":{"line":8925,"column":0},"end":{"line":8927,"column":1}},"type":"if","locations":[{"start":{"line":8925,"column":0},"end":{"line":8927,"column":1}},{"start":{"line":8925,"column":0},"end":{"line":8927,"column":1}}],"line":8925},"375":{"loc":{"start":{"line":8925,"column":4},"end":{"line":8925,"column":27}},"type":"binary-expr","locations":[{"start":{"line":8925,"column":4},"end":{"line":8925,"column":14}},{"start":{"line":8925,"column":18},"end":{"line":8925,"column":27}}],"line":8925},"376":{"loc":{"start":{"line":8937,"column":0},"end":{"line":8974,"column":1}},"type":"if","locations":[{"start":{"line":8937,"column":0},"end":{"line":8974,"column":1}},{"start":{"line":8937,"column":0},"end":{"line":8974,"column":1}}],"line":8937},"377":{"loc":{"start":{"line":8969,"column":4},"end":{"line":8971,"column":5}},"type":"if","locations":[{"start":{"line":8969,"column":4},"end":{"line":8971,"column":5}},{"start":{"line":8969,"column":4},"end":{"line":8971,"column":5}}],"line":8969},"378":{"loc":{"start":{"line":8998,"column":4},"end":{"line":9000,"column":5}},"type":"if","locations":[{"start":{"line":8998,"column":4},"end":{"line":9000,"column":5}},{"start":{"line":8998,"column":4},"end":{"line":9000,"column":5}}],"line":8998},"379":{"loc":{"start":{"line":9002,"column":4},"end":{"line":9017,"column":15}},"type":"switch","locations":[{"start":{"line":9003,"column":6},"end":{"line":9006,"column":14}},{"start":{"line":9007,"column":6},"end":{"line":9010,"column":14}},{"start":{"line":9011,"column":6},"end":{"line":9014,"column":14}},{"start":{"line":9015,"column":6},"end":{"line":9017,"column":14}}],"line":9002},"380":{"loc":{"start":{"line":9045,"column":2},"end":{"line":9050,"column":3}},"type":"if","locations":[{"start":{"line":9045,"column":2},"end":{"line":9050,"column":3}},{"start":{"line":9045,"column":2},"end":{"line":9050,"column":3}}],"line":9045},"381":{"loc":{"start":{"line":9052,"column":2},"end":{"line":9057,"column":3}},"type":"if","locations":[{"start":{"line":9052,"column":2},"end":{"line":9057,"column":3}},{"start":{"line":9052,"column":2},"end":{"line":9057,"column":3}}],"line":9052},"382":{"loc":{"start":{"line":9059,"column":2},"end":{"line":9064,"column":3}},"type":"if","locations":[{"start":{"line":9059,"column":2},"end":{"line":9064,"column":3}},{"start":{"line":9059,"column":2},"end":{"line":9064,"column":3}}],"line":9059},"383":{"loc":{"start":{"line":9111,"column":33},"end":{"line":9111,"column":44}},"type":"binary-expr","locations":[{"start":{"line":9111,"column":33},"end":{"line":9111,"column":38}},{"start":{"line":9111,"column":42},"end":{"line":9111,"column":44}}],"line":9111}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":6,"61":1,"62":1,"63":0,"64":1,"65":1,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":1,"73":6,"74":6,"75":6,"76":1,"77":6,"78":30,"79":0,"80":30,"81":30,"82":6,"83":6,"84":6,"85":6,"86":6,"87":6,"88":6,"89":6,"90":6,"91":6,"92":6,"93":6,"94":6,"95":6,"96":6,"97":6,"98":0,"99":0,"100":6,"101":1,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":6,"124":1,"125":0,"126":1,"127":6,"128":1,"129":6,"130":1,"131":6,"132":1,"133":6,"134":1,"135":6,"136":1,"137":6,"138":1,"139":9,"140":1,"141":0,"142":1,"143":9,"144":1,"145":6,"146":1,"147":6,"148":1,"149":6,"150":1,"151":0,"152":1,"153":0,"154":1,"155":8,"156":1,"157":1,"158":0,"159":1,"160":1,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":1,"168":0,"169":0,"170":0,"171":1,"172":8,"173":32,"174":0,"175":32,"176":32,"177":8,"178":8,"179":8,"180":8,"181":8,"182":8,"183":0,"184":0,"185":0,"186":8,"187":8,"188":8,"189":8,"190":8,"191":8,"192":0,"193":0,"194":8,"195":1,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":8,"218":1,"219":8,"220":1,"221":8,"222":1,"223":8,"224":1,"225":8,"226":1,"227":0,"228":1,"229":8,"230":1,"231":8,"232":1,"233":0,"234":1,"235":8,"236":1,"237":8,"238":1,"239":1,"240":0,"241":1,"242":1,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":1,"250":2,"251":2,"252":2,"253":1,"254":8,"255":32,"256":0,"257":32,"258":32,"259":8,"260":8,"261":8,"262":8,"263":0,"264":0,"265":0,"266":8,"267":8,"268":8,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":8,"279":8,"280":8,"281":8,"282":8,"283":8,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":8,"293":1,"294":0,"295":0,"296":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":1,"330":8,"331":1,"332":8,"333":1,"334":0,"335":1,"336":0,"337":1,"338":8,"339":1,"340":0,"341":1,"342":8,"343":1,"344":8,"345":1,"346":8,"347":1,"348":0,"349":1,"350":8,"351":1,"352":0,"353":1,"354":8,"355":1,"356":0,"357":1,"358":8,"359":1,"360":0,"361":1,"362":8,"363":1,"364":0,"365":1,"366":8,"367":1,"368":0,"369":1,"370":8,"371":1,"372":0,"373":1,"374":8,"375":1,"376":8,"377":1,"378":8,"379":1,"380":0,"381":1,"382":8,"383":1,"384":8,"385":1,"386":8,"387":1,"388":0,"389":1,"390":8,"391":1,"392":0,"393":1,"394":8,"395":1,"396":0,"397":1,"398":8,"399":1,"400":0,"401":1,"402":0,"403":1,"404":1,"405":0,"406":1,"407":1,"408":0,"409":1,"410":0,"411":0,"412":0,"413":0,"414":1,"415":0,"416":0,"417":0,"418":1,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":1,"431":0,"432":0,"433":0,"434":1,"435":0,"436":0,"437":0,"438":0,"439":1,"440":0,"441":1,"442":0,"443":1,"444":0,"445":1,"446":1,"447":0,"448":1,"449":1,"450":1,"451":0,"452":1,"453":0,"454":0,"455":0,"456":0,"457":1,"458":0,"459":0,"460":0,"461":1,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":1,"483":0,"484":0,"485":0,"486":1,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":1,"501":0,"502":1,"503":0,"504":1,"505":0,"506":1,"507":0,"508":1,"509":0,"510":1,"511":0,"512":1,"513":0,"514":1,"515":0,"516":1,"517":0,"518":1,"519":0,"520":1,"521":0,"522":1,"523":0,"524":1,"525":0,"526":1,"527":0,"528":1,"529":0,"530":1,"531":0,"532":1,"533":0,"534":1,"535":0,"536":1,"537":0,"538":1,"539":1,"540":0,"541":1,"542":1,"543":0,"544":1,"545":0,"546":0,"547":0,"548":0,"549":1,"550":0,"551":0,"552":0,"553":1,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":1,"575":0,"576":0,"577":0,"578":1,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":1,"593":0,"594":1,"595":0,"596":1,"597":0,"598":1,"599":0,"600":1,"601":0,"602":1,"603":0,"604":1,"605":0,"606":1,"607":0,"608":1,"609":0,"610":1,"611":0,"612":1,"613":0,"614":1,"615":0,"616":1,"617":0,"618":1,"619":0,"620":1,"621":13,"622":1,"623":1,"624":0,"625":1,"626":1,"627":0,"628":1,"629":0,"630":0,"631":0,"632":0,"633":1,"634":0,"635":0,"636":0,"637":1,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":1,"647":13,"648":13,"649":13,"650":1,"651":13,"652":1,"653":53,"654":1,"655":1,"656":0,"657":1,"658":1,"659":0,"660":1,"661":0,"662":0,"663":0,"664":0,"665":1,"666":4,"667":4,"668":4,"669":1,"670":4,"671":4,"672":0,"673":4,"674":4,"675":4,"676":4,"677":4,"678":0,"679":0,"680":4,"681":1,"682":52,"683":52,"684":52,"685":1,"686":52,"687":52,"688":52,"689":52,"690":1,"691":59,"692":1,"693":0,"694":1,"695":54,"696":1,"697":52,"698":1,"699":0,"700":1,"701":1,"702":0,"703":1,"704":1,"705":0,"706":1,"707":0,"708":0,"709":0,"710":0,"711":1,"712":0,"713":0,"714":0,"715":1,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":1,"728":0,"729":0,"730":0,"731":1,"732":0,"733":0,"734":0,"735":0,"736":1,"737":0,"738":1,"739":0,"740":1,"741":0,"742":1,"743":1,"744":0,"745":1,"746":1,"747":0,"748":1,"749":0,"750":0,"751":0,"752":0,"753":1,"754":0,"755":0,"756":0,"757":1,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":1,"770":0,"771":0,"772":0,"773":1,"774":0,"775":0,"776":0,"777":0,"778":1,"779":0,"780":1,"781":0,"782":1,"783":0,"784":1,"785":0,"786":1,"787":0,"788":1,"789":1,"790":0,"791":1,"792":1,"793":0,"794":1,"795":0,"796":0,"797":0,"798":0,"799":1,"800":0,"801":0,"802":0,"803":1,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":1,"822":0,"823":0,"824":0,"825":1,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":1,"837":0,"838":1,"839":0,"840":1,"841":0,"842":1,"843":0,"844":1,"845":0,"846":1,"847":0,"848":1,"849":0,"850":1,"851":0,"852":1,"853":0,"854":1,"855":0,"856":1,"857":1,"858":1,"859":1,"860":0,"861":1,"862":1,"863":1,"864":1,"865":1,"866":1,"867":1,"868":0,"869":1,"870":1,"871":0,"872":0,"873":0,"874":1,"875":1,"876":7,"877":0,"878":7,"879":7,"880":1,"881":1,"882":1,"883":1,"884":1,"885":1,"886":1,"887":1,"888":1,"889":1,"890":1,"891":0,"892":0,"893":0,"894":1,"895":1,"896":1,"897":1,"898":1,"899":1,"900":1,"901":1,"902":1,"903":0,"904":0,"905":0,"906":0,"907":1,"908":1,"909":1,"910":0,"911":0,"912":1,"913":1,"914":0,"915":0,"916":0,"917":1,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":1,"947":2,"948":1,"949":1,"950":1,"951":0,"952":1,"953":0,"954":1,"955":2,"956":1,"957":1,"958":1,"959":0,"960":1,"961":0,"962":1,"963":0,"964":1,"965":1,"966":1,"967":0,"968":1,"969":0,"970":1,"971":0,"972":1,"973":1,"974":1,"975":0,"976":1,"977":1,"978":1,"979":0,"980":1,"981":1,"982":1,"983":1,"984":1,"985":0,"986":1,"987":0,"988":1,"989":0,"990":1,"991":0,"992":1,"993":1,"994":1,"995":1,"996":1,"997":1,"998":0,"999":1,"1000":1,"1001":1,"1002":0,"1003":1,"1004":0,"1005":0,"1006":0,"1007":0,"1008":1,"1009":1,"1010":1,"1011":1,"1012":1,"1013":1,"1014":1,"1015":0,"1016":1,"1017":1,"1018":1,"1019":1,"1020":1,"1021":1,"1022":0,"1023":0,"1024":1,"1025":1,"1026":0,"1027":0,"1028":0,"1029":1,"1030":0,"1031":0,"1032":0,"1033":0,"1034":1,"1035":1,"1036":1,"1037":0,"1038":1,"1039":1,"1040":1,"1041":0,"1042":1,"1043":3,"1044":1,"1045":1,"1046":0,"1047":1,"1048":1,"1049":0,"1050":1,"1051":0,"1052":0,"1053":0,"1054":0,"1055":1,"1056":0,"1057":0,"1058":0,"1059":1,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":1,"1084":3,"1085":3,"1086":3,"1087":1,"1088":3,"1089":3,"1090":3,"1091":1,"1092":3,"1093":3,"1094":2,"1095":3,"1096":3,"1097":3,"1098":3,"1099":3,"1100":0,"1101":3,"1102":3,"1103":1,"1104":1,"1105":3,"1106":1,"1107":0,"1108":1,"1109":3,"1110":1,"1111":1,"1112":1,"1113":3,"1114":1,"1115":2,"1116":1,"1117":3,"1118":1,"1119":3,"1120":1,"1121":3,"1122":1,"1123":3,"1124":1,"1125":3,"1126":1,"1127":3,"1128":1,"1129":3,"1130":1,"1131":1,"1132":0,"1133":1,"1134":1,"1135":0,"1136":1,"1137":0,"1138":0,"1139":0,"1140":0,"1141":1,"1142":0,"1143":0,"1144":0,"1145":1,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":1,"1161":0,"1162":0,"1163":0,"1164":1,"1165":3,"1166":3,"1167":3,"1168":1,"1169":3,"1170":3,"1171":3,"1172":1,"1173":3,"1174":1,"1175":3,"1176":1,"1177":3,"1178":1,"1179":3,"1180":1,"1181":3,"1182":1,"1183":1,"1184":0,"1185":1,"1186":1,"1187":3,"1188":1,"1189":3,"1190":3,"1191":0,"1192":3,"1193":1,"1194":3,"1195":3,"1196":3,"1197":1,"1198":3,"1199":10,"1200":0,"1201":10,"1202":10,"1203":3,"1204":3,"1205":3,"1206":1,"1207":1,"1208":1,"1209":3,"1210":3,"1211":3,"1212":3,"1213":3,"1214":3,"1215":3,"1216":0,"1217":0,"1218":3,"1219":1,"1220":0,"1221":0,"1222":0,"1223":1,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":1,"1238":0,"1239":1,"1240":3,"1241":1,"1242":0,"1243":1,"1244":1,"1245":1,"1246":0,"1247":1,"1248":3,"1249":1,"1250":6,"1251":1,"1252":3,"1253":1,"1254":0,"1255":1,"1256":0,"1257":1,"1258":3,"1259":1,"1260":1,"1261":0,"1262":1,"1263":1,"1264":0,"1265":1,"1266":0,"1267":0,"1268":0,"1269":0,"1270":1,"1271":0,"1272":0,"1273":0,"1274":1,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":1,"1291":3,"1292":3,"1293":3,"1294":1,"1295":3,"1296":3,"1297":3,"1298":3,"1299":3,"1300":3,"1301":3,"1302":1,"1303":3,"1304":1,"1305":0,"1306":1,"1307":3,"1308":1,"1309":3,"1310":1,"1311":3,"1312":1,"1313":3,"1314":1,"1315":0,"1316":1,"1317":0,"1318":1,"1319":3,"1320":1,"1321":1,"1322":0,"1323":1,"1324":1,"1325":1,"1326":0,"1327":1,"1328":0,"1329":0,"1330":0,"1331":0,"1332":1,"1333":3,"1334":3,"1335":3,"1336":1,"1337":3,"1338":30,"1339":0,"1340":30,"1341":30,"1342":30,"1343":30,"1344":30,"1345":30,"1346":0,"1347":0,"1348":3,"1349":1,"1350":0,"1351":0,"1352":0,"1353":1,"1354":0,"1355":0,"1356":0,"1357":0,"1358":1,"1359":3,"1360":1,"1361":0,"1362":1,"1363":30,"1364":1,"1365":0,"1366":1,"1367":5,"1368":1,"1369":1,"1370":0,"1371":1,"1372":1,"1373":5,"1374":1,"1375":5,"1376":5,"1377":0,"1378":5,"1379":1,"1380":5,"1381":5,"1382":5,"1383":1,"1384":5,"1385":17,"1386":0,"1387":17,"1388":17,"1389":5,"1390":5,"1391":5,"1392":5,"1393":5,"1394":5,"1395":5,"1396":2,"1397":2,"1398":2,"1399":5,"1400":5,"1401":5,"1402":0,"1403":0,"1404":5,"1405":1,"1406":0,"1407":0,"1408":0,"1409":1,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":1,"1424":10,"1425":1,"1426":5,"1427":1,"1428":5,"1429":1,"1430":5,"1431":1,"1432":10,"1433":1,"1434":5,"1435":1,"1436":0,"1437":1,"1438":0,"1439":1,"1440":0,"1441":1,"1442":2,"1443":1,"1444":0,"1445":1,"1446":5,"1447":1,"1448":0,"1449":1,"1450":1,"1451":0,"1452":1,"1453":1,"1454":1,"1455":0,"1456":1,"1457":0,"1458":0,"1459":0,"1460":0,"1461":1,"1462":0,"1463":0,"1464":0,"1465":1,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1478":1,"1479":0,"1480":0,"1481":0,"1482":1,"1483":0,"1484":0,"1485":0,"1486":0,"1487":1,"1488":0,"1489":1,"1490":0,"1491":1,"1492":0,"1493":1,"1494":0,"1495":1,"1496":41,"1497":1,"1498":1,"1499":0,"1500":1,"1501":1,"1502":12,"1503":1,"1504":12,"1505":12,"1506":0,"1507":12,"1508":1,"1509":10,"1510":10,"1511":10,"1512":1,"1513":41,"1514":49,"1515":0,"1516":49,"1517":49,"1518":41,"1519":41,"1520":41,"1521":4,"1522":4,"1523":4,"1524":4,"1525":4,"1526":4,"1527":0,"1528":0,"1529":41,"1530":1,"1531":0,"1532":0,"1533":0,"1534":1,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":1,"1546":49,"1547":1,"1548":12,"1549":1,"1550":37,"1551":1,"1552":41,"1553":1,"1554":58,"1555":1,"1556":4,"1557":1,"1558":1,"1559":1,"1560":4,"1561":1,"1562":29,"1563":1,"1564":1,"1565":0,"1566":1,"1567":1,"1568":1,"1569":0,"1570":1,"1571":0,"1572":0,"1573":0,"1574":0,"1575":1,"1576":29,"1577":29,"1578":29,"1579":1,"1580":29,"1581":31,"1582":0,"1583":31,"1584":31,"1585":31,"1586":31,"1587":31,"1588":31,"1589":0,"1590":0,"1591":29,"1592":1,"1593":0,"1594":0,"1595":0,"1596":1,"1597":0,"1598":0,"1599":0,"1600":0,"1601":1,"1602":58,"1603":1,"1604":0,"1605":1,"1606":31,"1607":1,"1608":0,"1609":1,"1610":0,"1611":1,"1612":1,"1613":0,"1614":1,"1615":1,"1616":0,"1617":1,"1618":0,"1619":0,"1620":0,"1621":0,"1622":1,"1623":0,"1624":0,"1625":0,"1626":1,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":0,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":0,"1639":0,"1640":0,"1641":0,"1642":1,"1643":0,"1644":0,"1645":0,"1646":1,"1647":0,"1648":0,"1649":0,"1650":0,"1651":0,"1652":0,"1653":0,"1654":1,"1655":0,"1656":1,"1657":0,"1658":1,"1659":0,"1660":1,"1661":0,"1662":1,"1663":0,"1664":1,"1665":0,"1666":1,"1667":50,"1668":1,"1669":1,"1670":0,"1671":1,"1672":1,"1673":0,"1674":1,"1675":0,"1676":0,"1677":0,"1678":0,"1679":1,"1680":0,"1681":0,"1682":0,"1683":1,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1689":0,"1690":0,"1691":0,"1692":0,"1693":0,"1694":0,"1695":0,"1696":0,"1697":0,"1698":0,"1699":1,"1700":50,"1701":50,"1702":50,"1703":1,"1704":50,"1705":50,"1706":50,"1707":50,"1708":50,"1709":50,"1710":26,"1711":1,"1712":50,"1713":1,"1714":50,"1715":1,"1716":50,"1717":1,"1718":26,"1719":1,"1720":0,"1721":1,"1722":0,"1723":1,"1724":0,"1725":1,"1726":1,"1727":0,"1728":1,"1729":1,"1730":0,"1731":1,"1732":0,"1733":0,"1734":0,"1735":0,"1736":1,"1737":0,"1738":0,"1739":0,"1740":1,"1741":0,"1742":0,"1743":0,"1744":0,"1745":0,"1746":0,"1747":0,"1748":0,"1749":0,"1750":0,"1751":0,"1752":0,"1753":0,"1754":0,"1755":0,"1756":0,"1757":0,"1758":0,"1759":1,"1760":0,"1761":0,"1762":0,"1763":1,"1764":0,"1765":0,"1766":0,"1767":0,"1768":0,"1769":0,"1770":0,"1771":0,"1772":0,"1773":0,"1774":1,"1775":0,"1776":1,"1777":0,"1778":1,"1779":0,"1780":1,"1781":0,"1782":1,"1783":0,"1784":1,"1785":0,"1786":1,"1787":0,"1788":1,"1789":0,"1790":1,"1791":0,"1792":1,"1793":1,"1794":0,"1795":1,"1796":1,"1797":0,"1798":1,"1799":0,"1800":0,"1801":0,"1802":0,"1803":1,"1804":0,"1805":0,"1806":0,"1807":1,"1808":0,"1809":0,"1810":0,"1811":0,"1812":0,"1813":0,"1814":0,"1815":0,"1816":0,"1817":0,"1818":0,"1819":0,"1820":0,"1821":0,"1822":1,"1823":0,"1824":0,"1825":0,"1826":1,"1827":0,"1828":0,"1829":0,"1830":0,"1831":0,"1832":0,"1833":0,"1834":1,"1835":0,"1836":1,"1837":0,"1838":1,"1839":0,"1840":1,"1841":0,"1842":1,"1843":0,"1844":1,"1845":0,"1846":1,"1847":0,"1848":1,"1849":1,"1850":0,"1851":1,"1852":1,"1853":0,"1854":1,"1855":0,"1856":0,"1857":0,"1858":0,"1859":1,"1860":0,"1861":0,"1862":0,"1863":1,"1864":0,"1865":0,"1866":0,"1867":0,"1868":0,"1869":0,"1870":0,"1871":0,"1872":0,"1873":0,"1874":0,"1875":0,"1876":0,"1877":0,"1878":1,"1879":0,"1880":0,"1881":0,"1882":1,"1883":0,"1884":0,"1885":0,"1886":0,"1887":0,"1888":0,"1889":0,"1890":1,"1891":0,"1892":1,"1893":0,"1894":1,"1895":0,"1896":1,"1897":0,"1898":1,"1899":0,"1900":1,"1901":0,"1902":1,"1903":0,"1904":1,"1905":0,"1906":1,"1907":0,"1908":1,"1909":1,"1910":0,"1911":1,"1912":1,"1913":0,"1914":1,"1915":0,"1916":0,"1917":0,"1918":0,"1919":1,"1920":0,"1921":0,"1922":0,"1923":1,"1924":0,"1925":0,"1926":0,"1927":0,"1928":0,"1929":0,"1930":0,"1931":0,"1932":0,"1933":0,"1934":0,"1935":0,"1936":0,"1937":0,"1938":1,"1939":0,"1940":0,"1941":0,"1942":1,"1943":0,"1944":0,"1945":0,"1946":0,"1947":0,"1948":0,"1949":0,"1950":1,"1951":0,"1952":1,"1953":0,"1954":1,"1955":0,"1956":1,"1957":0,"1958":1,"1959":0,"1960":1,"1961":1,"1962":0,"1963":1,"1964":1,"1965":1,"1966":0,"1967":1,"1968":0,"1969":0,"1970":0,"1971":0,"1972":1,"1973":0,"1974":0,"1975":0,"1976":1,"1977":0,"1978":0,"1979":0,"1980":0,"1981":0,"1982":0,"1983":0,"1984":0,"1985":0,"1986":0,"1987":0,"1988":0,"1989":0,"1990":0,"1991":0,"1992":0,"1993":1,"1994":0,"1995":0,"1996":0,"1997":1,"1998":0,"1999":0,"2000":0,"2001":0,"2002":0,"2003":0,"2004":0,"2005":1,"2006":0,"2007":1,"2008":0,"2009":1,"2010":0,"2011":1,"2012":0,"2013":1,"2014":0,"2015":1,"2016":0,"2017":1,"2018":0,"2019":1,"2020":0,"2021":1,"2022":0,"2023":1,"2024":1,"2025":0,"2026":1,"2027":1,"2028":1,"2029":0,"2030":1,"2031":0,"2032":0,"2033":0,"2034":0,"2035":1,"2036":0,"2037":0,"2038":0,"2039":1,"2040":0,"2041":0,"2042":0,"2043":0,"2044":0,"2045":0,"2046":0,"2047":0,"2048":0,"2049":0,"2050":0,"2051":0,"2052":0,"2053":0,"2054":0,"2055":0,"2056":0,"2057":1,"2058":0,"2059":0,"2060":0,"2061":1,"2062":0,"2063":0,"2064":0,"2065":0,"2066":0,"2067":0,"2068":0,"2069":0,"2070":0,"2071":0,"2072":1,"2073":0,"2074":1,"2075":0,"2076":1,"2077":0,"2078":1,"2079":0,"2080":1,"2081":0,"2082":1,"2083":0,"2084":1,"2085":0,"2086":1,"2087":0,"2088":1,"2089":0,"2090":1,"2091":1,"2092":0,"2093":1,"2094":1,"2095":1,"2096":0,"2097":1,"2098":0,"2099":0,"2100":0,"2101":0,"2102":1,"2103":0,"2104":0,"2105":0,"2106":1,"2107":0,"2108":0,"2109":0,"2110":0,"2111":0,"2112":0,"2113":0,"2114":0,"2115":0,"2116":0,"2117":0,"2118":0,"2119":0,"2120":0,"2121":0,"2122":1,"2123":0,"2124":0,"2125":0,"2126":1,"2127":0,"2128":0,"2129":0,"2130":0,"2131":0,"2132":0,"2133":0,"2134":1,"2135":0,"2136":1,"2137":0,"2138":1,"2139":0,"2140":1,"2141":0,"2142":1,"2143":0,"2144":1,"2145":0,"2146":1,"2147":2,"2148":1,"2149":1,"2150":0,"2151":1,"2152":1,"2153":0,"2154":1,"2155":0,"2156":0,"2157":0,"2158":0,"2159":1,"2160":0,"2161":0,"2162":0,"2163":1,"2164":0,"2165":0,"2166":0,"2167":0,"2168":0,"2169":0,"2170":0,"2171":0,"2172":0,"2173":0,"2174":0,"2175":0,"2176":0,"2177":0,"2178":1,"2179":2,"2180":2,"2181":2,"2182":1,"2183":2,"2184":2,"2185":2,"2186":2,"2187":2,"2188":2,"2189":1,"2190":1,"2191":2,"2192":1,"2193":0,"2194":1,"2195":2,"2196":1,"2197":2,"2198":1,"2199":2,"2200":1,"2201":0,"2202":1,"2203":2,"2204":1,"2205":1,"2206":1,"2207":2,"2208":1,"2209":1,"2210":0,"2211":1,"2212":1,"2213":0,"2214":1,"2215":1,"2216":1,"2217":0,"2218":1,"2219":1,"2220":0,"2221":0,"2222":0,"2223":1,"2224":1,"2225":1,"2226":0,"2227":1,"2228":1,"2229":1,"2230":1,"2231":1,"2232":0,"2233":0,"2234":0,"2235":0,"2236":0,"2237":1,"2238":1,"2239":1,"2240":1,"2241":1,"2242":1,"2243":1,"2244":1,"2245":1,"2246":1,"2247":1,"2248":1,"2249":0,"2250":1,"2251":1,"2252":1,"2253":2,"2254":1,"2255":1,"2256":1,"2257":0,"2258":1,"2259":1,"2260":1,"2261":1,"2262":0,"2263":1,"2264":1,"2265":1,"2266":1,"2267":1,"2268":1,"2269":0,"2270":1,"2271":1,"2272":1,"2273":1,"2274":1,"2275":1,"2276":1,"2277":3,"2278":0,"2279":3,"2280":3,"2281":1,"2282":1,"2283":1,"2284":1,"2285":1,"2286":1,"2287":1,"2288":1,"2289":1,"2290":1,"2291":0,"2292":0,"2293":1,"2294":1,"2295":0,"2296":0,"2297":0,"2298":1,"2299":0,"2300":0,"2301":0,"2302":0,"2303":0,"2304":0,"2305":0,"2306":0,"2307":0,"2308":0,"2309":1,"2310":1,"2311":1,"2312":1,"2313":1,"2314":0,"2315":1,"2316":0,"2317":1,"2318":2,"2319":1,"2320":1,"2321":1,"2322":1,"2323":1,"2324":1,"2325":1,"2326":2,"2327":1,"2328":1,"2329":1,"2330":1,"2331":1,"2332":1,"2333":1,"2334":1,"2335":1,"2336":1,"2337":0,"2338":1,"2339":1,"2340":0,"2341":1,"2342":0,"2343":0,"2344":0,"2345":0,"2346":1,"2347":0,"2348":0,"2349":0,"2350":1,"2351":0,"2352":0,"2353":0,"2354":0,"2355":0,"2356":0,"2357":0,"2358":0,"2359":0,"2360":0,"2361":0,"2362":0,"2363":0,"2364":0,"2365":1,"2366":1,"2367":1,"2368":1,"2369":1,"2370":1,"2371":1,"2372":1,"2373":0,"2374":1,"2375":1,"2376":1,"2377":1,"2378":1,"2379":1,"2380":1,"2381":1,"2382":1,"2383":1,"2384":1,"2385":1,"2386":1,"2387":1,"2388":1,"2389":0,"2390":1,"2391":1,"2392":1,"2393":0,"2394":1,"2395":0,"2396":0,"2397":0,"2398":0,"2399":1,"2400":0,"2401":0,"2402":0,"2403":1,"2404":0,"2405":0,"2406":0,"2407":0,"2408":0,"2409":0,"2410":0,"2411":0,"2412":0,"2413":0,"2414":0,"2415":1,"2416":1,"2417":1,"2418":1,"2419":1,"2420":1,"2421":1,"2422":1,"2423":0,"2424":1,"2425":1,"2426":1,"2427":0,"2428":1,"2429":0,"2430":1,"2431":0,"2432":1,"2433":1,"2434":1,"2435":1,"2436":0,"2437":1,"2438":1,"2439":1,"2440":1,"2441":1,"2442":1,"2443":0,"2444":1,"2445":1,"2446":1,"2447":1,"2448":1,"2449":1,"2450":1,"2451":6,"2452":0,"2453":6,"2454":6,"2455":4,"2456":4,"2457":4,"2458":4,"2459":2,"2460":2,"2461":2,"2462":2,"2463":0,"2464":0,"2465":1,"2466":1,"2467":0,"2468":0,"2469":0,"2470":1,"2471":0,"2472":0,"2473":0,"2474":0,"2475":0,"2476":0,"2477":0,"2478":1,"2479":5,"2480":1,"2481":0,"2482":1,"2483":3,"2484":1,"2485":0,"2486":1,"2487":2,"2488":1,"2489":1,"2490":0,"2491":1,"2492":1,"2493":0,"2494":1,"2495":2,"2496":2,"2497":0,"2498":2,"2499":1,"2500":0,"2501":0,"2502":0,"2503":1,"2504":2,"2505":2,"2506":0,"2507":2,"2508":2,"2509":2,"2510":2,"2511":2,"2512":2,"2513":0,"2514":0,"2515":2,"2516":1,"2517":0,"2518":0,"2519":0,"2520":1,"2521":0,"2522":0,"2523":0,"2524":0,"2525":1,"2526":4,"2527":1,"2528":0,"2529":1,"2530":3,"2531":1,"2532":1,"2533":0,"2534":1,"2535":1,"2536":1,"2537":0,"2538":1,"2539":0,"2540":0,"2541":0,"2542":0,"2543":1,"2544":3,"2545":3,"2546":3,"2547":1,"2548":3,"2549":4,"2550":0,"2551":4,"2552":4,"2553":4,"2554":4,"2555":4,"2556":4,"2557":0,"2558":0,"2559":3,"2560":1,"2561":0,"2562":0,"2563":0,"2564":1,"2565":0,"2566":0,"2567":0,"2568":0,"2569":1,"2570":3,"2571":1,"2572":0,"2573":1,"2574":4,"2575":1,"2576":0,"2577":1,"2578":1,"2579":1,"2580":1,"2581":0,"2582":1,"2583":1,"2584":1,"2585":1,"2586":1,"2587":1,"2588":1,"2589":0,"2590":1,"2591":1,"2592":1,"2593":1,"2594":1,"2595":1,"2596":1,"2597":1,"2598":0,"2599":1,"2600":1,"2601":1,"2602":1,"2603":1,"2604":0,"2605":0,"2606":0,"2607":0,"2608":0,"2609":0,"2610":0,"2611":0,"2612":1,"2613":1,"2614":0,"2615":0,"2616":0,"2617":1,"2618":0,"2619":0,"2620":0,"2621":0,"2622":0,"2623":0,"2624":0,"2625":0,"2626":0,"2627":0,"2628":1,"2629":0,"2630":1,"2631":1,"2632":1,"2633":0,"2634":1,"2635":0,"2636":1,"2637":0,"2638":1,"2639":0,"2640":1,"2641":0,"2642":1,"2643":0,"2644":1,"2645":0,"2646":1,"2647":1,"2648":0,"2649":1,"2650":1,"2651":0,"2652":1,"2653":0,"2654":0,"2655":0,"2656":0,"2657":1,"2658":0,"2659":0,"2660":0,"2661":1,"2662":0,"2663":0,"2664":0,"2665":0,"2666":0,"2667":0,"2668":0,"2669":0,"2670":0,"2671":0,"2672":0,"2673":1,"2674":0,"2675":0,"2676":0,"2677":1,"2678":0,"2679":0,"2680":0,"2681":0,"2682":1,"2683":0,"2684":1,"2685":0,"2686":1,"2687":0,"2688":1,"2689":1,"2690":0,"2691":1,"2692":1,"2693":1,"2694":0,"2695":1,"2696":0,"2697":0,"2698":0,"2699":0,"2700":1,"2701":0,"2702":0,"2703":0,"2704":1,"2705":0,"2706":0,"2707":0,"2708":0,"2709":0,"2710":0,"2711":0,"2712":0,"2713":0,"2714":0,"2715":0,"2716":0,"2717":0,"2718":0,"2719":0,"2720":0,"2721":0,"2722":1,"2723":0,"2724":0,"2725":0,"2726":1,"2727":0,"2728":0,"2729":0,"2730":0,"2731":0,"2732":0,"2733":0,"2734":0,"2735":0,"2736":0,"2737":1,"2738":0,"2739":1,"2740":0,"2741":1,"2742":0,"2743":1,"2744":0,"2745":1,"2746":0,"2747":1,"2748":0,"2749":1,"2750":0,"2751":1,"2752":0,"2753":1,"2754":1,"2755":1},"f":{"0":6,"1":0,"2":0,"3":6,"4":6,"5":0,"6":0,"7":6,"8":0,"9":6,"10":6,"11":6,"12":6,"13":6,"14":6,"15":9,"16":0,"17":9,"18":6,"19":6,"20":6,"21":0,"22":0,"23":8,"24":0,"25":0,"26":0,"27":8,"28":0,"29":0,"30":8,"31":8,"32":8,"33":8,"34":8,"35":0,"36":8,"37":8,"38":0,"39":8,"40":8,"41":0,"42":0,"43":2,"44":8,"45":0,"46":0,"47":8,"48":8,"49":0,"50":0,"51":8,"52":0,"53":8,"54":8,"55":8,"56":0,"57":8,"58":0,"59":8,"60":0,"61":8,"62":0,"63":8,"64":0,"65":8,"66":0,"67":8,"68":0,"69":8,"70":8,"71":8,"72":0,"73":8,"74":8,"75":8,"76":0,"77":8,"78":0,"79":8,"80":0,"81":8,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":13,"139":0,"140":0,"141":0,"142":0,"143":13,"144":13,"145":53,"146":0,"147":0,"148":4,"149":4,"150":52,"151":52,"152":59,"153":0,"154":54,"155":52,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":1,"195":1,"196":0,"197":1,"198":0,"199":0,"200":2,"201":1,"202":0,"203":0,"204":2,"205":1,"206":0,"207":0,"208":0,"209":1,"210":0,"211":0,"212":0,"213":1,"214":0,"215":1,"216":0,"217":1,"218":1,"219":0,"220":0,"221":0,"222":0,"223":1,"224":1,"225":0,"226":0,"227":1,"228":1,"229":0,"230":0,"231":1,"232":0,"233":1,"234":0,"235":3,"236":0,"237":0,"238":0,"239":0,"240":3,"241":3,"242":3,"243":0,"244":3,"245":1,"246":3,"247":2,"248":3,"249":3,"250":3,"251":3,"252":3,"253":3,"254":3,"255":0,"256":0,"257":0,"258":0,"259":0,"260":3,"261":3,"262":3,"263":3,"264":3,"265":3,"266":3,"267":3,"268":3,"269":3,"270":0,"271":0,"272":0,"273":3,"274":0,"275":1,"276":0,"277":3,"278":6,"279":3,"280":0,"281":0,"282":3,"283":0,"284":0,"285":0,"286":0,"287":3,"288":3,"289":3,"290":0,"291":3,"292":3,"293":3,"294":3,"295":0,"296":0,"297":3,"298":0,"299":0,"300":3,"301":3,"302":0,"303":0,"304":3,"305":0,"306":30,"307":0,"308":5,"309":5,"310":5,"311":5,"312":5,"313":0,"314":0,"315":10,"316":5,"317":5,"318":5,"319":10,"320":5,"321":0,"322":0,"323":0,"324":2,"325":0,"326":5,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":41,"339":12,"340":12,"341":10,"342":41,"343":0,"344":0,"345":49,"346":12,"347":37,"348":41,"349":58,"350":4,"351":1,"352":4,"353":29,"354":0,"355":0,"356":29,"357":29,"358":0,"359":0,"360":58,"361":0,"362":31,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":50,"378":0,"379":0,"380":0,"381":0,"382":50,"383":50,"384":50,"385":50,"386":50,"387":26,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":2,"488":0,"489":0,"490":0,"491":0,"492":2,"493":2,"494":2,"495":0,"496":2,"497":2,"498":2,"499":0,"500":2,"501":1,"502":2,"503":0,"504":1,"505":0,"506":1,"507":1,"508":1,"509":1,"510":2,"511":1,"512":0,"513":1,"514":1,"515":1,"516":1,"517":1,"518":0,"519":0,"520":1,"521":1,"522":0,"523":0,"524":2,"525":1,"526":1,"527":1,"528":2,"529":1,"530":1,"531":1,"532":1,"533":0,"534":0,"535":0,"536":0,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"543":1,"544":0,"545":0,"546":0,"547":0,"548":1,"549":1,"550":1,"551":0,"552":0,"553":0,"554":1,"555":1,"556":1,"557":1,"558":1,"559":4,"560":2,"561":0,"562":0,"563":5,"564":0,"565":3,"566":0,"567":2,"568":0,"569":2,"570":0,"571":2,"572":2,"573":0,"574":0,"575":4,"576":0,"577":3,"578":0,"579":0,"580":3,"581":3,"582":0,"583":0,"584":3,"585":0,"586":4,"587":0,"588":1,"589":1,"590":1,"591":1,"592":1,"593":0,"594":0,"595":0,"596":1,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0},"b":{"0":[0,1],"1":[1,0],"2":[1,0],"3":[0,0],"4":[0,0],"5":[0,30],"6":[6,6,6,6,6,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,1],"13":[1,0],"14":[1,0],"15":[0,0],"16":[0,32],"17":[8,8,0,8,8,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,1],"24":[1,0],"25":[1,0],"26":[0,0],"27":[0,0],"28":[0,32],"29":[8,0,8,0,0,0,8,8,0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,1],"41":[1,0],"42":[1,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,1],"48":[1,0],"49":[1,0],"50":[0,0],"51":[0,0],"52":[0,0,0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,1],"59":[1,0],"60":[1,0],"61":[0,0],"62":[0,0],"63":[0,0,0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,1],"69":[1,0],"70":[1,0],"71":[0,0],"72":[0,0],"73":[0],"74":[0,1],"75":[1,0],"76":[1,0],"77":[0,0],"78":[0,4],"79":[4,0],"80":[52,0],"81":[0,1],"82":[1,0],"83":[1,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,1],"89":[1,0],"90":[1,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,1],"96":[1,0],"97":[1,0],"98":[0,0],"99":[0,0],"100":[0,0,0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,1],"105":[1,0],"106":[1,0],"107":[1,1],"108":[1,1],"109":[0,1],"110":[0,7],"111":[1,1,1,0,1,1,1,0,1,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,1],"122":[1,0],"123":[1,0],"124":[0,0],"125":[0,1],"126":[1,0],"127":[0,0],"128":[0,1],"129":[1,0],"130":[1,0],"131":[0,0],"132":[0,0],"133":[0,0,0,0,0,0],"134":[1,2],"135":[2,1],"136":[3,0],"137":[0,3],"138":[1,2],"139":[0,1],"140":[1,0],"141":[1,0],"142":[0,0],"143":[0,0],"144":[0,0,0],"145":[1,2],"146":[3,0],"147":[0,1],"148":[1,0],"149":[1,0],"150":[3,3],"151":[0,3],"152":[0,10],"153":[3,1,3,3,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,1],"159":[1,0],"160":[1,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0,0],"165":[3,0],"166":[3,0],"167":[0,1],"168":[1,0],"169":[1,0],"170":[0,0],"171":[0,30],"172":[30,0],"173":[0,0],"174":[0,1],"175":[1,0],"176":[1,0],"177":[5,5],"178":[0,5],"179":[0,17],"180":[5,5,2,5,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,1],"186":[1,0],"187":[1,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,1],"193":[1,0],"194":[1,0],"195":[0,12],"196":[0,49],"197":[41,4,4,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,1],"202":[1,0],"203":[1,0],"204":[0,0],"205":[0,31],"206":[31,0],"207":[0,0],"208":[0,1],"209":[1,0],"210":[1,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0,0],"215":[0,0],"216":[0,0],"217":[0,1],"218":[1,0],"219":[1,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0,0],"224":[50,0],"225":[26,24],"226":[0,1],"227":[1,0],"228":[1,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0,0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,1],"237":[1,0],"238":[1,0],"239":[0,0],"240":[0,0],"241":[0,0,0],"242":[0,0],"243":[0,0],"244":[0,1],"245":[1,0],"246":[1,0],"247":[0,0],"248":[0,0],"249":[0,0,0],"250":[0,0],"251":[0,0],"252":[0,1],"253":[1,0],"254":[1,0],"255":[0,0],"256":[0,0],"257":[0,0,0],"258":[0,0],"259":[0,0],"260":[0,1],"261":[1,0],"262":[1,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0,0],"267":[0,0],"268":[0,0],"269":[0,1],"270":[1,0],"271":[1,0],"272":[0,0],"273":[0,0],"274":[0,0,0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,1],"280":[1,0],"281":[1,0],"282":[0,0],"283":[0,0],"284":[0,0,0],"285":[0,0],"286":[0,0],"287":[0,1],"288":[1,0],"289":[1,0],"290":[0,0],"291":[0,0],"292":[0,0,0],"293":[2,0],"294":[1,1],"295":[0,1],"296":[1,0],"297":[1,0],"298":[0,1],"299":[0,1],"300":[1,0,0],"301":[1,0],"302":[0,1],"303":[0,1],"304":[1,0],"305":[1,0],"306":[1,1],"307":[0,1],"308":[0,3],"309":[1,1,1,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,1],"314":[1,0],"315":[1,0],"316":[0,0],"317":[0,0],"318":[0,0,0],"319":[0,1],"320":[1,0],"321":[0,1],"322":[1,0],"323":[1,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,1],"328":[0,0],"329":[0,1],"330":[1,0],"331":[1,0],"332":[1,0],"333":[1,0],"334":[0,1],"335":[0,6],"336":[4,2,0],"337":[0,0],"338":[0,0],"339":[0,0],"340":[0,0],"341":[0,1],"342":[1,0],"343":[1,0],"344":[2,0],"345":[0,2],"346":[0,2],"347":[2,0],"348":[0,0],"349":[0,0],"350":[0,1],"351":[1,0],"352":[1,0],"353":[0,0],"354":[0,4],"355":[4,0],"356":[0,0],"357":[0,1],"358":[1,0],"359":[1,0],"360":[0,1],"361":[0,1],"362":[1,0,0,0],"363":[0,0],"364":[0,0],"365":[0,0],"366":[0,0],"367":[0,1],"368":[1,0],"369":[1,0],"370":[0,0],"371":[0,0],"372":[0,0],"373":[0,0],"374":[0,1],"375":[1,0],"376":[1,0],"377":[0,0],"378":[0,0],"379":[0,0,0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0]},"inputSourceMap":{"version":3,"sources":["rpc_pb.js"],"names":["jspb","require","goog","global","Function","blockchain_pb","object","extend","proto","account_pb","node_pb","p2p_pb","metric_pb","raft_pb","exportSymbol","types","BlockchainStatus","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","bestBlockHash","getBestBlockHash_asB64","bestHeight","getFieldWithDefault","consensusInfo","bestChainIdHash","getBestChainIdHash_asB64","chainInfo","getChainInfo","ChainInfo","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readBytes","setBestBlockHash","readUint64","setBestHeight","readString","setConsensusInfo","setBestChainIdHash","readMessage","setChainInfo","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getBestBlockHash_asU8","length","writeBytes","getBestHeight","writeUint64","getConsensusInfo","writeString","getBestChainIdHash_asU8","writeMessage","getBestBlockHash","bytesAsB64","bytesAsU8","setProto3BytesField","setProto3IntField","setProto3StringField","getBestChainIdHash","getWrapperField","setWrapperField","clearChainInfo","hasChainInfo","getField","ChainId","magic","pb_public","mainnet","consensus","version","setMagic","readBool","setPublic","setMainnet","setConsensus","readInt32","setVersion","getMagic","getPublic","writeBool","getMainnet","getConsensus","getVersion","writeInt32","setProto3BooleanField","id","getId","bpnumber","maxblocksize","maxtokens","getMaxtokens_asB64","stakingminimum","getStakingminimum_asB64","totalstaking","getTotalstaking_asB64","gasprice","getGasprice_asB64","nameprice","getNameprice_asB64","totalvotingpower","getTotalvotingpower_asB64","votingreward","getVotingreward_asB64","setId","readUint32","setBpnumber","setMaxblocksize","setMaxtokens","setStakingminimum","setTotalstaking","setGasprice","setNameprice","setTotalvotingpower","setVotingreward","getBpnumber","writeUint32","getMaxblocksize","getMaxtokens_asU8","getStakingminimum_asU8","getTotalstaking_asU8","getGasprice_asU8","getNameprice_asU8","getTotalvotingpower_asU8","getVotingreward_asU8","clearId","hasId","getMaxtokens","getStakingminimum","getTotalstaking","getGasprice","getNameprice","getTotalvotingpower","getVotingreward","ChainStats","report","setReport","getReport","Input","repeatedFields_","hash","getHash_asB64","addressList","getAddressList_asB64","getValue_asB64","script","getScript_asB64","setHash","addAddress","setValue","setScript","getHash_asU8","getAddressList_asU8","writeRepeatedBytes","getValue_asU8","getScript_asU8","getHash","getAddressList","getRepeatedField","bytesListAsB64","bytesListAsU8","setAddressList","setField","opt_index","addToRepeatedField","clearAddressList","getValue","getScript","Output","index","address","getAddress_asB64","setIndex","setAddress","getIndex","getAddress_asU8","getAddress","Empty","SingleBytes","SingleString","AccountAddress","AccountAndRoot","account","getAccount_asB64","root","getRoot_asB64","compressed","setAccount","setRoot","setCompressed","getAccount_asU8","getRoot_asU8","getCompressed","getAccount","getRoot","Peer","PeerAddress","bestblock","getBestblock","NewBlockNotice","state","hidden","lashcheck","selfpeer","certificatesList","toObjectList","getCertificatesList","AgentCertificate","acceptedrole","setBestblock","setState","setHidden","readInt64","setLashcheck","setSelfpeer","addCertificates","readEnum","setAcceptedrole","getState","getHidden","getLashcheck","writeInt64","getSelfpeer","writeRepeatedMessage","getAcceptedrole","writeEnum","clearAddress","hasAddress","clearBestblock","hasBestblock","getRepeatedWrapperField","setCertificatesList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearCertificatesList","setProto3EnumField","PeerList","peersList","getPeersList","addPeers","setPeersList","clearPeersList","ListParams","height","size","offset","asc","setHeight","setSize","setOffset","setAsc","getHeight","getSize","getOffset","getAsc","PageParams","BlockBodyPaged","total","body","getBody","BlockBody","setTotal","setBody","getTotal","clearBody","hasBody","BlockBodyParams","hashornumber","getHashornumber_asB64","paging","getPaging","setHashornumber","setPaging","getHashornumber_asU8","getHashornumber","clearPaging","hasPaging","BlockHeaderList","blocksList","getBlocksList","Block","addBlocks","setBlocksList","clearBlocksList","BlockMetadata","header","getHeader","BlockHeader","txcount","setHeader","setTxcount","getTxcount","clearHeader","hasHeader","BlockMetadataList","CommitResult","error","detail","setError","setDetail","getError","getDetail","CommitResultList","resultsList","getResultsList","addResults","setResultsList","clearResultsList","VerifyResult","tx","getTx","Tx","setTx","clearTx","hasTx","Personal","passphrase","Account","setPassphrase","getPassphrase","clearAccount","hasAccount","ImportFormat","wif","getWif","oldpass","newpass","setWif","setOldpass","setNewpass","getOldpass","getNewpass","clearWif","hasWif","Staking","amount","getAmount_asB64","when","setAmount","setWhen","getAmount_asU8","getWhen","getAmount","Vote","candidate","getCandidate_asB64","setCandidate","getCandidate_asU8","getCandidate","VoteParams","count","setCount","getCount","AccountVoteInfo","staking","getStaking","votingList","getVotingList","VoteInfo","setStaking","addVoting","clearStaking","hasStaking","setVotingList","clearVotingList","candidatesList","addCandidates","getCandidatesList","writeRepeatedString","setCandidatesList","clearCandidatesList","VoteList","votesList","getVotesList","addVotes","setVotesList","clearVotesList","NodeReq","timeout","getTimeout_asB64","component","getComponent_asB64","setTimeout","setComponent","getTimeout_asU8","getComponent_asU8","getTimeout","getComponent","Name","name","blockno","setName","setBlockno","getName","getBlockno","NameInfo","owner","getOwner_asB64","destination","getDestination_asB64","setOwner","setDestination","getOwner_asU8","getDestination_asU8","clearName","hasName","getOwner","getDestination","PeersParams","nohidden","showself","setNohidden","setShowself","getNohidden","getShowself","KeyParams","keyList","addKey","getKeyList","setKeyList","clearKeyList","ServerInfo","statusMap","getStatusMap","configMap","getConfigMap","ConfigItem","Map","getLength","opt_noLazyCreate","getMapField","clearStatusMap","clear","clearConfigMap","propsMap","getPropsMap","clearPropsMap","EventList","eventsList","getEventsList","Event","addEvents","setEventsList","clearEventsList","ConsensusInfo","type","info","bpsList","setType","setInfo","addBps","getType","getInfo","getBpsList","setBpsList","clearBpsList","EnterpriseConfigKey","key","setKey","getKey","EnterpriseConfig","on","valuesList","setOn","addValues","getOn","getValuesList","setValuesList","clearValuesList","CommitStatus","TX_OK","TX_NONCE_TOO_LOW","TX_ALREADY_EXISTS","TX_INVALID_HASH","TX_INVALID_SIGN","TX_INVALID_FORMAT","TX_INSUFFICIENT_BALANCE","TX_HAS_SAME_NONCE","TX_INTERNAL_ERROR","VerifyStatus","VERIFY_STATUS_OK","VERIFY_STATUS_SIGN_NOT_MATCH","VERIFY_STATUS_INVALID_HASH","exports"],"mappings":"cAAA;;;;;;;AAOA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;AACA,IAAIC,IAAI,GAAGF,IAAX;AACA,IAAIG,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;;AAEA,IAAIC,aAAa,GAAGJ,OAAO,CAAC,oBAAD,CAA3B;AACAC,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BH,aAA1B;AACA,IAAII,UAAU,GAAGR,OAAO,CAAC,iBAAD,CAAxB;AACAC,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BC,UAA1B;AACA,IAAIC,OAAO,GAAGT,OAAO,CAAC,cAAD,CAArB;AACAC,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BE,OAA1B;AACA,IAAIC,MAAM,GAAGV,OAAO,CAAC,aAAD,CAApB;AACAC,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BG,MAA1B;AACA,IAAIC,SAAS,GAAGX,OAAO,CAAC,gBAAD,CAAvB;AACAC,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BI,SAA1B;AACA,IAAIC,OAAO,GAAGZ,OAAO,CAAC,cAAD,CAArB;AACAC,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BK,OAA1B;AACAX,IAAI,CAACY,YAAL,CAAkB,4BAAlB,EAAgD,IAAhD,EAAsDX,MAAtD;AACAD,IAAI,CAACY,YAAL,CAAkB,4BAAlB,EAAgD,IAAhD,EAAsDX,MAAtD;AACAD,IAAI,CAACY,YAAL,CAAkB,6BAAlB,EAAiD,IAAjD,EAAuDX,MAAvD;AACAD,IAAI,CAACY,YAAL,CAAkB,4BAAlB,EAAgD,IAAhD,EAAsDX,MAAtD;AACAD,IAAI,CAACY,YAAL,CAAkB,6BAAlB,EAAiD,IAAjD,EAAuDX,MAAvD;AACAD,IAAI,CAACY,YAAL,CAAkB,6BAAlB,EAAiD,IAAjD,EAAuDX,MAAvD;AACAD,IAAI,CAACY,YAAL,CAAkB,2BAAlB,EAA+C,IAA/C,EAAqDX,MAArD;AACAD,IAAI,CAACY,YAAL,CAAkB,+BAAlB,EAAmD,IAAnD,EAAyDX,MAAzD;AACAD,IAAI,CAACY,YAAL,CAAkB,8BAAlB,EAAkD,IAAlD,EAAwDX,MAAxD;AACAD,IAAI,CAACY,YAAL,CAAkB,qBAAlB,EAAyC,IAAzC,EAA+CX,MAA/C;AACAD,IAAI,CAACY,YAAL,CAAkB,uBAAlB,EAA2C,IAA3C,EAAiDX,MAAjD;AACAD,IAAI,CAACY,YAAL,CAAkB,wBAAlB,EAA4C,IAA5C,EAAkDX,MAAlD;AACAD,IAAI,CAACY,YAAL,CAAkB,0BAAlB,EAA8C,IAA9C,EAAoDX,MAApD;AACAD,IAAI,CAACY,YAAL,CAAkB,8BAAlB,EAAkD,IAAlD,EAAwDX,MAAxD;AACAD,IAAI,CAACY,YAAL,CAAkB,0BAAlB,EAA8C,IAA9C,EAAoDX,MAApD;AACAD,IAAI,CAACY,YAAL,CAAkB,wBAAlB,EAA4C,IAA5C,EAAkDX,MAAlD;AACAD,IAAI,CAACY,YAAL,CAAkB,2BAAlB,EAA+C,IAA/C,EAAqDX,MAArD;AACAD,IAAI,CAACY,YAAL,CAAkB,mBAAlB,EAAuC,IAAvC,EAA6CX,MAA7C;AACAD,IAAI,CAACY,YAAL,CAAkB,8BAAlB,EAAkD,IAAlD,EAAwDX,MAAxD;AACAD,IAAI,CAACY,YAAL,CAAkB,iCAAlB,EAAqD,IAArD,EAA2DX,MAA3D;AACAD,IAAI,CAACY,YAAL,CAAkB,uBAAlB,EAA2C,IAA3C,EAAiDX,MAAjD;AACAD,IAAI,CAACY,YAAL,CAAkB,0BAAlB,EAA8C,IAA9C,EAAoDX,MAApD;AACAD,IAAI,CAACY,YAAL,CAAkB,mBAAlB,EAAuC,IAAvC,EAA6CX,MAA7C;AACAD,IAAI,CAACY,YAAL,CAAkB,uBAAlB,EAA2C,IAA3C,EAAiDX,MAAjD;AACAD,IAAI,CAACY,YAAL,CAAkB,wBAAlB,EAA4C,IAA5C,EAAkDX,MAAlD;AACAD,IAAI,CAACY,YAAL,CAAkB,kBAAlB,EAAsC,IAAtC,EAA4CX,MAA5C;AACAD,IAAI,CAACY,YAAL,CAAkB,sBAAlB,EAA0C,IAA1C,EAAgDX,MAAhD;AACAD,IAAI,CAACY,YAAL,CAAkB,qBAAlB,EAAyC,IAAzC,EAA+CX,MAA/C;AACAD,IAAI,CAACY,YAAL,CAAkB,oBAAlB,EAAwC,IAAxC,EAA8CX,MAA9C;AACAD,IAAI,CAACY,YAAL,CAAkB,wBAAlB,EAA4C,IAA5C,EAAkDX,MAAlD;AACAD,IAAI,CAACY,YAAL,CAAkB,kBAAlB,EAAsC,IAAtC,EAA4CX,MAA5C;AACAD,IAAI,CAACY,YAAL,CAAkB,sBAAlB,EAA0C,IAA1C,EAAgDX,MAAhD;AACAD,IAAI,CAACY,YAAL,CAAkB,yBAAlB,EAA6C,IAA7C,EAAmDX,MAAnD;AACAD,IAAI,CAACY,YAAL,CAAkB,sBAAlB,EAA0C,IAA1C,EAAgDX,MAAhD;AACAD,IAAI,CAACY,YAAL,CAAkB,wBAAlB,EAA4C,IAA5C,EAAkDX,MAAlD;AACAD,IAAI,CAACY,YAAL,CAAkB,yBAAlB,EAA6C,IAA7C,EAAmDX,MAAnD;AACAD,IAAI,CAACY,YAAL,CAAkB,0BAAlB,EAA8C,IAA9C,EAAoDX,MAApD;AACAD,IAAI,CAACY,YAAL,CAAkB,qBAAlB,EAAyC,IAAzC,EAA+CX,MAA/C;AACAD,IAAI,CAACY,YAAL,CAAkB,0BAAlB,EAA8C,IAA9C,EAAoDX,MAApD;AACAD,IAAI,CAACY,YAAL,CAAkB,0BAAlB,EAA8C,IAA9C,EAAoDX,MAApD;AACAD,IAAI,CAACY,YAAL,CAAkB,kBAAlB,EAAsC,IAAtC,EAA4CX,MAA5C;AACAD,IAAI,CAACY,YAAL,CAAkB,sBAAlB,EAA0C,IAA1C,EAAgDX,MAAhD;AACAD,IAAI,CAACY,YAAL,CAAkB,sBAAlB,EAA0C,IAA1C,EAAgDX,MAAhD;AACAD,IAAI,CAACY,YAAL,CAAkB,wBAAlB,EAA4C,IAA5C,EAAkDX,MAAlD;;AAEA;;;;;;;;;;AAUAK,KAAK,CAACO,KAAN,CAAYC,gBAAZ,GAA+B,UAASC,QAAT,EAAmB;AAChDjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYC,gBAA1B,EAA4ChB,IAAI,CAACkB,OAAjD;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BO,WAA7B,GAA2C,8BAA3C;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCC,QAAvC,GAAkD,UAASC,mBAAT,EAA8B;AAC9E,WAAOnB,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BU,QAA7B,CAAsCC,mBAAtC,EAA2D,IAA3D,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BU,QAA7B,GAAwC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACrE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXC,MAAAA,aAAa,EAAEH,GAAG,CAACI,sBAAJ,EADJ;AAEXC,MAAAA,UAAU,EAAElC,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFD;AAGXO,MAAAA,aAAa,EAAEpC,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHJ;AAIXQ,MAAAA,eAAe,EAAER,GAAG,CAACS,wBAAJ,EAJN;AAKXC,MAAAA,SAAS,EAAE,CAACT,CAAC,GAAGD,GAAG,CAACW,YAAJ,EAAL,KAA4BhC,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBf,QAAtB,CAA+BE,eAA/B,EAAgDE,CAAhD,CAL5B,EAAb;;;AAQA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAbD;AAcC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6B2B,iBAA7B,GAAiD,UAASC,KAAT,EAAgB;AAC/D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYC,gBAAhB,EAAV;AACA,SAAOR,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6B+B,2BAA7B,CAAyDlB,GAAzD,EAA8DgB,MAA9D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6B+B,2BAA7B,GAA2D,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC/E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACyB,gBAAJ,CAAqBF,KAArB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACU,UAAP,EAAnC;AACA1B,QAAAA,GAAG,CAAC2B,aAAJ,CAAkBJ,KAAlB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAAC6B,gBAAJ,CAAqBN,KAArB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC8B,kBAAJ,CAAuBP,KAAvB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAY0B,SAAhB,EAAZ;AACAI,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBM,2BAA/C;AACAlB,QAAAA,GAAG,CAACgC,YAAJ,CAAiBT,KAAjB;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAxBF;;AA0BD;AACD,SAAOjC,GAAP;AACD,CAlCD;;;AAqCA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCsC,eAAvC,GAAyD,YAAW;AAClE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BkD,uBAA7B,CAAqD,IAArD,EAA2DF,MAA3D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BkD,uBAA7B,GAAuD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC/E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACE,qBAAR,EAAJ;AACA,MAAIxC,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACK,aAAR,EAAJ;AACA,MAAI3C,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAACU,WAAP;AACE,KADF;AAEE5C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACO,gBAAR,EAAJ;AACA,MAAI7C,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACS,uBAAR,EAAJ;AACA,MAAI/C,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC5B,YAAR,EAAJ;AACA,MAAIV,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsByB,uBAHxB;;AAKD;AACF,CAtCD;;;AAyCA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCsD,gBAAvC,GAA0D,YAAW;AACnE,SAAO,oCAAqC/E,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCQ,sBAAvC,GAAgE,YAAW;AACzE,SAAO,sBAAuBjC,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKD,gBAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAvE,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuC6C,qBAAvC,GAA+D,YAAW;AACxE,SAAO,2BAA4BtE,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKF,gBAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAvE,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuC6B,gBAAvC,GAA0D,UAASF,KAAT,EAAgB;AACxEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCgD,aAAvC,GAAuD,YAAW;AAChE,SAAO,sBAAuBzE,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuC+B,aAAvC,GAAuD,UAASJ,KAAT,EAAgB;AACrEpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCkD,gBAAvC,GAA0D,YAAW;AACnE,SAAO,sBAAuB3E,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCiC,gBAAvC,GAA0D,UAASN,KAAT,EAAgB;AACxEpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuC4D,kBAAvC,GAA4D,YAAW;AACrE,SAAO,oCAAqCrF,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCa,wBAAvC,GAAkE,YAAW;AAC3E,SAAO,sBAAuBtC,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKK,kBAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOA7E,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCoD,uBAAvC,GAAiE,YAAW;AAC1E,SAAO,2BAA4B7E,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKI,kBAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACA7E,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCkC,kBAAvC,GAA4D,UAASP,KAAT,EAAgB;AAC1EpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCe,YAAvC,GAAsD,YAAW;AAC/D,SAAO;AACLxC,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmC9E,KAAK,CAACO,KAAN,CAAY0B,SAA/C,EAA0D,CAA1D,CADF;AAED,CAHD;;;AAMA;AACAjC,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCoC,YAAvC,GAAsD,UAAST,KAAT,EAAgB;AACpEpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuC+D,cAAvC,GAAwD,YAAW;AACjE,OAAK3B,YAAL,CAAkBQ,SAAlB;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAYC,gBAAZ,CAA6BS,SAA7B,CAAuCgE,YAAvC,GAAsD,YAAW;AAC/D,SAAOzF,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUAlF,KAAK,CAACO,KAAN,CAAY4E,OAAZ,GAAsB,UAAS1E,QAAT,EAAmB;AACvCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY4E,OAA1B,EAAmC3F,IAAI,CAACkB,OAAxC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBpE,WAApB,GAAkC,qBAAlC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8BC,QAA9B,GAAyC,UAASC,mBAAT,EAA8B;AACrE,WAAOnB,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBjE,QAApB,CAA6BC,mBAA7B,EAAkD,IAAlD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBjE,QAApB,GAA+B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC5D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACX6D,MAAAA,KAAK,EAAE5F,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADI;AAEXgE,MAAAA,SAAS,EAAE7F,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,KAAzC,CAFA;AAGXiE,MAAAA,OAAO,EAAE9F,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,KAAzC,CAHE;AAIXkE,MAAAA,SAAS,EAAE/F,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAJA;AAKXmE,MAAAA,OAAO,EAAEhG,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CALE,EAAb;;;AAQA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAbD;AAcC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBhD,iBAApB,GAAwC,UAASC,KAAT,EAAgB;AACtD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY4E,OAAhB,EAAV;AACA,SAAOnF,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoB5C,2BAApB,CAAgDlB,GAAhD,EAAqDgB,MAArD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoB5C,2BAApB,GAAkD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACtE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACoE,QAAJ,CAAa7C,KAAb;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,sBAAwBP,MAAM,CAACqD,QAAP,EAApC;AACArE,QAAAA,GAAG,CAACsE,SAAJ,CAAc/C,KAAd;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,sBAAwBP,MAAM,CAACqD,QAAP,EAApC;AACArE,QAAAA,GAAG,CAACuE,UAAJ,CAAehD,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACwE,YAAJ,CAAiBjD,KAAjB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACyD,SAAP,EAAnC;AACAzE,QAAAA,GAAG,CAAC0E,UAAJ,CAAenD,KAAf;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAvBF;;AAyBD;AACD,SAAOjC,GAAP;AACD,CAjCD;;;AAoCA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8BsC,eAA9B,GAAgD,YAAW;AACzD,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBzB,uBAApB,CAA4C,IAA5C,EAAkDF,MAAlD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBzB,uBAApB,GAA8C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACtE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACoC,QAAR,EAAJ;AACA,MAAI1E,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACqC,SAAR,EAAJ;AACA,MAAI3E,CAAJ,EAAO;AACLkC,IAAAA,MAAM,CAAC0C,SAAP;AACE,KADF;AAEE5E,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACuC,UAAR,EAAJ;AACA,MAAI7E,CAAJ,EAAO;AACLkC,IAAAA,MAAM,CAAC0C,SAAP;AACE,KADF;AAEE5E,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACwC,YAAR,EAAJ;AACA,MAAI9E,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACyC,UAAR,EAAJ;AACA,MAAI/E,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8C,UAAP;AACE,KADF;AAEEhF,IAAAA,CAFF;;AAID;AACF,CArCD;;;AAwCA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8B+E,QAA9B,GAAyC,YAAW;AAClD,SAAO,sBAAuBxG,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8BwE,QAA9B,GAAyC,UAAS7C,KAAT,EAAgB;AACvDpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;;;AAMA5C,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8BgF,SAA9B,GAA0C,YAAW;AACnD,SAAO,uBAAwBzG,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,KAA1C,CAA/B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8B0E,SAA9B,GAA0C,UAAS/C,KAAT,EAAgB;AACxDpD,EAAAA,IAAI,CAACkB,OAAL,CAAa6F,qBAAb,CAAmC,IAAnC,EAAyC,CAAzC,EAA4C3D,KAA5C;AACD,CAFD;;;AAKA;;;;;;AAMA5C,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8BkF,UAA9B,GAA2C,YAAW;AACpD,SAAO,uBAAwB3G,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,KAA1C,CAA/B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8B2E,UAA9B,GAA2C,UAAShD,KAAT,EAAgB;AACzDpD,EAAAA,IAAI,CAACkB,OAAL,CAAa6F,qBAAb,CAAmC,IAAnC,EAAyC,CAAzC,EAA4C3D,KAA5C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8BmF,YAA9B,GAA6C,YAAW;AACtD,SAAO,sBAAuB5G,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8B4E,YAA9B,GAA6C,UAASjD,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8BoF,UAA9B,GAA2C,YAAW;AACpD,SAAO,sBAAuB7G,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBlE,SAApB,CAA8B8E,UAA9B,GAA2C,UAASnD,KAAT,EAAgB;AACzDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,GAAwB,UAASxB,QAAT,EAAmB;AACzCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY0B,SAA1B,EAAqCzC,IAAI,CAACkB,OAA1C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBlB,WAAtB,GAAoC,uBAApC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCC,QAAhC,GAA2C,UAASC,mBAAT,EAA8B;AACvE,WAAOnB,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBf,QAAtB,CAA+BC,mBAA/B,EAAoD,IAApD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBf,QAAtB,GAAiC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC9D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXiF,MAAAA,EAAE,EAAE,CAAClF,CAAC,GAAGD,GAAG,CAACoF,KAAJ,EAAL,KAAqBzG,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBjE,QAApB,CAA6BE,eAA7B,EAA8CE,CAA9C,CADd;AAEXoF,MAAAA,QAAQ,EAAElH,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFC;AAGXsF,MAAAA,YAAY,EAAEnH,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAHH;AAIXuF,MAAAA,SAAS,EAAEvF,GAAG,CAACwF,kBAAJ,EAJA;AAKXC,MAAAA,cAAc,EAAEzF,GAAG,CAAC0F,uBAAJ,EALL;AAMXC,MAAAA,YAAY,EAAE3F,GAAG,CAAC4F,qBAAJ,EANH;AAOXC,MAAAA,QAAQ,EAAE7F,GAAG,CAAC8F,iBAAJ,EAPC;AAQXC,MAAAA,SAAS,EAAE/F,GAAG,CAACgG,kBAAJ,EARA;AASXC,MAAAA,gBAAgB,EAAEjG,GAAG,CAACkG,yBAAJ,EATP;AAUXC,MAAAA,YAAY,EAAEnG,GAAG,CAACoG,qBAAJ,EAVH,EAAb;;;AAaA,QAAIrG,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAlBD;AAmBC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBE,iBAAtB,GAA0C,UAASC,KAAT,EAAgB;AACxD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY0B,SAAhB,EAAV;AACA,SAAOjC,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBM,2BAAtB,CAAkDlB,GAAlD,EAAuDgB,MAAvD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBM,2BAAtB,GAAoD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACxE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAY4E,OAAhB,EAAZ;AACA9C,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoB5C,2BAA7C;AACAlB,QAAAA,GAAG,CAACqG,KAAJ,CAAU9E,KAAV;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAACuG,WAAJ,CAAgBhF,KAAhB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACU,UAAP,EAAnC;AACA1B,QAAAA,GAAG,CAACwG,eAAJ,CAAoBjF,KAApB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACyG,YAAJ,CAAiBlF,KAAjB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC0G,iBAAJ,CAAsBnF,KAAtB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC2G,eAAJ,CAAoBpF,KAApB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC4G,WAAJ,CAAgBrF,KAAhB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC6G,YAAJ,CAAiBtF,KAAjB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC8G,mBAAJ,CAAwBvF,KAAxB;AACA;AACF,WAAK,EAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC+G,eAAJ,CAAoBxF,KAApB;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cA5CF;;AA8CD;AACD,SAAOjC,GAAP;AACD,CAtDD;;;AAyDA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCsC,eAAhC,GAAkD,YAAW;AAC3D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsByB,uBAAtB,CAA8C,IAA9C,EAAoDF,MAApD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsByB,uBAAtB,GAAgD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACxE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC6C,KAAR,EAAJ;AACA,MAAInF,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAY4E,OAAZ,CAAoBzB,uBAHtB;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAACyE,WAAR,EAAJ;AACA,MAAI/G,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC2E,eAAR,EAAJ;AACA,MAAIjH,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAACU,WAAP;AACE,KADF;AAEE5C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC4E,iBAAR,EAAJ;AACA,MAAIlH,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC6E,sBAAR,EAAJ;AACA,MAAInH,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC8E,oBAAR,EAAJ;AACA,MAAIpH,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC+E,gBAAR,EAAJ;AACA,MAAIrH,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACgF,iBAAR,EAAJ;AACA,MAAItH,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACiF,wBAAR,EAAJ;AACA,MAAIvH,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACkF,oBAAR,EAAJ;AACA,MAAIxH,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,MADF;AAEE1C,IAAAA,CAFF;;AAID;AACF,CAzED;;;AA4EA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCwF,KAAhC,GAAwC,YAAW;AACjD,SAAO;AACLjH,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmC9E,KAAK,CAACO,KAAN,CAAY4E,OAA/C,EAAwD,CAAxD,CADF;AAED,CAHD;;;AAMA;AACAnF,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCyG,KAAhC,GAAwC,UAAS9E,KAAT,EAAgB;AACtDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC8H,OAAhC,GAA0C,YAAW;AACnD,OAAKrB,KAAL,CAAW7D,SAAX;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC+H,KAAhC,GAAwC,YAAW;AACjD,SAAOxJ,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;AAKA;;;;AAIAlF,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCoH,WAAhC,GAA8C,YAAW;AACvD,SAAO,sBAAuB7I,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC2G,WAAhC,GAA8C,UAAShF,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCsH,eAAhC,GAAkD,YAAW;AAC3D,SAAO,sBAAuB/I,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC4G,eAAhC,GAAkD,UAASjF,KAAT,EAAgB;AAChEpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCgI,YAAhC,GAA+C,YAAW;AACxD,SAAO,oCAAqCzJ,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC4F,kBAAhC,GAAqD,YAAW;AAC9D,SAAO,sBAAuBrH,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKyE,YAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAjJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCuH,iBAAhC,GAAoD,YAAW;AAC7D,SAAO,2BAA4BhJ,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKwE,YAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAjJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC6G,YAAhC,GAA+C,UAASlF,KAAT,EAAgB;AAC7DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCiI,iBAAhC,GAAoD,YAAW;AAC7D,SAAO,oCAAqC1J,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC8F,uBAAhC,GAA0D,YAAW;AACnE,SAAO,sBAAuBvH,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK0E,iBAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAlJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCwH,sBAAhC,GAAyD,YAAW;AAClE,SAAO,2BAA4BjJ,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKyE,iBAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAlJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC8G,iBAAhC,GAAoD,UAASnF,KAAT,EAAgB;AAClEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCkI,eAAhC,GAAkD,YAAW;AAC3D,SAAO,oCAAqC3J,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCgG,qBAAhC,GAAwD,YAAW;AACjE,SAAO,sBAAuBzH,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK2E,eAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAnJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCyH,oBAAhC,GAAuD,YAAW;AAChE,SAAO,2BAA4BlJ,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK0E,eAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAnJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC+G,eAAhC,GAAkD,UAASpF,KAAT,EAAgB;AAChEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCmI,WAAhC,GAA8C,YAAW;AACvD,SAAO,oCAAqC5J,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCkG,iBAAhC,GAAoD,YAAW;AAC7D,SAAO,sBAAuB3H,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK4E,WAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOApJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC0H,gBAAhC,GAAmD,YAAW;AAC5D,SAAO,2BAA4BnJ,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK2E,WAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACApJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCgH,WAAhC,GAA8C,UAASrF,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCoI,YAAhC,GAA+C,YAAW;AACxD,SAAO,oCAAqC7J,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCoG,kBAAhC,GAAqD,YAAW;AAC9D,SAAO,sBAAuB7H,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK6E,YAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOArJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC2H,iBAAhC,GAAoD,YAAW;AAC7D,SAAO,2BAA4BpJ,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK4E,YAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACArJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCiH,YAAhC,GAA+C,UAAStF,KAAT,EAAgB;AAC7DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCqI,mBAAhC,GAAsD,YAAW;AAC/D,SAAO,oCAAqC9J,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCsG,yBAAhC,GAA4D,YAAW;AACrE,SAAO,sBAAuB/H,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK8E,mBAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAtJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC4H,wBAAhC,GAA2D,YAAW;AACpE,SAAO,2BAA4BrJ,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK6E,mBAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAtJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCkH,mBAAhC,GAAsD,UAASvF,KAAT,EAAgB;AACpEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCsI,eAAhC,GAAkD,YAAW;AAC3D,SAAO,oCAAqC/J,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,EAAvC,EAA2C,EAA3C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCwG,qBAAhC,GAAwD,YAAW;AACjE,SAAO,sBAAuBjI,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK+E,eAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAvJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgC6H,oBAAhC,GAAuD,YAAW;AAChE,SAAO,2BAA4BtJ,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK8E,eAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAvJ,KAAK,CAACO,KAAN,CAAY0B,SAAZ,CAAsBhB,SAAtB,CAAgCmH,eAAhC,GAAkD,UAASxF,KAAT,EAAgB;AAChEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,EAAvC,EAA2C9B,KAA3C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,GAAyB,UAAS/I,QAAT,EAAmB;AAC1CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYiJ,UAA1B,EAAsChK,IAAI,CAACkB,OAA3C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBzI,WAAvB,GAAqC,wBAArC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBvI,SAAvB,CAAiCC,QAAjC,GAA4C,UAASC,mBAAT,EAA8B;AACxE,WAAOnB,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBtI,QAAvB,CAAgCC,mBAAhC,EAAqD,IAArD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBtI,QAAvB,GAAkC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC/D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXkI,MAAAA,MAAM,EAAEjK,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADG,EAAb;;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GATD;AAUC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBrH,iBAAvB,GAA2C,UAASC,KAAT,EAAgB;AACzD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYiJ,UAAhB,EAAV;AACA,SAAOxJ,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBjH,2BAAvB,CAAmDlB,GAAnD,EAAwDgB,MAAxD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBjH,2BAAvB,GAAqD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACzE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACqI,SAAJ,CAAc9G,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAPF;;AASD;AACD,SAAOjC,GAAP;AACD,CAjBD;;;AAoBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBvI,SAAvB,CAAiCsC,eAAjC,GAAmD,YAAW;AAC5D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuB9F,uBAAvB,CAA+C,IAA/C,EAAqDF,MAArD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuB9F,uBAAvB,GAAiD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACzE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC+F,SAAR,EAAJ;AACA,MAAIrI,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACF,CATD;;;AAYA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBvI,SAAvB,CAAiC0I,SAAjC,GAA6C,YAAW;AACtD,SAAO,sBAAuBnK,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYiJ,UAAZ,CAAuBvI,SAAvB,CAAiCyI,SAAjC,GAA6C,UAAS9G,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,GAAoB,UAASnJ,QAAT,EAAmB;AACrCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkBC,eAAjE,EAAkF,IAAlF;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYqJ,KAA1B,EAAiCpK,IAAI,CAACkB,OAAtC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB7I,WAAlB,GAAgC,mBAAhC;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkBC,eAAlB,GAAoC,CAAC,CAAD,CAApC;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BC,QAA5B,GAAuC,UAASC,mBAAT,EAA8B;AACnE,WAAOnB,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB1I,QAAlB,CAA2BC,mBAA3B,EAAgD,IAAhD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB1I,QAAlB,GAA6B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC1D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXuI,MAAAA,IAAI,EAAEzI,GAAG,CAAC0I,aAAJ,EADK;AAEXC,MAAAA,WAAW,EAAE3I,GAAG,CAAC4I,oBAAJ,EAFF;AAGXrH,MAAAA,KAAK,EAAEvB,GAAG,CAAC6I,cAAJ,EAHI;AAIXC,MAAAA,MAAM,EAAE9I,GAAG,CAAC+I,eAAJ,EAJG,EAAb;;;AAOA,QAAIhJ,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAZD;AAaC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkBzH,iBAAlB,GAAsC,UAASC,KAAT,EAAgB;AACpD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYqJ,KAAhB,EAAV;AACA,SAAO5J,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkBrH,2BAAlB,CAA8ClB,GAA9C,EAAmDgB,MAAnD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkBrH,2BAAlB,GAAgD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACpE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACgJ,OAAJ,CAAYzH,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACiJ,UAAJ,CAAe1H,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACkJ,QAAJ,CAAa3H,KAAb;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACmJ,SAAJ,CAAc5H,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAnBF;;AAqBD;AACD,SAAOjC,GAAP;AACD,CA7BD;;;AAgCA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BsC,eAA5B,GAA8C,YAAW;AACvD,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkBlG,uBAAlB,CAA0C,IAA1C,EAAgDF,MAAhD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkBlG,uBAAlB,GAA4C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACpE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC6G,YAAR,EAAJ;AACA,MAAInJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC8G,mBAAR,EAAJ;AACA,MAAIpJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACmH,kBAAP;AACE,KADF;AAEErJ,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACgH,aAAR,EAAJ;AACA,MAAItJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACiH,cAAR,EAAJ;AACA,MAAIvJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACF,CA9BD;;;AAiCA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4B6J,OAA5B,GAAsC,YAAW;AAC/C,SAAO,oCAAqCtL,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4B8I,aAA5B,GAA4C,YAAW;AACrD,SAAO,sBAAuBvK,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKsG,OAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOA9K,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BwJ,YAA5B,GAA2C,YAAW;AACpD,SAAO,2BAA4BjL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKqG,OAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACA9K,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BoJ,OAA5B,GAAsC,UAASzH,KAAT,EAAgB;AACpDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4B8J,cAA5B,GAA6C,YAAW;AACtD,SAAO,mDAAoDvL,IAAI,CAACkB,OAAL,CAAasK,gBAAb,CAA8B,IAA9B,EAAoC,CAApC,CAA3D;AACD,CAFD;;;AAKA;;;;;AAKAhL,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BgJ,oBAA5B,GAAmD,YAAW;AAC5D,SAAO,8BAA+BzK,IAAI,CAACkB,OAAL,CAAauK,cAAb;AAClC,SAAKF,cAAL,EADkC,CAAtC;AAED,CAHD;;;AAMA;;;;;;;AAOA/K,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4ByJ,mBAA5B,GAAkD,YAAW;AAC3D,SAAO,mCAAoClL,IAAI,CAACkB,OAAL,CAAawK,aAAb;AACvC,SAAKH,cAAL,EADuC,CAA3C;AAED,CAHD;;;AAMA;AACA/K,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BkK,cAA5B,GAA6C,UAASvI,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAa0K,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BxI,KAAK,IAAI,EAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BqJ,UAA5B,GAAyC,UAAS1H,KAAT,EAAgByI,SAAhB,EAA2B;AAClE7L,EAAAA,IAAI,CAACkB,OAAL,CAAa4K,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyC1I,KAAzC,EAAgDyI,SAAhD;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BsK,gBAA5B,GAA+C,YAAW;AACxD,OAAKJ,cAAL,CAAoB,EAApB;AACD,CAFD;;;AAKA;;;;AAIAnL,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BuK,QAA5B,GAAuC,YAAW;AAChD,SAAO,oCAAqChM,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BiJ,cAA5B,GAA6C,YAAW;AACtD,SAAO,sBAAuB1K,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKgH,QAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAxL,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4B2J,aAA5B,GAA4C,YAAW;AACrD,SAAO,2BAA4BpL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK+G,QAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAxL,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BsJ,QAA5B,GAAuC,UAAS3H,KAAT,EAAgB;AACrDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BwK,SAA5B,GAAwC,YAAW;AACjD,SAAO,oCAAqCjM,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BmJ,eAA5B,GAA8C,YAAW;AACvD,SAAO,sBAAuB5K,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKiH,SAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAzL,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4B4J,cAA5B,GAA6C,YAAW;AACtD,SAAO,2BAA4BrL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKgH,SAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAzL,KAAK,CAACO,KAAN,CAAYqJ,KAAZ,CAAkB3I,SAAlB,CAA4BuJ,SAA5B,GAAwC,UAAS5H,KAAT,EAAgB;AACtDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYmL,MAAZ,GAAqB,UAASjL,QAAT,EAAmB;AACtCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYmL,MAA1B,EAAkClM,IAAI,CAACkB,OAAvC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmB3K,WAAnB,GAAiC,oBAAjC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BC,QAA7B,GAAwC,UAASC,mBAAT,EAA8B;AACpE,WAAOnB,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBxK,QAAnB,CAA4BC,mBAA5B,EAAiD,IAAjD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBxK,QAAnB,GAA8B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC3D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXoK,MAAAA,KAAK,EAAEnM,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CADI;AAEXuK,MAAAA,OAAO,EAAEvK,GAAG,CAACwK,gBAAJ,EAFE;AAGXjJ,MAAAA,KAAK,EAAEvB,GAAG,CAAC6I,cAAJ,EAHI;AAIXC,MAAAA,MAAM,EAAE9I,GAAG,CAAC+I,eAAJ,EAJG,EAAb;;;AAOA,QAAIhJ,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAZD;AAaC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBvJ,iBAAnB,GAAuC,UAASC,KAAT,EAAgB;AACrD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYmL,MAAhB,EAAV;AACA,SAAO1L,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBnJ,2BAAnB,CAA+ClB,GAA/C,EAAoDgB,MAApD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBnJ,2BAAnB,GAAiD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACrE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAACyK,QAAJ,CAAalJ,KAAb;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC0K,UAAJ,CAAenJ,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACkJ,QAAJ,CAAa3H,KAAb;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACmJ,SAAJ,CAAc5H,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAnBF;;AAqBD;AACD,SAAOjC,GAAP;AACD,CA7BD;;;AAgCA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BsC,eAA7B,GAA+C,YAAW;AACxD,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBhI,uBAAnB,CAA2C,IAA3C,EAAiDF,MAAjD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBhI,uBAAnB,GAA6C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACrE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACoI,QAAR,EAAJ;AACA,MAAI1K,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACqI,eAAR,EAAJ;AACA,MAAI3K,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACgH,aAAR,EAAJ;AACA,MAAItJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACiH,cAAR,EAAJ;AACA,MAAIvJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACF,CA9BD;;;AAiCA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6B+K,QAA7B,GAAwC,YAAW;AACjD,SAAO,sBAAuBxM,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6B6K,QAA7B,GAAwC,UAASlJ,KAAT,EAAgB;AACtDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BiL,UAA7B,GAA0C,YAAW;AACnD,SAAO,oCAAqC1M,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6B4K,gBAA7B,GAAgD,YAAW;AACzD,SAAO,sBAAuBrM,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK0H,UAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAlM,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BgL,eAA7B,GAA+C,YAAW;AACxD,SAAO,2BAA4BzM,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKyH,UAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAlM,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6B8K,UAA7B,GAA0C,UAASnJ,KAAT,EAAgB;AACxDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BuK,QAA7B,GAAwC,YAAW;AACjD,SAAO,oCAAqChM,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BiJ,cAA7B,GAA8C,YAAW;AACvD,SAAO,sBAAuB1K,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKgH,QAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAxL,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6B2J,aAA7B,GAA6C,YAAW;AACtD,SAAO,2BAA4BpL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK+G,QAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAxL,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BsJ,QAA7B,GAAwC,UAAS3H,KAAT,EAAgB;AACtDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BwK,SAA7B,GAAyC,YAAW;AAClD,SAAO,oCAAqCjM,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BmJ,eAA7B,GAA+C,YAAW;AACxD,SAAO,sBAAuB5K,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKiH,SAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAzL,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6B4J,cAA7B,GAA8C,YAAW;AACvD,SAAO,2BAA4BrL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKgH,SAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAzL,KAAK,CAACO,KAAN,CAAYmL,MAAZ,CAAmBzK,SAAnB,CAA6BuJ,SAA7B,GAAyC,UAAS5H,KAAT,EAAgB;AACvDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY4L,KAAZ,GAAoB,UAAS1L,QAAT,EAAmB;AACrCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY4L,KAA1B,EAAiC3M,IAAI,CAACkB,OAAtC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkBpL,WAAlB,GAAgC,mBAAhC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkBlL,SAAlB,CAA4BC,QAA5B,GAAuC,UAASC,mBAAT,EAA8B;AACnE,WAAOnB,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkBjL,QAAlB,CAA2BC,mBAA3B,EAAgD,IAAhD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkBjL,QAAlB,GAA6B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC1D,QAAIC,CAAJ,CAAOC,GAAG,GAAG,EAAb;;;;AAIA,QAAIH,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GATD;AAUC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkBhK,iBAAlB,GAAsC,UAASC,KAAT,EAAgB;AACpD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY4L,KAAhB,EAAV;AACA,SAAOnM,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkB5J,2BAAlB,CAA8ClB,GAA9C,EAAmDgB,MAAnD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkB5J,2BAAlB,GAAgD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACpE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA;AACEL,QAAAA,MAAM,CAACiB,SAAP;AACA,cAHF;;AAKD;AACD,SAAOjC,GAAP;AACD,CAbD;;;AAgBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkBlL,SAAlB,CAA4BsC,eAA5B,GAA8C,YAAW;AACvD,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkBzI,uBAAlB,CAA0C,IAA1C,EAAgDF,MAAhD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY4L,KAAZ,CAAkBzI,uBAAlB,GAA4C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACpE,MAAIlC,CAAC,GAAGuC,SAAR;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA7D,KAAK,CAACO,KAAN,CAAY6L,WAAZ,GAA0B,UAAS3L,QAAT,EAAmB;AAC3CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY6L,WAA1B,EAAuC5M,IAAI,CAACkB,OAA5C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBrL,WAAxB,GAAsC,yBAAtC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBnL,SAAxB,CAAkCC,QAAlC,GAA6C,UAASC,mBAAT,EAA8B;AACzE,WAAOnB,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBlL,QAAxB,CAAiCC,mBAAjC,EAAsD,IAAtD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBlL,QAAxB,GAAmC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAChE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXqB,MAAAA,KAAK,EAAEvB,GAAG,CAAC6I,cAAJ,EADI,EAAb;;;AAIA,QAAI9I,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GATD;AAUC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBjK,iBAAxB,GAA4C,UAASC,KAAT,EAAgB;AAC1D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY6L,WAAhB,EAAV;AACA,SAAOpM,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwB7J,2BAAxB,CAAoDlB,GAApD,EAAyDgB,MAAzD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwB7J,2BAAxB,GAAsD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC1E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACkJ,QAAJ,CAAa3H,KAAb;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAPF;;AASD;AACD,SAAOjC,GAAP;AACD,CAjBD;;;AAoBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBnL,SAAxB,CAAkCsC,eAAlC,GAAoD,YAAW;AAC7D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwB1I,uBAAxB,CAAgD,IAAhD,EAAsDF,MAAtD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwB1I,uBAAxB,GAAkD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC1E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACgH,aAAR,EAAJ;AACA,MAAItJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACF,CATD;;;AAYA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBnL,SAAxB,CAAkCuK,QAAlC,GAA6C,YAAW;AACtD,SAAO,oCAAqChM,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBnL,SAAxB,CAAkCiJ,cAAlC,GAAmD,YAAW;AAC5D,SAAO,sBAAuB1K,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKgH,QAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAxL,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBnL,SAAxB,CAAkC2J,aAAlC,GAAkD,YAAW;AAC3D,SAAO,2BAA4BpL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK+G,QAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAxL,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBnL,SAAxB,CAAkCsJ,QAAlC,GAA6C,UAAS3H,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY8L,YAAZ,GAA2B,UAAS5L,QAAT,EAAmB;AAC5CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY8L,YAA1B,EAAwC7M,IAAI,CAACkB,OAA7C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyBtL,WAAzB,GAAuC,0BAAvC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyBpL,SAAzB,CAAmCC,QAAnC,GAA8C,UAASC,mBAAT,EAA8B;AAC1E,WAAOnB,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyBnL,QAAzB,CAAkCC,mBAAlC,EAAuD,IAAvD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyBnL,QAAzB,GAAoC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACjE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXqB,MAAAA,KAAK,EAAEpD,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADI,EAAb;;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GATD;AAUC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyBlK,iBAAzB,GAA6C,UAASC,KAAT,EAAgB;AAC3D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY8L,YAAhB,EAAV;AACA,SAAOrM,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyB9J,2BAAzB,CAAqDlB,GAArD,EAA0DgB,MAA1D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyB9J,2BAAzB,GAAuD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC3E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACkJ,QAAJ,CAAa3H,KAAb;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAPF;;AASD;AACD,SAAOjC,GAAP;AACD,CAjBD;;;AAoBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyBpL,SAAzB,CAAmCsC,eAAnC,GAAqD,YAAW;AAC9D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyB3I,uBAAzB,CAAiD,IAAjD,EAAuDF,MAAvD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyB3I,uBAAzB,GAAmD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC3E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC4H,QAAR,EAAJ;AACA,MAAIlK,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACF,CATD;;;AAYA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyBpL,SAAzB,CAAmCuK,QAAnC,GAA8C,YAAW;AACvD,SAAO,sBAAuBhM,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8L,YAAZ,CAAyBpL,SAAzB,CAAmCsJ,QAAnC,GAA8C,UAAS3H,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY+L,cAAZ,GAA6B,UAAS7L,QAAT,EAAmB;AAC9CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY+L,cAA1B,EAA0C9M,IAAI,CAACkB,OAA/C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BvL,WAA3B,GAAyC,4BAAzC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BrL,SAA3B,CAAqCC,QAArC,GAAgD,UAASC,mBAAT,EAA8B;AAC5E,WAAOnB,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BpL,QAA3B,CAAoCC,mBAApC,EAAyD,IAAzD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BpL,QAA3B,GAAsC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACnE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXqB,MAAAA,KAAK,EAAEvB,GAAG,CAAC6I,cAAJ,EADI,EAAb;;;AAIA,QAAI9I,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GATD;AAUC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BnK,iBAA3B,GAA+C,UAASC,KAAT,EAAgB;AAC7D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY+L,cAAhB,EAAV;AACA,SAAOtM,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2B/J,2BAA3B,CAAuDlB,GAAvD,EAA4DgB,MAA5D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2B/J,2BAA3B,GAAyD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC7E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACkJ,QAAJ,CAAa3H,KAAb;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAPF;;AASD;AACD,SAAOjC,GAAP;AACD,CAjBD;;;AAoBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BrL,SAA3B,CAAqCsC,eAArC,GAAuD,YAAW;AAChE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2B5I,uBAA3B,CAAmD,IAAnD,EAAyDF,MAAzD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2B5I,uBAA3B,GAAqD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC7E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACgH,aAAR,EAAJ;AACA,MAAItJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACF,CATD;;;AAYA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BrL,SAA3B,CAAqCuK,QAArC,GAAgD,YAAW;AACzD,SAAO,oCAAqChM,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BrL,SAA3B,CAAqCiJ,cAArC,GAAsD,YAAW;AAC/D,SAAO,sBAAuB1K,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKgH,QAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAxL,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BrL,SAA3B,CAAqC2J,aAArC,GAAqD,YAAW;AAC9D,SAAO,2BAA4BpL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK+G,QAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAxL,KAAK,CAACO,KAAN,CAAY+L,cAAZ,CAA2BrL,SAA3B,CAAqCsJ,QAArC,GAAgD,UAAS3H,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYgM,cAAZ,GAA6B,UAAS9L,QAAT,EAAmB;AAC9CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYgM,cAA1B,EAA0C/M,IAAI,CAACkB,OAA/C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BxL,WAA3B,GAAyC,4BAAzC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqCC,QAArC,GAAgD,UAASC,mBAAT,EAA8B;AAC5E,WAAOnB,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BrL,QAA3B,CAAoCC,mBAApC,EAAyD,IAAzD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BrL,QAA3B,GAAsC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACnE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXiL,MAAAA,OAAO,EAAEnL,GAAG,CAACoL,gBAAJ,EADE;AAEXC,MAAAA,IAAI,EAAErL,GAAG,CAACsL,aAAJ,EAFK;AAGXC,MAAAA,UAAU,EAAEpN,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,KAAzC,CAHD,EAAb;;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BpK,iBAA3B,GAA+C,UAASC,KAAT,EAAgB;AAC7D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYgM,cAAhB,EAAV;AACA,SAAOvM,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BhK,2BAA3B,CAAuDlB,GAAvD,EAA4DgB,MAA5D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BhK,2BAA3B,GAAyD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC7E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACwL,UAAJ,CAAejK,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACyL,OAAJ,CAAYlK,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,sBAAwBP,MAAM,CAACqD,QAAP,EAApC;AACArE,QAAAA,GAAG,CAAC0L,aAAJ,CAAkBnK,KAAlB;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAfF;;AAiBD;AACD,SAAOjC,GAAP;AACD,CAzBD;;;AA4BA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqCsC,eAArC,GAAuD,YAAW;AAChE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2B7I,uBAA3B,CAAmD,IAAnD,EAAyDF,MAAzD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2B7I,uBAA3B,GAAqD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC7E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACoJ,eAAR,EAAJ;AACA,MAAI1L,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACqJ,YAAR,EAAJ;AACA,MAAI3L,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACsJ,aAAR,EAAJ;AACA,MAAI5L,CAAJ,EAAO;AACLkC,IAAAA,MAAM,CAAC0C,SAAP;AACE,KADF;AAEE5E,IAAAA,CAFF;;AAID;AACF,CAvBD;;;AA0BA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqCkM,UAArC,GAAkD,YAAW;AAC3D,SAAO,oCAAqC3N,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqCwL,gBAArC,GAAwD,YAAW;AACjE,SAAO,sBAAuBjN,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK2I,UAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAnN,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqC+L,eAArC,GAAuD,YAAW;AAChE,SAAO,2BAA4BxN,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK0I,UAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAnN,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqC4L,UAArC,GAAkD,UAASjK,KAAT,EAAgB;AAChEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqCmM,OAArC,GAA+C,YAAW;AACxD,SAAO,oCAAqC5N,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqC0L,aAArC,GAAqD,YAAW;AAC9D,SAAO,sBAAuBnN,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK4I,OAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOApN,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqCgM,YAArC,GAAoD,YAAW;AAC7D,SAAO,2BAA4BzN,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK2I,OAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACApN,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqC6L,OAArC,GAA+C,UAASlK,KAAT,EAAgB;AAC7DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;;;AAMA5C,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqCiM,aAArC,GAAqD,YAAW;AAC9D,SAAO,uBAAwB1N,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,KAA1C,CAA/B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYgM,cAAZ,CAA2BtL,SAA3B,CAAqC8L,aAArC,GAAqD,UAASnK,KAAT,EAAgB;AACnEpD,EAAAA,IAAI,CAACkB,OAAL,CAAa6F,qBAAb,CAAmC,IAAnC,EAAyC,CAAzC,EAA4C3D,KAA5C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,GAAmB,UAAS5M,QAAT,EAAmB;AACpCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBxD,eAAhE,EAAiF,IAAjF;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY8M,IAA1B,EAAgC7N,IAAI,CAACkB,OAArC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBtM,WAAjB,GAA+B,kBAA/B;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBxD,eAAjB,GAAmC,CAAC,CAAD,CAAnC;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BC,QAA3B,GAAsC,UAASC,mBAAT,EAA8B;AAClE,WAAOnB,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBnM,QAAjB,CAA0BC,mBAA1B,EAA+C,IAA/C,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBnM,QAAjB,GAA4B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACzD,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXqK,MAAAA,OAAO,EAAE,CAACtK,CAAC,GAAGD,GAAG,CAAC6K,UAAJ,EAAL,KAA0BhM,OAAO,CAACoN,WAAR,CAAoBpM,QAApB,CAA6BE,eAA7B,EAA8CE,CAA9C,CADxB;AAEXiM,MAAAA,SAAS,EAAE,CAACjM,CAAC,GAAGD,GAAG,CAACmM,YAAJ,EAAL,KAA4BrN,MAAM,CAACsN,cAAP,CAAsBvM,QAAtB,CAA+BE,eAA/B,EAAgDE,CAAhD,CAF5B;AAGXoM,MAAAA,KAAK,EAAElO,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAHI;AAIXsM,MAAAA,MAAM,EAAEnO,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,KAAzC,CAJG;AAKXuM,MAAAA,SAAS,EAAEpO,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CALA;AAMXwM,MAAAA,QAAQ,EAAErO,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,KAAzC,CANC;AAOXmE,MAAAA,OAAO,EAAEhG,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAPE;AAQXyM,MAAAA,gBAAgB,EAAEtO,IAAI,CAACkB,OAAL,CAAaqN,YAAb,CAA0B1M,GAAG,CAAC2M,mBAAJ,EAA1B;AAClB9N,MAAAA,OAAO,CAAC+N,gBAAR,CAAyB/M,QADP,EACiBE,eADjB,CARP;AAUX8M,MAAAA,YAAY,EAAE1O,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAVH,EAAb;;;AAaA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAlBD;AAmBC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBlL,iBAAjB,GAAqC,UAASC,KAAT,EAAgB;AACnD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY8M,IAAhB,EAAV;AACA,SAAOrN,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiB9K,2BAAjB,CAA6ClB,GAA7C,EAAkDgB,MAAlD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiB9K,2BAAjB,GAA+C,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACnE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI1C,OAAO,CAACoN,WAAZ,EAAZ;AACAjL,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB1C,OAAO,CAACoN,WAAR,CAAoB/K,2BAA7C;AACAlB,QAAAA,GAAG,CAAC0K,UAAJ,CAAenJ,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAIzC,MAAM,CAACsN,cAAX,EAAZ;AACApL,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyBzC,MAAM,CAACsN,cAAP,CAAsBlL,2BAA/C;AACAlB,QAAAA,GAAG,CAAC8M,YAAJ,CAAiBvL,KAAjB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACyD,SAAP,EAAnC;AACAzE,QAAAA,GAAG,CAAC+M,QAAJ,CAAaxL,KAAb;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,sBAAwBP,MAAM,CAACqD,QAAP,EAApC;AACArE,QAAAA,GAAG,CAACgN,SAAJ,CAAczL,KAAd;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACiM,SAAP,EAAnC;AACAjN,QAAAA,GAAG,CAACkN,YAAJ,CAAiB3L,KAAjB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,sBAAwBP,MAAM,CAACqD,QAAP,EAApC;AACArE,QAAAA,GAAG,CAACmN,WAAJ,CAAgB5L,KAAhB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAAC0E,UAAJ,CAAenD,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAI1C,OAAO,CAAC+N,gBAAZ,EAAZ;AACA5L,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB1C,OAAO,CAAC+N,gBAAR,CAAyB1L,2BAAlD;AACAlB,QAAAA,GAAG,CAACoN,eAAJ,CAAoB7L,KAApB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,oCAAsCP,MAAM,CAACqM,QAAP,EAAlD;AACArN,QAAAA,GAAG,CAACsN,eAAJ,CAAoB/L,KAApB;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cA1CF;;AA4CD;AACD,SAAOjC,GAAP;AACD,CApDD;;;AAuDA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BsC,eAA3B,GAA6C,YAAW;AACtD,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiB3J,uBAAjB,CAAyC,IAAzC,EAA+CF,MAA/C;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiB3J,uBAAjB,GAA2C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACnE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACsI,UAAR,EAAJ;AACA,MAAI5K,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEpB,IAAAA,OAAO,CAACoN,WAAR,CAAoB5J,uBAHtB;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAAC4J,YAAR,EAAJ;AACA,MAAIlM,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEnB,IAAAA,MAAM,CAACsN,cAAP,CAAsB/J,uBAHxB;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAACgL,QAAR,EAAJ;AACA,MAAItN,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8C,UAAP;AACE,KADF;AAEEhF,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACiL,SAAR,EAAJ;AACA,MAAIvN,CAAJ,EAAO;AACLkC,IAAAA,MAAM,CAAC0C,SAAP;AACE,KADF;AAEE5E,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACkL,YAAR,EAAJ;AACA,MAAIxN,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAACuL,UAAP;AACE,KADF;AAEEzN,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACoL,WAAR,EAAJ;AACA,MAAI1N,CAAJ,EAAO;AACLkC,IAAAA,MAAM,CAAC0C,SAAP;AACE,KADF;AAEE5E,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACyC,UAAR,EAAJ;AACA,MAAI/E,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACoK,mBAAR,EAAJ;AACA,MAAI1M,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACyL,oBAAP;AACE,KADF;AAEE3N,IAAAA,CAFF;AAGEpB,IAAAA,OAAO,CAAC+N,gBAAR,CAAyBvK,uBAH3B;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAACsL,eAAR,EAAJ;AACA,MAAI5N,CAAC,KAAK,GAAV,EAAe;AACbkC,IAAAA,MAAM,CAAC2L,SAAP;AACE,KADF;AAEE7N,IAAAA,CAFF;;AAID;AACF,CApED;;;AAuEA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BiL,UAA3B,GAAwC,YAAW;AACjD,SAAO;AACL1M,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmC5E,OAAO,CAACoN,WAA3C,EAAwD,CAAxD,CADF;AAED,CAHD;;;AAMA;AACAtN,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2B8K,UAA3B,GAAwC,UAASnJ,KAAT,EAAgB;AACtDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BmO,YAA3B,GAA0C,YAAW;AACnD,OAAKrD,UAAL,CAAgBlI,SAAhB;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BoO,UAA3B,GAAwC,YAAW;AACjD,SAAO7P,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;AAKA;;;;AAIAlF,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BuM,YAA3B,GAA0C,YAAW;AACnD,SAAO;AACLhO,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmC3E,MAAM,CAACsN,cAA1C,EAA0D,CAA1D,CADF;AAED,CAHD;;;AAMA;AACAzN,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BkN,YAA3B,GAA0C,UAASvL,KAAT,EAAgB;AACxDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BqO,cAA3B,GAA4C,YAAW;AACrD,OAAKnB,YAAL,CAAkBtK,SAAlB;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BsO,YAA3B,GAA0C,YAAW;AACnD,SAAO/P,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;AAKA;;;;AAIAlF,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2B2N,QAA3B,GAAsC,YAAW;AAC/C,SAAO,sBAAuBpP,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BmN,QAA3B,GAAsC,UAASxL,KAAT,EAAgB;AACpDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;;;AAMA5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2B4N,SAA3B,GAAuC,YAAW;AAChD,SAAO,uBAAwBrP,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,KAA1C,CAA/B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BoN,SAA3B,GAAuC,UAASzL,KAAT,EAAgB;AACrDpD,EAAAA,IAAI,CAACkB,OAAL,CAAa6F,qBAAb,CAAmC,IAAnC,EAAyC,CAAzC,EAA4C3D,KAA5C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2B6N,YAA3B,GAA0C,YAAW;AACnD,SAAO,sBAAuBtP,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BsN,YAA3B,GAA0C,UAAS3L,KAAT,EAAgB;AACxDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;;;AAMA5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2B+N,WAA3B,GAAyC,YAAW;AAClD,SAAO,uBAAwBxP,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,KAA1C,CAA/B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BuN,WAA3B,GAAyC,UAAS5L,KAAT,EAAgB;AACvDpD,EAAAA,IAAI,CAACkB,OAAL,CAAa6F,qBAAb,CAAmC,IAAnC,EAAyC,CAAzC,EAA4C3D,KAA5C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BoF,UAA3B,GAAwC,YAAW;AACjD,SAAO,sBAAuB7G,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2B8E,UAA3B,GAAwC,UAASnD,KAAT,EAAgB;AACtDpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2B+M,mBAA3B,GAAiD,YAAW;AAC1D,SAAO;AACLxO,IAAAA,IAAI,CAACkB,OAAL,CAAa8O,uBAAb,CAAqC,IAArC,EAA2CtP,OAAO,CAAC+N,gBAAnD,EAAqE,CAArE,CADF;AAED,CAHD;;;AAMA;AACAjO,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BwO,mBAA3B,GAAiD,UAAS7M,KAAT,EAAgB;AAC/DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagP,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8C9M,KAA9C;AACD,CAFD;;;AAKA;;;;;AAKA5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BwN,eAA3B,GAA6C,UAASkB,SAAT,EAAoBtE,SAApB,EAA+B;AAC1E,SAAO7L,IAAI,CAACkB,OAAL,CAAakP,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2D3P,KAAK,CAACO,KAAN,CAAY0N,gBAAvE,EAAyF5C,SAAzF,CAAP;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2B4O,qBAA3B,GAAmD,YAAW;AAC5D,OAAKJ,mBAAL,CAAyB,EAAzB;AACD,CAFD;;;AAKA;;;;AAIAzP,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2BiO,eAA3B,GAA6C,YAAW;AACtD,SAAO,qCAAsC1P,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA7C;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBpM,SAAjB,CAA2B0N,eAA3B,GAA6C,UAAS/L,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaoP,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyClN,KAAzC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYwP,QAAZ,GAAuB,UAAStP,QAAT,EAAmB;AACxCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqBlG,eAApE,EAAqF,IAArF;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYwP,QAA1B,EAAoCvQ,IAAI,CAACkB,OAAzC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqBhP,WAArB,GAAmC,sBAAnC;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqBlG,eAArB,GAAuC,CAAC,CAAD,CAAvC;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqB9O,SAArB,CAA+BC,QAA/B,GAA0C,UAASC,mBAAT,EAA8B;AACtE,WAAOnB,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqB7O,QAArB,CAA8BC,mBAA9B,EAAmD,IAAnD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqB7O,QAArB,GAAgC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC7D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXyO,MAAAA,SAAS,EAAExQ,IAAI,CAACkB,OAAL,CAAaqN,YAAb,CAA0B1M,GAAG,CAAC4O,YAAJ,EAA1B;AACXjQ,MAAAA,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiBnM,QADN,EACgBE,eADhB,CADA,EAAb;;;AAKA,QAAIA,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqB5N,iBAArB,GAAyC,UAASC,KAAT,EAAgB;AACvD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYwP,QAAhB,EAAV;AACA,SAAO/P,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqBxN,2BAArB,CAAiDlB,GAAjD,EAAsDgB,MAAtD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqBxN,2BAArB,GAAmD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACvE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAY8M,IAAhB,EAAZ;AACAhL,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiB9K,2BAA1C;AACAlB,QAAAA,GAAG,CAAC6O,QAAJ,CAAatN,KAAb;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cARF;;AAUD;AACD,SAAOjC,GAAP;AACD,CAlBD;;;AAqBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqB9O,SAArB,CAA+BsC,eAA/B,GAAiD,YAAW;AAC1D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqBrM,uBAArB,CAA6C,IAA7C,EAAmDF,MAAnD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqBrM,uBAArB,GAA+C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACvE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACqM,YAAR,EAAJ;AACA,MAAI3O,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACyL,oBAAP;AACE,KADF;AAEE3N,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAY8M,IAAZ,CAAiB3J,uBAHnB;;AAKD;AACF,CAVD;;;AAaA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqB9O,SAArB,CAA+BgP,YAA/B,GAA8C,YAAW;AACvD,SAAO;AACLzQ,IAAAA,IAAI,CAACkB,OAAL,CAAa8O,uBAAb,CAAqC,IAArC,EAA2CxP,KAAK,CAACO,KAAN,CAAY8M,IAAvD,EAA6D,CAA7D,CADF;AAED,CAHD;;;AAMA;AACArN,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqB9O,SAArB,CAA+BkP,YAA/B,GAA8C,UAASvN,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagP,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8C9M,KAA9C;AACD,CAFD;;;AAKA;;;;;AAKA5C,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqB9O,SAArB,CAA+BiP,QAA/B,GAA0C,UAASP,SAAT,EAAoBtE,SAApB,EAA+B;AACvE,SAAO7L,IAAI,CAACkB,OAAL,CAAakP,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2D3P,KAAK,CAACO,KAAN,CAAY8M,IAAvE,EAA6EhC,SAA7E,CAAP;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAYwP,QAAZ,CAAqB9O,SAArB,CAA+BmP,cAA/B,GAAgD,YAAW;AACzD,OAAKD,YAAL,CAAkB,EAAlB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUAnQ,KAAK,CAACO,KAAN,CAAY8P,UAAZ,GAAyB,UAAS5P,QAAT,EAAmB;AAC1CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY8P,UAA1B,EAAsC7Q,IAAI,CAACkB,OAA3C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBtP,WAAvB,GAAqC,wBAArC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiCC,QAAjC,GAA4C,UAASC,mBAAT,EAA8B;AACxE,WAAOnB,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBnP,QAAvB,CAAgCC,mBAAhC,EAAqD,IAArD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBnP,QAAvB,GAAkC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC/D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXuI,MAAAA,IAAI,EAAEzI,GAAG,CAAC0I,aAAJ,EADK;AAEXuG,MAAAA,MAAM,EAAE9Q,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFG;AAGXkP,MAAAA,IAAI,EAAE/Q,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAHK;AAIXmP,MAAAA,MAAM,EAAEhR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAJG;AAKXoP,MAAAA,GAAG,EAAEjR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,KAAzC,CALM,EAAb;;;AAQA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAbD;AAcC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBlO,iBAAvB,GAA2C,UAASC,KAAT,EAAgB;AACzD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY8P,UAAhB,EAAV;AACA,SAAOrQ,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuB9N,2BAAvB,CAAmDlB,GAAnD,EAAwDgB,MAAxD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuB9N,2BAAvB,GAAqD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACzE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACgJ,OAAJ,CAAYzH,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACU,UAAP,EAAnC;AACA1B,QAAAA,GAAG,CAACqP,SAAJ,CAAc9N,KAAd;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAACsP,OAAJ,CAAY/N,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAACuP,SAAJ,CAAchO,KAAd;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,sBAAwBP,MAAM,CAACqD,QAAP,EAApC;AACArE,QAAAA,GAAG,CAACwP,MAAJ,CAAWjO,KAAX;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAvBF;;AAyBD;AACD,SAAOjC,GAAP;AACD,CAjCD;;;AAoCA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiCsC,eAAjC,GAAmD,YAAW;AAC5D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuB3M,uBAAvB,CAA+C,IAA/C,EAAqDF,MAArD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuB3M,uBAAvB,GAAiD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACzE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC6G,YAAR,EAAJ;AACA,MAAInJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACkN,SAAR,EAAJ;AACA,MAAIxP,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAACU,WAAP;AACE,KADF;AAEE5C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACmN,OAAR,EAAJ;AACA,MAAIzP,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACoN,SAAR,EAAJ;AACA,MAAI1P,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACqN,MAAR,EAAJ;AACA,MAAI3P,CAAJ,EAAO;AACLkC,IAAAA,MAAM,CAAC0C,SAAP;AACE,KADF;AAEE5E,IAAAA,CAFF;;AAID;AACF,CArCD;;;AAwCA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiC6J,OAAjC,GAA2C,YAAW;AACpD,SAAO,oCAAqCtL,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiC8I,aAAjC,GAAiD,YAAW;AAC1D,SAAO,sBAAuBvK,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKsG,OAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOA9K,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiCwJ,YAAjC,GAAgD,YAAW;AACzD,SAAO,2BAA4BjL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKqG,OAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACA9K,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiCoJ,OAAjC,GAA2C,UAASzH,KAAT,EAAgB;AACzDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiC6P,SAAjC,GAA6C,YAAW;AACtD,SAAO,sBAAuBtR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiCyP,SAAjC,GAA6C,UAAS9N,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiC8P,OAAjC,GAA2C,YAAW;AACpD,SAAO,sBAAuBvR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiC0P,OAAjC,GAA2C,UAAS/N,KAAT,EAAgB;AACzDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiC+P,SAAjC,GAA6C,YAAW;AACtD,SAAO,sBAAuBxR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiC2P,SAAjC,GAA6C,UAAShO,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;;;AAMA5C,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiCgQ,MAAjC,GAA0C,YAAW;AACnD,SAAO,uBAAwBzR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,KAA1C,CAA/B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8P,UAAZ,CAAuBpP,SAAvB,CAAiC4P,MAAjC,GAA0C,UAASjO,KAAT,EAAgB;AACxDpD,EAAAA,IAAI,CAACkB,OAAL,CAAa6F,qBAAb,CAAmC,IAAnC,EAAyC,CAAzC,EAA4C3D,KAA5C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,GAAyB,UAASzQ,QAAT,EAAmB;AAC1CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY2Q,UAA1B,EAAsC1R,IAAI,CAACkB,OAA3C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBnQ,WAAvB,GAAqC,wBAArC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBjQ,SAAvB,CAAiCC,QAAjC,GAA4C,UAASC,mBAAT,EAA8B;AACxE,WAAOnB,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBhQ,QAAvB,CAAgCC,mBAAhC,EAAqD,IAArD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBhQ,QAAvB,GAAkC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC/D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXiP,MAAAA,MAAM,EAAEhR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CADG;AAEXkP,MAAAA,IAAI,EAAE/Q,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFK,EAAb;;;AAKA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuB/O,iBAAvB,GAA2C,UAASC,KAAT,EAAgB;AACzD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY2Q,UAAhB,EAAV;AACA,SAAOlR,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuB3O,2BAAvB,CAAmDlB,GAAnD,EAAwDgB,MAAxD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuB3O,2BAAvB,GAAqD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACzE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAACuP,SAAJ,CAAchO,KAAd;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAACsP,OAAJ,CAAY/N,KAAZ;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAXF;;AAaD;AACD,SAAOjC,GAAP;AACD,CArBD;;;AAwBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBjQ,SAAvB,CAAiCsC,eAAjC,GAAmD,YAAW;AAC5D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBxN,uBAAvB,CAA+C,IAA/C,EAAqDF,MAArD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBxN,uBAAvB,GAAiD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACzE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACoN,SAAR,EAAJ;AACA,MAAI1P,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACmN,OAAR,EAAJ;AACA,MAAIzP,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACF,CAhBD;;;AAmBA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBjQ,SAAvB,CAAiC+P,SAAjC,GAA6C,YAAW;AACtD,SAAO,sBAAuBxR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBjQ,SAAvB,CAAiC2P,SAAjC,GAA6C,UAAShO,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBjQ,SAAvB,CAAiC8P,OAAjC,GAA2C,YAAW;AACpD,SAAO,sBAAuBvR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBjQ,SAAvB,CAAiC0P,OAAjC,GAA2C,UAAS/N,KAAT,EAAgB;AACzDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,GAA6B,UAAS1Q,QAAT,EAAmB;AAC9CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY4Q,cAA1B,EAA0C3R,IAAI,CAACkB,OAA/C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BpQ,WAA3B,GAAyC,4BAAzC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqCC,QAArC,GAAgD,UAASC,mBAAT,EAA8B;AAC5E,WAAOnB,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BjQ,QAA3B,CAAoCC,mBAApC,EAAyD,IAAzD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BjQ,QAA3B,GAAsC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACnE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACX6P,MAAAA,KAAK,EAAE5R,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CADI;AAEXmP,MAAAA,MAAM,EAAEhR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFG;AAGXkP,MAAAA,IAAI,EAAE/Q,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAHK;AAIXgQ,MAAAA,IAAI,EAAE,CAAC/P,CAAC,GAAGD,GAAG,CAACiQ,OAAJ,EAAL,KAAuBzR,aAAa,CAAC0R,SAAd,CAAwBrQ,QAAxB,CAAiCE,eAAjC,EAAkDE,CAAlD,CAJlB,EAAb;;;AAOA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAZD;AAaC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BhP,iBAA3B,GAA+C,UAASC,KAAT,EAAgB;AAC7D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY4Q,cAAhB,EAAV;AACA,SAAOnR,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2B5O,2BAA3B,CAAuDlB,GAAvD,EAA4DgB,MAA5D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2B5O,2BAA3B,GAAyD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC7E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAACmQ,QAAJ,CAAa5O,KAAb;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAACuP,SAAJ,CAAchO,KAAd;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAACsP,OAAJ,CAAY/N,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAI/C,aAAa,CAAC0R,SAAlB,EAAZ;AACAlP,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB/C,aAAa,CAAC0R,SAAd,CAAwBhP,2BAAjD;AACAlB,QAAAA,GAAG,CAACoQ,OAAJ,CAAY7O,KAAZ;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cApBF;;AAsBD;AACD,SAAOjC,GAAP;AACD,CA9BD;;;AAiCA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqCsC,eAArC,GAAuD,YAAW;AAChE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BzN,uBAA3B,CAAmD,IAAnD,EAAyDF,MAAzD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BzN,uBAA3B,GAAqD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC7E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC8N,QAAR,EAAJ;AACA,MAAIpQ,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACoN,SAAR,EAAJ;AACA,MAAI1P,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACmN,OAAR,EAAJ;AACA,MAAIzP,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC0N,OAAR,EAAJ;AACA,MAAIhQ,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEzB,IAAAA,aAAa,CAAC0R,SAAd,CAAwB7N,uBAH1B;;AAKD;AACF,CA/BD;;;AAkCA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqCyQ,QAArC,GAAgD,YAAW;AACzD,SAAO,sBAAuBlS,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqCuQ,QAArC,GAAgD,UAAS5O,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqC+P,SAArC,GAAiD,YAAW;AAC1D,SAAO,sBAAuBxR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqC2P,SAArC,GAAiD,UAAShO,KAAT,EAAgB;AAC/DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqC8P,OAArC,GAA+C,YAAW;AACxD,SAAO,sBAAuBvR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqC0P,OAArC,GAA+C,UAAS/N,KAAT,EAAgB;AAC7DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqCqQ,OAArC,GAA+C,YAAW;AACxD,SAAO;AACL9R,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmCjF,aAAa,CAAC0R,SAAjD,EAA4D,CAA5D,CADF;AAED,CAHD;;;AAMA;AACAvR,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqCwQ,OAArC,GAA+C,UAAS7O,KAAT,EAAgB;AAC7DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqC0Q,SAArC,GAAiD,YAAW;AAC1D,OAAKF,OAAL,CAAa5N,SAAb;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAY4Q,cAAZ,CAA2BlQ,SAA3B,CAAqC2Q,OAArC,GAA+C,YAAW;AACxD,SAAOpS,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUAlF,KAAK,CAACO,KAAN,CAAYsR,eAAZ,GAA8B,UAASpR,QAAT,EAAmB;AAC/CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYsR,eAA1B,EAA2CrS,IAAI,CAACkB,OAAhD;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B9Q,WAA5B,GAA0C,6BAA1C;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsCC,QAAtC,GAAiD,UAASC,mBAAT,EAA8B;AAC7E,WAAOnB,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B3Q,QAA5B,CAAqCC,mBAArC,EAA0D,IAA1D,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B3Q,QAA5B,GAAuC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACpE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXuQ,MAAAA,YAAY,EAAEzQ,GAAG,CAAC0Q,qBAAJ,EADH;AAEXC,MAAAA,MAAM,EAAE,CAAC1Q,CAAC,GAAGD,GAAG,CAAC4Q,SAAJ,EAAL,KAAyBjS,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBhQ,QAAvB,CAAgCE,eAAhC,EAAiDE,CAAjD,CAFtB,EAAb;;;AAKA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B1P,iBAA5B,GAAgD,UAASC,KAAT,EAAgB;AAC9D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYsR,eAAhB,EAAV;AACA,SAAO7R,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4BtP,2BAA5B,CAAwDlB,GAAxD,EAA6DgB,MAA7D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4BtP,2BAA5B,GAA0D,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC9E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC6Q,eAAJ,CAAoBtP,KAApB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAY2Q,UAAhB,EAAZ;AACA7O,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuB3O,2BAAhD;AACAlB,QAAAA,GAAG,CAAC8Q,SAAJ,CAAcvP,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAZF;;AAcD;AACD,SAAOjC,GAAP;AACD,CAtBD;;;AAyBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsCsC,eAAtC,GAAwD,YAAW;AACjE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4BnO,uBAA5B,CAAoD,IAApD,EAA0DF,MAA1D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4BnO,uBAA5B,GAAsD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC9E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACwO,oBAAR,EAAJ;AACA,MAAI9Q,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACqO,SAAR,EAAJ;AACA,MAAI3Q,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAY2Q,UAAZ,CAAuBxN,uBAHzB;;AAKD;AACF,CAjBD;;;AAoBA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsCoR,eAAtC,GAAwD,YAAW;AACjE,SAAO,oCAAqC7S,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsC8Q,qBAAtC,GAA8D,YAAW;AACvE,SAAO,sBAAuBvS,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK6N,eAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOArS,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsCmR,oBAAtC,GAA6D,YAAW;AACtE,SAAO,2BAA4B5S,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK4N,eAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACArS,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsCiR,eAAtC,GAAwD,UAAStP,KAAT,EAAgB;AACtEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsCgR,SAAtC,GAAkD,YAAW;AAC3D,SAAO;AACLzS,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmC9E,KAAK,CAACO,KAAN,CAAY2Q,UAA/C,EAA2D,CAA3D,CADF;AAED,CAHD;;;AAMA;AACAlR,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsCkR,SAAtC,GAAkD,UAASvP,KAAT,EAAgB;AAChEpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsCqR,WAAtC,GAAoD,YAAW;AAC7D,OAAKH,SAAL,CAAetO,SAAf;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAYsR,eAAZ,CAA4B5Q,SAA5B,CAAsCsR,SAAtC,GAAkD,YAAW;AAC3D,SAAO/S,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUAlF,KAAK,CAACO,KAAN,CAAYiS,eAAZ,GAA8B,UAAS/R,QAAT,EAAmB;AAC/CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4B3I,eAA3E,EAA4F,IAA5F;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYiS,eAA1B,EAA2ChT,IAAI,CAACkB,OAAhD;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BzR,WAA5B,GAA0C,6BAA1C;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4B3I,eAA5B,GAA8C,CAAC,CAAD,CAA9C;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BvR,SAA5B,CAAsCC,QAAtC,GAAiD,UAASC,mBAAT,EAA8B;AAC7E,WAAOnB,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BtR,QAA5B,CAAqCC,mBAArC,EAA0D,IAA1D,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BtR,QAA5B,GAAuC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACpE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXkR,MAAAA,UAAU,EAAEjT,IAAI,CAACkB,OAAL,CAAaqN,YAAb,CAA0B1M,GAAG,CAACqR,aAAJ,EAA1B;AACZ7S,MAAAA,aAAa,CAAC8S,KAAd,CAAoBzR,QADR,EACkBE,eADlB,CADD,EAAb;;;AAKA,QAAIA,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BrQ,iBAA5B,GAAgD,UAASC,KAAT,EAAgB;AAC9D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYiS,eAAhB,EAAV;AACA,SAAOxS,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BjQ,2BAA5B,CAAwDlB,GAAxD,EAA6DgB,MAA7D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BjQ,2BAA5B,GAA0D,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC9E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI/C,aAAa,CAAC8S,KAAlB,EAAZ;AACAtQ,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB/C,aAAa,CAAC8S,KAAd,CAAoBpQ,2BAA7C;AACAlB,QAAAA,GAAG,CAACuR,SAAJ,CAAchQ,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cARF;;AAUD;AACD,SAAOjC,GAAP;AACD,CAlBD;;;AAqBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BvR,SAA5B,CAAsCsC,eAAtC,GAAwD,YAAW;AACjE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4B9O,uBAA5B,CAAoD,IAApD,EAA0DF,MAA1D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4B9O,uBAA5B,GAAsD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC9E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC8O,aAAR,EAAJ;AACA,MAAIpR,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACyL,oBAAP;AACE,KADF;AAEE3N,IAAAA,CAFF;AAGEzB,IAAAA,aAAa,CAAC8S,KAAd,CAAoBjP,uBAHtB;;AAKD;AACF,CAVD;;;AAaA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BvR,SAA5B,CAAsCyR,aAAtC,GAAsD,YAAW;AAC/D,SAAO;AACLlT,IAAAA,IAAI,CAACkB,OAAL,CAAa8O,uBAAb,CAAqC,IAArC,EAA2C3P,aAAa,CAAC8S,KAAzD,EAAgE,CAAhE,CADF;AAED,CAHD;;;AAMA;AACA3S,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BvR,SAA5B,CAAsC4R,aAAtC,GAAsD,UAASjQ,KAAT,EAAgB;AACpEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagP,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8C9M,KAA9C;AACD,CAFD;;;AAKA;;;;;AAKA5C,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BvR,SAA5B,CAAsC2R,SAAtC,GAAkD,UAASjD,SAAT,EAAoBtE,SAApB,EAA+B;AAC/E,SAAO7L,IAAI,CAACkB,OAAL,CAAakP,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2D3P,KAAK,CAACO,KAAN,CAAYoS,KAAvE,EAA8EtH,SAA9E,CAAP;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAYiS,eAAZ,CAA4BvR,SAA5B,CAAsC6R,eAAtC,GAAwD,YAAW;AACjE,OAAKD,aAAL,CAAmB,EAAnB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA7S,KAAK,CAACO,KAAN,CAAYwS,aAAZ,GAA4B,UAAStS,QAAT,EAAmB;AAC7CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYwS,aAA1B,EAAyCvT,IAAI,CAACkB,OAA9C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0BhS,WAA1B,GAAwC,2BAAxC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCC,QAApC,GAA+C,UAASC,mBAAT,EAA8B;AAC3E,WAAOnB,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B7R,QAA1B,CAAmCC,mBAAnC,EAAwD,IAAxD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B7R,QAA1B,GAAqC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAClE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXuI,MAAAA,IAAI,EAAEzI,GAAG,CAAC0I,aAAJ,EADK;AAEXiJ,MAAAA,MAAM,EAAE,CAAC1R,CAAC,GAAGD,GAAG,CAAC4R,SAAJ,EAAL,KAAyBpT,aAAa,CAACqT,WAAd,CAA0BhS,QAA1B,CAAmCE,eAAnC,EAAoDE,CAApD,CAFtB;AAGX6R,MAAAA,OAAO,EAAE3T,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAHE;AAIXkP,MAAAA,IAAI,EAAE/Q,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAJK,EAAb;;;AAOA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAZD;AAaC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B5Q,iBAA1B,GAA8C,UAASC,KAAT,EAAgB;AAC5D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYwS,aAAhB,EAAV;AACA,SAAO/S,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0BxQ,2BAA1B,CAAsDlB,GAAtD,EAA2DgB,MAA3D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0BxQ,2BAA1B,GAAwD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC5E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACgJ,OAAJ,CAAYzH,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAI/C,aAAa,CAACqT,WAAlB,EAAZ;AACA7Q,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB/C,aAAa,CAACqT,WAAd,CAA0B3Q,2BAAnD;AACAlB,QAAAA,GAAG,CAAC+R,SAAJ,CAAcxQ,KAAd;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACyD,SAAP,EAAnC;AACAzE,QAAAA,GAAG,CAACgS,UAAJ,CAAezQ,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACiM,SAAP,EAAnC;AACAjN,QAAAA,GAAG,CAACsP,OAAJ,CAAY/N,KAAZ;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cApBF;;AAsBD;AACD,SAAOjC,GAAP;AACD,CA9BD;;;AAiCA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCsC,eAApC,GAAsD,YAAW;AAC/D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0BrP,uBAA1B,CAAkD,IAAlD,EAAwDF,MAAxD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0BrP,uBAA1B,GAAoD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC5E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC6G,YAAR,EAAJ;AACA,MAAInJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACqP,SAAR,EAAJ;AACA,MAAI3R,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEzB,IAAAA,aAAa,CAACqT,WAAd,CAA0BxP,uBAH5B;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAAC0P,UAAR,EAAJ;AACA,MAAIhS,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8C,UAAP;AACE,KADF;AAEEhF,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACmN,OAAR,EAAJ;AACA,MAAIzP,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAACuL,UAAP;AACE,KADF;AAEEzN,IAAAA,CAFF;;AAID;AACF,CA/BD;;;AAkCA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoC6J,OAApC,GAA8C,YAAW;AACvD,SAAO,oCAAqCtL,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoC8I,aAApC,GAAoD,YAAW;AAC7D,SAAO,sBAAuBvK,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKsG,OAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOA9K,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCwJ,YAApC,GAAmD,YAAW;AAC5D,SAAO,2BAA4BjL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKqG,OAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACA9K,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCoJ,OAApC,GAA8C,UAASzH,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCgS,SAApC,GAAgD,YAAW;AACzD,SAAO;AACLzT,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmCjF,aAAa,CAACqT,WAAjD,EAA8D,CAA9D,CADF;AAED,CAHD;;;AAMA;AACAlT,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCmS,SAApC,GAAgD,UAASxQ,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCsS,WAApC,GAAkD,YAAW;AAC3D,OAAKH,SAAL,CAAevP,SAAf;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCuS,SAApC,GAAgD,YAAW;AACzD,SAAOhU,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;AAKA;;;;AAIAlF,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCqS,UAApC,GAAiD,YAAW;AAC1D,SAAO,sBAAuB9T,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoCoS,UAApC,GAAiD,UAASzQ,KAAT,EAAgB;AAC/DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoC8P,OAApC,GAA8C,YAAW;AACvD,SAAO,sBAAuBvR,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B9R,SAA1B,CAAoC0P,OAApC,GAA8C,UAAS/N,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,GAAgC,UAAShT,QAAT,EAAmB;AACjDjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8B5J,eAA7E,EAA8F,IAA9F;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYkT,iBAA1B,EAA6CjU,IAAI,CAACkB,OAAlD;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8B1S,WAA9B,GAA4C,+BAA5C;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8B5J,eAA9B,GAAgD,CAAC,CAAD,CAAhD;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BxS,SAA9B,CAAwCC,QAAxC,GAAmD,UAASC,mBAAT,EAA8B;AAC/E,WAAOnB,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BvS,QAA9B,CAAuCC,mBAAvC,EAA4D,IAA5D,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BvS,QAA9B,GAAyC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACtE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXkR,MAAAA,UAAU,EAAEjT,IAAI,CAACkB,OAAL,CAAaqN,YAAb,CAA0B1M,GAAG,CAACqR,aAAJ,EAA1B;AACZ1S,MAAAA,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0B7R,QADd,EACwBE,eADxB,CADD,EAAb;;;AAKA,QAAIA,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BtR,iBAA9B,GAAkD,UAASC,KAAT,EAAgB;AAChE,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYkT,iBAAhB,EAAV;AACA,SAAOzT,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BlR,2BAA9B,CAA0DlB,GAA1D,EAA+DgB,MAA/D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BlR,2BAA9B,GAA4D,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAChF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAYwS,aAAhB,EAAZ;AACA1Q,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0BxQ,2BAAnD;AACAlB,QAAAA,GAAG,CAACuR,SAAJ,CAAchQ,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cARF;;AAUD;AACD,SAAOjC,GAAP;AACD,CAlBD;;;AAqBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BxS,SAA9B,CAAwCsC,eAAxC,GAA0D,YAAW;AACnE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8B/P,uBAA9B,CAAsD,IAAtD,EAA4DF,MAA5D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8B/P,uBAA9B,GAAwD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAChF,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC8O,aAAR,EAAJ;AACA,MAAIpR,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACyL,oBAAP;AACE,KADF;AAEE3N,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAYwS,aAAZ,CAA0BrP,uBAH5B;;AAKD;AACF,CAVD;;;AAaA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BxS,SAA9B,CAAwCyR,aAAxC,GAAwD,YAAW;AACjE,SAAO;AACLlT,IAAAA,IAAI,CAACkB,OAAL,CAAa8O,uBAAb,CAAqC,IAArC,EAA2CxP,KAAK,CAACO,KAAN,CAAYwS,aAAvD,EAAsE,CAAtE,CADF;AAED,CAHD;;;AAMA;AACA/S,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BxS,SAA9B,CAAwC4R,aAAxC,GAAwD,UAASjQ,KAAT,EAAgB;AACtEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagP,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8C9M,KAA9C;AACD,CAFD;;;AAKA;;;;;AAKA5C,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BxS,SAA9B,CAAwC2R,SAAxC,GAAoD,UAASjD,SAAT,EAAoBtE,SAApB,EAA+B;AACjF,SAAO7L,IAAI,CAACkB,OAAL,CAAakP,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2D3P,KAAK,CAACO,KAAN,CAAYwS,aAAvE,EAAsF1H,SAAtF,CAAP;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAYkT,iBAAZ,CAA8BxS,SAA9B,CAAwC6R,eAAxC,GAA0D,YAAW;AACnE,OAAKD,aAAL,CAAmB,EAAnB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA7S,KAAK,CAACO,KAAN,CAAYmT,YAAZ,GAA2B,UAASjT,QAAT,EAAmB;AAC5CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYmT,YAA1B,EAAwClU,IAAI,CAACkB,OAA7C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyB3S,WAAzB,GAAuC,0BAAvC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmCC,QAAnC,GAA8C,UAASC,mBAAT,EAA8B;AAC1E,WAAOnB,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBxS,QAAzB,CAAkCC,mBAAlC,EAAuD,IAAvD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBxS,QAAzB,GAAoC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACjE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXuI,MAAAA,IAAI,EAAEzI,GAAG,CAAC0I,aAAJ,EADK;AAEX4J,MAAAA,KAAK,EAAEnU,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFI;AAGXuS,MAAAA,MAAM,EAAEpU,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHG,EAAb;;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBvR,iBAAzB,GAA6C,UAASC,KAAT,EAAgB;AAC3D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYmT,YAAhB,EAAV;AACA,SAAO1T,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBnR,2BAAzB,CAAqDlB,GAArD,EAA0DgB,MAA1D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBnR,2BAAzB,GAAuD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC3E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACgJ,OAAJ,CAAYzH,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,wCAA0CP,MAAM,CAACqM,QAAP,EAAtD;AACArN,QAAAA,GAAG,CAACwS,QAAJ,CAAajR,KAAb;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACyS,SAAJ,CAAclR,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAfF;;AAiBD;AACD,SAAOjC,GAAP;AACD,CAzBD;;;AA4BA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmCsC,eAAnC,GAAqD,YAAW;AAC9D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBhQ,uBAAzB,CAAiD,IAAjD,EAAuDF,MAAvD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBhQ,uBAAzB,GAAmD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC3E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC6G,YAAR,EAAJ;AACA,MAAInJ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACmQ,QAAR,EAAJ;AACA,MAAIzS,CAAC,KAAK,GAAV,EAAe;AACbkC,IAAAA,MAAM,CAAC2L,SAAP;AACE,KADF;AAEE7N,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACoQ,SAAR,EAAJ;AACA,MAAI1S,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACF,CAvBD;;;AA0BA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmC6J,OAAnC,GAA6C,YAAW;AACtD,SAAO,oCAAqCtL,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmC8I,aAAnC,GAAmD,YAAW;AAC5D,SAAO,sBAAuBvK,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKsG,OAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOA9K,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmCwJ,YAAnC,GAAkD,YAAW;AAC3D,SAAO,2BAA4BjL,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKqG,OAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACA9K,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmCoJ,OAAnC,GAA6C,UAASzH,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmC8S,QAAnC,GAA8C,YAAW;AACvD,SAAO,yCAA0CvU,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAAjD;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmC4S,QAAnC,GAA8C,UAASjR,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaoP,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyClN,KAAzC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmC+S,SAAnC,GAA+C,YAAW;AACxD,SAAO,sBAAuBxU,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBzS,SAAzB,CAAmC6S,SAAnC,GAA+C,UAASlR,KAAT,EAAgB;AAC7DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,GAA+B,UAASxT,QAAT,EAAmB;AAChDjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BpK,eAA5E,EAA6F,IAA7F;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY0T,gBAA1B,EAA4CzU,IAAI,CAACkB,OAAjD;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BlT,WAA7B,GAA2C,8BAA3C;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BpK,eAA7B,GAA+C,CAAC,CAAD,CAA/C;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BhT,SAA7B,CAAuCC,QAAvC,GAAkD,UAASC,mBAAT,EAA8B;AAC9E,WAAOnB,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6B/S,QAA7B,CAAsCC,mBAAtC,EAA2D,IAA3D,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6B/S,QAA7B,GAAwC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACrE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACX2S,MAAAA,WAAW,EAAE1U,IAAI,CAACkB,OAAL,CAAaqN,YAAb,CAA0B1M,GAAG,CAAC8S,cAAJ,EAA1B;AACbnU,MAAAA,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBxS,QADZ,EACsBE,eADtB,CADF,EAAb;;;AAKA,QAAIA,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6B9R,iBAA7B,GAAiD,UAASC,KAAT,EAAgB;AAC/D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY0T,gBAAhB,EAAV;AACA,SAAOjU,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6B1R,2BAA7B,CAAyDlB,GAAzD,EAA8DgB,MAA9D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6B1R,2BAA7B,GAA2D,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC/E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAYmT,YAAhB,EAAZ;AACArR,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBnR,2BAAlD;AACAlB,QAAAA,GAAG,CAAC+S,UAAJ,CAAexR,KAAf;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cARF;;AAUD;AACD,SAAOjC,GAAP;AACD,CAlBD;;;AAqBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BhT,SAA7B,CAAuCsC,eAAvC,GAAyD,YAAW;AAClE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BvQ,uBAA7B,CAAqD,IAArD,EAA2DF,MAA3D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BvQ,uBAA7B,GAAuD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC/E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACuQ,cAAR,EAAJ;AACA,MAAI7S,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACyL,oBAAP;AACE,KADF;AAEE3N,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAYmT,YAAZ,CAAyBhQ,uBAH3B;;AAKD;AACF,CAVD;;;AAaA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BhT,SAA7B,CAAuCkT,cAAvC,GAAwD,YAAW;AACjE,SAAO;AACL3U,IAAAA,IAAI,CAACkB,OAAL,CAAa8O,uBAAb,CAAqC,IAArC,EAA2CxP,KAAK,CAACO,KAAN,CAAYmT,YAAvD,EAAqE,CAArE,CADF;AAED,CAHD;;;AAMA;AACA1T,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BhT,SAA7B,CAAuCoT,cAAvC,GAAwD,UAASzR,KAAT,EAAgB;AACtEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagP,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8C9M,KAA9C;AACD,CAFD;;;AAKA;;;;;AAKA5C,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BhT,SAA7B,CAAuCmT,UAAvC,GAAoD,UAASzE,SAAT,EAAoBtE,SAApB,EAA+B;AACjF,SAAO7L,IAAI,CAACkB,OAAL,CAAakP,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2D3P,KAAK,CAACO,KAAN,CAAYmT,YAAvE,EAAqFrI,SAArF,CAAP;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAY0T,gBAAZ,CAA6BhT,SAA7B,CAAuCqT,gBAAvC,GAA0D,YAAW;AACnE,OAAKD,cAAL,CAAoB,EAApB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUArU,KAAK,CAACO,KAAN,CAAYgU,YAAZ,GAA2B,UAAS9T,QAAT,EAAmB;AAC5CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYgU,YAA1B,EAAwC/U,IAAI,CAACkB,OAA7C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBxT,WAAzB,GAAuC,0BAAvC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBtT,SAAzB,CAAmCC,QAAnC,GAA8C,UAASC,mBAAT,EAA8B;AAC1E,WAAOnB,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBrT,QAAzB,CAAkCC,mBAAlC,EAAuD,IAAvD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBrT,QAAzB,GAAoC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACjE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXiT,MAAAA,EAAE,EAAE,CAAClT,CAAC,GAAGD,GAAG,CAACoT,KAAJ,EAAL,KAAqB5U,aAAa,CAAC6U,EAAd,CAAiBxT,QAAjB,CAA0BE,eAA1B,EAA2CE,CAA3C,CADd;AAEXqS,MAAAA,KAAK,EAAEnU,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFI,EAAb;;;AAKA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBpS,iBAAzB,GAA6C,UAASC,KAAT,EAAgB;AAC3D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYgU,YAAhB,EAAV;AACA,SAAOvU,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBhS,2BAAzB,CAAqDlB,GAArD,EAA0DgB,MAA1D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBhS,2BAAzB,GAAuD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC3E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI/C,aAAa,CAAC6U,EAAlB,EAAZ;AACArS,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB/C,aAAa,CAAC6U,EAAd,CAAiBnS,2BAA1C;AACAlB,QAAAA,GAAG,CAACsT,KAAJ,CAAU/R,KAAV;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,wCAA0CP,MAAM,CAACqM,QAAP,EAAtD;AACArN,QAAAA,GAAG,CAACwS,QAAJ,CAAajR,KAAb;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAZF;;AAcD;AACD,SAAOjC,GAAP;AACD,CAtBD;;;AAyBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBtT,SAAzB,CAAmCsC,eAAnC,GAAqD,YAAW;AAC9D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyB7Q,uBAAzB,CAAiD,IAAjD,EAAuDF,MAAvD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyB7Q,uBAAzB,GAAmD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC3E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC6Q,KAAR,EAAJ;AACA,MAAInT,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEzB,IAAAA,aAAa,CAAC6U,EAAd,CAAiBhR,uBAHnB;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAACmQ,QAAR,EAAJ;AACA,MAAIzS,CAAC,KAAK,GAAV,EAAe;AACbkC,IAAAA,MAAM,CAAC2L,SAAP;AACE,KADF;AAEE7N,IAAAA,CAFF;;AAID;AACF,CAjBD;;;AAoBA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBtT,SAAzB,CAAmCwT,KAAnC,GAA2C,YAAW;AACpD,SAAO;AACLjV,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmCjF,aAAa,CAAC6U,EAAjD,EAAqD,CAArD,CADF;AAED,CAHD;;;AAMA;AACA1U,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBtT,SAAzB,CAAmC0T,KAAnC,GAA2C,UAAS/R,KAAT,EAAgB;AACzDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBtT,SAAzB,CAAmC2T,OAAnC,GAA6C,YAAW;AACtD,OAAKD,KAAL,CAAW9Q,SAAX;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBtT,SAAzB,CAAmC4T,KAAnC,GAA2C,YAAW;AACpD,SAAOrV,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;AAKA;;;;AAIAlF,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBtT,SAAzB,CAAmC8S,QAAnC,GAA8C,YAAW;AACvD,SAAO,yCAA0CvU,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAAjD;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYgU,YAAZ,CAAyBtT,SAAzB,CAAmC4S,QAAnC,GAA8C,UAASjR,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaoP,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyClN,KAAzC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYuU,QAAZ,GAAuB,UAASrU,QAAT,EAAmB;AACxCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYuU,QAA1B,EAAoCtV,IAAI,CAACkB,OAAzC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB/T,WAArB,GAAmC,sBAAnC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB7T,SAArB,CAA+BC,QAA/B,GAA0C,UAASC,mBAAT,EAA8B;AACtE,WAAOnB,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB5T,QAArB,CAA8BC,mBAA9B,EAAmD,IAAnD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB5T,QAArB,GAAgC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC7D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXwT,MAAAA,UAAU,EAAEvV,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADD;AAEXmL,MAAAA,OAAO,EAAE,CAAClL,CAAC,GAAGD,GAAG,CAAC8L,UAAJ,EAAL,KAA0BlN,UAAU,CAAC+U,OAAX,CAAmB9T,QAAnB,CAA4BE,eAA5B,EAA6CE,CAA7C,CAFxB,EAAb;;;AAKA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB3S,iBAArB,GAAyC,UAASC,KAAT,EAAgB;AACvD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYuU,QAAhB,EAAV;AACA,SAAO9U,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqBvS,2BAArB,CAAiDlB,GAAjD,EAAsDgB,MAAtD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqBvS,2BAArB,GAAmD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACvE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAAC4T,aAAJ,CAAkBrS,KAAlB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAI3C,UAAU,CAAC+U,OAAf,EAAZ;AACA3S,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB3C,UAAU,CAAC+U,OAAX,CAAmBzS,2BAA5C;AACAlB,QAAAA,GAAG,CAACwL,UAAJ,CAAejK,KAAf;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAZF;;AAcD;AACD,SAAOjC,GAAP;AACD,CAtBD;;;AAyBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB7T,SAArB,CAA+BsC,eAA/B,GAAiD,YAAW;AAC1D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqBpR,uBAArB,CAA6C,IAA7C,EAAmDF,MAAnD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqBpR,uBAArB,GAA+C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACvE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACsR,aAAR,EAAJ;AACA,MAAI5T,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACuJ,UAAR,EAAJ;AACA,MAAI7L,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGErB,IAAAA,UAAU,CAAC+U,OAAX,CAAmBtR,uBAHrB;;AAKD;AACF,CAjBD;;;AAoBA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB7T,SAArB,CAA+BiU,aAA/B,GAA+C,YAAW;AACxD,SAAO,sBAAuB1V,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB7T,SAArB,CAA+BgU,aAA/B,GAA+C,UAASrS,KAAT,EAAgB;AAC7DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB7T,SAArB,CAA+BkM,UAA/B,GAA4C,YAAW;AACrD,SAAO;AACL3N,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmC7E,UAAU,CAAC+U,OAA9C,EAAuD,CAAvD,CADF;AAED,CAHD;;;AAMA;AACAhV,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB7T,SAArB,CAA+B4L,UAA/B,GAA4C,UAASjK,KAAT,EAAgB;AAC1DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB7T,SAArB,CAA+BkU,YAA/B,GAA8C,YAAW;AACvD,OAAKtI,UAAL,CAAgBhJ,SAAhB;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAYuU,QAAZ,CAAqB7T,SAArB,CAA+BmU,UAA/B,GAA4C,YAAW;AACrD,SAAO5V,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUAlF,KAAK,CAACO,KAAN,CAAY8U,YAAZ,GAA2B,UAAS5U,QAAT,EAAmB;AAC5CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY8U,YAA1B,EAAwC7V,IAAI,CAACkB,OAA7C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBtU,WAAzB,GAAuC,0BAAvC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmCC,QAAnC,GAA8C,UAASC,mBAAT,EAA8B;AAC1E,WAAOnB,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBnU,QAAzB,CAAkCC,mBAAlC,EAAuD,IAAvD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBnU,QAAzB,GAAoC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACjE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACX+T,MAAAA,GAAG,EAAE,CAAChU,CAAC,GAAGD,GAAG,CAACkU,MAAJ,EAAL,KAAsBvV,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwBlL,QAAxB,CAAiCE,eAAjC,EAAkDE,CAAlD,CADhB;AAEXkU,MAAAA,OAAO,EAAEhW,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAFE;AAGXoU,MAAAA,OAAO,EAAEjW,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHE,EAAb;;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBlT,iBAAzB,GAA6C,UAASC,KAAT,EAAgB;AAC3D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY8U,YAAhB,EAAV;AACA,SAAOrV,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyB9S,2BAAzB,CAAqDlB,GAArD,EAA0DgB,MAA1D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyB9S,2BAAzB,GAAuD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC3E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAY6L,WAAhB,EAAZ;AACA/J,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwB7J,2BAAjD;AACAlB,QAAAA,GAAG,CAACqU,MAAJ,CAAW9S,KAAX;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACsU,UAAJ,CAAe/S,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACuU,UAAJ,CAAehT,KAAf;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAhBF;;AAkBD;AACD,SAAOjC,GAAP;AACD,CA1BD;;;AA6BA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmCsC,eAAnC,GAAqD,YAAW;AAC9D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyB3R,uBAAzB,CAAiD,IAAjD,EAAuDF,MAAvD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyB3R,uBAAzB,GAAmD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC3E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC2R,MAAR,EAAJ;AACA,MAAIjU,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAY6L,WAAZ,CAAwB1I,uBAH1B;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAACiS,UAAR,EAAJ;AACA,MAAIvU,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACkS,UAAR,EAAJ;AACA,MAAIxU,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACF,CAxBD;;;AA2BA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmCsU,MAAnC,GAA4C,YAAW;AACrD,SAAO;AACL/V,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmC9E,KAAK,CAACO,KAAN,CAAY6L,WAA/C,EAA4D,CAA5D,CADF;AAED,CAHD;;;AAMA;AACApM,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmCyU,MAAnC,GAA4C,UAAS9S,KAAT,EAAgB;AAC1DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmC8U,QAAnC,GAA8C,YAAW;AACvD,OAAKL,MAAL,CAAY7R,SAAZ;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmC+U,MAAnC,GAA4C,YAAW;AACrD,SAAOxW,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;AAKA;;;;AAIAlF,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmC4U,UAAnC,GAAgD,YAAW;AACzD,SAAO,sBAAuBrW,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmC0U,UAAnC,GAAgD,UAAS/S,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmC6U,UAAnC,GAAgD,YAAW;AACzD,SAAO,sBAAuBtW,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY8U,YAAZ,CAAyBpU,SAAzB,CAAmC2U,UAAnC,GAAgD,UAAShT,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY0V,OAAZ,GAAsB,UAASxV,QAAT,EAAmB;AACvCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY0V,OAA1B,EAAmCzW,IAAI,CAACkB,OAAxC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBlV,WAApB,GAAkC,qBAAlC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBhV,SAApB,CAA8BC,QAA9B,GAAyC,UAASC,mBAAT,EAA8B;AACrE,WAAOnB,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoB/U,QAApB,CAA6BC,mBAA7B,EAAkD,IAAlD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoB/U,QAApB,GAA+B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC5D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACX2U,MAAAA,MAAM,EAAE7U,GAAG,CAAC8U,eAAJ,EADG;AAEXC,MAAAA,IAAI,EAAE5W,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFK,EAAb;;;AAKA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoB9T,iBAApB,GAAwC,UAASC,KAAT,EAAgB;AACtD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY0V,OAAhB,EAAV;AACA,SAAOjW,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoB1T,2BAApB,CAAgDlB,GAAhD,EAAqDgB,MAArD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoB1T,2BAApB,GAAkD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACtE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACgV,SAAJ,CAAczT,KAAd;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACU,UAAP,EAAnC;AACA1B,QAAAA,GAAG,CAACiV,OAAJ,CAAY1T,KAAZ;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAXF;;AAaD;AACD,SAAOjC,GAAP;AACD,CArBD;;;AAwBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBhV,SAApB,CAA8BsC,eAA9B,GAAgD,YAAW;AACzD,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBvS,uBAApB,CAA4C,IAA5C,EAAkDF,MAAlD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBvS,uBAApB,GAA8C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACtE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC2S,cAAR,EAAJ;AACA,MAAIjV,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC4S,OAAR,EAAJ;AACA,MAAIlV,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAACU,WAAP;AACE,KADF;AAEE5C,IAAAA,CAFF;;AAID;AACF,CAhBD;;;AAmBA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBhV,SAApB,CAA8BwV,SAA9B,GAA0C,YAAW;AACnD,SAAO,oCAAqCjX,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBhV,SAApB,CAA8BkV,eAA9B,GAAgD,YAAW;AACzD,SAAO,sBAAuB3W,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKiS,SAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAzW,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBhV,SAApB,CAA8BsV,cAA9B,GAA+C,YAAW;AACxD,SAAO,2BAA4B/W,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKgS,SAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAzW,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBhV,SAApB,CAA8BoV,SAA9B,GAA0C,UAASzT,KAAT,EAAgB;AACxDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBhV,SAApB,CAA8BuV,OAA9B,GAAwC,YAAW;AACjD,SAAO,sBAAuBhX,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBhV,SAApB,CAA8BqV,OAA9B,GAAwC,UAAS1T,KAAT,EAAgB;AACtDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYmW,IAAZ,GAAmB,UAASjW,QAAT,EAAmB;AACpCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYmW,IAA1B,EAAgClX,IAAI,CAACkB,OAArC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiB3V,WAAjB,GAA+B,kBAA/B;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2BC,QAA3B,GAAsC,UAASC,mBAAT,EAA8B;AAClE,WAAOnB,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBxV,QAAjB,CAA0BC,mBAA1B,EAA+C,IAA/C,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBxV,QAAjB,GAA4B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACzD,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXoV,MAAAA,SAAS,EAAEtV,GAAG,CAACuV,kBAAJ,EADA;AAEXV,MAAAA,MAAM,EAAE7U,GAAG,CAAC8U,eAAJ,EAFG,EAAb;;;AAKA,QAAI/U,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBvU,iBAAjB,GAAqC,UAASC,KAAT,EAAgB;AACnD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYmW,IAAhB,EAAV;AACA,SAAO1W,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBnU,2BAAjB,CAA6ClB,GAA7C,EAAkDgB,MAAlD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBnU,2BAAjB,GAA+C,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACnE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACwV,YAAJ,CAAiBjU,KAAjB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAACgV,SAAJ,CAAczT,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAXF;;AAaD;AACD,SAAOjC,GAAP;AACD,CArBD;;;AAwBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2BsC,eAA3B,GAA6C,YAAW;AACtD,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBhT,uBAAjB,CAAyC,IAAzC,EAA+CF,MAA/C;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBhT,uBAAjB,GAA2C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACnE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACkT,iBAAR,EAAJ;AACA,MAAIxV,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC2S,cAAR,EAAJ;AACA,MAAIjV,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACF,CAhBD;;;AAmBA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2B8V,YAA3B,GAA0C,YAAW;AACnD,SAAO,oCAAqCvX,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2B2V,kBAA3B,GAAgD,YAAW;AACzD,SAAO,sBAAuBpX,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKuS,YAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOA/W,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2B6V,iBAA3B,GAA+C,YAAW;AACxD,SAAO,2BAA4BtX,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKsS,YAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACA/W,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2B4V,YAA3B,GAA0C,UAASjU,KAAT,EAAgB;AACxDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2BwV,SAA3B,GAAuC,YAAW;AAChD,SAAO,oCAAqCjX,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2BkV,eAA3B,GAA6C,YAAW;AACtD,SAAO,sBAAuB3W,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKiS,SAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAzW,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2BsV,cAA3B,GAA4C,YAAW;AACrD,SAAO,2BAA4B/W,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKgS,SAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAzW,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBzV,SAAjB,CAA2BoV,SAA3B,GAAuC,UAASzT,KAAT,EAAgB;AACrDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYyW,UAAZ,GAAyB,UAASvW,QAAT,EAAmB;AAC1CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYyW,UAA1B,EAAsCxX,IAAI,CAACkB,OAA3C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuBjW,WAAvB,GAAqC,wBAArC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuB/V,SAAvB,CAAiCC,QAAjC,GAA4C,UAASC,mBAAT,EAA8B;AACxE,WAAOnB,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuB9V,QAAvB,CAAgCC,mBAAhC,EAAqD,IAArD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuB9V,QAAvB,GAAkC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC/D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXiF,MAAAA,EAAE,EAAEhH,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADO;AAEX4V,MAAAA,KAAK,EAAEzX,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFI,EAAb;;;AAKA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuB7U,iBAAvB,GAA2C,UAASC,KAAT,EAAgB;AACzD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYyW,UAAhB,EAAV;AACA,SAAOhX,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuBzU,2BAAvB,CAAmDlB,GAAnD,EAAwDgB,MAAxD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuBzU,2BAAvB,GAAqD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACzE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACqG,KAAJ,CAAU9E,KAAV;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACsF,UAAP,EAAnC;AACAtG,QAAAA,GAAG,CAAC6V,QAAJ,CAAatU,KAAb;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAXF;;AAaD;AACD,SAAOjC,GAAP;AACD,CArBD;;;AAwBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuB/V,SAAvB,CAAiCsC,eAAjC,GAAmD,YAAW;AAC5D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuBtT,uBAAvB,CAA+C,IAA/C,EAAqDF,MAArD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuBtT,uBAAvB,GAAiD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACzE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC6C,KAAR,EAAJ;AACA,MAAInF,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACuT,QAAR,EAAJ;AACA,MAAI7V,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAAC8E,WAAP;AACE,KADF;AAEEhH,IAAAA,CAFF;;AAID;AACF,CAhBD;;;AAmBA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuB/V,SAAvB,CAAiCwF,KAAjC,GAAyC,YAAW;AAClD,SAAO,sBAAuBjH,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuB/V,SAAvB,CAAiCyG,KAAjC,GAAyC,UAAS9E,KAAT,EAAgB;AACvDpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuB/V,SAAvB,CAAiCkW,QAAjC,GAA4C,YAAW;AACrD,SAAO,sBAAuB3X,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYyW,UAAZ,CAAuB/V,SAAvB,CAAiCiW,QAAjC,GAA4C,UAAStU,KAAT,EAAgB;AAC1DpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY6W,eAAZ,GAA8B,UAAS3W,QAAT,EAAmB;AAC/CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BvN,eAA3E,EAA4F,IAA5F;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY6W,eAA1B,EAA2C5X,IAAI,CAACkB,OAAhD;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BrW,WAA5B,GAA0C,6BAA1C;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BvN,eAA5B,GAA8C,CAAC,CAAD,CAA9C;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsCC,QAAtC,GAAiD,UAASC,mBAAT,EAA8B;AAC7E,WAAOnB,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BlW,QAA5B,CAAqCC,mBAArC,EAA0D,IAA1D,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BlW,QAA5B,GAAuC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACpE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACX8V,MAAAA,OAAO,EAAE,CAAC/V,CAAC,GAAGD,GAAG,CAACiW,UAAJ,EAAL,KAA0BtX,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoB/U,QAApB,CAA6BE,eAA7B,EAA8CE,CAA9C,CADxB;AAEXiW,MAAAA,UAAU,EAAE/X,IAAI,CAACkB,OAAL,CAAaqN,YAAb,CAA0B1M,GAAG,CAACmW,aAAJ,EAA1B;AACZxX,MAAAA,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBvW,QADT,EACmBE,eADnB,CAFD,EAAb;;;AAMA,QAAIA,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BjV,iBAA5B,GAAgD,UAASC,KAAT,EAAgB;AAC9D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY6W,eAAhB,EAAV;AACA,SAAOpX,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4B7U,2BAA5B,CAAwDlB,GAAxD,EAA6DgB,MAA7D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4B7U,2BAA5B,GAA0D,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC9E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAY0V,OAAhB,EAAZ;AACA5T,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoB1T,2BAA7C;AACAlB,QAAAA,GAAG,CAACqW,UAAJ,CAAe9U,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAYkX,QAAhB,EAAZ;AACApV,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBlV,2BAA9C;AACAlB,QAAAA,GAAG,CAACsW,SAAJ,CAAc/U,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAbF;;AAeD;AACD,SAAOjC,GAAP;AACD,CAvBD;;;AA0BA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsCsC,eAAtC,GAAwD,YAAW;AACjE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4B1T,uBAA5B,CAAoD,IAApD,EAA0DF,MAA1D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4B1T,uBAA5B,GAAsD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC9E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC0T,UAAR,EAAJ;AACA,MAAIhW,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAY0V,OAAZ,CAAoBvS,uBAHtB;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAAC4T,aAAR,EAAJ;AACA,MAAIlW,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACyL,oBAAP;AACE,KADF;AAEE3N,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqB/T,uBAHvB;;AAKD;AACF,CAlBD;;;AAqBA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsCqW,UAAtC,GAAmD,YAAW;AAC5D,SAAO;AACL9X,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmC9E,KAAK,CAACO,KAAN,CAAY0V,OAA/C,EAAwD,CAAxD,CADF;AAED,CAHD;;;AAMA;AACAjW,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsCyW,UAAtC,GAAmD,UAAS9U,KAAT,EAAgB;AACjEpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsC2W,YAAtC,GAAqD,YAAW;AAC9D,OAAKF,UAAL,CAAgB7T,SAAhB;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsC4W,UAAtC,GAAmD,YAAW;AAC5D,SAAOrY,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;AAKA;;;;AAIAlF,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsCuW,aAAtC,GAAsD,YAAW;AAC/D,SAAO;AACLhY,IAAAA,IAAI,CAACkB,OAAL,CAAa8O,uBAAb,CAAqC,IAArC,EAA2CxP,KAAK,CAACO,KAAN,CAAYkX,QAAvD,EAAiE,CAAjE,CADF;AAED,CAHD;;;AAMA;AACAzX,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsC6W,aAAtC,GAAsD,UAASlV,KAAT,EAAgB;AACpEpD,EAAAA,IAAI,CAACkB,OAAL,CAAagP,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8C9M,KAA9C;AACD,CAFD;;;AAKA;;;;;AAKA5C,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsC0W,SAAtC,GAAkD,UAAShI,SAAT,EAAoBtE,SAApB,EAA+B;AAC/E,SAAO7L,IAAI,CAACkB,OAAL,CAAakP,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2D3P,KAAK,CAACO,KAAN,CAAYkX,QAAvE,EAAiFpM,SAAjF,CAAP;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAY6W,eAAZ,CAA4BnW,SAA5B,CAAsC8W,eAAtC,GAAwD,YAAW;AACjE,OAAKD,aAAL,CAAmB,EAAnB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA9X,KAAK,CAACO,KAAN,CAAYkX,QAAZ,GAAuB,UAAShX,QAAT,EAAmB;AACxCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqB5N,eAApE,EAAqF,IAArF;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYkX,QAA1B,EAAoCjY,IAAI,CAACkB,OAAzC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqB1W,WAArB,GAAmC,sBAAnC;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqB5N,eAArB,GAAuC,CAAC,CAAD,CAAvC;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+BC,QAA/B,GAA0C,UAASC,mBAAT,EAA8B;AACtE,WAAOnB,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBvW,QAArB,CAA8BC,mBAA9B,EAAmD,IAAnD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBvW,QAArB,GAAgC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC7D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXiF,MAAAA,EAAE,EAAEhH,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADO;AAEX2W,MAAAA,cAAc,EAAExY,IAAI,CAACkB,OAAL,CAAasK,gBAAb,CAA8B3J,GAA9B,EAAmC,CAAnC,CAFL;AAGX6U,MAAAA,MAAM,EAAE1W,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHG,EAAb;;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBtV,iBAArB,GAAyC,UAASC,KAAT,EAAgB;AACvD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYkX,QAAhB,EAAV;AACA,SAAOzX,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBlV,2BAArB,CAAiDlB,GAAjD,EAAsDgB,MAAtD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBlV,2BAArB,GAAmD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACvE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACqG,KAAJ,CAAU9E,KAAV;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAAC4W,aAAJ,CAAkBrV,KAAlB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACgV,SAAJ,CAAczT,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAfF;;AAiBD;AACD,SAAOjC,GAAP;AACD,CAzBD;;;AA4BA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+BsC,eAA/B,GAAiD,YAAW;AAC1D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqB/T,uBAArB,CAA6C,IAA7C,EAAmDF,MAAnD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqB/T,uBAArB,GAA+C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACvE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC6C,KAAR,EAAJ;AACA,MAAInF,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACsU,iBAAR,EAAJ;AACA,MAAI5W,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAAC2U,mBAAP;AACE,KADF;AAEE7W,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC6S,SAAR,EAAJ;AACA,MAAInV,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACF,CAvBD;;;AA0BA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+BwF,KAA/B,GAAuC,YAAW;AAChD,SAAO,sBAAuBjH,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+ByG,KAA/B,GAAuC,UAAS9E,KAAT,EAAgB;AACrDpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+BiX,iBAA/B,GAAmD,YAAW;AAC5D,SAAO,8BAA+B1Y,IAAI,CAACkB,OAAL,CAAasK,gBAAb,CAA8B,IAA9B,EAAoC,CAApC,CAAtC;AACD,CAFD;;;AAKA;AACAhL,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+BmX,iBAA/B,GAAmD,UAASxV,KAAT,EAAgB;AACjEpD,EAAAA,IAAI,CAACkB,OAAL,CAAa0K,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BxI,KAAK,IAAI,EAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+BgX,aAA/B,GAA+C,UAASrV,KAAT,EAAgByI,SAAhB,EAA2B;AACxE7L,EAAAA,IAAI,CAACkB,OAAL,CAAa4K,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyC1I,KAAzC,EAAgDyI,SAAhD;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+BoX,mBAA/B,GAAqD,YAAW;AAC9D,OAAKD,iBAAL,CAAuB,EAAvB;AACD,CAFD;;;AAKA;;;;AAIApY,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+BwV,SAA/B,GAA2C,YAAW;AACpD,SAAO,sBAAuBjX,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYkX,QAAZ,CAAqBxW,SAArB,CAA+BoV,SAA/B,GAA2C,UAASzT,KAAT,EAAgB;AACzDpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY+X,QAAZ,GAAuB,UAAS7X,QAAT,EAAmB;AACxCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBzO,eAApE,EAAqF,IAArF;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY+X,QAA1B,EAAoC9Y,IAAI,CAACkB,OAAzC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBvX,WAArB,GAAmC,sBAAnC;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBzO,eAArB,GAAuC,CAAC,CAAD,CAAvC;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBrX,SAArB,CAA+BC,QAA/B,GAA0C,UAASC,mBAAT,EAA8B;AACtE,WAAOnB,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBpX,QAArB,CAA8BC,mBAA9B,EAAmD,IAAnD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBpX,QAArB,GAAgC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC7D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXgX,MAAAA,SAAS,EAAE/Y,IAAI,CAACkB,OAAL,CAAaqN,YAAb,CAA0B1M,GAAG,CAACmX,YAAJ,EAA1B;AACXxY,MAAAA,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBxV,QADN,EACgBE,eADhB,CADA;AAGXoF,MAAAA,EAAE,EAAEhH,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHO,EAAb;;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBnW,iBAArB,GAAyC,UAASC,KAAT,EAAgB;AACvD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY+X,QAAhB,EAAV;AACA,SAAOtY,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqB/V,2BAArB,CAAiDlB,GAAjD,EAAsDgB,MAAtD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqB/V,2BAArB,GAAmD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACvE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAYmW,IAAhB,EAAZ;AACArU,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBnU,2BAA1C;AACAlB,QAAAA,GAAG,CAACoX,QAAJ,CAAa7V,KAAb;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACqG,KAAJ,CAAU9E,KAAV;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAZF;;AAcD;AACD,SAAOjC,GAAP;AACD,CAtBD;;;AAyBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBrX,SAArB,CAA+BsC,eAA/B,GAAiD,YAAW;AAC1D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqB5U,uBAArB,CAA6C,IAA7C,EAAmDF,MAAnD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqB5U,uBAArB,GAA+C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACvE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC4U,YAAR,EAAJ;AACA,MAAIlX,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACyL,oBAAP;AACE,KADF;AAEE3N,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAYmW,IAAZ,CAAiBhT,uBAHnB;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAAC6C,KAAR,EAAJ;AACA,MAAInF,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACF,CAjBD;;;AAoBA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBrX,SAArB,CAA+BuX,YAA/B,GAA8C,YAAW;AACvD,SAAO;AACLhZ,IAAAA,IAAI,CAACkB,OAAL,CAAa8O,uBAAb,CAAqC,IAArC,EAA2CxP,KAAK,CAACO,KAAN,CAAYmW,IAAvD,EAA6D,CAA7D,CADF;AAED,CAHD;;;AAMA;AACA1W,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBrX,SAArB,CAA+ByX,YAA/B,GAA8C,UAAS9V,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagP,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8C9M,KAA9C;AACD,CAFD;;;AAKA;;;;;AAKA5C,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBrX,SAArB,CAA+BwX,QAA/B,GAA0C,UAAS9I,SAAT,EAAoBtE,SAApB,EAA+B;AACvE,SAAO7L,IAAI,CAACkB,OAAL,CAAakP,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2D3P,KAAK,CAACO,KAAN,CAAYmW,IAAvE,EAA6ErL,SAA7E,CAAP;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBrX,SAArB,CAA+B0X,cAA/B,GAAgD,YAAW;AACzD,OAAKD,YAAL,CAAkB,EAAlB;AACD,CAFD;;;AAKA;;;;AAIA1Y,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBrX,SAArB,CAA+BwF,KAA/B,GAAuC,YAAW;AAChD,SAAO,sBAAuBjH,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAY+X,QAAZ,CAAqBrX,SAArB,CAA+ByG,KAA/B,GAAuC,UAAS9E,KAAT,EAAgB;AACrDpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYqY,OAAZ,GAAsB,UAASnY,QAAT,EAAmB;AACvCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYqY,OAA1B,EAAmCpZ,IAAI,CAACkB,OAAxC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB7X,WAApB,GAAkC,qBAAlC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8BC,QAA9B,GAAyC,UAASC,mBAAT,EAA8B;AACrE,WAAOnB,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB1X,QAApB,CAA6BC,mBAA7B,EAAkD,IAAlD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB1X,QAApB,GAA+B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC5D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXsX,MAAAA,OAAO,EAAExX,GAAG,CAACyX,gBAAJ,EADE;AAEXC,MAAAA,SAAS,EAAE1X,GAAG,CAAC2X,kBAAJ,EAFA,EAAb;;;AAKA,QAAI5X,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoBzW,iBAApB,GAAwC,UAASC,KAAT,EAAgB;AACtD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYqY,OAAhB,EAAV;AACA,SAAO5Y,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoBrW,2BAApB,CAAgDlB,GAAhD,EAAqDgB,MAArD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoBrW,2BAApB,GAAkD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACtE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC4X,UAAJ,CAAerW,KAAf;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC6X,YAAJ,CAAiBtW,KAAjB;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAXF;;AAaD;AACD,SAAOjC,GAAP;AACD,CArBD;;;AAwBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8BsC,eAA9B,GAAgD,YAAW;AACzD,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoBlV,uBAApB,CAA4C,IAA5C,EAAkDF,MAAlD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoBlV,uBAApB,GAA8C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACtE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACuV,eAAR,EAAJ;AACA,MAAI7X,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACwV,iBAAR,EAAJ;AACA,MAAI9X,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACF,CAhBD;;;AAmBA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8BoY,UAA9B,GAA2C,YAAW;AACpD,SAAO,oCAAqC7Z,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8B6X,gBAA9B,GAAiD,YAAW;AAC1D,SAAO,sBAAuBtZ,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK6U,UAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOArZ,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8BkY,eAA9B,GAAgD,YAAW;AACzD,SAAO,2BAA4B3Z,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK4U,UAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACArZ,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8BgY,UAA9B,GAA2C,UAASrW,KAAT,EAAgB;AACzDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8BqY,YAA9B,GAA6C,YAAW;AACtD,SAAO,oCAAqC9Z,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8B+X,kBAA9B,GAAmD,YAAW;AAC5D,SAAO,sBAAuBxZ,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAK8U,YAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAtZ,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8BmY,iBAA9B,GAAkD,YAAW;AAC3D,SAAO,2BAA4B5Z,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAK6U,YAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAtZ,KAAK,CAACO,KAAN,CAAYqY,OAAZ,CAAoB3X,SAApB,CAA8BiY,YAA9B,GAA6C,UAAStW,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,GAAmB,UAAS9Y,QAAT,EAAmB;AACpCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYgZ,IAA1B,EAAgC/Z,IAAI,CAACkB,OAArC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBxY,WAAjB,GAA+B,kBAA/B;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBtY,SAAjB,CAA2BC,QAA3B,GAAsC,UAASC,mBAAT,EAA8B;AAClE,WAAOnB,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBrY,QAAjB,CAA0BC,mBAA1B,EAA+C,IAA/C,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBrY,QAAjB,GAA4B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACzD,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXiY,MAAAA,IAAI,EAAEha,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADK;AAEXoY,MAAAA,OAAO,EAAEja,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFE,EAAb;;;AAKA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBpX,iBAAjB,GAAqC,UAASC,KAAT,EAAgB;AACnD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYgZ,IAAhB,EAAV;AACA,SAAOvZ,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBhX,2BAAjB,CAA6ClB,GAA7C,EAAkDgB,MAAlD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBhX,2BAAjB,GAA+C,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACnE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACqY,OAAJ,CAAY9W,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACU,UAAP,EAAnC;AACA1B,QAAAA,GAAG,CAACsY,UAAJ,CAAe/W,KAAf;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAXF;;AAaD;AACD,SAAOjC,GAAP;AACD,CArBD;;;AAwBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBtY,SAAjB,CAA2BsC,eAA3B,GAA6C,YAAW;AACtD,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiB7V,uBAAjB,CAAyC,IAAzC,EAA+CF,MAA/C;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiB7V,uBAAjB,GAA2C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACnE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACgW,OAAR,EAAJ;AACA,MAAItY,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACiW,UAAR,EAAJ;AACA,MAAIvY,CAAC,KAAK,CAAV,EAAa;AACXkC,IAAAA,MAAM,CAACU,WAAP;AACE,KADF;AAEE5C,IAAAA,CAFF;;AAID;AACF,CAhBD;;;AAmBA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBtY,SAAjB,CAA2B2Y,OAA3B,GAAqC,YAAW;AAC9C,SAAO,sBAAuBpa,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBtY,SAAjB,CAA2ByY,OAA3B,GAAqC,UAAS9W,KAAT,EAAgB;AACnDpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBtY,SAAjB,CAA2B4Y,UAA3B,GAAwC,YAAW;AACjD,SAAO,sBAAuBra,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBtY,SAAjB,CAA2B0Y,UAA3B,GAAwC,UAAS/W,KAAT,EAAgB;AACtDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaiE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwC/B,KAAxC;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,GAAuB,UAASrZ,QAAT,EAAmB;AACxCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYuZ,QAA1B,EAAoCta,IAAI,CAACkB,OAAzC;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB/Y,WAArB,GAAmC,sBAAnC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BC,QAA/B,GAA0C,UAASC,mBAAT,EAA8B;AACtE,WAAOnB,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB5Y,QAArB,CAA8BC,mBAA9B,EAAmD,IAAnD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB5Y,QAArB,GAAgC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC7D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXiY,MAAAA,IAAI,EAAE,CAAClY,CAAC,GAAGD,GAAG,CAACuY,OAAJ,EAAL,KAAuB5Z,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBrY,QAAjB,CAA0BE,eAA1B,EAA2CE,CAA3C,CADlB;AAEXyY,MAAAA,KAAK,EAAE1Y,GAAG,CAAC2Y,cAAJ,EAFI;AAGXC,MAAAA,WAAW,EAAE5Y,GAAG,CAAC6Y,oBAAJ,EAHF,EAAb;;;AAMA,QAAI9Y,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB3X,iBAArB,GAAyC,UAASC,KAAT,EAAgB;AACvD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYuZ,QAAhB,EAAV;AACA,SAAO9Z,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqBvX,2BAArB,CAAiDlB,GAAjD,EAAsDgB,MAAtD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqBvX,2BAArB,GAAmD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACvE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI5C,KAAK,CAACO,KAAN,CAAYgZ,IAAhB,EAAZ;AACAlX,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB5C,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiBhX,2BAA1C;AACAlB,QAAAA,GAAG,CAACqY,OAAJ,CAAY9W,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC8Y,QAAJ,CAAavX,KAAb;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAxB,QAAAA,GAAG,CAAC+Y,cAAJ,CAAmBxX,KAAnB;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAhBF;;AAkBD;AACD,SAAOjC,GAAP;AACD,CA1BD;;;AA6BA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BsC,eAA/B,GAAiD,YAAW;AAC1D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqBpW,uBAArB,CAA6C,IAA7C,EAAmDF,MAAnD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqBpW,uBAArB,GAA+C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACvE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACgW,OAAR,EAAJ;AACA,MAAItY,CAAC,IAAI,IAAT,EAAe;AACbkC,IAAAA,MAAM,CAACc,YAAP;AACE,KADF;AAEEhD,IAAAA,CAFF;AAGEtB,IAAAA,KAAK,CAACO,KAAN,CAAYgZ,IAAZ,CAAiB7V,uBAHnB;;AAKD;AACDpC,EAAAA,CAAC,GAAGsC,OAAO,CAACyW,aAAR,EAAJ;AACA,MAAI/Y,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC0W,mBAAR,EAAJ;AACA,MAAIhZ,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE1C,IAAAA,CAFF;;AAID;AACF,CAxBD;;;AA2BA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+B2Y,OAA/B,GAAyC,YAAW;AAClD,SAAO;AACLpa,IAAAA,IAAI,CAACkB,OAAL,CAAaoE,eAAb,CAA6B,IAA7B,EAAmC9E,KAAK,CAACO,KAAN,CAAYgZ,IAA/C,EAAqD,CAArD,CADF;AAED,CAHD;;;AAMA;AACAvZ,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+ByY,OAA/B,GAAyC,UAAS9W,KAAT,EAAgB;AACvDpD,EAAAA,IAAI,CAACkB,OAAL,CAAaqE,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCnC,KAAtC;AACD,CAFD;;;AAKA5C,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BsZ,SAA/B,GAA2C,YAAW;AACpD,OAAKb,OAAL,CAAa7V,SAAb;AACD,CAFD;;;AAKA;;;;AAIA7D,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BuZ,OAA/B,GAAyC,YAAW;AAClD,SAAOhb,IAAI,CAACkB,OAAL,CAAawE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;;AAKA;;;;AAIAlF,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BwZ,QAA/B,GAA0C,YAAW;AACnD,SAAO,oCAAqCjb,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+B+Y,cAA/B,GAAgD,YAAW;AACzD,SAAO,sBAAuBxa,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKiW,QAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOAza,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BoZ,aAA/B,GAA+C,YAAW;AACxD,SAAO,2BAA4B7a,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKgW,QAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACAza,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BkZ,QAA/B,GAA0C,UAASvX,KAAT,EAAgB;AACxDpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+ByZ,cAA/B,GAAgD,YAAW;AACzD,SAAO,oCAAqClb,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA3B,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BiZ,oBAA/B,GAAsD,YAAW;AAC/D,SAAO,sBAAuB1a,IAAI,CAACkB,OAAL,CAAa8D,UAAb;AAC1B,SAAKkW,cAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOA1a,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BqZ,mBAA/B,GAAqD,YAAW;AAC9D,SAAO,2BAA4B9a,IAAI,CAACkB,OAAL,CAAa+D,SAAb;AAC/B,SAAKiW,cAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACA1a,KAAK,CAACO,KAAN,CAAYuZ,QAAZ,CAAqB7Y,SAArB,CAA+BmZ,cAA/B,GAAgD,UAASxX,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagE,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C9B,KAA1C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYoa,WAAZ,GAA0B,UAASla,QAAT,EAAmB;AAC3CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYoa,WAA1B,EAAuCnb,IAAI,CAACkB,OAA5C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwB5Z,WAAxB,GAAsC,yBAAtC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwB1Z,SAAxB,CAAkCC,QAAlC,GAA6C,UAASC,mBAAT,EAA8B;AACzE,WAAOnB,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwBzZ,QAAxB,CAAiCC,mBAAjC,EAAsD,IAAtD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwBzZ,QAAxB,GAAmC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAChE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXqZ,MAAAA,QAAQ,EAAEpb,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,KAAzC,CADC;AAEXwZ,MAAAA,QAAQ,EAAErb,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,KAAzC,CAFC,EAAb;;;AAKA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwBxY,iBAAxB,GAA4C,UAASC,KAAT,EAAgB;AAC1D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYoa,WAAhB,EAAV;AACA,SAAO3a,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwBpY,2BAAxB,CAAoDlB,GAApD,EAAyDgB,MAAzD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwBpY,2BAAxB,GAAsD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC1E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,sBAAwBP,MAAM,CAACqD,QAAP,EAApC;AACArE,QAAAA,GAAG,CAACyZ,WAAJ,CAAgBlY,KAAhB;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,sBAAwBP,MAAM,CAACqD,QAAP,EAApC;AACArE,QAAAA,GAAG,CAAC0Z,WAAJ,CAAgBnY,KAAhB;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAXF;;AAaD;AACD,SAAOjC,GAAP;AACD,CArBD;;;AAwBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwB1Z,SAAxB,CAAkCsC,eAAlC,GAAoD,YAAW;AAC7D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwBjX,uBAAxB,CAAgD,IAAhD,EAAsDF,MAAtD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwBjX,uBAAxB,GAAkD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC1E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACoX,WAAR,EAAJ;AACA,MAAI1Z,CAAJ,EAAO;AACLkC,IAAAA,MAAM,CAAC0C,SAAP;AACE,KADF;AAEE5E,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACqX,WAAR,EAAJ;AACA,MAAI3Z,CAAJ,EAAO;AACLkC,IAAAA,MAAM,CAAC0C,SAAP;AACE,KADF;AAEE5E,IAAAA,CAFF;;AAID;AACF,CAhBD;;;AAmBA;;;;;;AAMAtB,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwB1Z,SAAxB,CAAkC+Z,WAAlC,GAAgD,YAAW;AACzD,SAAO,uBAAwBxb,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,KAA1C,CAA/B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwB1Z,SAAxB,CAAkC6Z,WAAlC,GAAgD,UAASlY,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAa6F,qBAAb,CAAmC,IAAnC,EAAyC,CAAzC,EAA4C3D,KAA5C;AACD,CAFD;;;AAKA;;;;;;AAMA5C,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwB1Z,SAAxB,CAAkCga,WAAlC,GAAgD,YAAW;AACzD,SAAO,uBAAwBzb,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,KAA1C,CAA/B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYoa,WAAZ,CAAwB1Z,SAAxB,CAAkC8Z,WAAlC,GAAgD,UAASnY,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAa6F,qBAAb,CAAmC,IAAnC,EAAyC,CAAzC,EAA4C3D,KAA5C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAY2a,SAAZ,GAAwB,UAASza,QAAT,EAAmB;AACzCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBrR,eAArE,EAAsF,IAAtF;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAY2a,SAA1B,EAAqC1b,IAAI,CAACkB,OAA1C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBna,WAAtB,GAAoC,uBAApC;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBrR,eAAtB,GAAwC,CAAC,CAAD,CAAxC;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBja,SAAtB,CAAgCC,QAAhC,GAA2C,UAASC,mBAAT,EAA8B;AACvE,WAAOnB,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBha,QAAtB,CAA+BC,mBAA/B,EAAoD,IAApD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBha,QAAtB,GAAiC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC9D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACX4Z,MAAAA,OAAO,EAAE3b,IAAI,CAACkB,OAAL,CAAasK,gBAAb,CAA8B3J,GAA9B,EAAmC,CAAnC,CADE,EAAb;;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GATD;AAUC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsB/Y,iBAAtB,GAA0C,UAASC,KAAT,EAAgB;AACxD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAY2a,SAAhB,EAAV;AACA,SAAOlb,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsB3Y,2BAAtB,CAAkDlB,GAAlD,EAAuDgB,MAAvD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsB3Y,2BAAtB,GAAoD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACxE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAAC+Z,MAAJ,CAAWxY,KAAX;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAPF;;AASD;AACD,SAAOjC,GAAP;AACD,CAjBD;;;AAoBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBja,SAAtB,CAAgCsC,eAAhC,GAAkD,YAAW;AAC3D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBxX,uBAAtB,CAA8C,IAA9C,EAAoDF,MAApD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBxX,uBAAtB,GAAgD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACxE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACyX,UAAR,EAAJ;AACA,MAAI/Z,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAAC2U,mBAAP;AACE,KADF;AAEE7W,IAAAA,CAFF;;AAID;AACF,CATD;;;AAYA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBja,SAAtB,CAAgCoa,UAAhC,GAA6C,YAAW;AACtD,SAAO,8BAA+B7b,IAAI,CAACkB,OAAL,CAAasK,gBAAb,CAA8B,IAA9B,EAAoC,CAApC,CAAtC;AACD,CAFD;;;AAKA;AACAhL,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBja,SAAtB,CAAgCqa,UAAhC,GAA6C,UAAS1Y,KAAT,EAAgB;AAC3DpD,EAAAA,IAAI,CAACkB,OAAL,CAAa0K,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BxI,KAAK,IAAI,EAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBja,SAAtB,CAAgCma,MAAhC,GAAyC,UAASxY,KAAT,EAAgByI,SAAhB,EAA2B;AAClE7L,EAAAA,IAAI,CAACkB,OAAL,CAAa4K,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyC1I,KAAzC,EAAgDyI,SAAhD;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAY2a,SAAZ,CAAsBja,SAAtB,CAAgCsa,YAAhC,GAA+C,YAAW;AACxD,OAAKD,UAAL,CAAgB,EAAhB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUAtb,KAAK,CAACO,KAAN,CAAYib,UAAZ,GAAyB,UAAS/a,QAAT,EAAmB;AAC1CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYib,UAA1B,EAAsChc,IAAI,CAACkB,OAA3C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBza,WAAvB,GAAqC,wBAArC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBva,SAAvB,CAAiCC,QAAjC,GAA4C,UAASC,mBAAT,EAA8B;AACxE,WAAOnB,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBta,QAAvB,CAAgCC,mBAAhC,EAAqD,IAArD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBta,QAAvB,GAAkC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC/D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXka,MAAAA,SAAS,EAAE,CAACna,CAAC,GAAGD,GAAG,CAACqa,YAAJ,EAAL,IAA2Bpa,CAAC,CAACJ,QAAF,CAAWE,eAAX,EAA4ByC,SAA5B,CAA3B,GAAoE,EADpE;AAEX8X,MAAAA,SAAS,EAAE,CAACra,CAAC,GAAGD,GAAG,CAACua,YAAJ,EAAL,IAA2Bta,CAAC,CAACJ,QAAF,CAAWE,eAAX,EAA4BpB,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuB3a,QAAnD,CAA3B,GAA0F,EAF1F,EAAb;;;AAKA,QAAIE,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBrZ,iBAAvB,GAA2C,UAASC,KAAT,EAAgB;AACzD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYib,UAAhB,EAAV;AACA,SAAOxb,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBjZ,2BAAvB,CAAmDlB,GAAnD,EAAwDgB,MAAxD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBjZ,2BAAvB,GAAqD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACzE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAGvB,GAAG,CAACqa,YAAJ,EAAZ;AACArZ,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAA0B,UAASgB,OAAT,EAAkBvB,MAAlB,EAA0B;AAClD7C,UAAAA,IAAI,CAACsc,GAAL,CAAS3Z,iBAAT,CAA2ByB,OAA3B,EAAoCvB,MAApC,EAA4C7C,IAAI,CAAC8C,YAAL,CAAkBrB,SAAlB,CAA4BgC,UAAxE,EAAoFzD,IAAI,CAAC8C,YAAL,CAAkBrB,SAAlB,CAA4BgC,UAAhH,EAA4H,IAA5H,EAAkI,EAAlI;AACE,SAFJ;AAGA;AACF,WAAK,CAAL;AACE,YAAIL,KAAK,GAAGvB,GAAG,CAACua,YAAJ,EAAZ;AACAvZ,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAA0B,UAASgB,OAAT,EAAkBvB,MAAlB,EAA0B;AAClD7C,UAAAA,IAAI,CAACsc,GAAL,CAAS3Z,iBAAT,CAA2ByB,OAA3B,EAAoCvB,MAApC,EAA4C7C,IAAI,CAAC8C,YAAL,CAAkBrB,SAAlB,CAA4BgC,UAAxE,EAAoFzD,IAAI,CAAC8C,YAAL,CAAkBrB,SAAlB,CAA4BmC,WAAhH,EAA6HpD,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuBtZ,2BAApJ,EAAiL,EAAjL;AACE,SAFJ;AAGA;AACF;AACEF,QAAAA,MAAM,CAACiB,SAAP;AACA,cAfF;;AAiBD;AACD,SAAOjC,GAAP;AACD,CAzBD;;;AA4BA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBva,SAAvB,CAAiCsC,eAAjC,GAAmD,YAAW;AAC5D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuB9X,uBAAvB,CAA+C,IAA/C,EAAqDF,MAArD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuB9X,uBAAvB,GAAiD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACzE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC8X,YAAR,CAAqB,IAArB,CAAJ;AACA,MAAIpa,CAAC,IAAIA,CAAC,CAACya,SAAF,KAAgB,CAAzB,EAA4B;AAC1Bza,IAAAA,CAAC,CAACiC,eAAF,CAAkB,CAAlB,EAAqBC,MAArB,EAA6BhE,IAAI,CAACiE,YAAL,CAAkBxC,SAAlB,CAA4BmD,WAAzD,EAAsE5E,IAAI,CAACiE,YAAL,CAAkBxC,SAAlB,CAA4BmD,WAAlG;AACD;AACD9C,EAAAA,CAAC,GAAGsC,OAAO,CAACgY,YAAR,CAAqB,IAArB,CAAJ;AACA,MAAIta,CAAC,IAAIA,CAAC,CAACya,SAAF,KAAgB,CAAzB,EAA4B;AAC1Bza,IAAAA,CAAC,CAACiC,eAAF,CAAkB,CAAlB,EAAqBC,MAArB,EAA6BhE,IAAI,CAACiE,YAAL,CAAkBxC,SAAlB,CAA4BmD,WAAzD,EAAsE5E,IAAI,CAACiE,YAAL,CAAkBxC,SAAlB,CAA4BqD,YAAlG,EAAgHtE,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuBnY,uBAAvI;AACD;AACF,CAVD;;;AAaA;;;;;;AAMA1D,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBva,SAAvB,CAAiCya,YAAjC,GAAgD,UAASM,gBAAT,EAA2B;AACzE,SAAO;AACHxc,IAAAA,IAAI,CAACkB,OAAL,CAAaub,WAAb,CAAyB,IAAzB,EAA+B,CAA/B,EAAkCD,gBAAlC;AACA,QADA,CADJ;AAGD,CAJD;;;AAOAhc,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBva,SAAvB,CAAiCib,cAAjC,GAAkD,YAAW;AAC3D,OAAKR,YAAL,GAAoBS,KAApB;AACD,CAFD;;;AAKA;;;;;;AAMAnc,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBva,SAAvB,CAAiC2a,YAAjC,GAAgD,UAASI,gBAAT,EAA2B;AACzE,SAAO;AACHxc,IAAAA,IAAI,CAACkB,OAAL,CAAaub,WAAb,CAAyB,IAAzB,EAA+B,CAA/B,EAAkCD,gBAAlC;AACAhc,IAAAA,KAAK,CAACO,KAAN,CAAYsb,UADZ,CADJ;AAGD,CAJD;;;AAOA7b,KAAK,CAACO,KAAN,CAAYib,UAAZ,CAAuBva,SAAvB,CAAiCmb,cAAjC,GAAkD,YAAW;AAC3D,OAAKR,YAAL,GAAoBO,KAApB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUAnc,KAAK,CAACO,KAAN,CAAYsb,UAAZ,GAAyB,UAASpb,QAAT,EAAmB;AAC1CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYsb,UAA1B,EAAsCrc,IAAI,CAACkB,OAA3C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuB9a,WAAvB,GAAqC,wBAArC;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuB5a,SAAvB,CAAiCC,QAAjC,GAA4C,UAASC,mBAAT,EAA8B;AACxE,WAAOnB,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuB3a,QAAvB,CAAgCC,mBAAhC,EAAqD,IAArD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuB3a,QAAvB,GAAkC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC/D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACX8a,MAAAA,QAAQ,EAAE,CAAC/a,CAAC,GAAGD,GAAG,CAACib,WAAJ,EAAL,IAA0Bhb,CAAC,CAACJ,QAAF,CAAWE,eAAX,EAA4ByC,SAA5B,CAA1B,GAAmE,EADlE,EAAb;;;AAIA,QAAIzC,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GATD;AAUC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuB1Z,iBAAvB,GAA2C,UAASC,KAAT,EAAgB;AACzD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYsb,UAAhB,EAAV;AACA,SAAO7b,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuBtZ,2BAAvB,CAAmDlB,GAAnD,EAAwDgB,MAAxD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuBtZ,2BAAvB,GAAqD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACzE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAGvB,GAAG,CAACib,WAAJ,EAAZ;AACAja,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAA0B,UAASgB,OAAT,EAAkBvB,MAAlB,EAA0B;AAClD7C,UAAAA,IAAI,CAACsc,GAAL,CAAS3Z,iBAAT,CAA2ByB,OAA3B,EAAoCvB,MAApC,EAA4C7C,IAAI,CAAC8C,YAAL,CAAkBrB,SAAlB,CAA4BgC,UAAxE,EAAoFzD,IAAI,CAAC8C,YAAL,CAAkBrB,SAAlB,CAA4BgC,UAAhH,EAA4H,IAA5H,EAAkI,EAAlI;AACE,SAFJ;AAGA;AACF;AACEZ,QAAAA,MAAM,CAACiB,SAAP;AACA,cATF;;AAWD;AACD,SAAOjC,GAAP;AACD,CAnBD;;;AAsBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuB5a,SAAvB,CAAiCsC,eAAjC,GAAmD,YAAW;AAC5D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuBnY,uBAAvB,CAA+C,IAA/C,EAAqDF,MAArD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuBnY,uBAAvB,GAAiD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACzE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC0Y,WAAR,CAAoB,IAApB,CAAJ;AACA,MAAIhb,CAAC,IAAIA,CAAC,CAACya,SAAF,KAAgB,CAAzB,EAA4B;AAC1Bza,IAAAA,CAAC,CAACiC,eAAF,CAAkB,CAAlB,EAAqBC,MAArB,EAA6BhE,IAAI,CAACiE,YAAL,CAAkBxC,SAAlB,CAA4BmD,WAAzD,EAAsE5E,IAAI,CAACiE,YAAL,CAAkBxC,SAAlB,CAA4BmD,WAAlG;AACD;AACF,CAND;;;AASA;;;;;;AAMApE,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuB5a,SAAvB,CAAiCqb,WAAjC,GAA+C,UAASN,gBAAT,EAA2B;AACxE,SAAO;AACHxc,IAAAA,IAAI,CAACkB,OAAL,CAAaub,WAAb,CAAyB,IAAzB,EAA+B,CAA/B,EAAkCD,gBAAlC;AACA,QADA,CADJ;AAGD,CAJD;;;AAOAhc,KAAK,CAACO,KAAN,CAAYsb,UAAZ,CAAuB5a,SAAvB,CAAiCsb,aAAjC,GAAiD,YAAW;AAC1D,OAAKD,WAAL,GAAmBH,KAAnB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUAnc,KAAK,CAACO,KAAN,CAAYic,SAAZ,GAAwB,UAAS/b,QAAT,EAAmB;AACzCjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsB3S,eAArE,EAAsF,IAAtF;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYic,SAA1B,EAAqChd,IAAI,CAACkB,OAA1C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBzb,WAAtB,GAAoC,uBAApC;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsB3S,eAAtB,GAAwC,CAAC,CAAD,CAAxC;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBvb,SAAtB,CAAgCC,QAAhC,GAA2C,UAASC,mBAAT,EAA8B;AACvE,WAAOnB,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBtb,QAAtB,CAA+BC,mBAA/B,EAAoD,IAApD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBtb,QAAtB,GAAiC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC9D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXkb,MAAAA,UAAU,EAAEjd,IAAI,CAACkB,OAAL,CAAaqN,YAAb,CAA0B1M,GAAG,CAACqb,aAAJ,EAA1B;AACZ7c,MAAAA,aAAa,CAAC8c,KAAd,CAAoBzb,QADR,EACkBE,eADlB,CADD,EAAb;;;AAKA,QAAIA,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBra,iBAAtB,GAA0C,UAASC,KAAT,EAAgB;AACxD,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYic,SAAhB,EAAV;AACA,SAAOxc,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBja,2BAAtB,CAAkDlB,GAAlD,EAAuDgB,MAAvD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBja,2BAAtB,GAAoD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AACxE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI/C,aAAa,CAAC8c,KAAlB,EAAZ;AACAta,QAAAA,MAAM,CAACe,WAAP,CAAmBR,KAAnB,EAAyB/C,aAAa,CAAC8c,KAAd,CAAoBpa,2BAA7C;AACAlB,QAAAA,GAAG,CAACub,SAAJ,CAAcha,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cARF;;AAUD;AACD,SAAOjC,GAAP;AACD,CAlBD;;;AAqBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBvb,SAAtB,CAAgCsC,eAAhC,GAAkD,YAAW;AAC3D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsB9Y,uBAAtB,CAA8C,IAA9C,EAAoDF,MAApD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsB9Y,uBAAtB,GAAgD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACxE,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC8Y,aAAR,EAAJ;AACA,MAAIpb,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACyL,oBAAP;AACE,KADF;AAEE3N,IAAAA,CAFF;AAGEzB,IAAAA,aAAa,CAAC8c,KAAd,CAAoBjZ,uBAHtB;;AAKD;AACF,CAVD;;;AAaA;;;;AAIA1D,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBvb,SAAtB,CAAgCyb,aAAhC,GAAgD,YAAW;AACzD,SAAO;AACLld,IAAAA,IAAI,CAACkB,OAAL,CAAa8O,uBAAb,CAAqC,IAArC,EAA2C3P,aAAa,CAAC8c,KAAzD,EAAgE,CAAhE,CADF;AAED,CAHD;;;AAMA;AACA3c,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBvb,SAAtB,CAAgC4b,aAAhC,GAAgD,UAASja,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAagP,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8C9M,KAA9C;AACD,CAFD;;;AAKA;;;;;AAKA5C,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBvb,SAAtB,CAAgC2b,SAAhC,GAA4C,UAASjN,SAAT,EAAoBtE,SAApB,EAA+B;AACzE,SAAO7L,IAAI,CAACkB,OAAL,CAAakP,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2D3P,KAAK,CAACO,KAAN,CAAYoc,KAAvE,EAA8EtR,SAA9E,CAAP;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAYic,SAAZ,CAAsBvb,SAAtB,CAAgC6b,eAAhC,GAAkD,YAAW;AAC3D,OAAKD,aAAL,CAAmB,EAAnB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA7c,KAAK,CAACO,KAAN,CAAYwc,aAAZ,GAA4B,UAAStc,QAAT,EAAmB;AAC7CjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0BlT,eAAzE,EAA0F,IAA1F;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYwc,aAA1B,EAAyCvd,IAAI,CAACkB,OAA9C;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0Bhc,WAA1B,GAAwC,2BAAxC;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0BlT,eAA1B,GAA4C,CAAC,CAAD,CAA5C;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCC,QAApC,GAA+C,UAASC,mBAAT,EAA8B;AAC3E,WAAOnB,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B7b,QAA1B,CAAmCC,mBAAnC,EAAwD,IAAxD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B7b,QAA1B,GAAqC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAClE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXyb,MAAAA,IAAI,EAAExd,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADK;AAEX4b,MAAAA,IAAI,EAAEzd,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAFK;AAGX6b,MAAAA,OAAO,EAAE1d,IAAI,CAACkB,OAAL,CAAasK,gBAAb,CAA8B3J,GAA9B,EAAmC,CAAnC,CAHE,EAAb;;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B5a,iBAA1B,GAA8C,UAASC,KAAT,EAAgB;AAC5D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYwc,aAAhB,EAAV;AACA,SAAO/c,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0Bxa,2BAA1B,CAAsDlB,GAAtD,EAA2DgB,MAA3D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0Bxa,2BAA1B,GAAwD,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC5E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAAC8b,OAAJ,CAAYva,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAAC+b,OAAJ,CAAYxa,KAAZ;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACgc,MAAJ,CAAWza,KAAX;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAfF;;AAiBD;AACD,SAAOjC,GAAP;AACD,CAzBD;;;AA4BA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCsC,eAApC,GAAsD,YAAW;AAC/D,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0BrZ,uBAA1B,CAAkD,IAAlD,EAAwDF,MAAxD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0BrZ,uBAA1B,GAAoD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC5E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAAC0Z,OAAR,EAAJ;AACA,MAAIhc,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC2Z,OAAR,EAAJ;AACA,MAAIjc,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAAC4Z,UAAR,EAAJ;AACA,MAAIlc,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAAC2U,mBAAP;AACE,KADF;AAEE7W,IAAAA,CAFF;;AAID;AACF,CAvBD;;;AA0BA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCqc,OAApC,GAA8C,YAAW;AACvD,SAAO,sBAAuB9d,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCkc,OAApC,GAA8C,UAASva,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCsc,OAApC,GAA8C,YAAW;AACvD,SAAO,sBAAuB/d,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCmc,OAApC,GAA8C,UAASxa,KAAT,EAAgB;AAC5DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCuc,UAApC,GAAiD,YAAW;AAC1D,SAAO,8BAA+Bhe,IAAI,CAACkB,OAAL,CAAasK,gBAAb,CAA8B,IAA9B,EAAoC,CAApC,CAAtC;AACD,CAFD;;;AAKA;AACAhL,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCwc,UAApC,GAAiD,UAAS7a,KAAT,EAAgB;AAC/DpD,EAAAA,IAAI,CAACkB,OAAL,CAAa0K,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BxI,KAAK,IAAI,EAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCoc,MAApC,GAA6C,UAASza,KAAT,EAAgByI,SAAhB,EAA2B;AACtE7L,EAAAA,IAAI,CAACkB,OAAL,CAAa4K,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyC1I,KAAzC,EAAgDyI,SAAhD;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAYwc,aAAZ,CAA0B9b,SAA1B,CAAoCyc,YAApC,GAAmD,YAAW;AAC5D,OAAKD,UAAL,CAAgB,EAAhB;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUAzd,KAAK,CAACO,KAAN,CAAYod,mBAAZ,GAAkC,UAASld,QAAT,EAAmB;AACnDjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAf,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYod,mBAA1B,EAA+Cne,IAAI,CAACkB,OAApD;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgC5c,WAAhC,GAA8C,iCAA9C;AACD;;;AAGD,IAAIvB,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgC1c,SAAhC,CAA0CC,QAA1C,GAAqD,UAASC,mBAAT,EAA8B;AACjF,WAAOnB,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgCzc,QAAhC,CAAyCC,mBAAzC,EAA8D,IAA9D,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgCzc,QAAhC,GAA2C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACxE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXqc,MAAAA,GAAG,EAAEpe,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADM,EAAb;;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GATD;AAUC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgCxb,iBAAhC,GAAoD,UAASC,KAAT,EAAgB;AAClE,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYod,mBAAhB,EAAV;AACA,SAAO3d,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgCpb,2BAAhC,CAA4DlB,GAA5D,EAAiEgB,MAAjE,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgCpb,2BAAhC,GAA8D,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAClF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACwc,MAAJ,CAAWjb,KAAX;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAPF;;AASD;AACD,SAAOjC,GAAP;AACD,CAjBD;;;AAoBA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgC1c,SAAhC,CAA0CsC,eAA1C,GAA4D,YAAW;AACrE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgCja,uBAAhC,CAAwD,IAAxD,EAA8DF,MAA9D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgCja,uBAAhC,GAA0D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAClF,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACka,MAAR,EAAJ;AACA,MAAIxc,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACF,CATD;;;AAYA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgC1c,SAAhC,CAA0C6c,MAA1C,GAAmD,YAAW;AAC5D,SAAO,sBAAuBte,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYod,mBAAZ,CAAgC1c,SAAhC,CAA0C4c,MAA1C,GAAmD,UAASjb,KAAT,EAAgB;AACjEpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA5C,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,GAA+B,UAAStd,QAAT,EAAmB;AAChDjB,EAAAA,IAAI,CAACkB,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CT,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6BlU,eAA5E,EAA6F,IAA7F;AACD,CAFD;AAGAnK,IAAI,CAACkB,QAAL,CAAcZ,KAAK,CAACO,KAAN,CAAYwd,gBAA1B,EAA4Cve,IAAI,CAACkB,OAAjD;AACA,IAAIhB,IAAI,CAACmB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3Bd,EAAAA,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6Bhd,WAA7B,GAA2C,8BAA3C;AACD;AACD;;;;;AAKAf,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6BlU,eAA7B,GAA+C,CAAC,CAAD,CAA/C;;;;AAIA,IAAIrK,IAAI,CAACkB,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAhB,EAAAA,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuCC,QAAvC,GAAkD,UAASC,mBAAT,EAA8B;AAC9E,WAAOnB,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B7c,QAA7B,CAAsCC,mBAAtC,EAA2D,IAA3D,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAnB,EAAAA,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B7c,QAA7B,GAAwC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACrE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXqc,MAAAA,GAAG,EAAEpe,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADM;AAEX2c,MAAAA,EAAE,EAAExe,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiCN,GAAjC,EAAsC,CAAtC,EAAyC,KAAzC,CAFO;AAGX4c,MAAAA,UAAU,EAAEze,IAAI,CAACkB,OAAL,CAAasK,gBAAb,CAA8B3J,GAA9B,EAAmC,CAAnC,CAHD,EAAb;;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACW,oBAAJ,GAA2Bb,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;;;AAGD;;;;;AAKAvB,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B5b,iBAA7B,GAAiD,UAASC,KAAT,EAAgB;AAC/D,MAAIC,MAAM,GAAG,IAAI7C,IAAI,CAAC8C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIf,GAAG,GAAG,IAAIrB,KAAK,CAACO,KAAN,CAAYwd,gBAAhB,EAAV;AACA,SAAO/d,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6Bxb,2BAA7B,CAAyDlB,GAAzD,EAA8DgB,MAA9D,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOArC,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6Bxb,2BAA7B,GAA2D,UAASlB,GAAT,EAAcgB,MAAd,EAAsB;AAC/E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAACwc,MAAJ,CAAWjb,KAAX;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,sBAAwBP,MAAM,CAACqD,QAAP,EAApC;AACArE,QAAAA,GAAG,CAAC6c,KAAJ,CAAUtb,KAAV;AACA;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACY,UAAP,EAAnC;AACA5B,QAAAA,GAAG,CAAC8c,SAAJ,CAAcvb,KAAd;AACA;AACF;AACEP,QAAAA,MAAM,CAACiB,SAAP;AACA,cAfF;;AAiBD;AACD,SAAOjC,GAAP;AACD,CAzBD;;;AA4BA;;;;AAIArB,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuCsC,eAAvC,GAAyD,YAAW;AAClE,MAAIC,MAAM,GAAG,IAAIhE,IAAI,CAACiE,YAAT,EAAb;AACAzD,EAAAA,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6Bra,uBAA7B,CAAqD,IAArD,EAA2DF,MAA3D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOA3D,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6Bra,uBAA7B,GAAuD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC/E,MAAIlC,CAAC,GAAGuC,SAAR;AACAvC,EAAAA,CAAC,GAAGsC,OAAO,CAACka,MAAR,EAAJ;AACA,MAAIxc,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACY,WAAP;AACE,KADF;AAEE9C,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACwa,KAAR,EAAJ;AACA,MAAI9c,CAAJ,EAAO;AACLkC,IAAAA,MAAM,CAAC0C,SAAP;AACE,KADF;AAEE5E,IAAAA,CAFF;;AAID;AACDA,EAAAA,CAAC,GAAGsC,OAAO,CAACya,aAAR,EAAJ;AACA,MAAI/c,CAAC,CAACyC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAAC2U,mBAAP;AACE,KADF;AAEE7W,IAAAA,CAFF;;AAID;AACF,CAvBD;;;AA0BA;;;;AAIAtB,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuC6c,MAAvC,GAAgD,YAAW;AACzD,SAAO,sBAAuBte,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuC4c,MAAvC,GAAgD,UAASjb,KAAT,EAAgB;AAC9DpD,EAAAA,IAAI,CAACkB,OAAL,CAAakE,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChC,KAA3C;AACD,CAFD;;;AAKA;;;;;;AAMA5C,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuCmd,KAAvC,GAA+C,YAAW;AACxD,SAAO,uBAAwB5e,IAAI,CAACkB,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,KAA1C,CAA/B;AACD,CAFD;;;AAKA;AACA3B,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuCid,KAAvC,GAA+C,UAAStb,KAAT,EAAgB;AAC7DpD,EAAAA,IAAI,CAACkB,OAAL,CAAa6F,qBAAb,CAAmC,IAAnC,EAAyC,CAAzC,EAA4C3D,KAA5C;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuCod,aAAvC,GAAuD,YAAW;AAChE,SAAO,8BAA+B7e,IAAI,CAACkB,OAAL,CAAasK,gBAAb,CAA8B,IAA9B,EAAoC,CAApC,CAAtC;AACD,CAFD;;;AAKA;AACAhL,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuCqd,aAAvC,GAAuD,UAAS1b,KAAT,EAAgB;AACrEpD,EAAAA,IAAI,CAACkB,OAAL,CAAa0K,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BxI,KAAK,IAAI,EAAxC;AACD,CAFD;;;AAKA;;;;AAIA5C,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuCkd,SAAvC,GAAmD,UAASvb,KAAT,EAAgByI,SAAhB,EAA2B;AAC5E7L,EAAAA,IAAI,CAACkB,OAAL,CAAa4K,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyC1I,KAAzC,EAAgDyI,SAAhD;AACD,CAFD;;;AAKArL,KAAK,CAACO,KAAN,CAAYwd,gBAAZ,CAA6B9c,SAA7B,CAAuCsd,eAAvC,GAAyD,YAAW;AAClE,OAAKD,aAAL,CAAmB,EAAnB;AACD,CAFD;;;AAKA;;;AAGAte,KAAK,CAACO,KAAN,CAAYie,YAAZ,GAA2B;AACzBC,EAAAA,KAAK,EAAE,CADkB;AAEzBC,EAAAA,gBAAgB,EAAE,CAFO;AAGzBC,EAAAA,iBAAiB,EAAE,CAHM;AAIzBC,EAAAA,eAAe,EAAE,CAJQ;AAKzBC,EAAAA,eAAe,EAAE,CALQ;AAMzBC,EAAAA,iBAAiB,EAAE,CANM;AAOzBC,EAAAA,uBAAuB,EAAE,CAPA;AAQzBC,EAAAA,iBAAiB,EAAE,CARM;AASzBC,EAAAA,iBAAiB,EAAE,CATM,EAA3B;;;AAYA;;;AAGAjf,KAAK,CAACO,KAAN,CAAY2e,YAAZ,GAA2B;AACzBC,EAAAA,gBAAgB,EAAE,CADO;AAEzBC,EAAAA,4BAA4B,EAAE,CAFL;AAGzBC,EAAAA,0BAA0B,EAAE,CAHH,EAA3B;;;AAMA3f,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBuf,OAAnB,EAA4Btf,KAAK,CAACO,KAAlC","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/types","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar blockchain_pb = require('./blockchain_pb.js');\ngoog.object.extend(proto, blockchain_pb);\nvar account_pb = require('./account_pb.js');\ngoog.object.extend(proto, account_pb);\nvar node_pb = require('./node_pb.js');\ngoog.object.extend(proto, node_pb);\nvar p2p_pb = require('./p2p_pb.js');\ngoog.object.extend(proto, p2p_pb);\nvar metric_pb = require('./metric_pb.js');\ngoog.object.extend(proto, metric_pb);\nvar raft_pb = require('./raft_pb.js');\ngoog.object.extend(proto, raft_pb);\ngoog.exportSymbol('proto.types.AccountAddress', null, global);\ngoog.exportSymbol('proto.types.AccountAndRoot', null, global);\ngoog.exportSymbol('proto.types.AccountVoteInfo', null, global);\ngoog.exportSymbol('proto.types.BlockBodyPaged', null, global);\ngoog.exportSymbol('proto.types.BlockBodyParams', null, global);\ngoog.exportSymbol('proto.types.BlockHeaderList', null, global);\ngoog.exportSymbol('proto.types.BlockMetadata', null, global);\ngoog.exportSymbol('proto.types.BlockMetadataList', null, global);\ngoog.exportSymbol('proto.types.BlockchainStatus', null, global);\ngoog.exportSymbol('proto.types.ChainId', null, global);\ngoog.exportSymbol('proto.types.ChainInfo', null, global);\ngoog.exportSymbol('proto.types.ChainStats', null, global);\ngoog.exportSymbol('proto.types.CommitResult', null, global);\ngoog.exportSymbol('proto.types.CommitResultList', null, global);\ngoog.exportSymbol('proto.types.CommitStatus', null, global);\ngoog.exportSymbol('proto.types.ConfigItem', null, global);\ngoog.exportSymbol('proto.types.ConsensusInfo', null, global);\ngoog.exportSymbol('proto.types.Empty', null, global);\ngoog.exportSymbol('proto.types.EnterpriseConfig', null, global);\ngoog.exportSymbol('proto.types.EnterpriseConfigKey', null, global);\ngoog.exportSymbol('proto.types.EventList', null, global);\ngoog.exportSymbol('proto.types.ImportFormat', null, global);\ngoog.exportSymbol('proto.types.Input', null, global);\ngoog.exportSymbol('proto.types.KeyParams', null, global);\ngoog.exportSymbol('proto.types.ListParams', null, global);\ngoog.exportSymbol('proto.types.Name', null, global);\ngoog.exportSymbol('proto.types.NameInfo', null, global);\ngoog.exportSymbol('proto.types.NodeReq', null, global);\ngoog.exportSymbol('proto.types.Output', null, global);\ngoog.exportSymbol('proto.types.PageParams', null, global);\ngoog.exportSymbol('proto.types.Peer', null, global);\ngoog.exportSymbol('proto.types.PeerList', null, global);\ngoog.exportSymbol('proto.types.PeersParams', null, global);\ngoog.exportSymbol('proto.types.Personal', null, global);\ngoog.exportSymbol('proto.types.ServerInfo', null, global);\ngoog.exportSymbol('proto.types.SingleBytes', null, global);\ngoog.exportSymbol('proto.types.SingleString', null, global);\ngoog.exportSymbol('proto.types.Staking', null, global);\ngoog.exportSymbol('proto.types.VerifyResult', null, global);\ngoog.exportSymbol('proto.types.VerifyStatus', null, global);\ngoog.exportSymbol('proto.types.Vote', null, global);\ngoog.exportSymbol('proto.types.VoteInfo', null, global);\ngoog.exportSymbol('proto.types.VoteList', null, global);\ngoog.exportSymbol('proto.types.VoteParams', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.BlockchainStatus = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.BlockchainStatus, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.BlockchainStatus.displayName = 'proto.types.BlockchainStatus';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.BlockchainStatus.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.BlockchainStatus.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.BlockchainStatus} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockchainStatus.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    bestBlockHash: msg.getBestBlockHash_asB64(),\n    bestHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    consensusInfo: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    bestChainIdHash: msg.getBestChainIdHash_asB64(),\n    chainInfo: (f = msg.getChainInfo()) && proto.types.ChainInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.BlockchainStatus}\n */\nproto.types.BlockchainStatus.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.BlockchainStatus;\n  return proto.types.BlockchainStatus.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.BlockchainStatus} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.BlockchainStatus}\n */\nproto.types.BlockchainStatus.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBestBlockHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBestHeight(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setConsensusInfo(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBestChainIdHash(value);\n      break;\n    case 5:\n      var value = new proto.types.ChainInfo;\n      reader.readMessage(value,proto.types.ChainInfo.deserializeBinaryFromReader);\n      msg.setChainInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.BlockchainStatus.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.BlockchainStatus.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.BlockchainStatus} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockchainStatus.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBestBlockHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBestHeight();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getConsensusInfo();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getBestChainIdHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getChainInfo();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.types.ChainInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes best_block_hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockchainStatus.prototype.getBestBlockHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes best_block_hash = 1;\n * This is a type-conversion wrapper around `getBestBlockHash()`\n * @return {string}\n */\nproto.types.BlockchainStatus.prototype.getBestBlockHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBestBlockHash()));\n};\n\n\n/**\n * optional bytes best_block_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBestBlockHash()`\n * @return {!Uint8Array}\n */\nproto.types.BlockchainStatus.prototype.getBestBlockHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBestBlockHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockchainStatus.prototype.setBestBlockHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 best_height = 2;\n * @return {number}\n */\nproto.types.BlockchainStatus.prototype.getBestHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockchainStatus.prototype.setBestHeight = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string consensus_info = 3;\n * @return {string}\n */\nproto.types.BlockchainStatus.prototype.getConsensusInfo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.BlockchainStatus.prototype.setConsensusInfo = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bytes best_chain_id_hash = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockchainStatus.prototype.getBestChainIdHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes best_chain_id_hash = 4;\n * This is a type-conversion wrapper around `getBestChainIdHash()`\n * @return {string}\n */\nproto.types.BlockchainStatus.prototype.getBestChainIdHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBestChainIdHash()));\n};\n\n\n/**\n * optional bytes best_chain_id_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBestChainIdHash()`\n * @return {!Uint8Array}\n */\nproto.types.BlockchainStatus.prototype.getBestChainIdHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBestChainIdHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockchainStatus.prototype.setBestChainIdHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional ChainInfo chain_info = 5;\n * @return {?proto.types.ChainInfo}\n */\nproto.types.BlockchainStatus.prototype.getChainInfo = function() {\n  return /** @type{?proto.types.ChainInfo} */ (\n    jspb.Message.getWrapperField(this, proto.types.ChainInfo, 5));\n};\n\n\n/** @param {?proto.types.ChainInfo|undefined} value */\nproto.types.BlockchainStatus.prototype.setChainInfo = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.types.BlockchainStatus.prototype.clearChainInfo = function() {\n  this.setChainInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.BlockchainStatus.prototype.hasChainInfo = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ChainId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.ChainId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ChainId.displayName = 'proto.types.ChainId';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ChainId.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ChainId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ChainId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ChainId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    magic: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    pb_public: jspb.Message.getFieldWithDefault(msg, 2, false),\n    mainnet: jspb.Message.getFieldWithDefault(msg, 3, false),\n    consensus: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ChainId}\n */\nproto.types.ChainId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ChainId;\n  return proto.types.ChainId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ChainId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ChainId}\n */\nproto.types.ChainId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMagic(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPublic(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMainnet(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setConsensus(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ChainId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ChainId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ChainId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ChainId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMagic();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPublic();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getMainnet();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getConsensus();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string magic = 1;\n * @return {string}\n */\nproto.types.ChainId.prototype.getMagic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ChainId.prototype.setMagic = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool public = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.ChainId.prototype.getPublic = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.ChainId.prototype.setPublic = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional bool mainnet = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.ChainId.prototype.getMainnet = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.ChainId.prototype.setMainnet = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional string consensus = 4;\n * @return {string}\n */\nproto.types.ChainId.prototype.getConsensus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ChainId.prototype.setConsensus = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int32 version = 5;\n * @return {number}\n */\nproto.types.ChainId.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.types.ChainId.prototype.setVersion = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ChainInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.ChainInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ChainInfo.displayName = 'proto.types.ChainInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ChainInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ChainInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ChainInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ChainInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: (f = msg.getId()) && proto.types.ChainId.toObject(includeInstance, f),\n    bpnumber: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    maxblocksize: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    maxtokens: msg.getMaxtokens_asB64(),\n    stakingminimum: msg.getStakingminimum_asB64(),\n    totalstaking: msg.getTotalstaking_asB64(),\n    gasprice: msg.getGasprice_asB64(),\n    nameprice: msg.getNameprice_asB64(),\n    totalvotingpower: msg.getTotalvotingpower_asB64(),\n    votingreward: msg.getVotingreward_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ChainInfo}\n */\nproto.types.ChainInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ChainInfo;\n  return proto.types.ChainInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ChainInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ChainInfo}\n */\nproto.types.ChainInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.ChainId;\n      reader.readMessage(value,proto.types.ChainId.deserializeBinaryFromReader);\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBpnumber(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxblocksize(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMaxtokens(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setStakingminimum(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTotalstaking(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setGasprice(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNameprice(value);\n      break;\n    case 9:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTotalvotingpower(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVotingreward(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ChainInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ChainInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ChainInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ChainInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.types.ChainId.serializeBinaryToWriter\n    );\n  }\n  f = message.getBpnumber();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getMaxblocksize();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMaxtokens_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getStakingminimum_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getTotalstaking_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getGasprice_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n  f = message.getNameprice_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      8,\n      f\n    );\n  }\n  f = message.getTotalvotingpower_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      9,\n      f\n    );\n  }\n  f = message.getVotingreward_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChainId id = 1;\n * @return {?proto.types.ChainId}\n */\nproto.types.ChainInfo.prototype.getId = function() {\n  return /** @type{?proto.types.ChainId} */ (\n    jspb.Message.getWrapperField(this, proto.types.ChainId, 1));\n};\n\n\n/** @param {?proto.types.ChainId|undefined} value */\nproto.types.ChainInfo.prototype.setId = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.ChainInfo.prototype.clearId = function() {\n  this.setId(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.ChainInfo.prototype.hasId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 bpNumber = 2;\n * @return {number}\n */\nproto.types.ChainInfo.prototype.getBpnumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.ChainInfo.prototype.setBpnumber = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 maxblocksize = 3;\n * @return {number}\n */\nproto.types.ChainInfo.prototype.getMaxblocksize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.ChainInfo.prototype.setMaxblocksize = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes maxtokens = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ChainInfo.prototype.getMaxtokens = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes maxtokens = 4;\n * This is a type-conversion wrapper around `getMaxtokens()`\n * @return {string}\n */\nproto.types.ChainInfo.prototype.getMaxtokens_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMaxtokens()));\n};\n\n\n/**\n * optional bytes maxtokens = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMaxtokens()`\n * @return {!Uint8Array}\n */\nproto.types.ChainInfo.prototype.getMaxtokens_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMaxtokens()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ChainInfo.prototype.setMaxtokens = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes stakingminimum = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ChainInfo.prototype.getStakingminimum = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes stakingminimum = 5;\n * This is a type-conversion wrapper around `getStakingminimum()`\n * @return {string}\n */\nproto.types.ChainInfo.prototype.getStakingminimum_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getStakingminimum()));\n};\n\n\n/**\n * optional bytes stakingminimum = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStakingminimum()`\n * @return {!Uint8Array}\n */\nproto.types.ChainInfo.prototype.getStakingminimum_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getStakingminimum()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ChainInfo.prototype.setStakingminimum = function(value) {\n  jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional bytes totalstaking = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ChainInfo.prototype.getTotalstaking = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes totalstaking = 6;\n * This is a type-conversion wrapper around `getTotalstaking()`\n * @return {string}\n */\nproto.types.ChainInfo.prototype.getTotalstaking_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTotalstaking()));\n};\n\n\n/**\n * optional bytes totalstaking = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTotalstaking()`\n * @return {!Uint8Array}\n */\nproto.types.ChainInfo.prototype.getTotalstaking_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTotalstaking()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ChainInfo.prototype.setTotalstaking = function(value) {\n  jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional bytes gasprice = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ChainInfo.prototype.getGasprice = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes gasprice = 7;\n * This is a type-conversion wrapper around `getGasprice()`\n * @return {string}\n */\nproto.types.ChainInfo.prototype.getGasprice_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getGasprice()));\n};\n\n\n/**\n * optional bytes gasprice = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGasprice()`\n * @return {!Uint8Array}\n */\nproto.types.ChainInfo.prototype.getGasprice_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getGasprice()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ChainInfo.prototype.setGasprice = function(value) {\n  jspb.Message.setProto3BytesField(this, 7, value);\n};\n\n\n/**\n * optional bytes nameprice = 8;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ChainInfo.prototype.getNameprice = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * optional bytes nameprice = 8;\n * This is a type-conversion wrapper around `getNameprice()`\n * @return {string}\n */\nproto.types.ChainInfo.prototype.getNameprice_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNameprice()));\n};\n\n\n/**\n * optional bytes nameprice = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNameprice()`\n * @return {!Uint8Array}\n */\nproto.types.ChainInfo.prototype.getNameprice_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNameprice()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ChainInfo.prototype.setNameprice = function(value) {\n  jspb.Message.setProto3BytesField(this, 8, value);\n};\n\n\n/**\n * optional bytes totalvotingpower = 9;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ChainInfo.prototype.getTotalvotingpower = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * optional bytes totalvotingpower = 9;\n * This is a type-conversion wrapper around `getTotalvotingpower()`\n * @return {string}\n */\nproto.types.ChainInfo.prototype.getTotalvotingpower_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTotalvotingpower()));\n};\n\n\n/**\n * optional bytes totalvotingpower = 9;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTotalvotingpower()`\n * @return {!Uint8Array}\n */\nproto.types.ChainInfo.prototype.getTotalvotingpower_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTotalvotingpower()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ChainInfo.prototype.setTotalvotingpower = function(value) {\n  jspb.Message.setProto3BytesField(this, 9, value);\n};\n\n\n/**\n * optional bytes votingreward = 10;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ChainInfo.prototype.getVotingreward = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes votingreward = 10;\n * This is a type-conversion wrapper around `getVotingreward()`\n * @return {string}\n */\nproto.types.ChainInfo.prototype.getVotingreward_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVotingreward()));\n};\n\n\n/**\n * optional bytes votingreward = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVotingreward()`\n * @return {!Uint8Array}\n */\nproto.types.ChainInfo.prototype.getVotingreward_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVotingreward()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ChainInfo.prototype.setVotingreward = function(value) {\n  jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ChainStats = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.ChainStats, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ChainStats.displayName = 'proto.types.ChainStats';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ChainStats.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ChainStats.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ChainStats} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ChainStats.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    report: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ChainStats}\n */\nproto.types.ChainStats.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ChainStats;\n  return proto.types.ChainStats.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ChainStats} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ChainStats}\n */\nproto.types.ChainStats.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReport(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ChainStats.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ChainStats.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ChainStats} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ChainStats.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReport();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string report = 1;\n * @return {string}\n */\nproto.types.ChainStats.prototype.getReport = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ChainStats.prototype.setReport = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Input = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.Input.repeatedFields_, null);\n};\ngoog.inherits(proto.types.Input, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Input.displayName = 'proto.types.Input';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.Input.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Input.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Input.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Input} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Input.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    addressList: msg.getAddressList_asB64(),\n    value: msg.getValue_asB64(),\n    script: msg.getScript_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Input}\n */\nproto.types.Input.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Input;\n  return proto.types.Input.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Input} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Input}\n */\nproto.types.Input.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setScript(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Input.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Input.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Input} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Input.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getAddressList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getScript_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Input.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.types.Input.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.types.Input.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Input.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated bytes address = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.Input.prototype.getAddressList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes address = 2;\n * This is a type-conversion wrapper around `getAddressList()`\n * @return {!Array<string>}\n */\nproto.types.Input.prototype.getAddressList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getAddressList()));\n};\n\n\n/**\n * repeated bytes address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddressList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.Input.prototype.getAddressList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getAddressList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.Input.prototype.setAddressList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.Input.prototype.addAddress = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.types.Input.prototype.clearAddressList = function() {\n  this.setAddressList([]);\n};\n\n\n/**\n * optional bytes value = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Input.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes value = 3;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.types.Input.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.types.Input.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Input.prototype.setValue = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes script = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Input.prototype.getScript = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes script = 4;\n * This is a type-conversion wrapper around `getScript()`\n * @return {string}\n */\nproto.types.Input.prototype.getScript_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getScript()));\n};\n\n\n/**\n * optional bytes script = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScript()`\n * @return {!Uint8Array}\n */\nproto.types.Input.prototype.getScript_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getScript()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Input.prototype.setScript = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Output = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Output, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Output.displayName = 'proto.types.Output';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Output.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Output.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Output} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Output.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    index: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    address: msg.getAddress_asB64(),\n    value: msg.getValue_asB64(),\n    script: msg.getScript_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Output}\n */\nproto.types.Output.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Output;\n  return proto.types.Output.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Output} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Output}\n */\nproto.types.Output.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setIndex(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setScript(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Output.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Output.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Output} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Output.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getScript_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 index = 1;\n * @return {number}\n */\nproto.types.Output.prototype.getIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Output.prototype.setIndex = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes address = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Output.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes address = 2;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.types.Output.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.types.Output.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Output.prototype.setAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes value = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Output.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes value = 3;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.types.Output.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.types.Output.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Output.prototype.setValue = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes script = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Output.prototype.getScript = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes script = 4;\n * This is a type-conversion wrapper around `getScript()`\n * @return {string}\n */\nproto.types.Output.prototype.getScript_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getScript()));\n};\n\n\n/**\n * optional bytes script = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScript()`\n * @return {!Uint8Array}\n */\nproto.types.Output.prototype.getScript_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getScript()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Output.prototype.setScript = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Empty.displayName = 'proto.types.Empty';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Empty}\n */\nproto.types.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Empty;\n  return proto.types.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Empty}\n */\nproto.types.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.SingleBytes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.SingleBytes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.SingleBytes.displayName = 'proto.types.SingleBytes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.SingleBytes.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.SingleBytes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.SingleBytes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.SingleBytes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: msg.getValue_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.SingleBytes}\n */\nproto.types.SingleBytes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.SingleBytes;\n  return proto.types.SingleBytes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.SingleBytes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.SingleBytes}\n */\nproto.types.SingleBytes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.SingleBytes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.SingleBytes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.SingleBytes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.SingleBytes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.SingleBytes.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.types.SingleBytes.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.types.SingleBytes.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.SingleBytes.prototype.setValue = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.SingleString = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.SingleString, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.SingleString.displayName = 'proto.types.SingleString';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.SingleString.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.SingleString.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.SingleString} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.SingleString.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.SingleString}\n */\nproto.types.SingleString.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.SingleString;\n  return proto.types.SingleString.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.SingleString} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.SingleString}\n */\nproto.types.SingleString.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.SingleString.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.SingleString.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.SingleString} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.SingleString.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string value = 1;\n * @return {string}\n */\nproto.types.SingleString.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.SingleString.prototype.setValue = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.AccountAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.AccountAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.AccountAddress.displayName = 'proto.types.AccountAddress';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.AccountAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.AccountAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.AccountAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: msg.getValue_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.AccountAddress}\n */\nproto.types.AccountAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.AccountAddress;\n  return proto.types.AccountAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.AccountAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.AccountAddress}\n */\nproto.types.AccountAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.AccountAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.AccountAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.AccountAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AccountAddress.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.types.AccountAddress.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.types.AccountAddress.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AccountAddress.prototype.setValue = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.AccountAndRoot = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.AccountAndRoot, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.AccountAndRoot.displayName = 'proto.types.AccountAndRoot';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.AccountAndRoot.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.AccountAndRoot.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.AccountAndRoot} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountAndRoot.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    account: msg.getAccount_asB64(),\n    root: msg.getRoot_asB64(),\n    compressed: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.AccountAndRoot}\n */\nproto.types.AccountAndRoot.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.AccountAndRoot;\n  return proto.types.AccountAndRoot.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.AccountAndRoot} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.AccountAndRoot}\n */\nproto.types.AccountAndRoot.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccount(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRoot(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCompressed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.AccountAndRoot.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.AccountAndRoot.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.AccountAndRoot} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountAndRoot.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccount_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getRoot_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getCompressed();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes Account = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AccountAndRoot.prototype.getAccount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes Account = 1;\n * This is a type-conversion wrapper around `getAccount()`\n * @return {string}\n */\nproto.types.AccountAndRoot.prototype.getAccount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccount()));\n};\n\n\n/**\n * optional bytes Account = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccount()`\n * @return {!Uint8Array}\n */\nproto.types.AccountAndRoot.prototype.getAccount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccount()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AccountAndRoot.prototype.setAccount = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes Root = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AccountAndRoot.prototype.getRoot = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes Root = 2;\n * This is a type-conversion wrapper around `getRoot()`\n * @return {string}\n */\nproto.types.AccountAndRoot.prototype.getRoot_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRoot()));\n};\n\n\n/**\n * optional bytes Root = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRoot()`\n * @return {!Uint8Array}\n */\nproto.types.AccountAndRoot.prototype.getRoot_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRoot()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AccountAndRoot.prototype.setRoot = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bool Compressed = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.AccountAndRoot.prototype.getCompressed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.AccountAndRoot.prototype.setCompressed = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Peer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.Peer.repeatedFields_, null);\n};\ngoog.inherits(proto.types.Peer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Peer.displayName = 'proto.types.Peer';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.Peer.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Peer.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Peer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Peer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Peer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = msg.getAddress()) && node_pb.PeerAddress.toObject(includeInstance, f),\n    bestblock: (f = msg.getBestblock()) && p2p_pb.NewBlockNotice.toObject(includeInstance, f),\n    state: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    hidden: jspb.Message.getFieldWithDefault(msg, 4, false),\n    lashcheck: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    selfpeer: jspb.Message.getFieldWithDefault(msg, 6, false),\n    version: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    certificatesList: jspb.Message.toObjectList(msg.getCertificatesList(),\n    node_pb.AgentCertificate.toObject, includeInstance),\n    acceptedrole: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Peer}\n */\nproto.types.Peer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Peer;\n  return proto.types.Peer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Peer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Peer}\n */\nproto.types.Peer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new node_pb.PeerAddress;\n      reader.readMessage(value,node_pb.PeerAddress.deserializeBinaryFromReader);\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = new p2p_pb.NewBlockNotice;\n      reader.readMessage(value,p2p_pb.NewBlockNotice.deserializeBinaryFromReader);\n      msg.setBestblock(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setState(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHidden(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLashcheck(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSelfpeer(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 8:\n      var value = new node_pb.AgentCertificate;\n      reader.readMessage(value,node_pb.AgentCertificate.deserializeBinaryFromReader);\n      msg.addCertificates(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.types.PeerRole} */ (reader.readEnum());\n      msg.setAcceptedrole(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Peer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Peer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Peer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Peer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      node_pb.PeerAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getBestblock();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      p2p_pb.NewBlockNotice.serializeBinaryToWriter\n    );\n  }\n  f = message.getState();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getHidden();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getLashcheck();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getSelfpeer();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getCertificatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      node_pb.AgentCertificate.serializeBinaryToWriter\n    );\n  }\n  f = message.getAcceptedrole();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress address = 1;\n * @return {?proto.types.PeerAddress}\n */\nproto.types.Peer.prototype.getAddress = function() {\n  return /** @type{?proto.types.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, node_pb.PeerAddress, 1));\n};\n\n\n/** @param {?proto.types.PeerAddress|undefined} value */\nproto.types.Peer.prototype.setAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.Peer.prototype.clearAddress = function() {\n  this.setAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.Peer.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional NewBlockNotice bestblock = 2;\n * @return {?proto.types.NewBlockNotice}\n */\nproto.types.Peer.prototype.getBestblock = function() {\n  return /** @type{?proto.types.NewBlockNotice} */ (\n    jspb.Message.getWrapperField(this, p2p_pb.NewBlockNotice, 2));\n};\n\n\n/** @param {?proto.types.NewBlockNotice|undefined} value */\nproto.types.Peer.prototype.setBestblock = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.types.Peer.prototype.clearBestblock = function() {\n  this.setBestblock(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.Peer.prototype.hasBestblock = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int32 state = 3;\n * @return {number}\n */\nproto.types.Peer.prototype.getState = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Peer.prototype.setState = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bool hidden = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.Peer.prototype.getHidden = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.Peer.prototype.setHidden = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional int64 lashCheck = 5;\n * @return {number}\n */\nproto.types.Peer.prototype.getLashcheck = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Peer.prototype.setLashcheck = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional bool selfpeer = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.Peer.prototype.getSelfpeer = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.Peer.prototype.setSelfpeer = function(value) {\n  jspb.Message.setProto3BooleanField(this, 6, value);\n};\n\n\n/**\n * optional string version = 7;\n * @return {string}\n */\nproto.types.Peer.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Peer.prototype.setVersion = function(value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * repeated AgentCertificate certificates = 8;\n * @return {!Array<!proto.types.AgentCertificate>}\n */\nproto.types.Peer.prototype.getCertificatesList = function() {\n  return /** @type{!Array<!proto.types.AgentCertificate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, node_pb.AgentCertificate, 8));\n};\n\n\n/** @param {!Array<!proto.types.AgentCertificate>} value */\nproto.types.Peer.prototype.setCertificatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.types.AgentCertificate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.AgentCertificate}\n */\nproto.types.Peer.prototype.addCertificates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.types.AgentCertificate, opt_index);\n};\n\n\nproto.types.Peer.prototype.clearCertificatesList = function() {\n  this.setCertificatesList([]);\n};\n\n\n/**\n * optional PeerRole acceptedRole = 9;\n * @return {!proto.types.PeerRole}\n */\nproto.types.Peer.prototype.getAcceptedrole = function() {\n  return /** @type {!proto.types.PeerRole} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {!proto.types.PeerRole} value */\nproto.types.Peer.prototype.setAcceptedrole = function(value) {\n  jspb.Message.setProto3EnumField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.PeerList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.PeerList.repeatedFields_, null);\n};\ngoog.inherits(proto.types.PeerList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.PeerList.displayName = 'proto.types.PeerList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.PeerList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.PeerList.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.PeerList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.PeerList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PeerList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peersList: jspb.Message.toObjectList(msg.getPeersList(),\n    proto.types.Peer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.PeerList}\n */\nproto.types.PeerList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.PeerList;\n  return proto.types.PeerList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.PeerList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.PeerList}\n */\nproto.types.PeerList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.Peer;\n      reader.readMessage(value,proto.types.Peer.deserializeBinaryFromReader);\n      msg.addPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.PeerList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.PeerList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.PeerList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PeerList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.types.Peer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Peer peers = 1;\n * @return {!Array<!proto.types.Peer>}\n */\nproto.types.PeerList.prototype.getPeersList = function() {\n  return /** @type{!Array<!proto.types.Peer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.Peer, 1));\n};\n\n\n/** @param {!Array<!proto.types.Peer>} value */\nproto.types.PeerList.prototype.setPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.Peer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Peer}\n */\nproto.types.PeerList.prototype.addPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.Peer, opt_index);\n};\n\n\nproto.types.PeerList.prototype.clearPeersList = function() {\n  this.setPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ListParams = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.ListParams, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ListParams.displayName = 'proto.types.ListParams';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ListParams.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ListParams.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ListParams} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ListParams.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    height: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    size: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    offset: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    asc: jspb.Message.getFieldWithDefault(msg, 5, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ListParams}\n */\nproto.types.ListParams.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ListParams;\n  return proto.types.ListParams.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ListParams} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ListParams}\n */\nproto.types.ListParams.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHeight(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setSize(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOffset(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAsc(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ListParams.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ListParams.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ListParams} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ListParams.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getOffset();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getAsc();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ListParams.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.types.ListParams.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.types.ListParams.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ListParams.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 height = 2;\n * @return {number}\n */\nproto.types.ListParams.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.ListParams.prototype.setHeight = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint32 size = 3;\n * @return {number}\n */\nproto.types.ListParams.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.ListParams.prototype.setSize = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint32 offset = 4;\n * @return {number}\n */\nproto.types.ListParams.prototype.getOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.types.ListParams.prototype.setOffset = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bool asc = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.ListParams.prototype.getAsc = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.ListParams.prototype.setAsc = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.PageParams = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.PageParams, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.PageParams.displayName = 'proto.types.PageParams';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.PageParams.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.PageParams.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.PageParams} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PageParams.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    size: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.PageParams}\n */\nproto.types.PageParams.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.PageParams;\n  return proto.types.PageParams.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.PageParams} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.PageParams}\n */\nproto.types.PageParams.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOffset(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setSize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.PageParams.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.PageParams.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.PageParams} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PageParams.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOffset();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 offset = 1;\n * @return {number}\n */\nproto.types.PageParams.prototype.getOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.types.PageParams.prototype.setOffset = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint32 size = 2;\n * @return {number}\n */\nproto.types.PageParams.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.PageParams.prototype.setSize = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.BlockBodyPaged = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.BlockBodyPaged, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.BlockBodyPaged.displayName = 'proto.types.BlockBodyPaged';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.BlockBodyPaged.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.BlockBodyPaged.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.BlockBodyPaged} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockBodyPaged.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    total: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    size: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    body: (f = msg.getBody()) && blockchain_pb.BlockBody.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.BlockBodyPaged}\n */\nproto.types.BlockBodyPaged.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.BlockBodyPaged;\n  return proto.types.BlockBodyPaged.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.BlockBodyPaged} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.BlockBodyPaged}\n */\nproto.types.BlockBodyPaged.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTotal(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setSize(value);\n      break;\n    case 4:\n      var value = new blockchain_pb.BlockBody;\n      reader.readMessage(value,blockchain_pb.BlockBody.deserializeBinaryFromReader);\n      msg.setBody(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.BlockBodyPaged.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.BlockBodyPaged.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.BlockBodyPaged} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockBodyPaged.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotal();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getOffset();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getBody();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      blockchain_pb.BlockBody.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint32 total = 1;\n * @return {number}\n */\nproto.types.BlockBodyPaged.prototype.getTotal = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockBodyPaged.prototype.setTotal = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint32 offset = 2;\n * @return {number}\n */\nproto.types.BlockBodyPaged.prototype.getOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockBodyPaged.prototype.setOffset = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint32 size = 3;\n * @return {number}\n */\nproto.types.BlockBodyPaged.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockBodyPaged.prototype.setSize = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional BlockBody body = 4;\n * @return {?proto.types.BlockBody}\n */\nproto.types.BlockBodyPaged.prototype.getBody = function() {\n  return /** @type{?proto.types.BlockBody} */ (\n    jspb.Message.getWrapperField(this, blockchain_pb.BlockBody, 4));\n};\n\n\n/** @param {?proto.types.BlockBody|undefined} value */\nproto.types.BlockBodyPaged.prototype.setBody = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.types.BlockBodyPaged.prototype.clearBody = function() {\n  this.setBody(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.BlockBodyPaged.prototype.hasBody = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.BlockBodyParams = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.BlockBodyParams, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.BlockBodyParams.displayName = 'proto.types.BlockBodyParams';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.BlockBodyParams.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.BlockBodyParams.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.BlockBodyParams} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockBodyParams.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hashornumber: msg.getHashornumber_asB64(),\n    paging: (f = msg.getPaging()) && proto.types.PageParams.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.BlockBodyParams}\n */\nproto.types.BlockBodyParams.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.BlockBodyParams;\n  return proto.types.BlockBodyParams.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.BlockBodyParams} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.BlockBodyParams}\n */\nproto.types.BlockBodyParams.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHashornumber(value);\n      break;\n    case 2:\n      var value = new proto.types.PageParams;\n      reader.readMessage(value,proto.types.PageParams.deserializeBinaryFromReader);\n      msg.setPaging(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.BlockBodyParams.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.BlockBodyParams.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.BlockBodyParams} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockBodyParams.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHashornumber_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPaging();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.types.PageParams.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes hashornumber = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockBodyParams.prototype.getHashornumber = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hashornumber = 1;\n * This is a type-conversion wrapper around `getHashornumber()`\n * @return {string}\n */\nproto.types.BlockBodyParams.prototype.getHashornumber_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHashornumber()));\n};\n\n\n/**\n * optional bytes hashornumber = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashornumber()`\n * @return {!Uint8Array}\n */\nproto.types.BlockBodyParams.prototype.getHashornumber_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHashornumber()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockBodyParams.prototype.setHashornumber = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional PageParams paging = 2;\n * @return {?proto.types.PageParams}\n */\nproto.types.BlockBodyParams.prototype.getPaging = function() {\n  return /** @type{?proto.types.PageParams} */ (\n    jspb.Message.getWrapperField(this, proto.types.PageParams, 2));\n};\n\n\n/** @param {?proto.types.PageParams|undefined} value */\nproto.types.BlockBodyParams.prototype.setPaging = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.types.BlockBodyParams.prototype.clearPaging = function() {\n  this.setPaging(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.BlockBodyParams.prototype.hasPaging = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.BlockHeaderList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.BlockHeaderList.repeatedFields_, null);\n};\ngoog.inherits(proto.types.BlockHeaderList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.BlockHeaderList.displayName = 'proto.types.BlockHeaderList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.BlockHeaderList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.BlockHeaderList.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.BlockHeaderList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.BlockHeaderList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockHeaderList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blocksList: jspb.Message.toObjectList(msg.getBlocksList(),\n    blockchain_pb.Block.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.BlockHeaderList}\n */\nproto.types.BlockHeaderList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.BlockHeaderList;\n  return proto.types.BlockHeaderList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.BlockHeaderList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.BlockHeaderList}\n */\nproto.types.BlockHeaderList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new blockchain_pb.Block;\n      reader.readMessage(value,blockchain_pb.Block.deserializeBinaryFromReader);\n      msg.addBlocks(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.BlockHeaderList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.BlockHeaderList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.BlockHeaderList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockHeaderList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlocksList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      blockchain_pb.Block.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Block blocks = 1;\n * @return {!Array<!proto.types.Block>}\n */\nproto.types.BlockHeaderList.prototype.getBlocksList = function() {\n  return /** @type{!Array<!proto.types.Block>} */ (\n    jspb.Message.getRepeatedWrapperField(this, blockchain_pb.Block, 1));\n};\n\n\n/** @param {!Array<!proto.types.Block>} value */\nproto.types.BlockHeaderList.prototype.setBlocksList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.Block=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Block}\n */\nproto.types.BlockHeaderList.prototype.addBlocks = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.Block, opt_index);\n};\n\n\nproto.types.BlockHeaderList.prototype.clearBlocksList = function() {\n  this.setBlocksList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.BlockMetadata = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.BlockMetadata, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.BlockMetadata.displayName = 'proto.types.BlockMetadata';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.BlockMetadata.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.BlockMetadata.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.BlockMetadata} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockMetadata.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    header: (f = msg.getHeader()) && blockchain_pb.BlockHeader.toObject(includeInstance, f),\n    txcount: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    size: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.BlockMetadata}\n */\nproto.types.BlockMetadata.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.BlockMetadata;\n  return proto.types.BlockMetadata.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.BlockMetadata} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.BlockMetadata}\n */\nproto.types.BlockMetadata.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = new blockchain_pb.BlockHeader;\n      reader.readMessage(value,blockchain_pb.BlockHeader.deserializeBinaryFromReader);\n      msg.setHeader(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTxcount(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.BlockMetadata.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.BlockMetadata.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.BlockMetadata} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockMetadata.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getHeader();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      blockchain_pb.BlockHeader.serializeBinaryToWriter\n    );\n  }\n  f = message.getTxcount();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockMetadata.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.types.BlockMetadata.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.types.BlockMetadata.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockMetadata.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional BlockHeader header = 2;\n * @return {?proto.types.BlockHeader}\n */\nproto.types.BlockMetadata.prototype.getHeader = function() {\n  return /** @type{?proto.types.BlockHeader} */ (\n    jspb.Message.getWrapperField(this, blockchain_pb.BlockHeader, 2));\n};\n\n\n/** @param {?proto.types.BlockHeader|undefined} value */\nproto.types.BlockMetadata.prototype.setHeader = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.types.BlockMetadata.prototype.clearHeader = function() {\n  this.setHeader(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.BlockMetadata.prototype.hasHeader = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int32 txcount = 3;\n * @return {number}\n */\nproto.types.BlockMetadata.prototype.getTxcount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockMetadata.prototype.setTxcount = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 size = 4;\n * @return {number}\n */\nproto.types.BlockMetadata.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockMetadata.prototype.setSize = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.BlockMetadataList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.BlockMetadataList.repeatedFields_, null);\n};\ngoog.inherits(proto.types.BlockMetadataList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.BlockMetadataList.displayName = 'proto.types.BlockMetadataList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.BlockMetadataList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.BlockMetadataList.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.BlockMetadataList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.BlockMetadataList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockMetadataList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blocksList: jspb.Message.toObjectList(msg.getBlocksList(),\n    proto.types.BlockMetadata.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.BlockMetadataList}\n */\nproto.types.BlockMetadataList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.BlockMetadataList;\n  return proto.types.BlockMetadataList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.BlockMetadataList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.BlockMetadataList}\n */\nproto.types.BlockMetadataList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.BlockMetadata;\n      reader.readMessage(value,proto.types.BlockMetadata.deserializeBinaryFromReader);\n      msg.addBlocks(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.BlockMetadataList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.BlockMetadataList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.BlockMetadataList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockMetadataList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlocksList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.types.BlockMetadata.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated BlockMetadata blocks = 1;\n * @return {!Array<!proto.types.BlockMetadata>}\n */\nproto.types.BlockMetadataList.prototype.getBlocksList = function() {\n  return /** @type{!Array<!proto.types.BlockMetadata>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.BlockMetadata, 1));\n};\n\n\n/** @param {!Array<!proto.types.BlockMetadata>} value */\nproto.types.BlockMetadataList.prototype.setBlocksList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.BlockMetadata=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.BlockMetadata}\n */\nproto.types.BlockMetadataList.prototype.addBlocks = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.BlockMetadata, opt_index);\n};\n\n\nproto.types.BlockMetadataList.prototype.clearBlocksList = function() {\n  this.setBlocksList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.CommitResult = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.CommitResult, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.CommitResult.displayName = 'proto.types.CommitResult';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.CommitResult.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.CommitResult.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.CommitResult} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.CommitResult.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    error: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    detail: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.CommitResult}\n */\nproto.types.CommitResult.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.CommitResult;\n  return proto.types.CommitResult.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.CommitResult} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.CommitResult}\n */\nproto.types.CommitResult.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.types.CommitStatus} */ (reader.readEnum());\n      msg.setError(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.CommitResult.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.CommitResult.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.CommitResult} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.CommitResult.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getError();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.CommitResult.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.types.CommitResult.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.types.CommitResult.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.CommitResult.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional CommitStatus error = 2;\n * @return {!proto.types.CommitStatus}\n */\nproto.types.CommitResult.prototype.getError = function() {\n  return /** @type {!proto.types.CommitStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.types.CommitStatus} value */\nproto.types.CommitResult.prototype.setError = function(value) {\n  jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional string detail = 3;\n * @return {string}\n */\nproto.types.CommitResult.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.CommitResult.prototype.setDetail = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.CommitResultList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.CommitResultList.repeatedFields_, null);\n};\ngoog.inherits(proto.types.CommitResultList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.CommitResultList.displayName = 'proto.types.CommitResultList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.CommitResultList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.CommitResultList.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.CommitResultList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.CommitResultList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.CommitResultList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    resultsList: jspb.Message.toObjectList(msg.getResultsList(),\n    proto.types.CommitResult.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.CommitResultList}\n */\nproto.types.CommitResultList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.CommitResultList;\n  return proto.types.CommitResultList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.CommitResultList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.CommitResultList}\n */\nproto.types.CommitResultList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.CommitResult;\n      reader.readMessage(value,proto.types.CommitResult.deserializeBinaryFromReader);\n      msg.addResults(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.CommitResultList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.CommitResultList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.CommitResultList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.CommitResultList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getResultsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.types.CommitResult.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated CommitResult results = 1;\n * @return {!Array<!proto.types.CommitResult>}\n */\nproto.types.CommitResultList.prototype.getResultsList = function() {\n  return /** @type{!Array<!proto.types.CommitResult>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.CommitResult, 1));\n};\n\n\n/** @param {!Array<!proto.types.CommitResult>} value */\nproto.types.CommitResultList.prototype.setResultsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.CommitResult=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.CommitResult}\n */\nproto.types.CommitResultList.prototype.addResults = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.CommitResult, opt_index);\n};\n\n\nproto.types.CommitResultList.prototype.clearResultsList = function() {\n  this.setResultsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.VerifyResult = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.VerifyResult, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.VerifyResult.displayName = 'proto.types.VerifyResult';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.VerifyResult.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.VerifyResult.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.VerifyResult} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.VerifyResult.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    tx: (f = msg.getTx()) && blockchain_pb.Tx.toObject(includeInstance, f),\n    error: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.VerifyResult}\n */\nproto.types.VerifyResult.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.VerifyResult;\n  return proto.types.VerifyResult.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.VerifyResult} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.VerifyResult}\n */\nproto.types.VerifyResult.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new blockchain_pb.Tx;\n      reader.readMessage(value,blockchain_pb.Tx.deserializeBinaryFromReader);\n      msg.setTx(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.types.VerifyStatus} */ (reader.readEnum());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.VerifyResult.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.VerifyResult.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.VerifyResult} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.VerifyResult.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTx();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      blockchain_pb.Tx.serializeBinaryToWriter\n    );\n  }\n  f = message.getError();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Tx tx = 1;\n * @return {?proto.types.Tx}\n */\nproto.types.VerifyResult.prototype.getTx = function() {\n  return /** @type{?proto.types.Tx} */ (\n    jspb.Message.getWrapperField(this, blockchain_pb.Tx, 1));\n};\n\n\n/** @param {?proto.types.Tx|undefined} value */\nproto.types.VerifyResult.prototype.setTx = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.VerifyResult.prototype.clearTx = function() {\n  this.setTx(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.VerifyResult.prototype.hasTx = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional VerifyStatus error = 2;\n * @return {!proto.types.VerifyStatus}\n */\nproto.types.VerifyResult.prototype.getError = function() {\n  return /** @type {!proto.types.VerifyStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.types.VerifyStatus} value */\nproto.types.VerifyResult.prototype.setError = function(value) {\n  jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Personal = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Personal, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Personal.displayName = 'proto.types.Personal';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Personal.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Personal.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Personal} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Personal.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    passphrase: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    account: (f = msg.getAccount()) && account_pb.Account.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Personal}\n */\nproto.types.Personal.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Personal;\n  return proto.types.Personal.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Personal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Personal}\n */\nproto.types.Personal.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassphrase(value);\n      break;\n    case 2:\n      var value = new account_pb.Account;\n      reader.readMessage(value,account_pb.Account.deserializeBinaryFromReader);\n      msg.setAccount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Personal.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Personal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Personal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Personal.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPassphrase();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAccount();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      account_pb.Account.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string passphrase = 1;\n * @return {string}\n */\nproto.types.Personal.prototype.getPassphrase = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Personal.prototype.setPassphrase = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional Account account = 2;\n * @return {?proto.types.Account}\n */\nproto.types.Personal.prototype.getAccount = function() {\n  return /** @type{?proto.types.Account} */ (\n    jspb.Message.getWrapperField(this, account_pb.Account, 2));\n};\n\n\n/** @param {?proto.types.Account|undefined} value */\nproto.types.Personal.prototype.setAccount = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.types.Personal.prototype.clearAccount = function() {\n  this.setAccount(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.Personal.prototype.hasAccount = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ImportFormat = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.ImportFormat, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ImportFormat.displayName = 'proto.types.ImportFormat';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ImportFormat.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ImportFormat.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ImportFormat} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ImportFormat.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    wif: (f = msg.getWif()) && proto.types.SingleBytes.toObject(includeInstance, f),\n    oldpass: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    newpass: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ImportFormat}\n */\nproto.types.ImportFormat.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ImportFormat;\n  return proto.types.ImportFormat.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ImportFormat} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ImportFormat}\n */\nproto.types.ImportFormat.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.SingleBytes;\n      reader.readMessage(value,proto.types.SingleBytes.deserializeBinaryFromReader);\n      msg.setWif(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOldpass(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNewpass(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ImportFormat.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ImportFormat.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ImportFormat} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ImportFormat.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getWif();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.types.SingleBytes.serializeBinaryToWriter\n    );\n  }\n  f = message.getOldpass();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getNewpass();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional SingleBytes wif = 1;\n * @return {?proto.types.SingleBytes}\n */\nproto.types.ImportFormat.prototype.getWif = function() {\n  return /** @type{?proto.types.SingleBytes} */ (\n    jspb.Message.getWrapperField(this, proto.types.SingleBytes, 1));\n};\n\n\n/** @param {?proto.types.SingleBytes|undefined} value */\nproto.types.ImportFormat.prototype.setWif = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.ImportFormat.prototype.clearWif = function() {\n  this.setWif(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.ImportFormat.prototype.hasWif = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string oldpass = 2;\n * @return {string}\n */\nproto.types.ImportFormat.prototype.getOldpass = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ImportFormat.prototype.setOldpass = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string newpass = 3;\n * @return {string}\n */\nproto.types.ImportFormat.prototype.getNewpass = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ImportFormat.prototype.setNewpass = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Staking = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Staking, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Staking.displayName = 'proto.types.Staking';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Staking.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Staking.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Staking} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Staking.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    amount: msg.getAmount_asB64(),\n    when: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Staking}\n */\nproto.types.Staking.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Staking;\n  return proto.types.Staking.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Staking} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Staking}\n */\nproto.types.Staking.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAmount(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setWhen(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Staking.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Staking.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Staking} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Staking.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAmount_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getWhen();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes amount = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Staking.prototype.getAmount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes amount = 1;\n * This is a type-conversion wrapper around `getAmount()`\n * @return {string}\n */\nproto.types.Staking.prototype.getAmount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAmount()));\n};\n\n\n/**\n * optional bytes amount = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAmount()`\n * @return {!Uint8Array}\n */\nproto.types.Staking.prototype.getAmount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAmount()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Staking.prototype.setAmount = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 when = 2;\n * @return {number}\n */\nproto.types.Staking.prototype.getWhen = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Staking.prototype.setWhen = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Vote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Vote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Vote.displayName = 'proto.types.Vote';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Vote.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Vote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Vote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Vote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    candidate: msg.getCandidate_asB64(),\n    amount: msg.getAmount_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Vote}\n */\nproto.types.Vote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Vote;\n  return proto.types.Vote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Vote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Vote}\n */\nproto.types.Vote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCandidate(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Vote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Vote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Vote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Vote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCandidate_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getAmount_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes candidate = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Vote.prototype.getCandidate = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes candidate = 1;\n * This is a type-conversion wrapper around `getCandidate()`\n * @return {string}\n */\nproto.types.Vote.prototype.getCandidate_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCandidate()));\n};\n\n\n/**\n * optional bytes candidate = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCandidate()`\n * @return {!Uint8Array}\n */\nproto.types.Vote.prototype.getCandidate_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCandidate()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Vote.prototype.setCandidate = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes amount = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Vote.prototype.getAmount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes amount = 2;\n * This is a type-conversion wrapper around `getAmount()`\n * @return {string}\n */\nproto.types.Vote.prototype.getAmount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAmount()));\n};\n\n\n/**\n * optional bytes amount = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAmount()`\n * @return {!Uint8Array}\n */\nproto.types.Vote.prototype.getAmount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAmount()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Vote.prototype.setAmount = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.VoteParams = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.VoteParams, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.VoteParams.displayName = 'proto.types.VoteParams';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.VoteParams.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.VoteParams.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.VoteParams} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.VoteParams.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    count: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.VoteParams}\n */\nproto.types.VoteParams.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.VoteParams;\n  return proto.types.VoteParams.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.VoteParams} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.VoteParams}\n */\nproto.types.VoteParams.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.VoteParams.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.VoteParams.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.VoteParams} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.VoteParams.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCount();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.types.VoteParams.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.VoteParams.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint32 count = 2;\n * @return {number}\n */\nproto.types.VoteParams.prototype.getCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.VoteParams.prototype.setCount = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.AccountVoteInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.AccountVoteInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.types.AccountVoteInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.AccountVoteInfo.displayName = 'proto.types.AccountVoteInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.AccountVoteInfo.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.AccountVoteInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.AccountVoteInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.AccountVoteInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountVoteInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    staking: (f = msg.getStaking()) && proto.types.Staking.toObject(includeInstance, f),\n    votingList: jspb.Message.toObjectList(msg.getVotingList(),\n    proto.types.VoteInfo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.AccountVoteInfo}\n */\nproto.types.AccountVoteInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.AccountVoteInfo;\n  return proto.types.AccountVoteInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.AccountVoteInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.AccountVoteInfo}\n */\nproto.types.AccountVoteInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.Staking;\n      reader.readMessage(value,proto.types.Staking.deserializeBinaryFromReader);\n      msg.setStaking(value);\n      break;\n    case 2:\n      var value = new proto.types.VoteInfo;\n      reader.readMessage(value,proto.types.VoteInfo.deserializeBinaryFromReader);\n      msg.addVoting(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.AccountVoteInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.AccountVoteInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.AccountVoteInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountVoteInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStaking();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.types.Staking.serializeBinaryToWriter\n    );\n  }\n  f = message.getVotingList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.types.VoteInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Staking staking = 1;\n * @return {?proto.types.Staking}\n */\nproto.types.AccountVoteInfo.prototype.getStaking = function() {\n  return /** @type{?proto.types.Staking} */ (\n    jspb.Message.getWrapperField(this, proto.types.Staking, 1));\n};\n\n\n/** @param {?proto.types.Staking|undefined} value */\nproto.types.AccountVoteInfo.prototype.setStaking = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.AccountVoteInfo.prototype.clearStaking = function() {\n  this.setStaking(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.AccountVoteInfo.prototype.hasStaking = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated VoteInfo voting = 2;\n * @return {!Array<!proto.types.VoteInfo>}\n */\nproto.types.AccountVoteInfo.prototype.getVotingList = function() {\n  return /** @type{!Array<!proto.types.VoteInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.VoteInfo, 2));\n};\n\n\n/** @param {!Array<!proto.types.VoteInfo>} value */\nproto.types.AccountVoteInfo.prototype.setVotingList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.types.VoteInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.VoteInfo}\n */\nproto.types.AccountVoteInfo.prototype.addVoting = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.types.VoteInfo, opt_index);\n};\n\n\nproto.types.AccountVoteInfo.prototype.clearVotingList = function() {\n  this.setVotingList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.VoteInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.VoteInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.types.VoteInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.VoteInfo.displayName = 'proto.types.VoteInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.VoteInfo.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.VoteInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.VoteInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.VoteInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.VoteInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    candidatesList: jspb.Message.getRepeatedField(msg, 2),\n    amount: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.VoteInfo}\n */\nproto.types.VoteInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.VoteInfo;\n  return proto.types.VoteInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.VoteInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.VoteInfo}\n */\nproto.types.VoteInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addCandidates(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.VoteInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.VoteInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.VoteInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.VoteInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCandidatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.types.VoteInfo.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.VoteInfo.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated string candidates = 2;\n * @return {!Array<string>}\n */\nproto.types.VoteInfo.prototype.getCandidatesList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/** @param {!Array<string>} value */\nproto.types.VoteInfo.prototype.setCandidatesList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\nproto.types.VoteInfo.prototype.addCandidates = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.types.VoteInfo.prototype.clearCandidatesList = function() {\n  this.setCandidatesList([]);\n};\n\n\n/**\n * optional string amount = 3;\n * @return {string}\n */\nproto.types.VoteInfo.prototype.getAmount = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.VoteInfo.prototype.setAmount = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.VoteList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.VoteList.repeatedFields_, null);\n};\ngoog.inherits(proto.types.VoteList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.VoteList.displayName = 'proto.types.VoteList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.VoteList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.VoteList.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.VoteList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.VoteList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.VoteList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    proto.types.Vote.toObject, includeInstance),\n    id: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.VoteList}\n */\nproto.types.VoteList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.VoteList;\n  return proto.types.VoteList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.VoteList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.VoteList}\n */\nproto.types.VoteList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.Vote;\n      reader.readMessage(value,proto.types.Vote.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.VoteList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.VoteList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.VoteList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.VoteList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.types.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Vote votes = 1;\n * @return {!Array<!proto.types.Vote>}\n */\nproto.types.VoteList.prototype.getVotesList = function() {\n  return /** @type{!Array<!proto.types.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.Vote, 1));\n};\n\n\n/** @param {!Array<!proto.types.Vote>} value */\nproto.types.VoteList.prototype.setVotesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Vote}\n */\nproto.types.VoteList.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.Vote, opt_index);\n};\n\n\nproto.types.VoteList.prototype.clearVotesList = function() {\n  this.setVotesList([]);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.types.VoteList.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.VoteList.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.NodeReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.NodeReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.NodeReq.displayName = 'proto.types.NodeReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.NodeReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.NodeReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.NodeReq} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.NodeReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timeout: msg.getTimeout_asB64(),\n    component: msg.getComponent_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.NodeReq}\n */\nproto.types.NodeReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.NodeReq;\n  return proto.types.NodeReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.NodeReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.NodeReq}\n */\nproto.types.NodeReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTimeout(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setComponent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.NodeReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.NodeReq.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.NodeReq} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.NodeReq.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimeout_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getComponent_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes timeout = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.NodeReq.prototype.getTimeout = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes timeout = 1;\n * This is a type-conversion wrapper around `getTimeout()`\n * @return {string}\n */\nproto.types.NodeReq.prototype.getTimeout_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTimeout()));\n};\n\n\n/**\n * optional bytes timeout = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTimeout()`\n * @return {!Uint8Array}\n */\nproto.types.NodeReq.prototype.getTimeout_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTimeout()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.NodeReq.prototype.setTimeout = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes component = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.NodeReq.prototype.getComponent = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes component = 2;\n * This is a type-conversion wrapper around `getComponent()`\n * @return {string}\n */\nproto.types.NodeReq.prototype.getComponent_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getComponent()));\n};\n\n\n/**\n * optional bytes component = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getComponent()`\n * @return {!Uint8Array}\n */\nproto.types.NodeReq.prototype.getComponent_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getComponent()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.NodeReq.prototype.setComponent = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Name = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Name, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Name.displayName = 'proto.types.Name';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Name.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Name.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Name} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Name.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    blockno: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Name}\n */\nproto.types.Name.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Name;\n  return proto.types.Name.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Name} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Name}\n */\nproto.types.Name.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockno(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Name.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Name.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Name} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Name.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBlockno();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.types.Name.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Name.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 blockNo = 2;\n * @return {number}\n */\nproto.types.Name.prototype.getBlockno = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Name.prototype.setBlockno = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.NameInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.NameInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.NameInfo.displayName = 'proto.types.NameInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.NameInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.NameInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.NameInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.NameInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: (f = msg.getName()) && proto.types.Name.toObject(includeInstance, f),\n    owner: msg.getOwner_asB64(),\n    destination: msg.getDestination_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.NameInfo}\n */\nproto.types.NameInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.NameInfo;\n  return proto.types.NameInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.NameInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.NameInfo}\n */\nproto.types.NameInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.Name;\n      reader.readMessage(value,proto.types.Name.deserializeBinaryFromReader);\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwner(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDestination(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.NameInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.NameInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.NameInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.NameInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.types.Name.serializeBinaryToWriter\n    );\n  }\n  f = message.getOwner_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getDestination_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Name name = 1;\n * @return {?proto.types.Name}\n */\nproto.types.NameInfo.prototype.getName = function() {\n  return /** @type{?proto.types.Name} */ (\n    jspb.Message.getWrapperField(this, proto.types.Name, 1));\n};\n\n\n/** @param {?proto.types.Name|undefined} value */\nproto.types.NameInfo.prototype.setName = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.NameInfo.prototype.clearName = function() {\n  this.setName(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.NameInfo.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes owner = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.NameInfo.prototype.getOwner = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner = 2;\n * This is a type-conversion wrapper around `getOwner()`\n * @return {string}\n */\nproto.types.NameInfo.prototype.getOwner_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwner()));\n};\n\n\n/**\n * optional bytes owner = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwner()`\n * @return {!Uint8Array}\n */\nproto.types.NameInfo.prototype.getOwner_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwner()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.NameInfo.prototype.setOwner = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes destination = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.types.NameInfo.prototype.getDestination = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes destination = 3;\n * This is a type-conversion wrapper around `getDestination()`\n * @return {string}\n */\nproto.types.NameInfo.prototype.getDestination_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDestination()));\n};\n\n\n/**\n * optional bytes destination = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDestination()`\n * @return {!Uint8Array}\n */\nproto.types.NameInfo.prototype.getDestination_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDestination()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.NameInfo.prototype.setDestination = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.PeersParams = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.PeersParams, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.PeersParams.displayName = 'proto.types.PeersParams';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.PeersParams.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.PeersParams.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.PeersParams} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PeersParams.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nohidden: jspb.Message.getFieldWithDefault(msg, 1, false),\n    showself: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.PeersParams}\n */\nproto.types.PeersParams.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.PeersParams;\n  return proto.types.PeersParams.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.PeersParams} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.PeersParams}\n */\nproto.types.PeersParams.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setNohidden(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShowself(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.PeersParams.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.PeersParams.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.PeersParams} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PeersParams.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNohidden();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getShowself();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool noHidden = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.PeersParams.prototype.getNohidden = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.PeersParams.prototype.setNohidden = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional bool showSelf = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.PeersParams.prototype.getShowself = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.PeersParams.prototype.setShowself = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.KeyParams = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.KeyParams.repeatedFields_, null);\n};\ngoog.inherits(proto.types.KeyParams, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.KeyParams.displayName = 'proto.types.KeyParams';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.KeyParams.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.KeyParams.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.KeyParams.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.KeyParams} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.KeyParams.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyList: jspb.Message.getRepeatedField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.KeyParams}\n */\nproto.types.KeyParams.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.KeyParams;\n  return proto.types.KeyParams.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.KeyParams} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.KeyParams}\n */\nproto.types.KeyParams.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.KeyParams.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.KeyParams.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.KeyParams} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.KeyParams.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string key = 1;\n * @return {!Array<string>}\n */\nproto.types.KeyParams.prototype.getKeyList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array<string>} value */\nproto.types.KeyParams.prototype.setKeyList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\nproto.types.KeyParams.prototype.addKey = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.types.KeyParams.prototype.clearKeyList = function() {\n  this.setKeyList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ServerInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.ServerInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ServerInfo.displayName = 'proto.types.ServerInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ServerInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ServerInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ServerInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ServerInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    statusMap: (f = msg.getStatusMap()) ? f.toObject(includeInstance, undefined) : [],\n    configMap: (f = msg.getConfigMap()) ? f.toObject(includeInstance, proto.types.ConfigItem.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ServerInfo}\n */\nproto.types.ServerInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ServerInfo;\n  return proto.types.ServerInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ServerInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ServerInfo}\n */\nproto.types.ServerInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getStatusMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, \"\");\n         });\n      break;\n    case 2:\n      var value = msg.getConfigMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.types.ConfigItem.deserializeBinaryFromReader, \"\");\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ServerInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ServerInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ServerInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ServerInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatusMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);\n  }\n  f = message.getConfigMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.types.ConfigItem.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * map<string, string> status = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,string>}\n */\nproto.types.ServerInfo.prototype.getStatusMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,string>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      null));\n};\n\n\nproto.types.ServerInfo.prototype.clearStatusMap = function() {\n  this.getStatusMap().clear();\n};\n\n\n/**\n * map<string, ConfigItem> config = 2;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.types.ConfigItem>}\n */\nproto.types.ServerInfo.prototype.getConfigMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!proto.types.ConfigItem>} */ (\n      jspb.Message.getMapField(this, 2, opt_noLazyCreate,\n      proto.types.ConfigItem));\n};\n\n\nproto.types.ServerInfo.prototype.clearConfigMap = function() {\n  this.getConfigMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ConfigItem = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.ConfigItem, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ConfigItem.displayName = 'proto.types.ConfigItem';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ConfigItem.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ConfigItem.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ConfigItem} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ConfigItem.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    propsMap: (f = msg.getPropsMap()) ? f.toObject(includeInstance, undefined) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ConfigItem}\n */\nproto.types.ConfigItem.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ConfigItem;\n  return proto.types.ConfigItem.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ConfigItem} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ConfigItem}\n */\nproto.types.ConfigItem.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = msg.getPropsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, \"\");\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ConfigItem.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ConfigItem.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ConfigItem} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ConfigItem.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPropsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);\n  }\n};\n\n\n/**\n * map<string, string> props = 2;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,string>}\n */\nproto.types.ConfigItem.prototype.getPropsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,string>} */ (\n      jspb.Message.getMapField(this, 2, opt_noLazyCreate,\n      null));\n};\n\n\nproto.types.ConfigItem.prototype.clearPropsMap = function() {\n  this.getPropsMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.EventList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.EventList.repeatedFields_, null);\n};\ngoog.inherits(proto.types.EventList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.EventList.displayName = 'proto.types.EventList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.EventList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.EventList.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.EventList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.EventList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.EventList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    eventsList: jspb.Message.toObjectList(msg.getEventsList(),\n    blockchain_pb.Event.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.EventList}\n */\nproto.types.EventList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.EventList;\n  return proto.types.EventList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.EventList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.EventList}\n */\nproto.types.EventList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new blockchain_pb.Event;\n      reader.readMessage(value,blockchain_pb.Event.deserializeBinaryFromReader);\n      msg.addEvents(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.EventList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.EventList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.EventList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.EventList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEventsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      blockchain_pb.Event.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Event events = 1;\n * @return {!Array<!proto.types.Event>}\n */\nproto.types.EventList.prototype.getEventsList = function() {\n  return /** @type{!Array<!proto.types.Event>} */ (\n    jspb.Message.getRepeatedWrapperField(this, blockchain_pb.Event, 1));\n};\n\n\n/** @param {!Array<!proto.types.Event>} value */\nproto.types.EventList.prototype.setEventsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.Event=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Event}\n */\nproto.types.EventList.prototype.addEvents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.Event, opt_index);\n};\n\n\nproto.types.EventList.prototype.clearEventsList = function() {\n  this.setEventsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ConsensusInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.ConsensusInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.types.ConsensusInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ConsensusInfo.displayName = 'proto.types.ConsensusInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.ConsensusInfo.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ConsensusInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ConsensusInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ConsensusInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ConsensusInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    info: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    bpsList: jspb.Message.getRepeatedField(msg, 3)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ConsensusInfo}\n */\nproto.types.ConsensusInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ConsensusInfo;\n  return proto.types.ConsensusInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ConsensusInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ConsensusInfo}\n */\nproto.types.ConsensusInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfo(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addBps(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ConsensusInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ConsensusInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ConsensusInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ConsensusInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getInfo();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getBpsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string type = 1;\n * @return {string}\n */\nproto.types.ConsensusInfo.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ConsensusInfo.prototype.setType = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string info = 2;\n * @return {string}\n */\nproto.types.ConsensusInfo.prototype.getInfo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ConsensusInfo.prototype.setInfo = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated string bps = 3;\n * @return {!Array<string>}\n */\nproto.types.ConsensusInfo.prototype.getBpsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/** @param {!Array<string>} value */\nproto.types.ConsensusInfo.prototype.setBpsList = function(value) {\n  jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\nproto.types.ConsensusInfo.prototype.addBps = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\nproto.types.ConsensusInfo.prototype.clearBpsList = function() {\n  this.setBpsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.EnterpriseConfigKey = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.EnterpriseConfigKey, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.EnterpriseConfigKey.displayName = 'proto.types.EnterpriseConfigKey';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.EnterpriseConfigKey.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.EnterpriseConfigKey.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.EnterpriseConfigKey} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.EnterpriseConfigKey.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.EnterpriseConfigKey}\n */\nproto.types.EnterpriseConfigKey.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.EnterpriseConfigKey;\n  return proto.types.EnterpriseConfigKey.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.EnterpriseConfigKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.EnterpriseConfigKey}\n */\nproto.types.EnterpriseConfigKey.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.EnterpriseConfigKey.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.EnterpriseConfigKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.EnterpriseConfigKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.EnterpriseConfigKey.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key = 1;\n * @return {string}\n */\nproto.types.EnterpriseConfigKey.prototype.getKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.EnterpriseConfigKey.prototype.setKey = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.EnterpriseConfig = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.EnterpriseConfig.repeatedFields_, null);\n};\ngoog.inherits(proto.types.EnterpriseConfig, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.EnterpriseConfig.displayName = 'proto.types.EnterpriseConfig';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.EnterpriseConfig.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.EnterpriseConfig.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.EnterpriseConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.EnterpriseConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.EnterpriseConfig.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    on: jspb.Message.getFieldWithDefault(msg, 2, false),\n    valuesList: jspb.Message.getRepeatedField(msg, 3)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.EnterpriseConfig}\n */\nproto.types.EnterpriseConfig.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.EnterpriseConfig;\n  return proto.types.EnterpriseConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.EnterpriseConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.EnterpriseConfig}\n */\nproto.types.EnterpriseConfig.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKey(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setOn(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addValues(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.EnterpriseConfig.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.EnterpriseConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.EnterpriseConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.EnterpriseConfig.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOn();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getValuesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key = 1;\n * @return {string}\n */\nproto.types.EnterpriseConfig.prototype.getKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.EnterpriseConfig.prototype.setKey = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool on = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.EnterpriseConfig.prototype.getOn = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.EnterpriseConfig.prototype.setOn = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * repeated string values = 3;\n * @return {!Array<string>}\n */\nproto.types.EnterpriseConfig.prototype.getValuesList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/** @param {!Array<string>} value */\nproto.types.EnterpriseConfig.prototype.setValuesList = function(value) {\n  jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\nproto.types.EnterpriseConfig.prototype.addValues = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\nproto.types.EnterpriseConfig.prototype.clearValuesList = function() {\n  this.setValuesList([]);\n};\n\n\n/**\n * @enum {number}\n */\nproto.types.CommitStatus = {\n  TX_OK: 0,\n  TX_NONCE_TOO_LOW: 1,\n  TX_ALREADY_EXISTS: 2,\n  TX_INVALID_HASH: 3,\n  TX_INVALID_SIGN: 4,\n  TX_INVALID_FORMAT: 5,\n  TX_INSUFFICIENT_BALANCE: 6,\n  TX_HAS_SAME_NONCE: 7,\n  TX_INTERNAL_ERROR: 9\n};\n\n/**\n * @enum {number}\n */\nproto.types.VerifyStatus = {\n  VERIFY_STATUS_OK: 0,\n  VERIFY_STATUS_SIGN_NOT_MATCH: 1,\n  VERIFY_STATUS_INVALID_HASH: 2\n};\n\ngoog.object.extend(exports, proto.types);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bdbe184d93dd43a1219e774584a56e7360857dee","contentHash":"d3f718e44057d08045c73b5db837c1f73be8a78e835220b6bdb8cc5b418d3cf5"},"/Users/paulgrau/projects/aergo/herajs/packages/client/types/blockchain_pb.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/types/blockchain_pb.js","statementMap":{"0":{"start":{"line":10,"column":11},"end":{"line":10,"column":37}},"1":{"start":{"line":11,"column":11},"end":{"line":11,"column":15}},"2":{"start":{"line":12,"column":13},"end":{"line":12,"column":38}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":60}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":53}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":57}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":59}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":64}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":58}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":58}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":56}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":56}},"14":{"start":{"line":25,"column":0},"end":{"line":25,"column":53}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":55}},"16":{"start":{"line":27,"column":0},"end":{"line":27,"column":53}},"17":{"start":{"line":28,"column":0},"end":{"line":28,"column":58}},"18":{"start":{"line":29,"column":0},"end":{"line":29,"column":63}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":56}},"20":{"start":{"line":31,"column":0},"end":{"line":31,"column":50}},"21":{"start":{"line":32,"column":0},"end":{"line":32,"column":54}},"22":{"start":{"line":33,"column":0},"end":{"line":33,"column":53}},"23":{"start":{"line":34,"column":0},"end":{"line":34,"column":57}},"24":{"start":{"line":35,"column":0},"end":{"line":35,"column":54}},"25":{"start":{"line":36,"column":0},"end":{"line":36,"column":54}},"26":{"start":{"line":48,"column":0},"end":{"line":50,"column":2}},"27":{"start":{"line":49,"column":2},"end":{"line":49,"column":61}},"28":{"start":{"line":51,"column":0},"end":{"line":51,"column":47}},"29":{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},"30":{"start":{"line":53,"column":2},"end":{"line":53,"column":54}},"31":{"start":{"line":57,"column":0},"end":{"line":94,"column":1}},"32":{"start":{"line":68,"column":2},"end":{"line":70,"column":4}},"33":{"start":{"line":69,"column":4},"end":{"line":69,"column":65}},"34":{"start":{"line":82,"column":2},"end":{"line":93,"column":4}},"35":{"start":{"line":83,"column":16},"end":{"line":86,"column":87}},"36":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"37":{"start":{"line":90,"column":6},"end":{"line":90,"column":37}},"38":{"start":{"line":92,"column":4},"end":{"line":92,"column":15}},"39":{"start":{"line":102,"column":0},"end":{"line":106,"column":2}},"40":{"start":{"line":103,"column":15},"end":{"line":103,"column":43}},"41":{"start":{"line":104,"column":12},"end":{"line":104,"column":35}},"42":{"start":{"line":105,"column":2},"end":{"line":105,"column":68}},"43":{"start":{"line":116,"column":0},"end":{"line":143,"column":2}},"44":{"start":{"line":117,"column":2},"end":{"line":141,"column":3}},"45":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"46":{"start":{"line":119,"column":6},"end":{"line":119,"column":12}},"47":{"start":{"line":121,"column":16},"end":{"line":121,"column":39}},"48":{"start":{"line":122,"column":4},"end":{"line":139,"column":15}},"49":{"start":{"line":124,"column":46},"end":{"line":124,"column":64}},"50":{"start":{"line":125,"column":8},"end":{"line":125,"column":27}},"51":{"start":{"line":126,"column":8},"end":{"line":126,"column":14}},"52":{"start":{"line":128,"column":20},"end":{"line":128,"column":49}},"53":{"start":{"line":129,"column":8},"end":{"line":129,"column":87}},"54":{"start":{"line":130,"column":8},"end":{"line":130,"column":29}},"55":{"start":{"line":131,"column":8},"end":{"line":131,"column":14}},"56":{"start":{"line":133,"column":20},"end":{"line":133,"column":47}},"57":{"start":{"line":134,"column":8},"end":{"line":134,"column":85}},"58":{"start":{"line":135,"column":8},"end":{"line":135,"column":27}},"59":{"start":{"line":136,"column":8},"end":{"line":136,"column":14}},"60":{"start":{"line":138,"column":8},"end":{"line":138,"column":27}},"61":{"start":{"line":139,"column":8},"end":{"line":139,"column":14}},"62":{"start":{"line":142,"column":2},"end":{"line":142,"column":13}},"63":{"start":{"line":150,"column":0},"end":{"line":154,"column":2}},"64":{"start":{"line":151,"column":15},"end":{"line":151,"column":38}},"65":{"start":{"line":152,"column":2},"end":{"line":152,"column":58}},"66":{"start":{"line":153,"column":2},"end":{"line":153,"column":34}},"67":{"start":{"line":164,"column":0},"end":{"line":189,"column":2}},"68":{"start":{"line":165,"column":10},"end":{"line":165,"column":19}},"69":{"start":{"line":166,"column":2},"end":{"line":166,"column":29}},"70":{"start":{"line":167,"column":2},"end":{"line":172,"column":3}},"71":{"start":{"line":168,"column":4},"end":{"line":170,"column":7}},"72":{"start":{"line":173,"column":2},"end":{"line":173,"column":26}},"73":{"start":{"line":174,"column":2},"end":{"line":180,"column":3}},"74":{"start":{"line":175,"column":4},"end":{"line":178,"column":53}},"75":{"start":{"line":181,"column":2},"end":{"line":181,"column":24}},"76":{"start":{"line":182,"column":2},"end":{"line":188,"column":3}},"77":{"start":{"line":183,"column":4},"end":{"line":186,"column":51}},"78":{"start":{"line":196,"column":0},"end":{"line":198,"column":2}},"79":{"start":{"line":197,"column":2},"end":{"line":197,"column":92}},"80":{"start":{"line":206,"column":0},"end":{"line":209,"column":2}},"81":{"start":{"line":207,"column":2},"end":{"line":208,"column":21}},"82":{"start":{"line":219,"column":0},"end":{"line":222,"column":2}},"83":{"start":{"line":220,"column":2},"end":{"line":221,"column":21}},"84":{"start":{"line":226,"column":0},"end":{"line":228,"column":2}},"85":{"start":{"line":227,"column":2},"end":{"line":227,"column":51}},"86":{"start":{"line":235,"column":0},"end":{"line":238,"column":2}},"87":{"start":{"line":236,"column":2},"end":{"line":237,"column":68}},"88":{"start":{"line":242,"column":0},"end":{"line":244,"column":2}},"89":{"start":{"line":243,"column":2},"end":{"line":243,"column":47}},"90":{"start":{"line":247,"column":0},"end":{"line":249,"column":2}},"91":{"start":{"line":248,"column":2},"end":{"line":248,"column":28}},"92":{"start":{"line":256,"column":0},"end":{"line":258,"column":2}},"93":{"start":{"line":257,"column":2},"end":{"line":257,"column":48}},"94":{"start":{"line":265,"column":0},"end":{"line":268,"column":2}},"95":{"start":{"line":266,"column":2},"end":{"line":267,"column":66}},"96":{"start":{"line":272,"column":0},"end":{"line":274,"column":2}},"97":{"start":{"line":273,"column":2},"end":{"line":273,"column":47}},"98":{"start":{"line":277,"column":0},"end":{"line":279,"column":2}},"99":{"start":{"line":278,"column":2},"end":{"line":278,"column":26}},"100":{"start":{"line":286,"column":0},"end":{"line":288,"column":2}},"101":{"start":{"line":287,"column":2},"end":{"line":287,"column":48}},"102":{"start":{"line":302,"column":0},"end":{"line":304,"column":2}},"103":{"start":{"line":303,"column":2},"end":{"line":303,"column":61}},"104":{"start":{"line":305,"column":0},"end":{"line":305,"column":53}},"105":{"start":{"line":306,"column":0},"end":{"line":308,"column":1}},"106":{"start":{"line":307,"column":2},"end":{"line":307,"column":66}},"107":{"start":{"line":311,"column":0},"end":{"line":357,"column":1}},"108":{"start":{"line":322,"column":2},"end":{"line":324,"column":4}},"109":{"start":{"line":323,"column":4},"end":{"line":323,"column":71}},"110":{"start":{"line":336,"column":2},"end":{"line":356,"column":4}},"111":{"start":{"line":337,"column":16},"end":{"line":349,"column":43}},"112":{"start":{"line":352,"column":4},"end":{"line":354,"column":5}},"113":{"start":{"line":353,"column":6},"end":{"line":353,"column":37}},"114":{"start":{"line":355,"column":4},"end":{"line":355,"column":15}},"115":{"start":{"line":365,"column":0},"end":{"line":369,"column":2}},"116":{"start":{"line":366,"column":15},"end":{"line":366,"column":43}},"117":{"start":{"line":367,"column":12},"end":{"line":367,"column":41}},"118":{"start":{"line":368,"column":2},"end":{"line":368,"column":74}},"119":{"start":{"line":379,"column":0},"end":{"line":440,"column":2}},"120":{"start":{"line":380,"column":2},"end":{"line":438,"column":3}},"121":{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},"122":{"start":{"line":382,"column":6},"end":{"line":382,"column":12}},"123":{"start":{"line":384,"column":16},"end":{"line":384,"column":39}},"124":{"start":{"line":385,"column":4},"end":{"line":436,"column":15}},"125":{"start":{"line":387,"column":46},"end":{"line":387,"column":64}},"126":{"start":{"line":388,"column":8},"end":{"line":388,"column":30}},"127":{"start":{"line":389,"column":8},"end":{"line":389,"column":14}},"128":{"start":{"line":391,"column":46},"end":{"line":391,"column":64}},"129":{"start":{"line":392,"column":8},"end":{"line":392,"column":36}},"130":{"start":{"line":393,"column":8},"end":{"line":393,"column":14}},"131":{"start":{"line":395,"column":41},"end":{"line":395,"column":60}},"132":{"start":{"line":396,"column":8},"end":{"line":396,"column":30}},"133":{"start":{"line":397,"column":8},"end":{"line":397,"column":14}},"134":{"start":{"line":399,"column":41},"end":{"line":399,"column":59}},"135":{"start":{"line":400,"column":8},"end":{"line":400,"column":32}},"136":{"start":{"line":401,"column":8},"end":{"line":401,"column":14}},"137":{"start":{"line":403,"column":46},"end":{"line":403,"column":64}},"138":{"start":{"line":404,"column":8},"end":{"line":404,"column":37}},"139":{"start":{"line":405,"column":8},"end":{"line":405,"column":14}},"140":{"start":{"line":407,"column":46},"end":{"line":407,"column":64}},"141":{"start":{"line":408,"column":8},"end":{"line":408,"column":34}},"142":{"start":{"line":409,"column":8},"end":{"line":409,"column":14}},"143":{"start":{"line":411,"column":46},"end":{"line":411,"column":64}},"144":{"start":{"line":412,"column":8},"end":{"line":412,"column":39}},"145":{"start":{"line":413,"column":8},"end":{"line":413,"column":14}},"146":{"start":{"line":415,"column":41},"end":{"line":415,"column":60}},"147":{"start":{"line":416,"column":8},"end":{"line":416,"column":31}},"148":{"start":{"line":417,"column":8},"end":{"line":417,"column":14}},"149":{"start":{"line":419,"column":46},"end":{"line":419,"column":64}},"150":{"start":{"line":420,"column":8},"end":{"line":420,"column":29}},"151":{"start":{"line":421,"column":8},"end":{"line":421,"column":14}},"152":{"start":{"line":423,"column":46},"end":{"line":423,"column":64}},"153":{"start":{"line":424,"column":8},"end":{"line":424,"column":38}},"154":{"start":{"line":425,"column":8},"end":{"line":425,"column":14}},"155":{"start":{"line":427,"column":46},"end":{"line":427,"column":64}},"156":{"start":{"line":428,"column":8},"end":{"line":428,"column":27}},"157":{"start":{"line":429,"column":8},"end":{"line":429,"column":14}},"158":{"start":{"line":431,"column":46},"end":{"line":431,"column":64}},"159":{"start":{"line":432,"column":8},"end":{"line":432,"column":32}},"160":{"start":{"line":433,"column":8},"end":{"line":433,"column":14}},"161":{"start":{"line":435,"column":8},"end":{"line":435,"column":27}},"162":{"start":{"line":436,"column":8},"end":{"line":436,"column":14}},"163":{"start":{"line":439,"column":2},"end":{"line":439,"column":13}},"164":{"start":{"line":447,"column":0},"end":{"line":451,"column":2}},"165":{"start":{"line":448,"column":15},"end":{"line":448,"column":38}},"166":{"start":{"line":449,"column":2},"end":{"line":449,"column":64}},"167":{"start":{"line":450,"column":2},"end":{"line":450,"column":34}},"168":{"start":{"line":461,"column":0},"end":{"line":547,"column":2}},"169":{"start":{"line":462,"column":10},"end":{"line":462,"column":19}},"170":{"start":{"line":463,"column":2},"end":{"line":463,"column":32}},"171":{"start":{"line":464,"column":2},"end":{"line":469,"column":3}},"172":{"start":{"line":465,"column":4},"end":{"line":467,"column":7}},"173":{"start":{"line":470,"column":2},"end":{"line":470,"column":38}},"174":{"start":{"line":471,"column":2},"end":{"line":476,"column":3}},"175":{"start":{"line":472,"column":4},"end":{"line":474,"column":7}},"176":{"start":{"line":477,"column":2},"end":{"line":477,"column":27}},"177":{"start":{"line":478,"column":2},"end":{"line":483,"column":3}},"178":{"start":{"line":479,"column":4},"end":{"line":481,"column":7}},"179":{"start":{"line":484,"column":2},"end":{"line":484,"column":29}},"180":{"start":{"line":485,"column":2},"end":{"line":490,"column":3}},"181":{"start":{"line":486,"column":4},"end":{"line":488,"column":7}},"182":{"start":{"line":491,"column":2},"end":{"line":491,"column":39}},"183":{"start":{"line":492,"column":2},"end":{"line":497,"column":3}},"184":{"start":{"line":493,"column":4},"end":{"line":495,"column":7}},"185":{"start":{"line":498,"column":2},"end":{"line":498,"column":36}},"186":{"start":{"line":499,"column":2},"end":{"line":504,"column":3}},"187":{"start":{"line":500,"column":4},"end":{"line":502,"column":7}},"188":{"start":{"line":505,"column":2},"end":{"line":505,"column":41}},"189":{"start":{"line":506,"column":2},"end":{"line":511,"column":3}},"190":{"start":{"line":507,"column":4},"end":{"line":509,"column":7}},"191":{"start":{"line":512,"column":2},"end":{"line":512,"column":28}},"192":{"start":{"line":513,"column":2},"end":{"line":518,"column":3}},"193":{"start":{"line":514,"column":4},"end":{"line":516,"column":7}},"194":{"start":{"line":519,"column":2},"end":{"line":519,"column":31}},"195":{"start":{"line":520,"column":2},"end":{"line":525,"column":3}},"196":{"start":{"line":521,"column":4},"end":{"line":523,"column":7}},"197":{"start":{"line":526,"column":2},"end":{"line":526,"column":40}},"198":{"start":{"line":527,"column":2},"end":{"line":532,"column":3}},"199":{"start":{"line":528,"column":4},"end":{"line":530,"column":7}},"200":{"start":{"line":533,"column":2},"end":{"line":533,"column":29}},"201":{"start":{"line":534,"column":2},"end":{"line":539,"column":3}},"202":{"start":{"line":535,"column":4},"end":{"line":537,"column":7}},"203":{"start":{"line":540,"column":2},"end":{"line":540,"column":34}},"204":{"start":{"line":541,"column":2},"end":{"line":546,"column":3}},"205":{"start":{"line":542,"column":4},"end":{"line":544,"column":7}},"206":{"start":{"line":554,"column":0},"end":{"line":556,"column":2}},"207":{"start":{"line":555,"column":2},"end":{"line":555,"column":92}},"208":{"start":{"line":564,"column":0},"end":{"line":567,"column":2}},"209":{"start":{"line":565,"column":2},"end":{"line":566,"column":24}},"210":{"start":{"line":577,"column":0},"end":{"line":580,"column":2}},"211":{"start":{"line":578,"column":2},"end":{"line":579,"column":24}},"212":{"start":{"line":584,"column":0},"end":{"line":586,"column":2}},"213":{"start":{"line":585,"column":2},"end":{"line":585,"column":51}},"214":{"start":{"line":593,"column":0},"end":{"line":595,"column":2}},"215":{"start":{"line":594,"column":2},"end":{"line":594,"column":92}},"216":{"start":{"line":603,"column":0},"end":{"line":606,"column":2}},"217":{"start":{"line":604,"column":2},"end":{"line":605,"column":30}},"218":{"start":{"line":616,"column":0},"end":{"line":619,"column":2}},"219":{"start":{"line":617,"column":2},"end":{"line":618,"column":30}},"220":{"start":{"line":623,"column":0},"end":{"line":625,"column":2}},"221":{"start":{"line":624,"column":2},"end":{"line":624,"column":51}},"222":{"start":{"line":632,"column":0},"end":{"line":634,"column":2}},"223":{"start":{"line":633,"column":2},"end":{"line":633,"column":77}},"224":{"start":{"line":638,"column":0},"end":{"line":640,"column":2}},"225":{"start":{"line":639,"column":2},"end":{"line":639,"column":49}},"226":{"start":{"line":647,"column":0},"end":{"line":649,"column":2}},"227":{"start":{"line":648,"column":2},"end":{"line":648,"column":77}},"228":{"start":{"line":653,"column":0},"end":{"line":655,"column":2}},"229":{"start":{"line":654,"column":2},"end":{"line":654,"column":49}},"230":{"start":{"line":662,"column":0},"end":{"line":664,"column":2}},"231":{"start":{"line":663,"column":2},"end":{"line":663,"column":92}},"232":{"start":{"line":672,"column":0},"end":{"line":675,"column":2}},"233":{"start":{"line":673,"column":2},"end":{"line":674,"column":31}},"234":{"start":{"line":685,"column":0},"end":{"line":688,"column":2}},"235":{"start":{"line":686,"column":2},"end":{"line":687,"column":31}},"236":{"start":{"line":692,"column":0},"end":{"line":694,"column":2}},"237":{"start":{"line":693,"column":2},"end":{"line":693,"column":51}},"238":{"start":{"line":701,"column":0},"end":{"line":703,"column":2}},"239":{"start":{"line":702,"column":2},"end":{"line":702,"column":92}},"240":{"start":{"line":711,"column":0},"end":{"line":714,"column":2}},"241":{"start":{"line":712,"column":2},"end":{"line":713,"column":28}},"242":{"start":{"line":724,"column":0},"end":{"line":727,"column":2}},"243":{"start":{"line":725,"column":2},"end":{"line":726,"column":28}},"244":{"start":{"line":731,"column":0},"end":{"line":733,"column":2}},"245":{"start":{"line":732,"column":2},"end":{"line":732,"column":51}},"246":{"start":{"line":740,"column":0},"end":{"line":742,"column":2}},"247":{"start":{"line":741,"column":2},"end":{"line":741,"column":92}},"248":{"start":{"line":750,"column":0},"end":{"line":753,"column":2}},"249":{"start":{"line":751,"column":2},"end":{"line":752,"column":33}},"250":{"start":{"line":763,"column":0},"end":{"line":766,"column":2}},"251":{"start":{"line":764,"column":2},"end":{"line":765,"column":33}},"252":{"start":{"line":770,"column":0},"end":{"line":772,"column":2}},"253":{"start":{"line":771,"column":2},"end":{"line":771,"column":51}},"254":{"start":{"line":779,"column":0},"end":{"line":781,"column":2}},"255":{"start":{"line":780,"column":2},"end":{"line":780,"column":77}},"256":{"start":{"line":785,"column":0},"end":{"line":787,"column":2}},"257":{"start":{"line":786,"column":2},"end":{"line":786,"column":49}},"258":{"start":{"line":794,"column":0},"end":{"line":796,"column":2}},"259":{"start":{"line":795,"column":2},"end":{"line":795,"column":92}},"260":{"start":{"line":804,"column":0},"end":{"line":807,"column":2}},"261":{"start":{"line":805,"column":2},"end":{"line":806,"column":23}},"262":{"start":{"line":817,"column":0},"end":{"line":820,"column":2}},"263":{"start":{"line":818,"column":2},"end":{"line":819,"column":23}},"264":{"start":{"line":824,"column":0},"end":{"line":826,"column":2}},"265":{"start":{"line":825,"column":2},"end":{"line":825,"column":51}},"266":{"start":{"line":833,"column":0},"end":{"line":835,"column":2}},"267":{"start":{"line":834,"column":2},"end":{"line":834,"column":93}},"268":{"start":{"line":843,"column":0},"end":{"line":846,"column":2}},"269":{"start":{"line":844,"column":2},"end":{"line":845,"column":32}},"270":{"start":{"line":856,"column":0},"end":{"line":859,"column":2}},"271":{"start":{"line":857,"column":2},"end":{"line":858,"column":32}},"272":{"start":{"line":863,"column":0},"end":{"line":865,"column":2}},"273":{"start":{"line":864,"column":2},"end":{"line":864,"column":52}},"274":{"start":{"line":872,"column":0},"end":{"line":874,"column":2}},"275":{"start":{"line":873,"column":2},"end":{"line":873,"column":93}},"276":{"start":{"line":882,"column":0},"end":{"line":885,"column":2}},"277":{"start":{"line":883,"column":2},"end":{"line":884,"column":21}},"278":{"start":{"line":895,"column":0},"end":{"line":898,"column":2}},"279":{"start":{"line":896,"column":2},"end":{"line":897,"column":21}},"280":{"start":{"line":902,"column":0},"end":{"line":904,"column":2}},"281":{"start":{"line":903,"column":2},"end":{"line":903,"column":52}},"282":{"start":{"line":911,"column":0},"end":{"line":913,"column":2}},"283":{"start":{"line":912,"column":2},"end":{"line":912,"column":93}},"284":{"start":{"line":921,"column":0},"end":{"line":924,"column":2}},"285":{"start":{"line":922,"column":2},"end":{"line":923,"column":26}},"286":{"start":{"line":934,"column":0},"end":{"line":937,"column":2}},"287":{"start":{"line":935,"column":2},"end":{"line":936,"column":26}},"288":{"start":{"line":941,"column":0},"end":{"line":943,"column":2}},"289":{"start":{"line":942,"column":2},"end":{"line":942,"column":52}},"290":{"start":{"line":957,"column":0},"end":{"line":959,"column":2}},"291":{"start":{"line":958,"column":2},"end":{"line":958,"column":94}},"292":{"start":{"line":960,"column":0},"end":{"line":960,"column":51}},"293":{"start":{"line":961,"column":0},"end":{"line":963,"column":1}},"294":{"start":{"line":962,"column":2},"end":{"line":962,"column":62}},"295":{"start":{"line":969,"column":0},"end":{"line":969,"column":44}},"296":{"start":{"line":973,"column":0},"end":{"line":1009,"column":1}},"297":{"start":{"line":984,"column":2},"end":{"line":986,"column":4}},"298":{"start":{"line":985,"column":4},"end":{"line":985,"column":69}},"299":{"start":{"line":998,"column":2},"end":{"line":1008,"column":4}},"300":{"start":{"line":999,"column":16},"end":{"line":1001,"column":49}},"301":{"start":{"line":1004,"column":4},"end":{"line":1006,"column":5}},"302":{"start":{"line":1005,"column":6},"end":{"line":1005,"column":37}},"303":{"start":{"line":1007,"column":4},"end":{"line":1007,"column":15}},"304":{"start":{"line":1017,"column":0},"end":{"line":1021,"column":2}},"305":{"start":{"line":1018,"column":15},"end":{"line":1018,"column":43}},"306":{"start":{"line":1019,"column":12},"end":{"line":1019,"column":39}},"307":{"start":{"line":1020,"column":2},"end":{"line":1020,"column":72}},"308":{"start":{"line":1031,"column":0},"end":{"line":1049,"column":2}},"309":{"start":{"line":1032,"column":2},"end":{"line":1047,"column":3}},"310":{"start":{"line":1033,"column":4},"end":{"line":1035,"column":5}},"311":{"start":{"line":1034,"column":6},"end":{"line":1034,"column":12}},"312":{"start":{"line":1036,"column":16},"end":{"line":1036,"column":39}},"313":{"start":{"line":1037,"column":4},"end":{"line":1045,"column":15}},"314":{"start":{"line":1039,"column":20},"end":{"line":1039,"column":40}},"315":{"start":{"line":1040,"column":8},"end":{"line":1040,"column":78}},"316":{"start":{"line":1041,"column":8},"end":{"line":1041,"column":26}},"317":{"start":{"line":1042,"column":8},"end":{"line":1042,"column":14}},"318":{"start":{"line":1044,"column":8},"end":{"line":1044,"column":27}},"319":{"start":{"line":1045,"column":8},"end":{"line":1045,"column":14}},"320":{"start":{"line":1048,"column":2},"end":{"line":1048,"column":13}},"321":{"start":{"line":1056,"column":0},"end":{"line":1060,"column":2}},"322":{"start":{"line":1057,"column":15},"end":{"line":1057,"column":38}},"323":{"start":{"line":1058,"column":2},"end":{"line":1058,"column":62}},"324":{"start":{"line":1059,"column":2},"end":{"line":1059,"column":34}},"325":{"start":{"line":1070,"column":0},"end":{"line":1080,"column":2}},"326":{"start":{"line":1071,"column":10},"end":{"line":1071,"column":19}},"327":{"start":{"line":1072,"column":2},"end":{"line":1072,"column":27}},"328":{"start":{"line":1073,"column":2},"end":{"line":1079,"column":3}},"329":{"start":{"line":1074,"column":4},"end":{"line":1077,"column":44}},"330":{"start":{"line":1087,"column":0},"end":{"line":1090,"column":2}},"331":{"start":{"line":1088,"column":2},"end":{"line":1089,"column":67}},"332":{"start":{"line":1094,"column":0},"end":{"line":1096,"column":2}},"333":{"start":{"line":1095,"column":2},"end":{"line":1095,"column":55}},"334":{"start":{"line":1104,"column":0},"end":{"line":1106,"column":2}},"335":{"start":{"line":1105,"column":2},"end":{"line":1105,"column":95}},"336":{"start":{"line":1109,"column":0},"end":{"line":1111,"column":2}},"337":{"start":{"line":1110,"column":2},"end":{"line":1110,"column":22}},"338":{"start":{"line":1125,"column":0},"end":{"line":1127,"column":2}},"339":{"start":{"line":1126,"column":2},"end":{"line":1126,"column":91}},"340":{"start":{"line":1128,"column":0},"end":{"line":1128,"column":48}},"341":{"start":{"line":1129,"column":0},"end":{"line":1131,"column":1}},"342":{"start":{"line":1130,"column":2},"end":{"line":1130,"column":56}},"343":{"start":{"line":1137,"column":0},"end":{"line":1137,"column":41}},"344":{"start":{"line":1141,"column":0},"end":{"line":1177,"column":1}},"345":{"start":{"line":1152,"column":2},"end":{"line":1154,"column":4}},"346":{"start":{"line":1153,"column":4},"end":{"line":1153,"column":66}},"347":{"start":{"line":1166,"column":2},"end":{"line":1176,"column":4}},"348":{"start":{"line":1167,"column":16},"end":{"line":1169,"column":49}},"349":{"start":{"line":1172,"column":4},"end":{"line":1174,"column":5}},"350":{"start":{"line":1173,"column":6},"end":{"line":1173,"column":37}},"351":{"start":{"line":1175,"column":4},"end":{"line":1175,"column":15}},"352":{"start":{"line":1185,"column":0},"end":{"line":1189,"column":2}},"353":{"start":{"line":1186,"column":15},"end":{"line":1186,"column":43}},"354":{"start":{"line":1187,"column":12},"end":{"line":1187,"column":36}},"355":{"start":{"line":1188,"column":2},"end":{"line":1188,"column":69}},"356":{"start":{"line":1199,"column":0},"end":{"line":1217,"column":2}},"357":{"start":{"line":1200,"column":2},"end":{"line":1215,"column":3}},"358":{"start":{"line":1201,"column":4},"end":{"line":1203,"column":5}},"359":{"start":{"line":1202,"column":6},"end":{"line":1202,"column":12}},"360":{"start":{"line":1204,"column":16},"end":{"line":1204,"column":39}},"361":{"start":{"line":1205,"column":4},"end":{"line":1213,"column":15}},"362":{"start":{"line":1207,"column":20},"end":{"line":1207,"column":40}},"363":{"start":{"line":1208,"column":8},"end":{"line":1208,"column":78}},"364":{"start":{"line":1209,"column":8},"end":{"line":1209,"column":26}},"365":{"start":{"line":1210,"column":8},"end":{"line":1210,"column":14}},"366":{"start":{"line":1212,"column":8},"end":{"line":1212,"column":27}},"367":{"start":{"line":1213,"column":8},"end":{"line":1213,"column":14}},"368":{"start":{"line":1216,"column":2},"end":{"line":1216,"column":13}},"369":{"start":{"line":1224,"column":0},"end":{"line":1228,"column":2}},"370":{"start":{"line":1225,"column":15},"end":{"line":1225,"column":38}},"371":{"start":{"line":1226,"column":2},"end":{"line":1226,"column":59}},"372":{"start":{"line":1227,"column":2},"end":{"line":1227,"column":34}},"373":{"start":{"line":1238,"column":0},"end":{"line":1248,"column":2}},"374":{"start":{"line":1239,"column":10},"end":{"line":1239,"column":19}},"375":{"start":{"line":1240,"column":2},"end":{"line":1240,"column":27}},"376":{"start":{"line":1241,"column":2},"end":{"line":1247,"column":3}},"377":{"start":{"line":1242,"column":4},"end":{"line":1245,"column":44}},"378":{"start":{"line":1255,"column":0},"end":{"line":1258,"column":2}},"379":{"start":{"line":1256,"column":2},"end":{"line":1257,"column":67}},"380":{"start":{"line":1262,"column":0},"end":{"line":1264,"column":2}},"381":{"start":{"line":1263,"column":2},"end":{"line":1263,"column":55}},"382":{"start":{"line":1272,"column":0},"end":{"line":1274,"column":2}},"383":{"start":{"line":1273,"column":2},"end":{"line":1273,"column":95}},"384":{"start":{"line":1277,"column":0},"end":{"line":1279,"column":2}},"385":{"start":{"line":1278,"column":2},"end":{"line":1278,"column":22}},"386":{"start":{"line":1293,"column":0},"end":{"line":1295,"column":2}},"387":{"start":{"line":1294,"column":2},"end":{"line":1294,"column":61}},"388":{"start":{"line":1296,"column":0},"end":{"line":1296,"column":44}},"389":{"start":{"line":1297,"column":0},"end":{"line":1299,"column":1}},"390":{"start":{"line":1298,"column":2},"end":{"line":1298,"column":48}},"391":{"start":{"line":1302,"column":0},"end":{"line":1338,"column":1}},"392":{"start":{"line":1313,"column":2},"end":{"line":1315,"column":4}},"393":{"start":{"line":1314,"column":4},"end":{"line":1314,"column":62}},"394":{"start":{"line":1327,"column":2},"end":{"line":1337,"column":4}},"395":{"start":{"line":1328,"column":16},"end":{"line":1330,"column":84}},"396":{"start":{"line":1333,"column":4},"end":{"line":1335,"column":5}},"397":{"start":{"line":1334,"column":6},"end":{"line":1334,"column":37}},"398":{"start":{"line":1336,"column":4},"end":{"line":1336,"column":15}},"399":{"start":{"line":1346,"column":0},"end":{"line":1350,"column":2}},"400":{"start":{"line":1347,"column":15},"end":{"line":1347,"column":43}},"401":{"start":{"line":1348,"column":12},"end":{"line":1348,"column":32}},"402":{"start":{"line":1349,"column":2},"end":{"line":1349,"column":65}},"403":{"start":{"line":1360,"column":0},"end":{"line":1382,"column":2}},"404":{"start":{"line":1361,"column":2},"end":{"line":1380,"column":3}},"405":{"start":{"line":1362,"column":4},"end":{"line":1364,"column":5}},"406":{"start":{"line":1363,"column":6},"end":{"line":1363,"column":12}},"407":{"start":{"line":1365,"column":16},"end":{"line":1365,"column":39}},"408":{"start":{"line":1366,"column":4},"end":{"line":1378,"column":15}},"409":{"start":{"line":1368,"column":46},"end":{"line":1368,"column":64}},"410":{"start":{"line":1369,"column":8},"end":{"line":1369,"column":27}},"411":{"start":{"line":1370,"column":8},"end":{"line":1370,"column":14}},"412":{"start":{"line":1372,"column":20},"end":{"line":1372,"column":44}},"413":{"start":{"line":1373,"column":8},"end":{"line":1373,"column":82}},"414":{"start":{"line":1374,"column":8},"end":{"line":1374,"column":27}},"415":{"start":{"line":1375,"column":8},"end":{"line":1375,"column":14}},"416":{"start":{"line":1377,"column":8},"end":{"line":1377,"column":27}},"417":{"start":{"line":1378,"column":8},"end":{"line":1378,"column":14}},"418":{"start":{"line":1381,"column":2},"end":{"line":1381,"column":13}},"419":{"start":{"line":1389,"column":0},"end":{"line":1393,"column":2}},"420":{"start":{"line":1390,"column":15},"end":{"line":1390,"column":38}},"421":{"start":{"line":1391,"column":2},"end":{"line":1391,"column":55}},"422":{"start":{"line":1392,"column":2},"end":{"line":1392,"column":34}},"423":{"start":{"line":1403,"column":0},"end":{"line":1420,"column":2}},"424":{"start":{"line":1404,"column":10},"end":{"line":1404,"column":19}},"425":{"start":{"line":1405,"column":2},"end":{"line":1405,"column":29}},"426":{"start":{"line":1406,"column":2},"end":{"line":1411,"column":3}},"427":{"start":{"line":1407,"column":4},"end":{"line":1409,"column":7}},"428":{"start":{"line":1412,"column":2},"end":{"line":1412,"column":24}},"429":{"start":{"line":1413,"column":2},"end":{"line":1419,"column":3}},"430":{"start":{"line":1414,"column":4},"end":{"line":1417,"column":48}},"431":{"start":{"line":1427,"column":0},"end":{"line":1429,"column":2}},"432":{"start":{"line":1428,"column":2},"end":{"line":1428,"column":92}},"433":{"start":{"line":1437,"column":0},"end":{"line":1440,"column":2}},"434":{"start":{"line":1438,"column":2},"end":{"line":1439,"column":21}},"435":{"start":{"line":1450,"column":0},"end":{"line":1453,"column":2}},"436":{"start":{"line":1451,"column":2},"end":{"line":1452,"column":21}},"437":{"start":{"line":1457,"column":0},"end":{"line":1459,"column":2}},"438":{"start":{"line":1458,"column":2},"end":{"line":1458,"column":51}},"439":{"start":{"line":1466,"column":0},"end":{"line":1469,"column":2}},"440":{"start":{"line":1467,"column":2},"end":{"line":1468,"column":63}},"441":{"start":{"line":1473,"column":0},"end":{"line":1475,"column":2}},"442":{"start":{"line":1474,"column":2},"end":{"line":1474,"column":47}},"443":{"start":{"line":1478,"column":0},"end":{"line":1480,"column":2}},"444":{"start":{"line":1479,"column":2},"end":{"line":1479,"column":26}},"445":{"start":{"line":1487,"column":0},"end":{"line":1489,"column":2}},"446":{"start":{"line":1488,"column":2},"end":{"line":1488,"column":48}},"447":{"start":{"line":1503,"column":0},"end":{"line":1505,"column":2}},"448":{"start":{"line":1504,"column":2},"end":{"line":1504,"column":61}},"449":{"start":{"line":1506,"column":0},"end":{"line":1506,"column":48}},"450":{"start":{"line":1507,"column":0},"end":{"line":1509,"column":1}},"451":{"start":{"line":1508,"column":2},"end":{"line":1508,"column":56}},"452":{"start":{"line":1512,"column":0},"end":{"line":1556,"column":1}},"453":{"start":{"line":1523,"column":2},"end":{"line":1525,"column":4}},"454":{"start":{"line":1524,"column":4},"end":{"line":1524,"column":66}},"455":{"start":{"line":1537,"column":2},"end":{"line":1555,"column":4}},"456":{"start":{"line":1538,"column":16},"end":{"line":1548,"column":33}},"457":{"start":{"line":1551,"column":4},"end":{"line":1553,"column":5}},"458":{"start":{"line":1552,"column":6},"end":{"line":1552,"column":37}},"459":{"start":{"line":1554,"column":4},"end":{"line":1554,"column":15}},"460":{"start":{"line":1564,"column":0},"end":{"line":1568,"column":2}},"461":{"start":{"line":1565,"column":15},"end":{"line":1565,"column":43}},"462":{"start":{"line":1566,"column":12},"end":{"line":1566,"column":36}},"463":{"start":{"line":1567,"column":2},"end":{"line":1567,"column":69}},"464":{"start":{"line":1578,"column":0},"end":{"line":1631,"column":2}},"465":{"start":{"line":1579,"column":2},"end":{"line":1629,"column":3}},"466":{"start":{"line":1580,"column":4},"end":{"line":1582,"column":5}},"467":{"start":{"line":1581,"column":6},"end":{"line":1581,"column":12}},"468":{"start":{"line":1583,"column":16},"end":{"line":1583,"column":39}},"469":{"start":{"line":1584,"column":4},"end":{"line":1627,"column":15}},"470":{"start":{"line":1586,"column":41},"end":{"line":1586,"column":60}},"471":{"start":{"line":1587,"column":8},"end":{"line":1587,"column":28}},"472":{"start":{"line":1588,"column":8},"end":{"line":1588,"column":14}},"473":{"start":{"line":1590,"column":46},"end":{"line":1590,"column":64}},"474":{"start":{"line":1591,"column":8},"end":{"line":1591,"column":30}},"475":{"start":{"line":1592,"column":8},"end":{"line":1592,"column":14}},"476":{"start":{"line":1594,"column":46},"end":{"line":1594,"column":64}},"477":{"start":{"line":1595,"column":8},"end":{"line":1595,"column":32}},"478":{"start":{"line":1596,"column":8},"end":{"line":1596,"column":14}},"479":{"start":{"line":1598,"column":46},"end":{"line":1598,"column":64}},"480":{"start":{"line":1599,"column":8},"end":{"line":1599,"column":29}},"481":{"start":{"line":1600,"column":8},"end":{"line":1600,"column":14}},"482":{"start":{"line":1602,"column":46},"end":{"line":1602,"column":64}},"483":{"start":{"line":1603,"column":8},"end":{"line":1603,"column":30}},"484":{"start":{"line":1604,"column":8},"end":{"line":1604,"column":14}},"485":{"start":{"line":1606,"column":41},"end":{"line":1606,"column":60}},"486":{"start":{"line":1607,"column":8},"end":{"line":1607,"column":31}},"487":{"start":{"line":1608,"column":8},"end":{"line":1608,"column":14}},"488":{"start":{"line":1610,"column":46},"end":{"line":1610,"column":64}},"489":{"start":{"line":1611,"column":8},"end":{"line":1611,"column":31}},"490":{"start":{"line":1612,"column":8},"end":{"line":1612,"column":14}},"491":{"start":{"line":1614,"column":54},"end":{"line":1614,"column":71}},"492":{"start":{"line":1615,"column":8},"end":{"line":1615,"column":27}},"493":{"start":{"line":1616,"column":8},"end":{"line":1616,"column":14}},"494":{"start":{"line":1618,"column":46},"end":{"line":1618,"column":64}},"495":{"start":{"line":1619,"column":8},"end":{"line":1619,"column":34}},"496":{"start":{"line":1620,"column":8},"end":{"line":1620,"column":14}},"497":{"start":{"line":1622,"column":46},"end":{"line":1622,"column":64}},"498":{"start":{"line":1623,"column":8},"end":{"line":1623,"column":27}},"499":{"start":{"line":1624,"column":8},"end":{"line":1624,"column":14}},"500":{"start":{"line":1626,"column":8},"end":{"line":1626,"column":27}},"501":{"start":{"line":1627,"column":8},"end":{"line":1627,"column":14}},"502":{"start":{"line":1630,"column":2},"end":{"line":1630,"column":13}},"503":{"start":{"line":1638,"column":0},"end":{"line":1642,"column":2}},"504":{"start":{"line":1639,"column":15},"end":{"line":1639,"column":38}},"505":{"start":{"line":1640,"column":2},"end":{"line":1640,"column":59}},"506":{"start":{"line":1641,"column":2},"end":{"line":1641,"column":34}},"507":{"start":{"line":1652,"column":0},"end":{"line":1724,"column":2}},"508":{"start":{"line":1653,"column":10},"end":{"line":1653,"column":19}},"509":{"start":{"line":1654,"column":2},"end":{"line":1654,"column":25}},"510":{"start":{"line":1655,"column":2},"end":{"line":1660,"column":3}},"511":{"start":{"line":1656,"column":4},"end":{"line":1658,"column":7}},"512":{"start":{"line":1661,"column":2},"end":{"line":1661,"column":32}},"513":{"start":{"line":1662,"column":2},"end":{"line":1667,"column":3}},"514":{"start":{"line":1663,"column":4},"end":{"line":1665,"column":7}},"515":{"start":{"line":1668,"column":2},"end":{"line":1668,"column":34}},"516":{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}},"517":{"start":{"line":1670,"column":4},"end":{"line":1672,"column":7}},"518":{"start":{"line":1675,"column":2},"end":{"line":1675,"column":31}},"519":{"start":{"line":1676,"column":2},"end":{"line":1681,"column":3}},"520":{"start":{"line":1677,"column":4},"end":{"line":1679,"column":7}},"521":{"start":{"line":1682,"column":2},"end":{"line":1682,"column":32}},"522":{"start":{"line":1683,"column":2},"end":{"line":1688,"column":3}},"523":{"start":{"line":1684,"column":4},"end":{"line":1686,"column":7}},"524":{"start":{"line":1689,"column":2},"end":{"line":1689,"column":28}},"525":{"start":{"line":1690,"column":2},"end":{"line":1695,"column":3}},"526":{"start":{"line":1691,"column":4},"end":{"line":1693,"column":7}},"527":{"start":{"line":1696,"column":2},"end":{"line":1696,"column":33}},"528":{"start":{"line":1697,"column":2},"end":{"line":1702,"column":3}},"529":{"start":{"line":1698,"column":4},"end":{"line":1700,"column":7}},"530":{"start":{"line":1703,"column":2},"end":{"line":1703,"column":24}},"531":{"start":{"line":1704,"column":2},"end":{"line":1709,"column":3}},"532":{"start":{"line":1705,"column":4},"end":{"line":1707,"column":7}},"533":{"start":{"line":1710,"column":2},"end":{"line":1710,"column":36}},"534":{"start":{"line":1711,"column":2},"end":{"line":1716,"column":3}},"535":{"start":{"line":1712,"column":4},"end":{"line":1714,"column":7}},"536":{"start":{"line":1717,"column":2},"end":{"line":1717,"column":29}},"537":{"start":{"line":1718,"column":2},"end":{"line":1723,"column":3}},"538":{"start":{"line":1719,"column":4},"end":{"line":1721,"column":7}},"539":{"start":{"line":1731,"column":0},"end":{"line":1733,"column":2}},"540":{"start":{"line":1732,"column":2},"end":{"line":1732,"column":77}},"541":{"start":{"line":1737,"column":0},"end":{"line":1739,"column":2}},"542":{"start":{"line":1738,"column":2},"end":{"line":1738,"column":49}},"543":{"start":{"line":1746,"column":0},"end":{"line":1748,"column":2}},"544":{"start":{"line":1747,"column":2},"end":{"line":1747,"column":92}},"545":{"start":{"line":1756,"column":0},"end":{"line":1759,"column":2}},"546":{"start":{"line":1757,"column":2},"end":{"line":1758,"column":24}},"547":{"start":{"line":1769,"column":0},"end":{"line":1772,"column":2}},"548":{"start":{"line":1770,"column":2},"end":{"line":1771,"column":24}},"549":{"start":{"line":1776,"column":0},"end":{"line":1778,"column":2}},"550":{"start":{"line":1777,"column":2},"end":{"line":1777,"column":51}},"551":{"start":{"line":1785,"column":0},"end":{"line":1787,"column":2}},"552":{"start":{"line":1786,"column":2},"end":{"line":1786,"column":92}},"553":{"start":{"line":1795,"column":0},"end":{"line":1798,"column":2}},"554":{"start":{"line":1796,"column":2},"end":{"line":1797,"column":26}},"555":{"start":{"line":1808,"column":0},"end":{"line":1811,"column":2}},"556":{"start":{"line":1809,"column":2},"end":{"line":1810,"column":26}},"557":{"start":{"line":1815,"column":0},"end":{"line":1817,"column":2}},"558":{"start":{"line":1816,"column":2},"end":{"line":1816,"column":51}},"559":{"start":{"line":1824,"column":0},"end":{"line":1826,"column":2}},"560":{"start":{"line":1825,"column":2},"end":{"line":1825,"column":92}},"561":{"start":{"line":1834,"column":0},"end":{"line":1837,"column":2}},"562":{"start":{"line":1835,"column":2},"end":{"line":1836,"column":23}},"563":{"start":{"line":1847,"column":0},"end":{"line":1850,"column":2}},"564":{"start":{"line":1848,"column":2},"end":{"line":1849,"column":23}},"565":{"start":{"line":1854,"column":0},"end":{"line":1856,"column":2}},"566":{"start":{"line":1855,"column":2},"end":{"line":1855,"column":51}},"567":{"start":{"line":1863,"column":0},"end":{"line":1865,"column":2}},"568":{"start":{"line":1864,"column":2},"end":{"line":1864,"column":92}},"569":{"start":{"line":1873,"column":0},"end":{"line":1876,"column":2}},"570":{"start":{"line":1874,"column":2},"end":{"line":1875,"column":24}},"571":{"start":{"line":1886,"column":0},"end":{"line":1889,"column":2}},"572":{"start":{"line":1887,"column":2},"end":{"line":1888,"column":24}},"573":{"start":{"line":1893,"column":0},"end":{"line":1895,"column":2}},"574":{"start":{"line":1894,"column":2},"end":{"line":1894,"column":51}},"575":{"start":{"line":1902,"column":0},"end":{"line":1904,"column":2}},"576":{"start":{"line":1903,"column":2},"end":{"line":1903,"column":77}},"577":{"start":{"line":1908,"column":0},"end":{"line":1910,"column":2}},"578":{"start":{"line":1909,"column":2},"end":{"line":1909,"column":49}},"579":{"start":{"line":1917,"column":0},"end":{"line":1919,"column":2}},"580":{"start":{"line":1918,"column":2},"end":{"line":1918,"column":92}},"581":{"start":{"line":1927,"column":0},"end":{"line":1930,"column":2}},"582":{"start":{"line":1928,"column":2},"end":{"line":1929,"column":25}},"583":{"start":{"line":1940,"column":0},"end":{"line":1943,"column":2}},"584":{"start":{"line":1941,"column":2},"end":{"line":1942,"column":25}},"585":{"start":{"line":1947,"column":0},"end":{"line":1949,"column":2}},"586":{"start":{"line":1948,"column":2},"end":{"line":1948,"column":51}},"587":{"start":{"line":1956,"column":0},"end":{"line":1958,"column":2}},"588":{"start":{"line":1957,"column":2},"end":{"line":1957,"column":90}},"589":{"start":{"line":1962,"column":0},"end":{"line":1964,"column":2}},"590":{"start":{"line":1963,"column":2},"end":{"line":1963,"column":50}},"591":{"start":{"line":1971,"column":0},"end":{"line":1973,"column":2}},"592":{"start":{"line":1972,"column":2},"end":{"line":1972,"column":92}},"593":{"start":{"line":1981,"column":0},"end":{"line":1984,"column":2}},"594":{"start":{"line":1982,"column":2},"end":{"line":1983,"column":28}},"595":{"start":{"line":1994,"column":0},"end":{"line":1997,"column":2}},"596":{"start":{"line":1995,"column":2},"end":{"line":1996,"column":28}},"597":{"start":{"line":2001,"column":0},"end":{"line":2003,"column":2}},"598":{"start":{"line":2002,"column":2},"end":{"line":2002,"column":51}},"599":{"start":{"line":2010,"column":0},"end":{"line":2012,"column":2}},"600":{"start":{"line":2011,"column":2},"end":{"line":2011,"column":93}},"601":{"start":{"line":2020,"column":0},"end":{"line":2023,"column":2}},"602":{"start":{"line":2021,"column":2},"end":{"line":2022,"column":21}},"603":{"start":{"line":2033,"column":0},"end":{"line":2036,"column":2}},"604":{"start":{"line":2034,"column":2},"end":{"line":2035,"column":21}},"605":{"start":{"line":2040,"column":0},"end":{"line":2042,"column":2}},"606":{"start":{"line":2041,"column":2},"end":{"line":2041,"column":52}},"607":{"start":{"line":2056,"column":0},"end":{"line":2058,"column":2}},"608":{"start":{"line":2057,"column":2},"end":{"line":2057,"column":61}},"609":{"start":{"line":2059,"column":0},"end":{"line":2059,"column":47}},"610":{"start":{"line":2060,"column":0},"end":{"line":2062,"column":1}},"611":{"start":{"line":2061,"column":2},"end":{"line":2061,"column":54}},"612":{"start":{"line":2065,"column":0},"end":{"line":2101,"column":1}},"613":{"start":{"line":2076,"column":2},"end":{"line":2078,"column":4}},"614":{"start":{"line":2077,"column":4},"end":{"line":2077,"column":65}},"615":{"start":{"line":2090,"column":2},"end":{"line":2100,"column":4}},"616":{"start":{"line":2091,"column":16},"end":{"line":2093,"column":56}},"617":{"start":{"line":2096,"column":4},"end":{"line":2098,"column":5}},"618":{"start":{"line":2097,"column":6},"end":{"line":2097,"column":37}},"619":{"start":{"line":2099,"column":4},"end":{"line":2099,"column":15}},"620":{"start":{"line":2109,"column":0},"end":{"line":2113,"column":2}},"621":{"start":{"line":2110,"column":15},"end":{"line":2110,"column":43}},"622":{"start":{"line":2111,"column":12},"end":{"line":2111,"column":35}},"623":{"start":{"line":2112,"column":2},"end":{"line":2112,"column":68}},"624":{"start":{"line":2123,"column":0},"end":{"line":2144,"column":2}},"625":{"start":{"line":2124,"column":2},"end":{"line":2142,"column":3}},"626":{"start":{"line":2125,"column":4},"end":{"line":2127,"column":5}},"627":{"start":{"line":2126,"column":6},"end":{"line":2126,"column":12}},"628":{"start":{"line":2128,"column":16},"end":{"line":2128,"column":39}},"629":{"start":{"line":2129,"column":4},"end":{"line":2140,"column":15}},"630":{"start":{"line":2131,"column":46},"end":{"line":2131,"column":64}},"631":{"start":{"line":2132,"column":8},"end":{"line":2132,"column":32}},"632":{"start":{"line":2133,"column":8},"end":{"line":2133,"column":14}},"633":{"start":{"line":2135,"column":41},"end":{"line":2135,"column":59}},"634":{"start":{"line":2136,"column":8},"end":{"line":2136,"column":26}},"635":{"start":{"line":2137,"column":8},"end":{"line":2137,"column":14}},"636":{"start":{"line":2139,"column":8},"end":{"line":2139,"column":27}},"637":{"start":{"line":2140,"column":8},"end":{"line":2140,"column":14}},"638":{"start":{"line":2143,"column":2},"end":{"line":2143,"column":13}},"639":{"start":{"line":2151,"column":0},"end":{"line":2155,"column":2}},"640":{"start":{"line":2152,"column":15},"end":{"line":2152,"column":38}},"641":{"start":{"line":2153,"column":2},"end":{"line":2153,"column":58}},"642":{"start":{"line":2154,"column":2},"end":{"line":2154,"column":34}},"643":{"start":{"line":2165,"column":0},"end":{"line":2181,"column":2}},"644":{"start":{"line":2166,"column":10},"end":{"line":2166,"column":19}},"645":{"start":{"line":2167,"column":2},"end":{"line":2167,"column":34}},"646":{"start":{"line":2168,"column":2},"end":{"line":2173,"column":3}},"647":{"start":{"line":2169,"column":4},"end":{"line":2171,"column":7}},"648":{"start":{"line":2174,"column":2},"end":{"line":2174,"column":23}},"649":{"start":{"line":2175,"column":2},"end":{"line":2180,"column":3}},"650":{"start":{"line":2176,"column":4},"end":{"line":2178,"column":7}},"651":{"start":{"line":2188,"column":0},"end":{"line":2190,"column":2}},"652":{"start":{"line":2189,"column":2},"end":{"line":2189,"column":92}},"653":{"start":{"line":2198,"column":0},"end":{"line":2201,"column":2}},"654":{"start":{"line":2199,"column":2},"end":{"line":2200,"column":26}},"655":{"start":{"line":2211,"column":0},"end":{"line":2214,"column":2}},"656":{"start":{"line":2212,"column":2},"end":{"line":2213,"column":26}},"657":{"start":{"line":2218,"column":0},"end":{"line":2220,"column":2}},"658":{"start":{"line":2219,"column":2},"end":{"line":2219,"column":51}},"659":{"start":{"line":2227,"column":0},"end":{"line":2229,"column":2}},"660":{"start":{"line":2228,"column":2},"end":{"line":2228,"column":77}},"661":{"start":{"line":2233,"column":0},"end":{"line":2235,"column":2}},"662":{"start":{"line":2234,"column":2},"end":{"line":2234,"column":49}},"663":{"start":{"line":2249,"column":0},"end":{"line":2251,"column":2}},"664":{"start":{"line":2250,"column":2},"end":{"line":2250,"column":61}},"665":{"start":{"line":2252,"column":0},"end":{"line":2252,"column":51}},"666":{"start":{"line":2253,"column":0},"end":{"line":2255,"column":1}},"667":{"start":{"line":2254,"column":2},"end":{"line":2254,"column":62}},"668":{"start":{"line":2258,"column":0},"end":{"line":2294,"column":1}},"669":{"start":{"line":2269,"column":2},"end":{"line":2271,"column":4}},"670":{"start":{"line":2270,"column":4},"end":{"line":2270,"column":69}},"671":{"start":{"line":2283,"column":2},"end":{"line":2293,"column":4}},"672":{"start":{"line":2284,"column":16},"end":{"line":2286,"column":76}},"673":{"start":{"line":2289,"column":4},"end":{"line":2291,"column":5}},"674":{"start":{"line":2290,"column":6},"end":{"line":2290,"column":37}},"675":{"start":{"line":2292,"column":4},"end":{"line":2292,"column":15}},"676":{"start":{"line":2302,"column":0},"end":{"line":2306,"column":2}},"677":{"start":{"line":2303,"column":15},"end":{"line":2303,"column":43}},"678":{"start":{"line":2304,"column":12},"end":{"line":2304,"column":39}},"679":{"start":{"line":2305,"column":2},"end":{"line":2305,"column":72}},"680":{"start":{"line":2316,"column":0},"end":{"line":2339,"column":2}},"681":{"start":{"line":2317,"column":2},"end":{"line":2337,"column":3}},"682":{"start":{"line":2318,"column":4},"end":{"line":2320,"column":5}},"683":{"start":{"line":2319,"column":6},"end":{"line":2319,"column":12}},"684":{"start":{"line":2321,"column":16},"end":{"line":2321,"column":39}},"685":{"start":{"line":2322,"column":4},"end":{"line":2335,"column":15}},"686":{"start":{"line":2324,"column":20},"end":{"line":2324,"column":43}},"687":{"start":{"line":2325,"column":8},"end":{"line":2325,"column":81}},"688":{"start":{"line":2326,"column":8},"end":{"line":2326,"column":28}},"689":{"start":{"line":2327,"column":8},"end":{"line":2327,"column":14}},"690":{"start":{"line":2329,"column":20},"end":{"line":2329,"column":40}},"691":{"start":{"line":2330,"column":8},"end":{"line":2330,"column":78}},"692":{"start":{"line":2331,"column":8},"end":{"line":2331,"column":25}},"693":{"start":{"line":2332,"column":8},"end":{"line":2332,"column":14}},"694":{"start":{"line":2334,"column":8},"end":{"line":2334,"column":27}},"695":{"start":{"line":2335,"column":8},"end":{"line":2335,"column":14}},"696":{"start":{"line":2338,"column":2},"end":{"line":2338,"column":13}},"697":{"start":{"line":2346,"column":0},"end":{"line":2350,"column":2}},"698":{"start":{"line":2347,"column":15},"end":{"line":2347,"column":38}},"699":{"start":{"line":2348,"column":2},"end":{"line":2348,"column":62}},"700":{"start":{"line":2349,"column":2},"end":{"line":2349,"column":34}},"701":{"start":{"line":2360,"column":0},"end":{"line":2378,"column":2}},"702":{"start":{"line":2361,"column":10},"end":{"line":2361,"column":19}},"703":{"start":{"line":2362,"column":2},"end":{"line":2362,"column":25}},"704":{"start":{"line":2363,"column":2},"end":{"line":2369,"column":3}},"705":{"start":{"line":2364,"column":4},"end":{"line":2367,"column":47}},"706":{"start":{"line":2370,"column":2},"end":{"line":2370,"column":22}},"707":{"start":{"line":2371,"column":2},"end":{"line":2377,"column":3}},"708":{"start":{"line":2372,"column":4},"end":{"line":2375,"column":44}},"709":{"start":{"line":2385,"column":0},"end":{"line":2388,"column":2}},"710":{"start":{"line":2386,"column":2},"end":{"line":2387,"column":62}},"711":{"start":{"line":2392,"column":0},"end":{"line":2394,"column":2}},"712":{"start":{"line":2393,"column":2},"end":{"line":2393,"column":47}},"713":{"start":{"line":2397,"column":0},"end":{"line":2399,"column":2}},"714":{"start":{"line":2398,"column":2},"end":{"line":2398,"column":27}},"715":{"start":{"line":2406,"column":0},"end":{"line":2408,"column":2}},"716":{"start":{"line":2407,"column":2},"end":{"line":2407,"column":48}},"717":{"start":{"line":2415,"column":0},"end":{"line":2418,"column":2}},"718":{"start":{"line":2416,"column":2},"end":{"line":2417,"column":59}},"719":{"start":{"line":2422,"column":0},"end":{"line":2424,"column":2}},"720":{"start":{"line":2423,"column":2},"end":{"line":2423,"column":47}},"721":{"start":{"line":2427,"column":0},"end":{"line":2429,"column":2}},"722":{"start":{"line":2428,"column":2},"end":{"line":2428,"column":24}},"723":{"start":{"line":2436,"column":0},"end":{"line":2438,"column":2}},"724":{"start":{"line":2437,"column":2},"end":{"line":2437,"column":48}},"725":{"start":{"line":2452,"column":0},"end":{"line":2454,"column":2}},"726":{"start":{"line":2453,"column":2},"end":{"line":2453,"column":61}},"727":{"start":{"line":2455,"column":0},"end":{"line":2455,"column":47}},"728":{"start":{"line":2456,"column":0},"end":{"line":2458,"column":1}},"729":{"start":{"line":2457,"column":2},"end":{"line":2457,"column":54}},"730":{"start":{"line":2461,"column":0},"end":{"line":2500,"column":1}},"731":{"start":{"line":2472,"column":2},"end":{"line":2474,"column":4}},"732":{"start":{"line":2473,"column":4},"end":{"line":2473,"column":65}},"733":{"start":{"line":2486,"column":2},"end":{"line":2499,"column":4}},"734":{"start":{"line":2487,"column":16},"end":{"line":2492,"column":69}},"735":{"start":{"line":2495,"column":4},"end":{"line":2497,"column":5}},"736":{"start":{"line":2496,"column":6},"end":{"line":2496,"column":37}},"737":{"start":{"line":2498,"column":4},"end":{"line":2498,"column":15}},"738":{"start":{"line":2508,"column":0},"end":{"line":2512,"column":2}},"739":{"start":{"line":2509,"column":15},"end":{"line":2509,"column":43}},"740":{"start":{"line":2510,"column":12},"end":{"line":2510,"column":35}},"741":{"start":{"line":2511,"column":2},"end":{"line":2511,"column":68}},"742":{"start":{"line":2522,"column":0},"end":{"line":2555,"column":2}},"743":{"start":{"line":2523,"column":2},"end":{"line":2553,"column":3}},"744":{"start":{"line":2524,"column":4},"end":{"line":2526,"column":5}},"745":{"start":{"line":2525,"column":6},"end":{"line":2525,"column":12}},"746":{"start":{"line":2527,"column":16},"end":{"line":2527,"column":39}},"747":{"start":{"line":2528,"column":4},"end":{"line":2551,"column":15}},"748":{"start":{"line":2530,"column":41},"end":{"line":2530,"column":60}},"749":{"start":{"line":2531,"column":8},"end":{"line":2531,"column":28}},"750":{"start":{"line":2532,"column":8},"end":{"line":2532,"column":14}},"751":{"start":{"line":2534,"column":46},"end":{"line":2534,"column":64}},"752":{"start":{"line":2535,"column":8},"end":{"line":2535,"column":30}},"753":{"start":{"line":2536,"column":8},"end":{"line":2536,"column":14}},"754":{"start":{"line":2538,"column":46},"end":{"line":2538,"column":64}},"755":{"start":{"line":2539,"column":8},"end":{"line":2539,"column":31}},"756":{"start":{"line":2540,"column":8},"end":{"line":2540,"column":14}},"757":{"start":{"line":2542,"column":46},"end":{"line":2542,"column":64}},"758":{"start":{"line":2543,"column":8},"end":{"line":2543,"column":34}},"759":{"start":{"line":2544,"column":8},"end":{"line":2544,"column":14}},"760":{"start":{"line":2546,"column":41},"end":{"line":2546,"column":60}},"761":{"start":{"line":2547,"column":8},"end":{"line":2547,"column":39}},"762":{"start":{"line":2548,"column":8},"end":{"line":2548,"column":14}},"763":{"start":{"line":2550,"column":8},"end":{"line":2550,"column":27}},"764":{"start":{"line":2551,"column":8},"end":{"line":2551,"column":14}},"765":{"start":{"line":2554,"column":2},"end":{"line":2554,"column":13}},"766":{"start":{"line":2562,"column":0},"end":{"line":2566,"column":2}},"767":{"start":{"line":2563,"column":15},"end":{"line":2563,"column":38}},"768":{"start":{"line":2564,"column":2},"end":{"line":2564,"column":58}},"769":{"start":{"line":2565,"column":2},"end":{"line":2565,"column":34}},"770":{"start":{"line":2576,"column":0},"end":{"line":2613,"column":2}},"771":{"start":{"line":2577,"column":10},"end":{"line":2577,"column":19}},"772":{"start":{"line":2578,"column":2},"end":{"line":2578,"column":25}},"773":{"start":{"line":2579,"column":2},"end":{"line":2584,"column":3}},"774":{"start":{"line":2580,"column":4},"end":{"line":2582,"column":7}},"775":{"start":{"line":2585,"column":2},"end":{"line":2585,"column":32}},"776":{"start":{"line":2586,"column":2},"end":{"line":2591,"column":3}},"777":{"start":{"line":2587,"column":4},"end":{"line":2589,"column":7}},"778":{"start":{"line":2592,"column":2},"end":{"line":2592,"column":33}},"779":{"start":{"line":2593,"column":2},"end":{"line":2598,"column":3}},"780":{"start":{"line":2594,"column":4},"end":{"line":2596,"column":7}},"781":{"start":{"line":2599,"column":2},"end":{"line":2599,"column":36}},"782":{"start":{"line":2600,"column":2},"end":{"line":2605,"column":3}},"783":{"start":{"line":2601,"column":4},"end":{"line":2603,"column":7}},"784":{"start":{"line":2606,"column":2},"end":{"line":2606,"column":36}},"785":{"start":{"line":2607,"column":2},"end":{"line":2612,"column":3}},"786":{"start":{"line":2608,"column":4},"end":{"line":2610,"column":7}},"787":{"start":{"line":2620,"column":0},"end":{"line":2622,"column":2}},"788":{"start":{"line":2621,"column":2},"end":{"line":2621,"column":77}},"789":{"start":{"line":2626,"column":0},"end":{"line":2628,"column":2}},"790":{"start":{"line":2627,"column":2},"end":{"line":2627,"column":49}},"791":{"start":{"line":2635,"column":0},"end":{"line":2637,"column":2}},"792":{"start":{"line":2636,"column":2},"end":{"line":2636,"column":92}},"793":{"start":{"line":2645,"column":0},"end":{"line":2648,"column":2}},"794":{"start":{"line":2646,"column":2},"end":{"line":2647,"column":24}},"795":{"start":{"line":2658,"column":0},"end":{"line":2661,"column":2}},"796":{"start":{"line":2659,"column":2},"end":{"line":2660,"column":24}},"797":{"start":{"line":2665,"column":0},"end":{"line":2667,"column":2}},"798":{"start":{"line":2666,"column":2},"end":{"line":2666,"column":51}},"799":{"start":{"line":2674,"column":0},"end":{"line":2676,"column":2}},"800":{"start":{"line":2675,"column":2},"end":{"line":2675,"column":92}},"801":{"start":{"line":2684,"column":0},"end":{"line":2687,"column":2}},"802":{"start":{"line":2685,"column":2},"end":{"line":2686,"column":25}},"803":{"start":{"line":2697,"column":0},"end":{"line":2700,"column":2}},"804":{"start":{"line":2698,"column":2},"end":{"line":2699,"column":25}},"805":{"start":{"line":2704,"column":0},"end":{"line":2706,"column":2}},"806":{"start":{"line":2705,"column":2},"end":{"line":2705,"column":51}},"807":{"start":{"line":2713,"column":0},"end":{"line":2715,"column":2}},"808":{"start":{"line":2714,"column":2},"end":{"line":2714,"column":92}},"809":{"start":{"line":2723,"column":0},"end":{"line":2726,"column":2}},"810":{"start":{"line":2724,"column":2},"end":{"line":2725,"column":28}},"811":{"start":{"line":2736,"column":0},"end":{"line":2739,"column":2}},"812":{"start":{"line":2737,"column":2},"end":{"line":2738,"column":28}},"813":{"start":{"line":2743,"column":0},"end":{"line":2745,"column":2}},"814":{"start":{"line":2744,"column":2},"end":{"line":2744,"column":51}},"815":{"start":{"line":2752,"column":0},"end":{"line":2754,"column":2}},"816":{"start":{"line":2753,"column":2},"end":{"line":2753,"column":77}},"817":{"start":{"line":2758,"column":0},"end":{"line":2760,"column":2}},"818":{"start":{"line":2759,"column":2},"end":{"line":2759,"column":49}},"819":{"start":{"line":2774,"column":0},"end":{"line":2776,"column":2}},"820":{"start":{"line":2775,"column":2},"end":{"line":2775,"column":97}},"821":{"start":{"line":2777,"column":0},"end":{"line":2777,"column":54}},"822":{"start":{"line":2778,"column":0},"end":{"line":2780,"column":1}},"823":{"start":{"line":2779,"column":2},"end":{"line":2779,"column":68}},"824":{"start":{"line":2786,"column":0},"end":{"line":2786,"column":47}},"825":{"start":{"line":2790,"column":0},"end":{"line":2832,"column":1}},"826":{"start":{"line":2801,"column":2},"end":{"line":2803,"column":4}},"827":{"start":{"line":2802,"column":4},"end":{"line":2802,"column":72}},"828":{"start":{"line":2815,"column":2},"end":{"line":2831,"column":4}},"829":{"start":{"line":2816,"column":16},"end":{"line":2824,"column":51}},"830":{"start":{"line":2827,"column":4},"end":{"line":2829,"column":5}},"831":{"start":{"line":2828,"column":6},"end":{"line":2828,"column":37}},"832":{"start":{"line":2830,"column":4},"end":{"line":2830,"column":15}},"833":{"start":{"line":2840,"column":0},"end":{"line":2844,"column":2}},"834":{"start":{"line":2841,"column":15},"end":{"line":2841,"column":43}},"835":{"start":{"line":2842,"column":12},"end":{"line":2842,"column":42}},"836":{"start":{"line":2843,"column":2},"end":{"line":2843,"column":75}},"837":{"start":{"line":2854,"column":0},"end":{"line":2900,"column":2}},"838":{"start":{"line":2855,"column":2},"end":{"line":2898,"column":3}},"839":{"start":{"line":2856,"column":4},"end":{"line":2858,"column":5}},"840":{"start":{"line":2857,"column":6},"end":{"line":2857,"column":12}},"841":{"start":{"line":2859,"column":16},"end":{"line":2859,"column":39}},"842":{"start":{"line":2860,"column":4},"end":{"line":2896,"column":15}},"843":{"start":{"line":2862,"column":20},"end":{"line":2862,"column":43}},"844":{"start":{"line":2863,"column":8},"end":{"line":2863,"column":81}},"845":{"start":{"line":2864,"column":8},"end":{"line":2864,"column":28}},"846":{"start":{"line":2865,"column":8},"end":{"line":2865,"column":14}},"847":{"start":{"line":2867,"column":42},"end":{"line":2867,"column":59}},"848":{"start":{"line":2868,"column":8},"end":{"line":2868,"column":32}},"849":{"start":{"line":2869,"column":8},"end":{"line":2869,"column":14}},"850":{"start":{"line":2871,"column":46},"end":{"line":2871,"column":64}},"851":{"start":{"line":2872,"column":8},"end":{"line":2872,"column":26}},"852":{"start":{"line":2873,"column":8},"end":{"line":2873,"column":14}},"853":{"start":{"line":2875,"column":46},"end":{"line":2875,"column":64}},"854":{"start":{"line":2876,"column":8},"end":{"line":2876,"column":31}},"855":{"start":{"line":2877,"column":8},"end":{"line":2877,"column":14}},"856":{"start":{"line":2879,"column":46},"end":{"line":2879,"column":64}},"857":{"start":{"line":2880,"column":8},"end":{"line":2880,"column":31}},"858":{"start":{"line":2881,"column":8},"end":{"line":2881,"column":14}},"859":{"start":{"line":2883,"column":46},"end":{"line":2883,"column":64}},"860":{"start":{"line":2884,"column":8},"end":{"line":2884,"column":29}},"861":{"start":{"line":2885,"column":8},"end":{"line":2885,"column":14}},"862":{"start":{"line":2887,"column":41},"end":{"line":2887,"column":60}},"863":{"start":{"line":2888,"column":8},"end":{"line":2888,"column":29}},"864":{"start":{"line":2889,"column":8},"end":{"line":2889,"column":14}},"865":{"start":{"line":2891,"column":46},"end":{"line":2891,"column":64}},"866":{"start":{"line":2892,"column":8},"end":{"line":2892,"column":32}},"867":{"start":{"line":2893,"column":8},"end":{"line":2893,"column":14}},"868":{"start":{"line":2895,"column":8},"end":{"line":2895,"column":27}},"869":{"start":{"line":2896,"column":8},"end":{"line":2896,"column":14}},"870":{"start":{"line":2899,"column":2},"end":{"line":2899,"column":13}},"871":{"start":{"line":2907,"column":0},"end":{"line":2911,"column":2}},"872":{"start":{"line":2908,"column":15},"end":{"line":2908,"column":38}},"873":{"start":{"line":2909,"column":2},"end":{"line":2909,"column":65}},"874":{"start":{"line":2910,"column":2},"end":{"line":2910,"column":34}},"875":{"start":{"line":2921,"column":0},"end":{"line":2980,"column":2}},"876":{"start":{"line":2922,"column":10},"end":{"line":2922,"column":19}},"877":{"start":{"line":2923,"column":2},"end":{"line":2923,"column":25}},"878":{"start":{"line":2924,"column":2},"end":{"line":2930,"column":3}},"879":{"start":{"line":2925,"column":4},"end":{"line":2928,"column":47}},"880":{"start":{"line":2931,"column":2},"end":{"line":2931,"column":29}},"881":{"start":{"line":2932,"column":2},"end":{"line":2937,"column":3}},"882":{"start":{"line":2933,"column":4},"end":{"line":2935,"column":7}},"883":{"start":{"line":2938,"column":2},"end":{"line":2938,"column":28}},"884":{"start":{"line":2939,"column":2},"end":{"line":2944,"column":3}},"885":{"start":{"line":2940,"column":4},"end":{"line":2942,"column":7}},"886":{"start":{"line":2945,"column":2},"end":{"line":2945,"column":33}},"887":{"start":{"line":2946,"column":2},"end":{"line":2951,"column":3}},"888":{"start":{"line":2947,"column":4},"end":{"line":2949,"column":7}},"889":{"start":{"line":2952,"column":2},"end":{"line":2952,"column":33}},"890":{"start":{"line":2953,"column":2},"end":{"line":2958,"column":3}},"891":{"start":{"line":2954,"column":4},"end":{"line":2956,"column":7}},"892":{"start":{"line":2959,"column":2},"end":{"line":2959,"column":31}},"893":{"start":{"line":2960,"column":2},"end":{"line":2965,"column":3}},"894":{"start":{"line":2961,"column":4},"end":{"line":2963,"column":7}},"895":{"start":{"line":2966,"column":2},"end":{"line":2966,"column":26}},"896":{"start":{"line":2967,"column":2},"end":{"line":2972,"column":3}},"897":{"start":{"line":2968,"column":4},"end":{"line":2970,"column":7}},"898":{"start":{"line":2973,"column":2},"end":{"line":2973,"column":38}},"899":{"start":{"line":2974,"column":2},"end":{"line":2979,"column":3}},"900":{"start":{"line":2975,"column":4},"end":{"line":2977,"column":7}},"901":{"start":{"line":2987,"column":0},"end":{"line":2990,"column":2}},"902":{"start":{"line":2988,"column":2},"end":{"line":2989,"column":62}},"903":{"start":{"line":2994,"column":0},"end":{"line":2996,"column":2}},"904":{"start":{"line":2995,"column":2},"end":{"line":2995,"column":47}},"905":{"start":{"line":2999,"column":0},"end":{"line":3001,"column":2}},"906":{"start":{"line":3000,"column":2},"end":{"line":3000,"column":27}},"907":{"start":{"line":3008,"column":0},"end":{"line":3010,"column":2}},"908":{"start":{"line":3009,"column":2},"end":{"line":3009,"column":48}},"909":{"start":{"line":3019,"column":0},"end":{"line":3021,"column":2}},"910":{"start":{"line":3020,"column":2},"end":{"line":3020,"column":82}},"911":{"start":{"line":3025,"column":0},"end":{"line":3027,"column":2}},"912":{"start":{"line":3026,"column":2},"end":{"line":3026,"column":53}},"913":{"start":{"line":3034,"column":0},"end":{"line":3036,"column":2}},"914":{"start":{"line":3035,"column":2},"end":{"line":3035,"column":92}},"915":{"start":{"line":3044,"column":0},"end":{"line":3047,"column":2}},"916":{"start":{"line":3045,"column":2},"end":{"line":3046,"column":20}},"917":{"start":{"line":3057,"column":0},"end":{"line":3060,"column":2}},"918":{"start":{"line":3058,"column":2},"end":{"line":3059,"column":20}},"919":{"start":{"line":3064,"column":0},"end":{"line":3066,"column":2}},"920":{"start":{"line":3065,"column":2},"end":{"line":3065,"column":51}},"921":{"start":{"line":3073,"column":0},"end":{"line":3075,"column":2}},"922":{"start":{"line":3074,"column":2},"end":{"line":3074,"column":92}},"923":{"start":{"line":3083,"column":0},"end":{"line":3086,"column":2}},"924":{"start":{"line":3084,"column":2},"end":{"line":3085,"column":25}},"925":{"start":{"line":3096,"column":0},"end":{"line":3099,"column":2}},"926":{"start":{"line":3097,"column":2},"end":{"line":3098,"column":25}},"927":{"start":{"line":3103,"column":0},"end":{"line":3105,"column":2}},"928":{"start":{"line":3104,"column":2},"end":{"line":3104,"column":51}},"929":{"start":{"line":3112,"column":0},"end":{"line":3114,"column":2}},"930":{"start":{"line":3113,"column":2},"end":{"line":3113,"column":92}},"931":{"start":{"line":3122,"column":0},"end":{"line":3125,"column":2}},"932":{"start":{"line":3123,"column":2},"end":{"line":3124,"column":25}},"933":{"start":{"line":3135,"column":0},"end":{"line":3138,"column":2}},"934":{"start":{"line":3136,"column":2},"end":{"line":3137,"column":25}},"935":{"start":{"line":3142,"column":0},"end":{"line":3144,"column":2}},"936":{"start":{"line":3143,"column":2},"end":{"line":3143,"column":51}},"937":{"start":{"line":3151,"column":0},"end":{"line":3153,"column":2}},"938":{"start":{"line":3152,"column":2},"end":{"line":3152,"column":92}},"939":{"start":{"line":3161,"column":0},"end":{"line":3164,"column":2}},"940":{"start":{"line":3162,"column":2},"end":{"line":3163,"column":23}},"941":{"start":{"line":3174,"column":0},"end":{"line":3177,"column":2}},"942":{"start":{"line":3175,"column":2},"end":{"line":3176,"column":23}},"943":{"start":{"line":3181,"column":0},"end":{"line":3183,"column":2}},"944":{"start":{"line":3182,"column":2},"end":{"line":3182,"column":51}},"945":{"start":{"line":3190,"column":0},"end":{"line":3192,"column":2}},"946":{"start":{"line":3191,"column":2},"end":{"line":3191,"column":77}},"947":{"start":{"line":3196,"column":0},"end":{"line":3198,"column":2}},"948":{"start":{"line":3197,"column":2},"end":{"line":3197,"column":49}},"949":{"start":{"line":3205,"column":0},"end":{"line":3207,"column":2}},"950":{"start":{"line":3206,"column":2},"end":{"line":3206,"column":100}},"951":{"start":{"line":3215,"column":0},"end":{"line":3218,"column":2}},"952":{"start":{"line":3216,"column":2},"end":{"line":3217,"column":30}},"953":{"start":{"line":3228,"column":0},"end":{"line":3231,"column":2}},"954":{"start":{"line":3229,"column":2},"end":{"line":3230,"column":30}},"955":{"start":{"line":3235,"column":0},"end":{"line":3237,"column":2}},"956":{"start":{"line":3236,"column":2},"end":{"line":3236,"column":46}},"957":{"start":{"line":3244,"column":0},"end":{"line":3246,"column":2}},"958":{"start":{"line":3245,"column":2},"end":{"line":3245,"column":61}},"959":{"start":{"line":3249,"column":0},"end":{"line":3251,"column":2}},"960":{"start":{"line":3250,"column":2},"end":{"line":3250,"column":28}},"961":{"start":{"line":3265,"column":0},"end":{"line":3267,"column":2}},"962":{"start":{"line":3266,"column":2},"end":{"line":3266,"column":101}},"963":{"start":{"line":3268,"column":0},"end":{"line":3268,"column":58}},"964":{"start":{"line":3269,"column":0},"end":{"line":3271,"column":1}},"965":{"start":{"line":3270,"column":2},"end":{"line":3270,"column":76}},"966":{"start":{"line":3277,"column":0},"end":{"line":3277,"column":51}},"967":{"start":{"line":3281,"column":0},"end":{"line":3323,"column":1}},"968":{"start":{"line":3292,"column":2},"end":{"line":3294,"column":4}},"969":{"start":{"line":3293,"column":4},"end":{"line":3293,"column":76}},"970":{"start":{"line":3306,"column":2},"end":{"line":3322,"column":4}},"971":{"start":{"line":3307,"column":16},"end":{"line":3315,"column":31}},"972":{"start":{"line":3318,"column":4},"end":{"line":3320,"column":5}},"973":{"start":{"line":3319,"column":6},"end":{"line":3319,"column":37}},"974":{"start":{"line":3321,"column":4},"end":{"line":3321,"column":15}},"975":{"start":{"line":3331,"column":0},"end":{"line":3335,"column":2}},"976":{"start":{"line":3332,"column":15},"end":{"line":3332,"column":43}},"977":{"start":{"line":3333,"column":12},"end":{"line":3333,"column":46}},"978":{"start":{"line":3334,"column":2},"end":{"line":3334,"column":79}},"979":{"start":{"line":3345,"column":0},"end":{"line":3390,"column":2}},"980":{"start":{"line":3346,"column":2},"end":{"line":3388,"column":3}},"981":{"start":{"line":3347,"column":4},"end":{"line":3349,"column":5}},"982":{"start":{"line":3348,"column":6},"end":{"line":3348,"column":12}},"983":{"start":{"line":3350,"column":16},"end":{"line":3350,"column":39}},"984":{"start":{"line":3351,"column":4},"end":{"line":3386,"column":15}},"985":{"start":{"line":3353,"column":46},"end":{"line":3353,"column":64}},"986":{"start":{"line":3354,"column":8},"end":{"line":3354,"column":28}},"987":{"start":{"line":3355,"column":8},"end":{"line":3355,"column":14}},"988":{"start":{"line":3357,"column":42},"end":{"line":3357,"column":59}},"989":{"start":{"line":3358,"column":8},"end":{"line":3358,"column":32}},"990":{"start":{"line":3359,"column":8},"end":{"line":3359,"column":14}},"991":{"start":{"line":3361,"column":46},"end":{"line":3361,"column":64}},"992":{"start":{"line":3362,"column":8},"end":{"line":3362,"column":31}},"993":{"start":{"line":3363,"column":8},"end":{"line":3363,"column":14}},"994":{"start":{"line":3365,"column":46},"end":{"line":3365,"column":64}},"995":{"start":{"line":3366,"column":8},"end":{"line":3366,"column":31}},"996":{"start":{"line":3367,"column":8},"end":{"line":3367,"column":14}},"997":{"start":{"line":3369,"column":46},"end":{"line":3369,"column":64}},"998":{"start":{"line":3370,"column":8},"end":{"line":3370,"column":29}},"999":{"start":{"line":3371,"column":8},"end":{"line":3371,"column":14}},"1000":{"start":{"line":3373,"column":41},"end":{"line":3373,"column":60}},"1001":{"start":{"line":3374,"column":8},"end":{"line":3374,"column":29}},"1002":{"start":{"line":3375,"column":8},"end":{"line":3375,"column":14}},"1003":{"start":{"line":3377,"column":46},"end":{"line":3377,"column":64}},"1004":{"start":{"line":3378,"column":8},"end":{"line":3378,"column":32}},"1005":{"start":{"line":3379,"column":8},"end":{"line":3379,"column":14}},"1006":{"start":{"line":3381,"column":46},"end":{"line":3381,"column":64}},"1007":{"start":{"line":3382,"column":8},"end":{"line":3382,"column":26}},"1008":{"start":{"line":3383,"column":8},"end":{"line":3383,"column":14}},"1009":{"start":{"line":3385,"column":8},"end":{"line":3385,"column":27}},"1010":{"start":{"line":3386,"column":8},"end":{"line":3386,"column":14}},"1011":{"start":{"line":3389,"column":2},"end":{"line":3389,"column":13}},"1012":{"start":{"line":3397,"column":0},"end":{"line":3401,"column":2}},"1013":{"start":{"line":3398,"column":15},"end":{"line":3398,"column":38}},"1014":{"start":{"line":3399,"column":2},"end":{"line":3399,"column":69}},"1015":{"start":{"line":3400,"column":2},"end":{"line":3400,"column":34}},"1016":{"start":{"line":3411,"column":0},"end":{"line":3469,"column":2}},"1017":{"start":{"line":3412,"column":10},"end":{"line":3412,"column":19}},"1018":{"start":{"line":3413,"column":2},"end":{"line":3413,"column":30}},"1019":{"start":{"line":3414,"column":2},"end":{"line":3419,"column":3}},"1020":{"start":{"line":3415,"column":4},"end":{"line":3417,"column":7}},"1021":{"start":{"line":3420,"column":2},"end":{"line":3420,"column":29}},"1022":{"start":{"line":3421,"column":2},"end":{"line":3426,"column":3}},"1023":{"start":{"line":3422,"column":4},"end":{"line":3424,"column":7}},"1024":{"start":{"line":3427,"column":2},"end":{"line":3427,"column":33}},"1025":{"start":{"line":3428,"column":2},"end":{"line":3433,"column":3}},"1026":{"start":{"line":3429,"column":4},"end":{"line":3431,"column":7}},"1027":{"start":{"line":3434,"column":2},"end":{"line":3434,"column":33}},"1028":{"start":{"line":3435,"column":2},"end":{"line":3440,"column":3}},"1029":{"start":{"line":3436,"column":4},"end":{"line":3438,"column":7}},"1030":{"start":{"line":3441,"column":2},"end":{"line":3441,"column":31}},"1031":{"start":{"line":3442,"column":2},"end":{"line":3447,"column":3}},"1032":{"start":{"line":3443,"column":4},"end":{"line":3445,"column":7}},"1033":{"start":{"line":3448,"column":2},"end":{"line":3448,"column":26}},"1034":{"start":{"line":3449,"column":2},"end":{"line":3454,"column":3}},"1035":{"start":{"line":3450,"column":4},"end":{"line":3452,"column":7}},"1036":{"start":{"line":3455,"column":2},"end":{"line":3455,"column":38}},"1037":{"start":{"line":3456,"column":2},"end":{"line":3461,"column":3}},"1038":{"start":{"line":3457,"column":4},"end":{"line":3459,"column":7}},"1039":{"start":{"line":3462,"column":2},"end":{"line":3462,"column":28}},"1040":{"start":{"line":3463,"column":2},"end":{"line":3468,"column":3}},"1041":{"start":{"line":3464,"column":4},"end":{"line":3466,"column":7}},"1042":{"start":{"line":3476,"column":0},"end":{"line":3478,"column":2}},"1043":{"start":{"line":3477,"column":2},"end":{"line":3477,"column":92}},"1044":{"start":{"line":3486,"column":0},"end":{"line":3489,"column":2}},"1045":{"start":{"line":3487,"column":2},"end":{"line":3488,"column":22}},"1046":{"start":{"line":3499,"column":0},"end":{"line":3502,"column":2}},"1047":{"start":{"line":3500,"column":2},"end":{"line":3501,"column":22}},"1048":{"start":{"line":3506,"column":0},"end":{"line":3508,"column":2}},"1049":{"start":{"line":3507,"column":2},"end":{"line":3507,"column":51}},"1050":{"start":{"line":3517,"column":0},"end":{"line":3519,"column":2}},"1051":{"start":{"line":3518,"column":2},"end":{"line":3518,"column":82}},"1052":{"start":{"line":3523,"column":0},"end":{"line":3525,"column":2}},"1053":{"start":{"line":3524,"column":2},"end":{"line":3524,"column":53}},"1054":{"start":{"line":3532,"column":0},"end":{"line":3534,"column":2}},"1055":{"start":{"line":3533,"column":2},"end":{"line":3533,"column":92}},"1056":{"start":{"line":3542,"column":0},"end":{"line":3545,"column":2}},"1057":{"start":{"line":3543,"column":2},"end":{"line":3544,"column":25}},"1058":{"start":{"line":3555,"column":0},"end":{"line":3558,"column":2}},"1059":{"start":{"line":3556,"column":2},"end":{"line":3557,"column":25}},"1060":{"start":{"line":3562,"column":0},"end":{"line":3564,"column":2}},"1061":{"start":{"line":3563,"column":2},"end":{"line":3563,"column":51}},"1062":{"start":{"line":3571,"column":0},"end":{"line":3573,"column":2}},"1063":{"start":{"line":3572,"column":2},"end":{"line":3572,"column":92}},"1064":{"start":{"line":3581,"column":0},"end":{"line":3584,"column":2}},"1065":{"start":{"line":3582,"column":2},"end":{"line":3583,"column":25}},"1066":{"start":{"line":3594,"column":0},"end":{"line":3597,"column":2}},"1067":{"start":{"line":3595,"column":2},"end":{"line":3596,"column":25}},"1068":{"start":{"line":3601,"column":0},"end":{"line":3603,"column":2}},"1069":{"start":{"line":3602,"column":2},"end":{"line":3602,"column":51}},"1070":{"start":{"line":3610,"column":0},"end":{"line":3612,"column":2}},"1071":{"start":{"line":3611,"column":2},"end":{"line":3611,"column":92}},"1072":{"start":{"line":3620,"column":0},"end":{"line":3623,"column":2}},"1073":{"start":{"line":3621,"column":2},"end":{"line":3622,"column":23}},"1074":{"start":{"line":3633,"column":0},"end":{"line":3636,"column":2}},"1075":{"start":{"line":3634,"column":2},"end":{"line":3635,"column":23}},"1076":{"start":{"line":3640,"column":0},"end":{"line":3642,"column":2}},"1077":{"start":{"line":3641,"column":2},"end":{"line":3641,"column":51}},"1078":{"start":{"line":3649,"column":0},"end":{"line":3651,"column":2}},"1079":{"start":{"line":3650,"column":2},"end":{"line":3650,"column":77}},"1080":{"start":{"line":3655,"column":0},"end":{"line":3657,"column":2}},"1081":{"start":{"line":3656,"column":2},"end":{"line":3656,"column":49}},"1082":{"start":{"line":3664,"column":0},"end":{"line":3666,"column":2}},"1083":{"start":{"line":3665,"column":2},"end":{"line":3665,"column":100}},"1084":{"start":{"line":3674,"column":0},"end":{"line":3677,"column":2}},"1085":{"start":{"line":3675,"column":2},"end":{"line":3676,"column":30}},"1086":{"start":{"line":3687,"column":0},"end":{"line":3690,"column":2}},"1087":{"start":{"line":3688,"column":2},"end":{"line":3689,"column":30}},"1088":{"start":{"line":3694,"column":0},"end":{"line":3696,"column":2}},"1089":{"start":{"line":3695,"column":2},"end":{"line":3695,"column":46}},"1090":{"start":{"line":3703,"column":0},"end":{"line":3705,"column":2}},"1091":{"start":{"line":3704,"column":2},"end":{"line":3704,"column":61}},"1092":{"start":{"line":3708,"column":0},"end":{"line":3710,"column":2}},"1093":{"start":{"line":3709,"column":2},"end":{"line":3709,"column":28}},"1094":{"start":{"line":3717,"column":0},"end":{"line":3719,"column":2}},"1095":{"start":{"line":3718,"column":2},"end":{"line":3718,"column":92}},"1096":{"start":{"line":3727,"column":0},"end":{"line":3730,"column":2}},"1097":{"start":{"line":3728,"column":2},"end":{"line":3729,"column":20}},"1098":{"start":{"line":3740,"column":0},"end":{"line":3743,"column":2}},"1099":{"start":{"line":3741,"column":2},"end":{"line":3742,"column":20}},"1100":{"start":{"line":3747,"column":0},"end":{"line":3749,"column":2}},"1101":{"start":{"line":3748,"column":2},"end":{"line":3748,"column":51}},"1102":{"start":{"line":3763,"column":0},"end":{"line":3765,"column":2}},"1103":{"start":{"line":3764,"column":2},"end":{"line":3764,"column":100}},"1104":{"start":{"line":3766,"column":0},"end":{"line":3766,"column":57}},"1105":{"start":{"line":3767,"column":0},"end":{"line":3769,"column":1}},"1106":{"start":{"line":3768,"column":2},"end":{"line":3768,"column":74}},"1107":{"start":{"line":3775,"column":0},"end":{"line":3775,"column":50}},"1108":{"start":{"line":3779,"column":0},"end":{"line":3816,"column":1}},"1109":{"start":{"line":3790,"column":2},"end":{"line":3792,"column":4}},"1110":{"start":{"line":3791,"column":4},"end":{"line":3791,"column":75}},"1111":{"start":{"line":3804,"column":2},"end":{"line":3815,"column":4}},"1112":{"start":{"line":3805,"column":16},"end":{"line":3808,"column":63}},"1113":{"start":{"line":3811,"column":4},"end":{"line":3813,"column":5}},"1114":{"start":{"line":3812,"column":6},"end":{"line":3812,"column":37}},"1115":{"start":{"line":3814,"column":4},"end":{"line":3814,"column":15}},"1116":{"start":{"line":3824,"column":0},"end":{"line":3828,"column":2}},"1117":{"start":{"line":3825,"column":15},"end":{"line":3825,"column":43}},"1118":{"start":{"line":3826,"column":12},"end":{"line":3826,"column":45}},"1119":{"start":{"line":3827,"column":2},"end":{"line":3827,"column":78}},"1120":{"start":{"line":3838,"column":0},"end":{"line":3861,"column":2}},"1121":{"start":{"line":3839,"column":2},"end":{"line":3859,"column":3}},"1122":{"start":{"line":3840,"column":4},"end":{"line":3842,"column":5}},"1123":{"start":{"line":3841,"column":6},"end":{"line":3841,"column":12}},"1124":{"start":{"line":3843,"column":16},"end":{"line":3843,"column":39}},"1125":{"start":{"line":3844,"column":4},"end":{"line":3857,"column":15}},"1126":{"start":{"line":3846,"column":20},"end":{"line":3846,"column":50}},"1127":{"start":{"line":3847,"column":8},"end":{"line":3847,"column":88}},"1128":{"start":{"line":3848,"column":8},"end":{"line":3848,"column":36}},"1129":{"start":{"line":3849,"column":8},"end":{"line":3849,"column":14}},"1130":{"start":{"line":3851,"column":20},"end":{"line":3851,"column":54}},"1131":{"start":{"line":3852,"column":8},"end":{"line":3852,"column":92}},"1132":{"start":{"line":3853,"column":8},"end":{"line":3853,"column":32}},"1133":{"start":{"line":3854,"column":8},"end":{"line":3854,"column":14}},"1134":{"start":{"line":3856,"column":8},"end":{"line":3856,"column":27}},"1135":{"start":{"line":3857,"column":8},"end":{"line":3857,"column":14}},"1136":{"start":{"line":3860,"column":2},"end":{"line":3860,"column":13}},"1137":{"start":{"line":3868,"column":0},"end":{"line":3872,"column":2}},"1138":{"start":{"line":3869,"column":15},"end":{"line":3869,"column":38}},"1139":{"start":{"line":3870,"column":2},"end":{"line":3870,"column":68}},"1140":{"start":{"line":3871,"column":2},"end":{"line":3871,"column":34}},"1141":{"start":{"line":3882,"column":0},"end":{"line":3900,"column":2}},"1142":{"start":{"line":3883,"column":10},"end":{"line":3883,"column":19}},"1143":{"start":{"line":3884,"column":2},"end":{"line":3884,"column":33}},"1144":{"start":{"line":3885,"column":2},"end":{"line":3891,"column":3}},"1145":{"start":{"line":3886,"column":4},"end":{"line":3889,"column":54}},"1146":{"start":{"line":3892,"column":2},"end":{"line":3892,"column":33}},"1147":{"start":{"line":3893,"column":2},"end":{"line":3899,"column":3}},"1148":{"start":{"line":3894,"column":4},"end":{"line":3897,"column":58}},"1149":{"start":{"line":3907,"column":0},"end":{"line":3910,"column":2}},"1150":{"start":{"line":3908,"column":2},"end":{"line":3909,"column":69}},"1151":{"start":{"line":3914,"column":0},"end":{"line":3916,"column":2}},"1152":{"start":{"line":3915,"column":2},"end":{"line":3915,"column":47}},"1153":{"start":{"line":3919,"column":0},"end":{"line":3921,"column":2}},"1154":{"start":{"line":3920,"column":2},"end":{"line":3920,"column":35}},"1155":{"start":{"line":3928,"column":0},"end":{"line":3930,"column":2}},"1156":{"start":{"line":3929,"column":2},"end":{"line":3929,"column":48}},"1157":{"start":{"line":3937,"column":0},"end":{"line":3940,"column":2}},"1158":{"start":{"line":3938,"column":2},"end":{"line":3939,"column":81}},"1159":{"start":{"line":3944,"column":0},"end":{"line":3946,"column":2}},"1160":{"start":{"line":3945,"column":2},"end":{"line":3945,"column":55}},"1161":{"start":{"line":3954,"column":0},"end":{"line":3956,"column":2}},"1162":{"start":{"line":3955,"column":2},"end":{"line":3955,"column":109}},"1163":{"start":{"line":3959,"column":0},"end":{"line":3961,"column":2}},"1164":{"start":{"line":3960,"column":2},"end":{"line":3960,"column":28}},"1165":{"start":{"line":3975,"column":0},"end":{"line":3977,"column":2}},"1166":{"start":{"line":3976,"column":2},"end":{"line":3976,"column":92}},"1167":{"start":{"line":3978,"column":0},"end":{"line":3978,"column":49}},"1168":{"start":{"line":3979,"column":0},"end":{"line":3981,"column":1}},"1169":{"start":{"line":3980,"column":2},"end":{"line":3980,"column":58}},"1170":{"start":{"line":3987,"column":0},"end":{"line":3987,"column":42}},"1171":{"start":{"line":3991,"column":0},"end":{"line":4041,"column":1}},"1172":{"start":{"line":4002,"column":2},"end":{"line":4004,"column":4}},"1173":{"start":{"line":4003,"column":4},"end":{"line":4003,"column":67}},"1174":{"start":{"line":4016,"column":2},"end":{"line":4040,"column":4}},"1175":{"start":{"line":4017,"column":16},"end":{"line":4033,"column":61}},"1176":{"start":{"line":4036,"column":4},"end":{"line":4038,"column":5}},"1177":{"start":{"line":4037,"column":6},"end":{"line":4037,"column":37}},"1178":{"start":{"line":4039,"column":4},"end":{"line":4039,"column":15}},"1179":{"start":{"line":4049,"column":0},"end":{"line":4053,"column":2}},"1180":{"start":{"line":4050,"column":15},"end":{"line":4050,"column":43}},"1181":{"start":{"line":4051,"column":12},"end":{"line":4051,"column":37}},"1182":{"start":{"line":4052,"column":2},"end":{"line":4052,"column":70}},"1183":{"start":{"line":4063,"column":0},"end":{"line":4137,"column":2}},"1184":{"start":{"line":4064,"column":2},"end":{"line":4135,"column":3}},"1185":{"start":{"line":4065,"column":4},"end":{"line":4067,"column":5}},"1186":{"start":{"line":4066,"column":6},"end":{"line":4066,"column":12}},"1187":{"start":{"line":4068,"column":16},"end":{"line":4068,"column":39}},"1188":{"start":{"line":4069,"column":4},"end":{"line":4133,"column":15}},"1189":{"start":{"line":4071,"column":46},"end":{"line":4071,"column":64}},"1190":{"start":{"line":4072,"column":8},"end":{"line":4072,"column":38}},"1191":{"start":{"line":4073,"column":8},"end":{"line":4073,"column":14}},"1192":{"start":{"line":4075,"column":41},"end":{"line":4075,"column":60}},"1193":{"start":{"line":4076,"column":8},"end":{"line":4076,"column":29}},"1194":{"start":{"line":4077,"column":8},"end":{"line":4077,"column":14}},"1195":{"start":{"line":4079,"column":41},"end":{"line":4079,"column":60}},"1196":{"start":{"line":4080,"column":8},"end":{"line":4080,"column":26}},"1197":{"start":{"line":4081,"column":8},"end":{"line":4081,"column":14}},"1198":{"start":{"line":4083,"column":46},"end":{"line":4083,"column":64}},"1199":{"start":{"line":4084,"column":8},"end":{"line":4084,"column":29}},"1200":{"start":{"line":4085,"column":8},"end":{"line":4085,"column":14}},"1201":{"start":{"line":4087,"column":46},"end":{"line":4087,"column":64}},"1202":{"start":{"line":4088,"column":8},"end":{"line":4088,"column":30}},"1203":{"start":{"line":4089,"column":8},"end":{"line":4089,"column":14}},"1204":{"start":{"line":4091,"column":46},"end":{"line":4091,"column":64}},"1205":{"start":{"line":4092,"column":8},"end":{"line":4092,"column":40}},"1206":{"start":{"line":4093,"column":8},"end":{"line":4093,"column":14}},"1207":{"start":{"line":4095,"column":46},"end":{"line":4095,"column":64}},"1208":{"start":{"line":4096,"column":8},"end":{"line":4096,"column":28}},"1209":{"start":{"line":4097,"column":8},"end":{"line":4097,"column":14}},"1210":{"start":{"line":4099,"column":20},"end":{"line":4099,"column":43}},"1211":{"start":{"line":4100,"column":8},"end":{"line":4100,"column":81}},"1212":{"start":{"line":4101,"column":8},"end":{"line":4101,"column":29}},"1213":{"start":{"line":4102,"column":8},"end":{"line":4102,"column":14}},"1214":{"start":{"line":4104,"column":41},"end":{"line":4104,"column":60}},"1215":{"start":{"line":4105,"column":8},"end":{"line":4105,"column":30}},"1216":{"start":{"line":4106,"column":8},"end":{"line":4106,"column":14}},"1217":{"start":{"line":4108,"column":46},"end":{"line":4108,"column":64}},"1218":{"start":{"line":4109,"column":8},"end":{"line":4109,"column":32}},"1219":{"start":{"line":4110,"column":8},"end":{"line":4110,"column":14}},"1220":{"start":{"line":4112,"column":41},"end":{"line":4112,"column":59}},"1221":{"start":{"line":4113,"column":8},"end":{"line":4113,"column":30}},"1222":{"start":{"line":4114,"column":8},"end":{"line":4114,"column":14}},"1223":{"start":{"line":4116,"column":46},"end":{"line":4116,"column":64}},"1224":{"start":{"line":4117,"column":8},"end":{"line":4117,"column":27}},"1225":{"start":{"line":4118,"column":8},"end":{"line":4118,"column":14}},"1226":{"start":{"line":4120,"column":46},"end":{"line":4120,"column":64}},"1227":{"start":{"line":4121,"column":8},"end":{"line":4121,"column":25}},"1228":{"start":{"line":4122,"column":8},"end":{"line":4122,"column":14}},"1229":{"start":{"line":4124,"column":42},"end":{"line":4124,"column":59}},"1230":{"start":{"line":4125,"column":8},"end":{"line":4125,"column":36}},"1231":{"start":{"line":4126,"column":8},"end":{"line":4126,"column":14}},"1232":{"start":{"line":4128,"column":41},"end":{"line":4128,"column":60}},"1233":{"start":{"line":4129,"column":8},"end":{"line":4129,"column":30}},"1234":{"start":{"line":4130,"column":8},"end":{"line":4130,"column":14}},"1235":{"start":{"line":4132,"column":8},"end":{"line":4132,"column":27}},"1236":{"start":{"line":4133,"column":8},"end":{"line":4133,"column":14}},"1237":{"start":{"line":4136,"column":2},"end":{"line":4136,"column":13}},"1238":{"start":{"line":4144,"column":0},"end":{"line":4148,"column":2}},"1239":{"start":{"line":4145,"column":15},"end":{"line":4145,"column":38}},"1240":{"start":{"line":4146,"column":2},"end":{"line":4146,"column":60}},"1241":{"start":{"line":4147,"column":2},"end":{"line":4147,"column":34}},"1242":{"start":{"line":4158,"column":0},"end":{"line":4266,"column":2}},"1243":{"start":{"line":4159,"column":10},"end":{"line":4159,"column":19}},"1244":{"start":{"line":4160,"column":2},"end":{"line":4160,"column":40}},"1245":{"start":{"line":4161,"column":2},"end":{"line":4166,"column":3}},"1246":{"start":{"line":4162,"column":4},"end":{"line":4164,"column":7}},"1247":{"start":{"line":4167,"column":2},"end":{"line":4167,"column":26}},"1248":{"start":{"line":4168,"column":2},"end":{"line":4173,"column":3}},"1249":{"start":{"line":4169,"column":4},"end":{"line":4171,"column":7}},"1250":{"start":{"line":4174,"column":2},"end":{"line":4174,"column":23}},"1251":{"start":{"line":4175,"column":2},"end":{"line":4180,"column":3}},"1252":{"start":{"line":4176,"column":4},"end":{"line":4178,"column":7}},"1253":{"start":{"line":4181,"column":2},"end":{"line":4181,"column":31}},"1254":{"start":{"line":4182,"column":2},"end":{"line":4187,"column":3}},"1255":{"start":{"line":4183,"column":4},"end":{"line":4185,"column":7}},"1256":{"start":{"line":4188,"column":2},"end":{"line":4188,"column":32}},"1257":{"start":{"line":4189,"column":2},"end":{"line":4194,"column":3}},"1258":{"start":{"line":4190,"column":4},"end":{"line":4192,"column":7}},"1259":{"start":{"line":4195,"column":2},"end":{"line":4195,"column":42}},"1260":{"start":{"line":4196,"column":2},"end":{"line":4201,"column":3}},"1261":{"start":{"line":4197,"column":4},"end":{"line":4199,"column":7}},"1262":{"start":{"line":4202,"column":2},"end":{"line":4202,"column":30}},"1263":{"start":{"line":4203,"column":2},"end":{"line":4208,"column":3}},"1264":{"start":{"line":4204,"column":4},"end":{"line":4206,"column":7}},"1265":{"start":{"line":4209,"column":2},"end":{"line":4209,"column":30}},"1266":{"start":{"line":4210,"column":2},"end":{"line":4216,"column":3}},"1267":{"start":{"line":4211,"column":4},"end":{"line":4214,"column":47}},"1268":{"start":{"line":4217,"column":2},"end":{"line":4217,"column":27}},"1269":{"start":{"line":4218,"column":2},"end":{"line":4223,"column":3}},"1270":{"start":{"line":4219,"column":4},"end":{"line":4221,"column":7}},"1271":{"start":{"line":4224,"column":2},"end":{"line":4224,"column":34}},"1272":{"start":{"line":4225,"column":2},"end":{"line":4230,"column":3}},"1273":{"start":{"line":4226,"column":4},"end":{"line":4228,"column":7}},"1274":{"start":{"line":4231,"column":2},"end":{"line":4231,"column":27}},"1275":{"start":{"line":4232,"column":2},"end":{"line":4237,"column":3}},"1276":{"start":{"line":4233,"column":4},"end":{"line":4235,"column":7}},"1277":{"start":{"line":4238,"column":2},"end":{"line":4238,"column":29}},"1278":{"start":{"line":4239,"column":2},"end":{"line":4244,"column":3}},"1279":{"start":{"line":4240,"column":4},"end":{"line":4242,"column":7}},"1280":{"start":{"line":4245,"column":2},"end":{"line":4245,"column":27}},"1281":{"start":{"line":4246,"column":2},"end":{"line":4251,"column":3}},"1282":{"start":{"line":4247,"column":4},"end":{"line":4249,"column":7}},"1283":{"start":{"line":4252,"column":2},"end":{"line":4252,"column":33}},"1284":{"start":{"line":4253,"column":2},"end":{"line":4258,"column":3}},"1285":{"start":{"line":4254,"column":4},"end":{"line":4256,"column":7}},"1286":{"start":{"line":4259,"column":2},"end":{"line":4259,"column":27}},"1287":{"start":{"line":4260,"column":2},"end":{"line":4265,"column":3}},"1288":{"start":{"line":4261,"column":4},"end":{"line":4263,"column":7}},"1289":{"start":{"line":4273,"column":0},"end":{"line":4275,"column":2}},"1290":{"start":{"line":4274,"column":2},"end":{"line":4274,"column":92}},"1291":{"start":{"line":4283,"column":0},"end":{"line":4286,"column":2}},"1292":{"start":{"line":4284,"column":2},"end":{"line":4285,"column":32}},"1293":{"start":{"line":4296,"column":0},"end":{"line":4299,"column":2}},"1294":{"start":{"line":4297,"column":2},"end":{"line":4298,"column":32}},"1295":{"start":{"line":4303,"column":0},"end":{"line":4305,"column":2}},"1296":{"start":{"line":4304,"column":2},"end":{"line":4304,"column":51}},"1297":{"start":{"line":4312,"column":0},"end":{"line":4314,"column":2}},"1298":{"start":{"line":4313,"column":2},"end":{"line":4313,"column":78}},"1299":{"start":{"line":4318,"column":0},"end":{"line":4320,"column":2}},"1300":{"start":{"line":4319,"column":2},"end":{"line":4319,"column":52}},"1301":{"start":{"line":4327,"column":0},"end":{"line":4329,"column":2}},"1302":{"start":{"line":4328,"column":2},"end":{"line":4328,"column":78}},"1303":{"start":{"line":4333,"column":0},"end":{"line":4335,"column":2}},"1304":{"start":{"line":4334,"column":2},"end":{"line":4334,"column":52}},"1305":{"start":{"line":4342,"column":0},"end":{"line":4344,"column":2}},"1306":{"start":{"line":4343,"column":2},"end":{"line":4343,"column":92}},"1307":{"start":{"line":4352,"column":0},"end":{"line":4355,"column":2}},"1308":{"start":{"line":4353,"column":2},"end":{"line":4354,"column":23}},"1309":{"start":{"line":4365,"column":0},"end":{"line":4368,"column":2}},"1310":{"start":{"line":4366,"column":2},"end":{"line":4367,"column":23}},"1311":{"start":{"line":4372,"column":0},"end":{"line":4374,"column":2}},"1312":{"start":{"line":4373,"column":2},"end":{"line":4373,"column":51}},"1313":{"start":{"line":4381,"column":0},"end":{"line":4383,"column":2}},"1314":{"start":{"line":4382,"column":2},"end":{"line":4382,"column":92}},"1315":{"start":{"line":4391,"column":0},"end":{"line":4394,"column":2}},"1316":{"start":{"line":4392,"column":2},"end":{"line":4393,"column":24}},"1317":{"start":{"line":4404,"column":0},"end":{"line":4407,"column":2}},"1318":{"start":{"line":4405,"column":2},"end":{"line":4406,"column":24}},"1319":{"start":{"line":4411,"column":0},"end":{"line":4413,"column":2}},"1320":{"start":{"line":4412,"column":2},"end":{"line":4412,"column":51}},"1321":{"start":{"line":4420,"column":0},"end":{"line":4422,"column":2}},"1322":{"start":{"line":4421,"column":2},"end":{"line":4421,"column":92}},"1323":{"start":{"line":4430,"column":0},"end":{"line":4433,"column":2}},"1324":{"start":{"line":4431,"column":2},"end":{"line":4432,"column":34}},"1325":{"start":{"line":4443,"column":0},"end":{"line":4446,"column":2}},"1326":{"start":{"line":4444,"column":2},"end":{"line":4445,"column":34}},"1327":{"start":{"line":4450,"column":0},"end":{"line":4452,"column":2}},"1328":{"start":{"line":4451,"column":2},"end":{"line":4451,"column":51}},"1329":{"start":{"line":4459,"column":0},"end":{"line":4461,"column":2}},"1330":{"start":{"line":4460,"column":2},"end":{"line":4460,"column":92}},"1331":{"start":{"line":4469,"column":0},"end":{"line":4472,"column":2}},"1332":{"start":{"line":4470,"column":2},"end":{"line":4471,"column":22}},"1333":{"start":{"line":4482,"column":0},"end":{"line":4485,"column":2}},"1334":{"start":{"line":4483,"column":2},"end":{"line":4484,"column":22}},"1335":{"start":{"line":4489,"column":0},"end":{"line":4491,"column":2}},"1336":{"start":{"line":4490,"column":2},"end":{"line":4490,"column":51}},"1337":{"start":{"line":4498,"column":0},"end":{"line":4501,"column":2}},"1338":{"start":{"line":4499,"column":2},"end":{"line":4500,"column":70}},"1339":{"start":{"line":4505,"column":0},"end":{"line":4507,"column":2}},"1340":{"start":{"line":4506,"column":2},"end":{"line":4506,"column":55}},"1341":{"start":{"line":4515,"column":0},"end":{"line":4517,"column":2}},"1342":{"start":{"line":4516,"column":2},"end":{"line":4516,"column":98}},"1343":{"start":{"line":4520,"column":0},"end":{"line":4522,"column":2}},"1344":{"start":{"line":4521,"column":2},"end":{"line":4521,"column":25}},"1345":{"start":{"line":4529,"column":0},"end":{"line":4531,"column":2}},"1346":{"start":{"line":4530,"column":2},"end":{"line":4530,"column":77}},"1347":{"start":{"line":4535,"column":0},"end":{"line":4537,"column":2}},"1348":{"start":{"line":4536,"column":2},"end":{"line":4536,"column":49}},"1349":{"start":{"line":4544,"column":0},"end":{"line":4546,"column":2}},"1350":{"start":{"line":4545,"column":2},"end":{"line":4545,"column":93}},"1351":{"start":{"line":4554,"column":0},"end":{"line":4557,"column":2}},"1352":{"start":{"line":4555,"column":2},"end":{"line":4556,"column":26}},"1353":{"start":{"line":4567,"column":0},"end":{"line":4570,"column":2}},"1354":{"start":{"line":4568,"column":2},"end":{"line":4569,"column":26}},"1355":{"start":{"line":4574,"column":0},"end":{"line":4576,"column":2}},"1356":{"start":{"line":4575,"column":2},"end":{"line":4575,"column":52}},"1357":{"start":{"line":4583,"column":0},"end":{"line":4585,"column":2}},"1358":{"start":{"line":4584,"column":2},"end":{"line":4584,"column":78}},"1359":{"start":{"line":4589,"column":0},"end":{"line":4591,"column":2}},"1360":{"start":{"line":4590,"column":2},"end":{"line":4590,"column":50}},"1361":{"start":{"line":4598,"column":0},"end":{"line":4600,"column":2}},"1362":{"start":{"line":4599,"column":2},"end":{"line":4599,"column":93}},"1363":{"start":{"line":4608,"column":0},"end":{"line":4611,"column":2}},"1364":{"start":{"line":4609,"column":2},"end":{"line":4610,"column":21}},"1365":{"start":{"line":4621,"column":0},"end":{"line":4624,"column":2}},"1366":{"start":{"line":4622,"column":2},"end":{"line":4623,"column":21}},"1367":{"start":{"line":4628,"column":0},"end":{"line":4630,"column":2}},"1368":{"start":{"line":4629,"column":2},"end":{"line":4629,"column":52}},"1369":{"start":{"line":4637,"column":0},"end":{"line":4639,"column":2}},"1370":{"start":{"line":4638,"column":2},"end":{"line":4638,"column":93}},"1371":{"start":{"line":4647,"column":0},"end":{"line":4650,"column":2}},"1372":{"start":{"line":4648,"column":2},"end":{"line":4649,"column":19}},"1373":{"start":{"line":4660,"column":0},"end":{"line":4663,"column":2}},"1374":{"start":{"line":4661,"column":2},"end":{"line":4662,"column":19}},"1375":{"start":{"line":4667,"column":0},"end":{"line":4669,"column":2}},"1376":{"start":{"line":4668,"column":2},"end":{"line":4668,"column":52}},"1377":{"start":{"line":4678,"column":0},"end":{"line":4680,"column":2}},"1378":{"start":{"line":4679,"column":2},"end":{"line":4679,"column":83}},"1379":{"start":{"line":4684,"column":0},"end":{"line":4686,"column":2}},"1380":{"start":{"line":4685,"column":2},"end":{"line":4685,"column":54}},"1381":{"start":{"line":4693,"column":0},"end":{"line":4695,"column":2}},"1382":{"start":{"line":4694,"column":2},"end":{"line":4694,"column":78}},"1383":{"start":{"line":4699,"column":0},"end":{"line":4701,"column":2}},"1384":{"start":{"line":4700,"column":2},"end":{"line":4700,"column":50}},"1385":{"start":{"line":4715,"column":0},"end":{"line":4717,"column":2}},"1386":{"start":{"line":4716,"column":2},"end":{"line":4716,"column":61}},"1387":{"start":{"line":4718,"column":0},"end":{"line":4718,"column":47}},"1388":{"start":{"line":4719,"column":0},"end":{"line":4721,"column":1}},"1389":{"start":{"line":4720,"column":2},"end":{"line":4720,"column":54}},"1390":{"start":{"line":4724,"column":0},"end":{"line":4766,"column":1}},"1391":{"start":{"line":4735,"column":2},"end":{"line":4737,"column":4}},"1392":{"start":{"line":4736,"column":4},"end":{"line":4736,"column":65}},"1393":{"start":{"line":4749,"column":2},"end":{"line":4765,"column":4}},"1394":{"start":{"line":4750,"column":16},"end":{"line":4758,"column":60}},"1395":{"start":{"line":4761,"column":4},"end":{"line":4763,"column":5}},"1396":{"start":{"line":4762,"column":6},"end":{"line":4762,"column":37}},"1397":{"start":{"line":4764,"column":4},"end":{"line":4764,"column":15}},"1398":{"start":{"line":4774,"column":0},"end":{"line":4778,"column":2}},"1399":{"start":{"line":4775,"column":15},"end":{"line":4775,"column":43}},"1400":{"start":{"line":4776,"column":12},"end":{"line":4776,"column":35}},"1401":{"start":{"line":4777,"column":2},"end":{"line":4777,"column":68}},"1402":{"start":{"line":4788,"column":0},"end":{"line":4833,"column":2}},"1403":{"start":{"line":4789,"column":2},"end":{"line":4831,"column":3}},"1404":{"start":{"line":4790,"column":4},"end":{"line":4792,"column":5}},"1405":{"start":{"line":4791,"column":6},"end":{"line":4791,"column":12}},"1406":{"start":{"line":4793,"column":16},"end":{"line":4793,"column":39}},"1407":{"start":{"line":4794,"column":4},"end":{"line":4829,"column":15}},"1408":{"start":{"line":4796,"column":46},"end":{"line":4796,"column":64}},"1409":{"start":{"line":4797,"column":8},"end":{"line":4797,"column":38}},"1410":{"start":{"line":4798,"column":8},"end":{"line":4798,"column":14}},"1411":{"start":{"line":4800,"column":41},"end":{"line":4800,"column":60}},"1412":{"start":{"line":4801,"column":8},"end":{"line":4801,"column":32}},"1413":{"start":{"line":4802,"column":8},"end":{"line":4802,"column":14}},"1414":{"start":{"line":4804,"column":41},"end":{"line":4804,"column":60}},"1415":{"start":{"line":4805,"column":8},"end":{"line":4805,"column":31}},"1416":{"start":{"line":4806,"column":8},"end":{"line":4806,"column":14}},"1417":{"start":{"line":4808,"column":41},"end":{"line":4808,"column":59}},"1418":{"start":{"line":4809,"column":8},"end":{"line":4809,"column":31}},"1419":{"start":{"line":4810,"column":8},"end":{"line":4810,"column":14}},"1420":{"start":{"line":4812,"column":46},"end":{"line":4812,"column":64}},"1421":{"start":{"line":4813,"column":8},"end":{"line":4813,"column":29}},"1422":{"start":{"line":4814,"column":8},"end":{"line":4814,"column":14}},"1423":{"start":{"line":4816,"column":46},"end":{"line":4816,"column":64}},"1424":{"start":{"line":4817,"column":8},"end":{"line":4817,"column":32}},"1425":{"start":{"line":4818,"column":8},"end":{"line":4818,"column":14}},"1426":{"start":{"line":4820,"column":41},"end":{"line":4820,"column":60}},"1427":{"start":{"line":4821,"column":8},"end":{"line":4821,"column":30}},"1428":{"start":{"line":4822,"column":8},"end":{"line":4822,"column":14}},"1429":{"start":{"line":4824,"column":41},"end":{"line":4824,"column":59}},"1430":{"start":{"line":4825,"column":8},"end":{"line":4825,"column":30}},"1431":{"start":{"line":4826,"column":8},"end":{"line":4826,"column":14}},"1432":{"start":{"line":4828,"column":8},"end":{"line":4828,"column":27}},"1433":{"start":{"line":4829,"column":8},"end":{"line":4829,"column":14}},"1434":{"start":{"line":4832,"column":2},"end":{"line":4832,"column":13}},"1435":{"start":{"line":4840,"column":0},"end":{"line":4844,"column":2}},"1436":{"start":{"line":4841,"column":15},"end":{"line":4841,"column":38}},"1437":{"start":{"line":4842,"column":2},"end":{"line":4842,"column":58}},"1438":{"start":{"line":4843,"column":2},"end":{"line":4843,"column":34}},"1439":{"start":{"line":4854,"column":0},"end":{"line":4912,"column":2}},"1440":{"start":{"line":4855,"column":10},"end":{"line":4855,"column":19}},"1441":{"start":{"line":4856,"column":2},"end":{"line":4856,"column":40}},"1442":{"start":{"line":4857,"column":2},"end":{"line":4862,"column":3}},"1443":{"start":{"line":4858,"column":4},"end":{"line":4860,"column":7}},"1444":{"start":{"line":4863,"column":2},"end":{"line":4863,"column":29}},"1445":{"start":{"line":4864,"column":2},"end":{"line":4869,"column":3}},"1446":{"start":{"line":4865,"column":4},"end":{"line":4867,"column":7}},"1447":{"start":{"line":4870,"column":2},"end":{"line":4870,"column":28}},"1448":{"start":{"line":4871,"column":2},"end":{"line":4876,"column":3}},"1449":{"start":{"line":4872,"column":4},"end":{"line":4874,"column":7}},"1450":{"start":{"line":4877,"column":2},"end":{"line":4877,"column":28}},"1451":{"start":{"line":4878,"column":2},"end":{"line":4883,"column":3}},"1452":{"start":{"line":4879,"column":4},"end":{"line":4881,"column":7}},"1453":{"start":{"line":4884,"column":2},"end":{"line":4884,"column":31}},"1454":{"start":{"line":4885,"column":2},"end":{"line":4890,"column":3}},"1455":{"start":{"line":4886,"column":4},"end":{"line":4888,"column":7}},"1456":{"start":{"line":4891,"column":2},"end":{"line":4891,"column":34}},"1457":{"start":{"line":4892,"column":2},"end":{"line":4897,"column":3}},"1458":{"start":{"line":4893,"column":4},"end":{"line":4895,"column":7}},"1459":{"start":{"line":4898,"column":2},"end":{"line":4898,"column":27}},"1460":{"start":{"line":4899,"column":2},"end":{"line":4904,"column":3}},"1461":{"start":{"line":4900,"column":4},"end":{"line":4902,"column":7}},"1462":{"start":{"line":4905,"column":2},"end":{"line":4905,"column":27}},"1463":{"start":{"line":4906,"column":2},"end":{"line":4911,"column":3}},"1464":{"start":{"line":4907,"column":4},"end":{"line":4909,"column":7}},"1465":{"start":{"line":4919,"column":0},"end":{"line":4921,"column":2}},"1466":{"start":{"line":4920,"column":2},"end":{"line":4920,"column":92}},"1467":{"start":{"line":4929,"column":0},"end":{"line":4932,"column":2}},"1468":{"start":{"line":4930,"column":2},"end":{"line":4931,"column":32}},"1469":{"start":{"line":4942,"column":0},"end":{"line":4945,"column":2}},"1470":{"start":{"line":4943,"column":2},"end":{"line":4944,"column":32}},"1471":{"start":{"line":4949,"column":0},"end":{"line":4951,"column":2}},"1472":{"start":{"line":4950,"column":2},"end":{"line":4950,"column":51}},"1473":{"start":{"line":4958,"column":0},"end":{"line":4960,"column":2}},"1474":{"start":{"line":4959,"column":2},"end":{"line":4959,"column":78}},"1475":{"start":{"line":4964,"column":0},"end":{"line":4966,"column":2}},"1476":{"start":{"line":4965,"column":2},"end":{"line":4965,"column":52}},"1477":{"start":{"line":4973,"column":0},"end":{"line":4975,"column":2}},"1478":{"start":{"line":4974,"column":2},"end":{"line":4974,"column":78}},"1479":{"start":{"line":4979,"column":0},"end":{"line":4981,"column":2}},"1480":{"start":{"line":4980,"column":2},"end":{"line":4980,"column":52}},"1481":{"start":{"line":4988,"column":0},"end":{"line":4990,"column":2}},"1482":{"start":{"line":4989,"column":2},"end":{"line":4989,"column":77}},"1483":{"start":{"line":4994,"column":0},"end":{"line":4996,"column":2}},"1484":{"start":{"line":4995,"column":2},"end":{"line":4995,"column":49}},"1485":{"start":{"line":5003,"column":0},"end":{"line":5005,"column":2}},"1486":{"start":{"line":5004,"column":2},"end":{"line":5004,"column":92}},"1487":{"start":{"line":5013,"column":0},"end":{"line":5016,"column":2}},"1488":{"start":{"line":5014,"column":2},"end":{"line":5015,"column":23}},"1489":{"start":{"line":5026,"column":0},"end":{"line":5029,"column":2}},"1490":{"start":{"line":5027,"column":2},"end":{"line":5028,"column":23}},"1491":{"start":{"line":5033,"column":0},"end":{"line":5035,"column":2}},"1492":{"start":{"line":5034,"column":2},"end":{"line":5034,"column":51}},"1493":{"start":{"line":5042,"column":0},"end":{"line":5044,"column":2}},"1494":{"start":{"line":5043,"column":2},"end":{"line":5043,"column":92}},"1495":{"start":{"line":5052,"column":0},"end":{"line":5055,"column":2}},"1496":{"start":{"line":5053,"column":2},"end":{"line":5054,"column":26}},"1497":{"start":{"line":5065,"column":0},"end":{"line":5068,"column":2}},"1498":{"start":{"line":5066,"column":2},"end":{"line":5067,"column":26}},"1499":{"start":{"line":5072,"column":0},"end":{"line":5074,"column":2}},"1500":{"start":{"line":5073,"column":2},"end":{"line":5073,"column":51}},"1501":{"start":{"line":5081,"column":0},"end":{"line":5083,"column":2}},"1502":{"start":{"line":5082,"column":2},"end":{"line":5082,"column":77}},"1503":{"start":{"line":5087,"column":0},"end":{"line":5089,"column":2}},"1504":{"start":{"line":5088,"column":2},"end":{"line":5088,"column":49}},"1505":{"start":{"line":5096,"column":0},"end":{"line":5098,"column":2}},"1506":{"start":{"line":5097,"column":2},"end":{"line":5097,"column":77}},"1507":{"start":{"line":5102,"column":0},"end":{"line":5104,"column":2}},"1508":{"start":{"line":5103,"column":2},"end":{"line":5103,"column":49}},"1509":{"start":{"line":5118,"column":0},"end":{"line":5120,"column":2}},"1510":{"start":{"line":5119,"column":2},"end":{"line":5119,"column":61}},"1511":{"start":{"line":5121,"column":0},"end":{"line":5121,"column":52}},"1512":{"start":{"line":5122,"column":0},"end":{"line":5124,"column":1}},"1513":{"start":{"line":5123,"column":2},"end":{"line":5123,"column":64}},"1514":{"start":{"line":5127,"column":0},"end":{"line":5162,"column":1}},"1515":{"start":{"line":5138,"column":2},"end":{"line":5140,"column":4}},"1516":{"start":{"line":5139,"column":4},"end":{"line":5139,"column":70}},"1517":{"start":{"line":5152,"column":2},"end":{"line":5161,"column":4}},"1518":{"start":{"line":5153,"column":16},"end":{"line":5154,"column":58}},"1519":{"start":{"line":5157,"column":4},"end":{"line":5159,"column":5}},"1520":{"start":{"line":5158,"column":6},"end":{"line":5158,"column":37}},"1521":{"start":{"line":5160,"column":4},"end":{"line":5160,"column":15}},"1522":{"start":{"line":5170,"column":0},"end":{"line":5174,"column":2}},"1523":{"start":{"line":5171,"column":15},"end":{"line":5171,"column":43}},"1524":{"start":{"line":5172,"column":12},"end":{"line":5172,"column":40}},"1525":{"start":{"line":5173,"column":2},"end":{"line":5173,"column":73}},"1526":{"start":{"line":5184,"column":0},"end":{"line":5201,"column":2}},"1527":{"start":{"line":5185,"column":2},"end":{"line":5199,"column":3}},"1528":{"start":{"line":5186,"column":4},"end":{"line":5188,"column":5}},"1529":{"start":{"line":5187,"column":6},"end":{"line":5187,"column":12}},"1530":{"start":{"line":5189,"column":16},"end":{"line":5189,"column":39}},"1531":{"start":{"line":5190,"column":4},"end":{"line":5197,"column":15}},"1532":{"start":{"line":5192,"column":41},"end":{"line":5192,"column":60}},"1533":{"start":{"line":5193,"column":8},"end":{"line":5193,"column":27}},"1534":{"start":{"line":5194,"column":8},"end":{"line":5194,"column":14}},"1535":{"start":{"line":5196,"column":8},"end":{"line":5196,"column":27}},"1536":{"start":{"line":5197,"column":8},"end":{"line":5197,"column":14}},"1537":{"start":{"line":5200,"column":2},"end":{"line":5200,"column":13}},"1538":{"start":{"line":5208,"column":0},"end":{"line":5212,"column":2}},"1539":{"start":{"line":5209,"column":15},"end":{"line":5209,"column":38}},"1540":{"start":{"line":5210,"column":2},"end":{"line":5210,"column":63}},"1541":{"start":{"line":5211,"column":2},"end":{"line":5211,"column":34}},"1542":{"start":{"line":5222,"column":0},"end":{"line":5231,"column":2}},"1543":{"start":{"line":5223,"column":10},"end":{"line":5223,"column":19}},"1544":{"start":{"line":5224,"column":2},"end":{"line":5224,"column":24}},"1545":{"start":{"line":5225,"column":2},"end":{"line":5230,"column":3}},"1546":{"start":{"line":5226,"column":4},"end":{"line":5228,"column":7}},"1547":{"start":{"line":5238,"column":0},"end":{"line":5240,"column":2}},"1548":{"start":{"line":5239,"column":2},"end":{"line":5239,"column":78}},"1549":{"start":{"line":5244,"column":0},"end":{"line":5246,"column":2}},"1550":{"start":{"line":5245,"column":2},"end":{"line":5245,"column":52}},"1551":{"start":{"line":5260,"column":0},"end":{"line":5262,"column":2}},"1552":{"start":{"line":5261,"column":2},"end":{"line":5261,"column":93}},"1553":{"start":{"line":5263,"column":0},"end":{"line":5263,"column":50}},"1554":{"start":{"line":5264,"column":0},"end":{"line":5266,"column":1}},"1555":{"start":{"line":5265,"column":2},"end":{"line":5265,"column":60}},"1556":{"start":{"line":5272,"column":0},"end":{"line":5272,"column":43}},"1557":{"start":{"line":5276,"column":0},"end":{"line":5316,"column":1}},"1558":{"start":{"line":5287,"column":2},"end":{"line":5289,"column":4}},"1559":{"start":{"line":5288,"column":4},"end":{"line":5288,"column":68}},"1560":{"start":{"line":5301,"column":2},"end":{"line":5315,"column":4}},"1561":{"start":{"line":5302,"column":16},"end":{"line":5308,"column":70}},"1562":{"start":{"line":5311,"column":4},"end":{"line":5313,"column":5}},"1563":{"start":{"line":5312,"column":6},"end":{"line":5312,"column":37}},"1564":{"start":{"line":5314,"column":4},"end":{"line":5314,"column":15}},"1565":{"start":{"line":5324,"column":0},"end":{"line":5328,"column":2}},"1566":{"start":{"line":5325,"column":15},"end":{"line":5325,"column":43}},"1567":{"start":{"line":5326,"column":12},"end":{"line":5326,"column":38}},"1568":{"start":{"line":5327,"column":2},"end":{"line":5327,"column":71}},"1569":{"start":{"line":5338,"column":0},"end":{"line":5372,"column":2}},"1570":{"start":{"line":5339,"column":2},"end":{"line":5370,"column":3}},"1571":{"start":{"line":5340,"column":4},"end":{"line":5342,"column":5}},"1572":{"start":{"line":5341,"column":6},"end":{"line":5341,"column":12}},"1573":{"start":{"line":5343,"column":16},"end":{"line":5343,"column":39}},"1574":{"start":{"line":5344,"column":4},"end":{"line":5368,"column":15}},"1575":{"start":{"line":5346,"column":41},"end":{"line":5346,"column":60}},"1576":{"start":{"line":5347,"column":8},"end":{"line":5347,"column":27}},"1577":{"start":{"line":5348,"column":8},"end":{"line":5348,"column":14}},"1578":{"start":{"line":5350,"column":20},"end":{"line":5350,"column":48}},"1579":{"start":{"line":5351,"column":8},"end":{"line":5351,"column":86}},"1580":{"start":{"line":5352,"column":8},"end":{"line":5352,"column":32}},"1581":{"start":{"line":5353,"column":8},"end":{"line":5353,"column":14}},"1582":{"start":{"line":5355,"column":42},"end":{"line":5355,"column":59}},"1583":{"start":{"line":5356,"column":8},"end":{"line":5356,"column":30}},"1584":{"start":{"line":5357,"column":8},"end":{"line":5357,"column":14}},"1585":{"start":{"line":5359,"column":42},"end":{"line":5359,"column":59}},"1586":{"start":{"line":5360,"column":8},"end":{"line":5360,"column":27}},"1587":{"start":{"line":5361,"column":8},"end":{"line":5361,"column":14}},"1588":{"start":{"line":5363,"column":42},"end":{"line":5363,"column":59}},"1589":{"start":{"line":5364,"column":8},"end":{"line":5364,"column":36}},"1590":{"start":{"line":5365,"column":8},"end":{"line":5365,"column":14}},"1591":{"start":{"line":5367,"column":8},"end":{"line":5367,"column":27}},"1592":{"start":{"line":5368,"column":8},"end":{"line":5368,"column":14}},"1593":{"start":{"line":5371,"column":2},"end":{"line":5371,"column":13}},"1594":{"start":{"line":5379,"column":0},"end":{"line":5383,"column":2}},"1595":{"start":{"line":5380,"column":15},"end":{"line":5380,"column":38}},"1596":{"start":{"line":5381,"column":2},"end":{"line":5381,"column":61}},"1597":{"start":{"line":5382,"column":2},"end":{"line":5382,"column":34}},"1598":{"start":{"line":5393,"column":0},"end":{"line":5431,"column":2}},"1599":{"start":{"line":5394,"column":10},"end":{"line":5394,"column":19}},"1600":{"start":{"line":5395,"column":2},"end":{"line":5395,"column":24}},"1601":{"start":{"line":5396,"column":2},"end":{"line":5401,"column":3}},"1602":{"start":{"line":5397,"column":4},"end":{"line":5399,"column":7}},"1603":{"start":{"line":5402,"column":2},"end":{"line":5402,"column":33}},"1604":{"start":{"line":5403,"column":2},"end":{"line":5409,"column":3}},"1605":{"start":{"line":5404,"column":4},"end":{"line":5407,"column":52}},"1606":{"start":{"line":5410,"column":2},"end":{"line":5410,"column":27}},"1607":{"start":{"line":5411,"column":2},"end":{"line":5416,"column":3}},"1608":{"start":{"line":5412,"column":4},"end":{"line":5414,"column":7}},"1609":{"start":{"line":5417,"column":2},"end":{"line":5417,"column":24}},"1610":{"start":{"line":5418,"column":2},"end":{"line":5423,"column":3}},"1611":{"start":{"line":5419,"column":4},"end":{"line":5421,"column":7}},"1612":{"start":{"line":5424,"column":2},"end":{"line":5424,"column":33}},"1613":{"start":{"line":5425,"column":2},"end":{"line":5430,"column":3}},"1614":{"start":{"line":5426,"column":4},"end":{"line":5428,"column":7}},"1615":{"start":{"line":5438,"column":0},"end":{"line":5440,"column":2}},"1616":{"start":{"line":5439,"column":2},"end":{"line":5439,"column":78}},"1617":{"start":{"line":5444,"column":0},"end":{"line":5446,"column":2}},"1618":{"start":{"line":5445,"column":2},"end":{"line":5445,"column":52}},"1619":{"start":{"line":5453,"column":0},"end":{"line":5456,"column":2}},"1620":{"start":{"line":5454,"column":2},"end":{"line":5455,"column":75}},"1621":{"start":{"line":5460,"column":0},"end":{"line":5462,"column":2}},"1622":{"start":{"line":5461,"column":2},"end":{"line":5461,"column":55}},"1623":{"start":{"line":5470,"column":0},"end":{"line":5472,"column":2}},"1624":{"start":{"line":5471,"column":2},"end":{"line":5471,"column":103}},"1625":{"start":{"line":5475,"column":0},"end":{"line":5477,"column":2}},"1626":{"start":{"line":5476,"column":2},"end":{"line":5476,"column":28}},"1627":{"start":{"line":5486,"column":0},"end":{"line":5488,"column":2}},"1628":{"start":{"line":5487,"column":2},"end":{"line":5487,"column":82}},"1629":{"start":{"line":5492,"column":0},"end":{"line":5494,"column":2}},"1630":{"start":{"line":5493,"column":2},"end":{"line":5493,"column":53}},"1631":{"start":{"line":5503,"column":0},"end":{"line":5505,"column":2}},"1632":{"start":{"line":5504,"column":2},"end":{"line":5504,"column":82}},"1633":{"start":{"line":5509,"column":0},"end":{"line":5511,"column":2}},"1634":{"start":{"line":5510,"column":2},"end":{"line":5510,"column":53}},"1635":{"start":{"line":5520,"column":0},"end":{"line":5522,"column":2}},"1636":{"start":{"line":5521,"column":2},"end":{"line":5521,"column":82}},"1637":{"start":{"line":5526,"column":0},"end":{"line":5528,"column":2}},"1638":{"start":{"line":5527,"column":2},"end":{"line":5527,"column":53}},"1639":{"start":{"line":5542,"column":0},"end":{"line":5544,"column":2}},"1640":{"start":{"line":5543,"column":2},"end":{"line":5543,"column":61}},"1641":{"start":{"line":5545,"column":0},"end":{"line":5545,"column":50}},"1642":{"start":{"line":5546,"column":0},"end":{"line":5548,"column":1}},"1643":{"start":{"line":5547,"column":2},"end":{"line":5547,"column":60}},"1644":{"start":{"line":5551,"column":0},"end":{"line":5588,"column":1}},"1645":{"start":{"line":5562,"column":2},"end":{"line":5564,"column":4}},"1646":{"start":{"line":5563,"column":4},"end":{"line":5563,"column":68}},"1647":{"start":{"line":5576,"column":2},"end":{"line":5587,"column":4}},"1648":{"start":{"line":5577,"column":16},"end":{"line":5580,"column":56}},"1649":{"start":{"line":5583,"column":4},"end":{"line":5585,"column":5}},"1650":{"start":{"line":5584,"column":6},"end":{"line":5584,"column":37}},"1651":{"start":{"line":5586,"column":4},"end":{"line":5586,"column":15}},"1652":{"start":{"line":5596,"column":0},"end":{"line":5600,"column":2}},"1653":{"start":{"line":5597,"column":15},"end":{"line":5597,"column":43}},"1654":{"start":{"line":5598,"column":12},"end":{"line":5598,"column":38}},"1655":{"start":{"line":5599,"column":2},"end":{"line":5599,"column":71}},"1656":{"start":{"line":5610,"column":0},"end":{"line":5635,"column":2}},"1657":{"start":{"line":5611,"column":2},"end":{"line":5633,"column":3}},"1658":{"start":{"line":5612,"column":4},"end":{"line":5614,"column":5}},"1659":{"start":{"line":5613,"column":6},"end":{"line":5613,"column":12}},"1660":{"start":{"line":5615,"column":16},"end":{"line":5615,"column":39}},"1661":{"start":{"line":5616,"column":4},"end":{"line":5631,"column":15}},"1662":{"start":{"line":5618,"column":41},"end":{"line":5618,"column":60}},"1663":{"start":{"line":5619,"column":8},"end":{"line":5619,"column":27}},"1664":{"start":{"line":5620,"column":8},"end":{"line":5620,"column":14}},"1665":{"start":{"line":5622,"column":41},"end":{"line":5622,"column":60}},"1666":{"start":{"line":5623,"column":8},"end":{"line":5623,"column":27}},"1667":{"start":{"line":5624,"column":8},"end":{"line":5624,"column":14}},"1668":{"start":{"line":5626,"column":41},"end":{"line":5626,"column":59}},"1669":{"start":{"line":5627,"column":8},"end":{"line":5627,"column":26}},"1670":{"start":{"line":5628,"column":8},"end":{"line":5628,"column":14}},"1671":{"start":{"line":5630,"column":8},"end":{"line":5630,"column":27}},"1672":{"start":{"line":5631,"column":8},"end":{"line":5631,"column":14}},"1673":{"start":{"line":5634,"column":2},"end":{"line":5634,"column":13}},"1674":{"start":{"line":5642,"column":0},"end":{"line":5646,"column":2}},"1675":{"start":{"line":5643,"column":15},"end":{"line":5643,"column":38}},"1676":{"start":{"line":5644,"column":2},"end":{"line":5644,"column":61}},"1677":{"start":{"line":5645,"column":2},"end":{"line":5645,"column":34}},"1678":{"start":{"line":5656,"column":0},"end":{"line":5679,"column":2}},"1679":{"start":{"line":5657,"column":10},"end":{"line":5657,"column":19}},"1680":{"start":{"line":5658,"column":2},"end":{"line":5658,"column":24}},"1681":{"start":{"line":5659,"column":2},"end":{"line":5664,"column":3}},"1682":{"start":{"line":5660,"column":4},"end":{"line":5662,"column":7}},"1683":{"start":{"line":5665,"column":2},"end":{"line":5665,"column":24}},"1684":{"start":{"line":5666,"column":2},"end":{"line":5671,"column":3}},"1685":{"start":{"line":5667,"column":4},"end":{"line":5669,"column":7}},"1686":{"start":{"line":5672,"column":2},"end":{"line":5672,"column":23}},"1687":{"start":{"line":5673,"column":2},"end":{"line":5678,"column":3}},"1688":{"start":{"line":5674,"column":4},"end":{"line":5676,"column":7}},"1689":{"start":{"line":5686,"column":0},"end":{"line":5688,"column":2}},"1690":{"start":{"line":5687,"column":2},"end":{"line":5687,"column":78}},"1691":{"start":{"line":5692,"column":0},"end":{"line":5694,"column":2}},"1692":{"start":{"line":5693,"column":2},"end":{"line":5693,"column":52}},"1693":{"start":{"line":5701,"column":0},"end":{"line":5703,"column":2}},"1694":{"start":{"line":5702,"column":2},"end":{"line":5702,"column":78}},"1695":{"start":{"line":5707,"column":0},"end":{"line":5709,"column":2}},"1696":{"start":{"line":5708,"column":2},"end":{"line":5708,"column":52}},"1697":{"start":{"line":5716,"column":0},"end":{"line":5718,"column":2}},"1698":{"start":{"line":5717,"column":2},"end":{"line":5717,"column":77}},"1699":{"start":{"line":5722,"column":0},"end":{"line":5724,"column":2}},"1700":{"start":{"line":5723,"column":2},"end":{"line":5723,"column":49}},"1701":{"start":{"line":5738,"column":0},"end":{"line":5740,"column":2}},"1702":{"start":{"line":5739,"column":2},"end":{"line":5739,"column":88}},"1703":{"start":{"line":5741,"column":0},"end":{"line":5741,"column":45}},"1704":{"start":{"line":5742,"column":0},"end":{"line":5744,"column":1}},"1705":{"start":{"line":5743,"column":2},"end":{"line":5743,"column":50}},"1706":{"start":{"line":5750,"column":0},"end":{"line":5750,"column":41}},"1707":{"start":{"line":5754,"column":0},"end":{"line":5794,"column":1}},"1708":{"start":{"line":5765,"column":2},"end":{"line":5767,"column":4}},"1709":{"start":{"line":5766,"column":4},"end":{"line":5766,"column":63}},"1710":{"start":{"line":5779,"column":2},"end":{"line":5793,"column":4}},"1711":{"start":{"line":5780,"column":16},"end":{"line":5786,"column":55}},"1712":{"start":{"line":5789,"column":4},"end":{"line":5791,"column":5}},"1713":{"start":{"line":5790,"column":6},"end":{"line":5790,"column":37}},"1714":{"start":{"line":5792,"column":4},"end":{"line":5792,"column":15}},"1715":{"start":{"line":5802,"column":0},"end":{"line":5806,"column":2}},"1716":{"start":{"line":5803,"column":15},"end":{"line":5803,"column":43}},"1717":{"start":{"line":5804,"column":12},"end":{"line":5804,"column":33}},"1718":{"start":{"line":5805,"column":2},"end":{"line":5805,"column":66}},"1719":{"start":{"line":5816,"column":0},"end":{"line":5847,"column":2}},"1720":{"start":{"line":5817,"column":2},"end":{"line":5845,"column":3}},"1721":{"start":{"line":5818,"column":4},"end":{"line":5820,"column":5}},"1722":{"start":{"line":5819,"column":6},"end":{"line":5819,"column":12}},"1723":{"start":{"line":5821,"column":16},"end":{"line":5821,"column":39}},"1724":{"start":{"line":5822,"column":4},"end":{"line":5843,"column":15}},"1725":{"start":{"line":5824,"column":41},"end":{"line":5824,"column":60}},"1726":{"start":{"line":5825,"column":8},"end":{"line":5825,"column":30}},"1727":{"start":{"line":5826,"column":8},"end":{"line":5826,"column":14}},"1728":{"start":{"line":5828,"column":41},"end":{"line":5828,"column":60}},"1729":{"start":{"line":5829,"column":8},"end":{"line":5829,"column":31}},"1730":{"start":{"line":5830,"column":8},"end":{"line":5830,"column":14}},"1731":{"start":{"line":5832,"column":20},"end":{"line":5832,"column":46}},"1732":{"start":{"line":5833,"column":8},"end":{"line":5833,"column":84}},"1733":{"start":{"line":5834,"column":8},"end":{"line":5834,"column":32}},"1734":{"start":{"line":5835,"column":8},"end":{"line":5835,"column":14}},"1735":{"start":{"line":5837,"column":20},"end":{"line":5837,"column":46}},"1736":{"start":{"line":5838,"column":8},"end":{"line":5838,"column":84}},"1737":{"start":{"line":5839,"column":8},"end":{"line":5839,"column":37}},"1738":{"start":{"line":5840,"column":8},"end":{"line":5840,"column":14}},"1739":{"start":{"line":5842,"column":8},"end":{"line":5842,"column":27}},"1740":{"start":{"line":5843,"column":8},"end":{"line":5843,"column":14}},"1741":{"start":{"line":5846,"column":2},"end":{"line":5846,"column":13}},"1742":{"start":{"line":5854,"column":0},"end":{"line":5858,"column":2}},"1743":{"start":{"line":5855,"column":15},"end":{"line":5855,"column":38}},"1744":{"start":{"line":5856,"column":2},"end":{"line":5856,"column":56}},"1745":{"start":{"line":5857,"column":2},"end":{"line":5857,"column":34}},"1746":{"start":{"line":5868,"column":0},"end":{"line":5900,"column":2}},"1747":{"start":{"line":5869,"column":10},"end":{"line":5869,"column":19}},"1748":{"start":{"line":5870,"column":2},"end":{"line":5870,"column":27}},"1749":{"start":{"line":5871,"column":2},"end":{"line":5876,"column":3}},"1750":{"start":{"line":5872,"column":4},"end":{"line":5874,"column":7}},"1751":{"start":{"line":5877,"column":2},"end":{"line":5877,"column":28}},"1752":{"start":{"line":5878,"column":2},"end":{"line":5883,"column":3}},"1753":{"start":{"line":5879,"column":4},"end":{"line":5881,"column":7}},"1754":{"start":{"line":5884,"column":2},"end":{"line":5884,"column":33}},"1755":{"start":{"line":5885,"column":2},"end":{"line":5891,"column":3}},"1756":{"start":{"line":5886,"column":4},"end":{"line":5889,"column":50}},"1757":{"start":{"line":5892,"column":2},"end":{"line":5892,"column":38}},"1758":{"start":{"line":5893,"column":2},"end":{"line":5899,"column":3}},"1759":{"start":{"line":5894,"column":4},"end":{"line":5897,"column":50}},"1760":{"start":{"line":5907,"column":0},"end":{"line":5909,"column":2}},"1761":{"start":{"line":5908,"column":2},"end":{"line":5908,"column":78}},"1762":{"start":{"line":5913,"column":0},"end":{"line":5915,"column":2}},"1763":{"start":{"line":5914,"column":2},"end":{"line":5914,"column":52}},"1764":{"start":{"line":5922,"column":0},"end":{"line":5924,"column":2}},"1765":{"start":{"line":5923,"column":2},"end":{"line":5923,"column":78}},"1766":{"start":{"line":5928,"column":0},"end":{"line":5930,"column":2}},"1767":{"start":{"line":5929,"column":2},"end":{"line":5929,"column":52}},"1768":{"start":{"line":5937,"column":0},"end":{"line":5940,"column":2}},"1769":{"start":{"line":5938,"column":2},"end":{"line":5939,"column":73}},"1770":{"start":{"line":5944,"column":0},"end":{"line":5946,"column":2}},"1771":{"start":{"line":5945,"column":2},"end":{"line":5945,"column":55}},"1772":{"start":{"line":5954,"column":0},"end":{"line":5956,"column":2}},"1773":{"start":{"line":5955,"column":2},"end":{"line":5955,"column":101}},"1774":{"start":{"line":5959,"column":0},"end":{"line":5961,"column":2}},"1775":{"start":{"line":5960,"column":2},"end":{"line":5960,"column":28}},"1776":{"start":{"line":5968,"column":0},"end":{"line":5971,"column":2}},"1777":{"start":{"line":5969,"column":2},"end":{"line":5970,"column":73}},"1778":{"start":{"line":5975,"column":0},"end":{"line":5977,"column":2}},"1779":{"start":{"line":5976,"column":2},"end":{"line":5976,"column":55}},"1780":{"start":{"line":5985,"column":0},"end":{"line":5987,"column":2}},"1781":{"start":{"line":5986,"column":2},"end":{"line":5986,"column":101}},"1782":{"start":{"line":5990,"column":0},"end":{"line":5992,"column":2}},"1783":{"start":{"line":5991,"column":2},"end":{"line":5991,"column":33}},"1784":{"start":{"line":6006,"column":0},"end":{"line":6008,"column":2}},"1785":{"start":{"line":6007,"column":2},"end":{"line":6007,"column":61}},"1786":{"start":{"line":6009,"column":0},"end":{"line":6009,"column":47}},"1787":{"start":{"line":6010,"column":0},"end":{"line":6012,"column":1}},"1788":{"start":{"line":6011,"column":2},"end":{"line":6011,"column":54}},"1789":{"start":{"line":6015,"column":0},"end":{"line":6051,"column":1}},"1790":{"start":{"line":6026,"column":2},"end":{"line":6028,"column":4}},"1791":{"start":{"line":6027,"column":4},"end":{"line":6027,"column":65}},"1792":{"start":{"line":6040,"column":2},"end":{"line":6050,"column":4}},"1793":{"start":{"line":6041,"column":16},"end":{"line":6043,"column":43}},"1794":{"start":{"line":6046,"column":4},"end":{"line":6048,"column":5}},"1795":{"start":{"line":6047,"column":6},"end":{"line":6047,"column":37}},"1796":{"start":{"line":6049,"column":4},"end":{"line":6049,"column":15}},"1797":{"start":{"line":6059,"column":0},"end":{"line":6063,"column":2}},"1798":{"start":{"line":6060,"column":15},"end":{"line":6060,"column":43}},"1799":{"start":{"line":6061,"column":12},"end":{"line":6061,"column":35}},"1800":{"start":{"line":6062,"column":2},"end":{"line":6062,"column":68}},"1801":{"start":{"line":6073,"column":0},"end":{"line":6094,"column":2}},"1802":{"start":{"line":6074,"column":2},"end":{"line":6092,"column":3}},"1803":{"start":{"line":6075,"column":4},"end":{"line":6077,"column":5}},"1804":{"start":{"line":6076,"column":6},"end":{"line":6076,"column":12}},"1805":{"start":{"line":6078,"column":16},"end":{"line":6078,"column":39}},"1806":{"start":{"line":6079,"column":4},"end":{"line":6090,"column":15}},"1807":{"start":{"line":6081,"column":46},"end":{"line":6081,"column":64}},"1808":{"start":{"line":6082,"column":8},"end":{"line":6082,"column":38}},"1809":{"start":{"line":6083,"column":8},"end":{"line":6083,"column":14}},"1810":{"start":{"line":6085,"column":46},"end":{"line":6085,"column":64}},"1811":{"start":{"line":6086,"column":8},"end":{"line":6086,"column":32}},"1812":{"start":{"line":6087,"column":8},"end":{"line":6087,"column":14}},"1813":{"start":{"line":6089,"column":8},"end":{"line":6089,"column":27}},"1814":{"start":{"line":6090,"column":8},"end":{"line":6090,"column":14}},"1815":{"start":{"line":6093,"column":2},"end":{"line":6093,"column":13}},"1816":{"start":{"line":6101,"column":0},"end":{"line":6105,"column":2}},"1817":{"start":{"line":6102,"column":15},"end":{"line":6102,"column":38}},"1818":{"start":{"line":6103,"column":2},"end":{"line":6103,"column":58}},"1819":{"start":{"line":6104,"column":2},"end":{"line":6104,"column":34}},"1820":{"start":{"line":6115,"column":0},"end":{"line":6131,"column":2}},"1821":{"start":{"line":6116,"column":10},"end":{"line":6116,"column":19}},"1822":{"start":{"line":6117,"column":2},"end":{"line":6117,"column":40}},"1823":{"start":{"line":6118,"column":2},"end":{"line":6123,"column":3}},"1824":{"start":{"line":6119,"column":4},"end":{"line":6121,"column":7}},"1825":{"start":{"line":6124,"column":2},"end":{"line":6124,"column":34}},"1826":{"start":{"line":6125,"column":2},"end":{"line":6130,"column":3}},"1827":{"start":{"line":6126,"column":4},"end":{"line":6128,"column":7}},"1828":{"start":{"line":6138,"column":0},"end":{"line":6140,"column":2}},"1829":{"start":{"line":6139,"column":2},"end":{"line":6139,"column":92}},"1830":{"start":{"line":6148,"column":0},"end":{"line":6151,"column":2}},"1831":{"start":{"line":6149,"column":2},"end":{"line":6150,"column":32}},"1832":{"start":{"line":6161,"column":0},"end":{"line":6164,"column":2}},"1833":{"start":{"line":6162,"column":2},"end":{"line":6163,"column":32}},"1834":{"start":{"line":6168,"column":0},"end":{"line":6170,"column":2}},"1835":{"start":{"line":6169,"column":2},"end":{"line":6169,"column":51}},"1836":{"start":{"line":6177,"column":0},"end":{"line":6179,"column":2}},"1837":{"start":{"line":6178,"column":2},"end":{"line":6178,"column":92}},"1838":{"start":{"line":6187,"column":0},"end":{"line":6190,"column":2}},"1839":{"start":{"line":6188,"column":2},"end":{"line":6189,"column":26}},"1840":{"start":{"line":6200,"column":0},"end":{"line":6203,"column":2}},"1841":{"start":{"line":6201,"column":2},"end":{"line":6202,"column":26}},"1842":{"start":{"line":6207,"column":0},"end":{"line":6209,"column":2}},"1843":{"start":{"line":6208,"column":2},"end":{"line":6208,"column":51}},"1844":{"start":{"line":6223,"column":0},"end":{"line":6225,"column":2}},"1845":{"start":{"line":6224,"column":2},"end":{"line":6224,"column":95}},"1846":{"start":{"line":6226,"column":0},"end":{"line":6226,"column":52}},"1847":{"start":{"line":6227,"column":0},"end":{"line":6229,"column":1}},"1848":{"start":{"line":6228,"column":2},"end":{"line":6228,"column":64}},"1849":{"start":{"line":6235,"column":0},"end":{"line":6235,"column":45}},"1850":{"start":{"line":6239,"column":0},"end":{"line":6277,"column":1}},"1851":{"start":{"line":6250,"column":2},"end":{"line":6252,"column":4}},"1852":{"start":{"line":6251,"column":4},"end":{"line":6251,"column":70}},"1853":{"start":{"line":6264,"column":2},"end":{"line":6276,"column":4}},"1854":{"start":{"line":6265,"column":16},"end":{"line":6269,"column":55}},"1855":{"start":{"line":6272,"column":4},"end":{"line":6274,"column":5}},"1856":{"start":{"line":6273,"column":6},"end":{"line":6273,"column":37}},"1857":{"start":{"line":6275,"column":4},"end":{"line":6275,"column":15}},"1858":{"start":{"line":6285,"column":0},"end":{"line":6289,"column":2}},"1859":{"start":{"line":6286,"column":15},"end":{"line":6286,"column":43}},"1860":{"start":{"line":6287,"column":12},"end":{"line":6287,"column":40}},"1861":{"start":{"line":6288,"column":2},"end":{"line":6288,"column":73}},"1862":{"start":{"line":6299,"column":0},"end":{"line":6328,"column":2}},"1863":{"start":{"line":6300,"column":2},"end":{"line":6326,"column":3}},"1864":{"start":{"line":6301,"column":4},"end":{"line":6303,"column":5}},"1865":{"start":{"line":6302,"column":6},"end":{"line":6302,"column":12}},"1866":{"start":{"line":6304,"column":16},"end":{"line":6304,"column":39}},"1867":{"start":{"line":6305,"column":4},"end":{"line":6324,"column":15}},"1868":{"start":{"line":6307,"column":46},"end":{"line":6307,"column":64}},"1869":{"start":{"line":6308,"column":8},"end":{"line":6308,"column":38}},"1870":{"start":{"line":6309,"column":8},"end":{"line":6309,"column":14}},"1871":{"start":{"line":6311,"column":46},"end":{"line":6311,"column":64}},"1872":{"start":{"line":6312,"column":8},"end":{"line":6312,"column":27}},"1873":{"start":{"line":6313,"column":8},"end":{"line":6313,"column":14}},"1874":{"start":{"line":6315,"column":42},"end":{"line":6315,"column":59}},"1875":{"start":{"line":6316,"column":8},"end":{"line":6316,"column":33}},"1876":{"start":{"line":6317,"column":8},"end":{"line":6317,"column":14}},"1877":{"start":{"line":6319,"column":46},"end":{"line":6319,"column":64}},"1878":{"start":{"line":6320,"column":8},"end":{"line":6320,"column":34}},"1879":{"start":{"line":6321,"column":8},"end":{"line":6321,"column":14}},"1880":{"start":{"line":6323,"column":8},"end":{"line":6323,"column":27}},"1881":{"start":{"line":6324,"column":8},"end":{"line":6324,"column":14}},"1882":{"start":{"line":6327,"column":2},"end":{"line":6327,"column":13}},"1883":{"start":{"line":6335,"column":0},"end":{"line":6339,"column":2}},"1884":{"start":{"line":6336,"column":15},"end":{"line":6336,"column":38}},"1885":{"start":{"line":6337,"column":2},"end":{"line":6337,"column":63}},"1886":{"start":{"line":6338,"column":2},"end":{"line":6338,"column":34}},"1887":{"start":{"line":6349,"column":0},"end":{"line":6379,"column":2}},"1888":{"start":{"line":6350,"column":10},"end":{"line":6350,"column":19}},"1889":{"start":{"line":6351,"column":2},"end":{"line":6351,"column":40}},"1890":{"start":{"line":6352,"column":2},"end":{"line":6357,"column":3}},"1891":{"start":{"line":6353,"column":4},"end":{"line":6355,"column":7}},"1892":{"start":{"line":6358,"column":2},"end":{"line":6358,"column":29}},"1893":{"start":{"line":6359,"column":2},"end":{"line":6364,"column":3}},"1894":{"start":{"line":6360,"column":4},"end":{"line":6362,"column":7}},"1895":{"start":{"line":6365,"column":2},"end":{"line":6365,"column":30}},"1896":{"start":{"line":6366,"column":2},"end":{"line":6371,"column":3}},"1897":{"start":{"line":6367,"column":4},"end":{"line":6369,"column":7}},"1898":{"start":{"line":6372,"column":2},"end":{"line":6372,"column":40}},"1899":{"start":{"line":6373,"column":2},"end":{"line":6378,"column":3}},"1900":{"start":{"line":6374,"column":4},"end":{"line":6376,"column":7}},"1901":{"start":{"line":6386,"column":0},"end":{"line":6388,"column":2}},"1902":{"start":{"line":6387,"column":2},"end":{"line":6387,"column":92}},"1903":{"start":{"line":6396,"column":0},"end":{"line":6399,"column":2}},"1904":{"start":{"line":6397,"column":2},"end":{"line":6398,"column":32}},"1905":{"start":{"line":6409,"column":0},"end":{"line":6412,"column":2}},"1906":{"start":{"line":6410,"column":2},"end":{"line":6411,"column":32}},"1907":{"start":{"line":6416,"column":0},"end":{"line":6418,"column":2}},"1908":{"start":{"line":6417,"column":2},"end":{"line":6417,"column":51}},"1909":{"start":{"line":6425,"column":0},"end":{"line":6427,"column":2}},"1910":{"start":{"line":6426,"column":2},"end":{"line":6426,"column":92}},"1911":{"start":{"line":6435,"column":0},"end":{"line":6438,"column":2}},"1912":{"start":{"line":6436,"column":2},"end":{"line":6437,"column":21}},"1913":{"start":{"line":6448,"column":0},"end":{"line":6451,"column":2}},"1914":{"start":{"line":6449,"column":2},"end":{"line":6450,"column":21}},"1915":{"start":{"line":6455,"column":0},"end":{"line":6457,"column":2}},"1916":{"start":{"line":6456,"column":2},"end":{"line":6456,"column":51}},"1917":{"start":{"line":6466,"column":0},"end":{"line":6468,"column":2}},"1918":{"start":{"line":6467,"column":2},"end":{"line":6467,"column":82}},"1919":{"start":{"line":6472,"column":0},"end":{"line":6474,"column":2}},"1920":{"start":{"line":6473,"column":2},"end":{"line":6473,"column":53}},"1921":{"start":{"line":6481,"column":0},"end":{"line":6483,"column":2}},"1922":{"start":{"line":6482,"column":2},"end":{"line":6482,"column":100}},"1923":{"start":{"line":6491,"column":0},"end":{"line":6494,"column":2}},"1924":{"start":{"line":6492,"column":2},"end":{"line":6493,"column":32}},"1925":{"start":{"line":6504,"column":0},"end":{"line":6507,"column":2}},"1926":{"start":{"line":6505,"column":2},"end":{"line":6506,"column":32}},"1927":{"start":{"line":6511,"column":0},"end":{"line":6513,"column":2}},"1928":{"start":{"line":6512,"column":2},"end":{"line":6512,"column":46}},"1929":{"start":{"line":6520,"column":0},"end":{"line":6522,"column":2}},"1930":{"start":{"line":6521,"column":2},"end":{"line":6521,"column":61}},"1931":{"start":{"line":6525,"column":0},"end":{"line":6527,"column":2}},"1932":{"start":{"line":6526,"column":2},"end":{"line":6526,"column":30}},"1933":{"start":{"line":6541,"column":0},"end":{"line":6543,"column":2}},"1934":{"start":{"line":6542,"column":2},"end":{"line":6542,"column":61}},"1935":{"start":{"line":6544,"column":0},"end":{"line":6544,"column":52}},"1936":{"start":{"line":6545,"column":0},"end":{"line":6547,"column":1}},"1937":{"start":{"line":6546,"column":2},"end":{"line":6546,"column":64}},"1938":{"start":{"line":6550,"column":0},"end":{"line":6591,"column":1}},"1939":{"start":{"line":6561,"column":2},"end":{"line":6563,"column":4}},"1940":{"start":{"line":6562,"column":4},"end":{"line":6562,"column":70}},"1941":{"start":{"line":6575,"column":2},"end":{"line":6590,"column":4}},"1942":{"start":{"line":6576,"column":16},"end":{"line":6583,"column":67}},"1943":{"start":{"line":6586,"column":4},"end":{"line":6588,"column":5}},"1944":{"start":{"line":6587,"column":6},"end":{"line":6587,"column":37}},"1945":{"start":{"line":6589,"column":4},"end":{"line":6589,"column":15}},"1946":{"start":{"line":6599,"column":0},"end":{"line":6603,"column":2}},"1947":{"start":{"line":6600,"column":15},"end":{"line":6600,"column":43}},"1948":{"start":{"line":6601,"column":12},"end":{"line":6601,"column":40}},"1949":{"start":{"line":6602,"column":2},"end":{"line":6602,"column":73}},"1950":{"start":{"line":6613,"column":0},"end":{"line":6654,"column":2}},"1951":{"start":{"line":6614,"column":2},"end":{"line":6652,"column":3}},"1952":{"start":{"line":6615,"column":4},"end":{"line":6617,"column":5}},"1953":{"start":{"line":6616,"column":6},"end":{"line":6616,"column":12}},"1954":{"start":{"line":6618,"column":16},"end":{"line":6618,"column":39}},"1955":{"start":{"line":6619,"column":4},"end":{"line":6650,"column":15}},"1956":{"start":{"line":6621,"column":46},"end":{"line":6621,"column":64}},"1957":{"start":{"line":6622,"column":8},"end":{"line":6622,"column":38}},"1958":{"start":{"line":6623,"column":8},"end":{"line":6623,"column":14}},"1959":{"start":{"line":6625,"column":41},"end":{"line":6625,"column":60}},"1960":{"start":{"line":6626,"column":8},"end":{"line":6626,"column":32}},"1961":{"start":{"line":6627,"column":8},"end":{"line":6627,"column":14}},"1962":{"start":{"line":6629,"column":41},"end":{"line":6629,"column":60}},"1963":{"start":{"line":6630,"column":8},"end":{"line":6630,"column":32}},"1964":{"start":{"line":6631,"column":8},"end":{"line":6631,"column":14}},"1965":{"start":{"line":6633,"column":41},"end":{"line":6633,"column":60}},"1966":{"start":{"line":6634,"column":8},"end":{"line":6634,"column":30}},"1967":{"start":{"line":6635,"column":8},"end":{"line":6635,"column":14}},"1968":{"start":{"line":6637,"column":42},"end":{"line":6637,"column":59}},"1969":{"start":{"line":6638,"column":8},"end":{"line":6638,"column":27}},"1970":{"start":{"line":6639,"column":8},"end":{"line":6639,"column":14}},"1971":{"start":{"line":6641,"column":46},"end":{"line":6641,"column":64}},"1972":{"start":{"line":6642,"column":8},"end":{"line":6642,"column":32}},"1973":{"start":{"line":6643,"column":8},"end":{"line":6643,"column":14}},"1974":{"start":{"line":6645,"column":41},"end":{"line":6645,"column":59}},"1975":{"start":{"line":6646,"column":8},"end":{"line":6646,"column":37}},"1976":{"start":{"line":6647,"column":8},"end":{"line":6647,"column":14}},"1977":{"start":{"line":6649,"column":8},"end":{"line":6649,"column":27}},"1978":{"start":{"line":6650,"column":8},"end":{"line":6650,"column":14}},"1979":{"start":{"line":6653,"column":2},"end":{"line":6653,"column":13}},"1980":{"start":{"line":6661,"column":0},"end":{"line":6665,"column":2}},"1981":{"start":{"line":6662,"column":15},"end":{"line":6662,"column":38}},"1982":{"start":{"line":6663,"column":2},"end":{"line":6663,"column":63}},"1983":{"start":{"line":6664,"column":2},"end":{"line":6664,"column":34}},"1984":{"start":{"line":6675,"column":0},"end":{"line":6726,"column":2}},"1985":{"start":{"line":6676,"column":10},"end":{"line":6676,"column":19}},"1986":{"start":{"line":6677,"column":2},"end":{"line":6677,"column":40}},"1987":{"start":{"line":6678,"column":2},"end":{"line":6683,"column":3}},"1988":{"start":{"line":6679,"column":4},"end":{"line":6681,"column":7}},"1989":{"start":{"line":6684,"column":2},"end":{"line":6684,"column":29}},"1990":{"start":{"line":6685,"column":2},"end":{"line":6690,"column":3}},"1991":{"start":{"line":6686,"column":4},"end":{"line":6688,"column":7}},"1992":{"start":{"line":6691,"column":2},"end":{"line":6691,"column":29}},"1993":{"start":{"line":6692,"column":2},"end":{"line":6697,"column":3}},"1994":{"start":{"line":6693,"column":4},"end":{"line":6695,"column":7}},"1995":{"start":{"line":6698,"column":2},"end":{"line":6698,"column":27}},"1996":{"start":{"line":6699,"column":2},"end":{"line":6704,"column":3}},"1997":{"start":{"line":6700,"column":4},"end":{"line":6702,"column":7}},"1998":{"start":{"line":6705,"column":2},"end":{"line":6705,"column":24}},"1999":{"start":{"line":6706,"column":2},"end":{"line":6711,"column":3}},"2000":{"start":{"line":6707,"column":4},"end":{"line":6709,"column":7}},"2001":{"start":{"line":6712,"column":2},"end":{"line":6712,"column":34}},"2002":{"start":{"line":6713,"column":2},"end":{"line":6718,"column":3}},"2003":{"start":{"line":6714,"column":4},"end":{"line":6716,"column":7}},"2004":{"start":{"line":6719,"column":2},"end":{"line":6719,"column":34}},"2005":{"start":{"line":6720,"column":2},"end":{"line":6725,"column":3}},"2006":{"start":{"line":6721,"column":4},"end":{"line":6723,"column":7}},"2007":{"start":{"line":6733,"column":0},"end":{"line":6735,"column":2}},"2008":{"start":{"line":6734,"column":2},"end":{"line":6734,"column":92}},"2009":{"start":{"line":6743,"column":0},"end":{"line":6746,"column":2}},"2010":{"start":{"line":6744,"column":2},"end":{"line":6745,"column":32}},"2011":{"start":{"line":6756,"column":0},"end":{"line":6759,"column":2}},"2012":{"start":{"line":6757,"column":2},"end":{"line":6758,"column":32}},"2013":{"start":{"line":6763,"column":0},"end":{"line":6765,"column":2}},"2014":{"start":{"line":6764,"column":2},"end":{"line":6764,"column":51}},"2015":{"start":{"line":6772,"column":0},"end":{"line":6774,"column":2}},"2016":{"start":{"line":6773,"column":2},"end":{"line":6773,"column":78}},"2017":{"start":{"line":6778,"column":0},"end":{"line":6780,"column":2}},"2018":{"start":{"line":6779,"column":2},"end":{"line":6779,"column":52}},"2019":{"start":{"line":6787,"column":0},"end":{"line":6789,"column":2}},"2020":{"start":{"line":6788,"column":2},"end":{"line":6788,"column":77}},"2021":{"start":{"line":6793,"column":0},"end":{"line":6795,"column":2}},"2022":{"start":{"line":6794,"column":2},"end":{"line":6794,"column":49}},"2023":{"start":{"line":6802,"column":0},"end":{"line":6804,"column":2}},"2024":{"start":{"line":6803,"column":2},"end":{"line":6803,"column":77}},"2025":{"start":{"line":6808,"column":0},"end":{"line":6810,"column":2}},"2026":{"start":{"line":6809,"column":2},"end":{"line":6809,"column":49}},"2027":{"start":{"line":6819,"column":0},"end":{"line":6821,"column":2}},"2028":{"start":{"line":6820,"column":2},"end":{"line":6820,"column":82}},"2029":{"start":{"line":6825,"column":0},"end":{"line":6827,"column":2}},"2030":{"start":{"line":6826,"column":2},"end":{"line":6826,"column":53}},"2031":{"start":{"line":6834,"column":0},"end":{"line":6836,"column":2}},"2032":{"start":{"line":6835,"column":2},"end":{"line":6835,"column":92}},"2033":{"start":{"line":6844,"column":0},"end":{"line":6847,"column":2}},"2034":{"start":{"line":6845,"column":2},"end":{"line":6846,"column":26}},"2035":{"start":{"line":6857,"column":0},"end":{"line":6860,"column":2}},"2036":{"start":{"line":6858,"column":2},"end":{"line":6859,"column":26}},"2037":{"start":{"line":6864,"column":0},"end":{"line":6866,"column":2}},"2038":{"start":{"line":6865,"column":2},"end":{"line":6865,"column":51}},"2039":{"start":{"line":6873,"column":0},"end":{"line":6875,"column":2}},"2040":{"start":{"line":6874,"column":2},"end":{"line":6874,"column":77}},"2041":{"start":{"line":6879,"column":0},"end":{"line":6881,"column":2}},"2042":{"start":{"line":6880,"column":2},"end":{"line":6880,"column":49}},"2043":{"start":{"line":6895,"column":0},"end":{"line":6897,"column":2}},"2044":{"start":{"line":6896,"column":2},"end":{"line":6896,"column":61}},"2045":{"start":{"line":6898,"column":0},"end":{"line":6898,"column":50}},"2046":{"start":{"line":6899,"column":0},"end":{"line":6901,"column":1}},"2047":{"start":{"line":6900,"column":2},"end":{"line":6900,"column":60}},"2048":{"start":{"line":6904,"column":0},"end":{"line":6941,"column":1}},"2049":{"start":{"line":6915,"column":2},"end":{"line":6917,"column":4}},"2050":{"start":{"line":6916,"column":4},"end":{"line":6916,"column":68}},"2051":{"start":{"line":6929,"column":2},"end":{"line":6940,"column":4}},"2052":{"start":{"line":6930,"column":16},"end":{"line":6933,"column":67}},"2053":{"start":{"line":6936,"column":4},"end":{"line":6938,"column":5}},"2054":{"start":{"line":6937,"column":6},"end":{"line":6937,"column":37}},"2055":{"start":{"line":6939,"column":4},"end":{"line":6939,"column":15}},"2056":{"start":{"line":6949,"column":0},"end":{"line":6953,"column":2}},"2057":{"start":{"line":6950,"column":15},"end":{"line":6950,"column":43}},"2058":{"start":{"line":6951,"column":12},"end":{"line":6951,"column":38}},"2059":{"start":{"line":6952,"column":2},"end":{"line":6952,"column":71}},"2060":{"start":{"line":6963,"column":0},"end":{"line":6988,"column":2}},"2061":{"start":{"line":6964,"column":2},"end":{"line":6986,"column":3}},"2062":{"start":{"line":6965,"column":4},"end":{"line":6967,"column":5}},"2063":{"start":{"line":6966,"column":6},"end":{"line":6966,"column":12}},"2064":{"start":{"line":6968,"column":16},"end":{"line":6968,"column":39}},"2065":{"start":{"line":6969,"column":4},"end":{"line":6984,"column":15}},"2066":{"start":{"line":6971,"column":41},"end":{"line":6971,"column":60}},"2067":{"start":{"line":6972,"column":8},"end":{"line":6972,"column":25}},"2068":{"start":{"line":6973,"column":8},"end":{"line":6973,"column":14}},"2069":{"start":{"line":6975,"column":41},"end":{"line":6975,"column":60}},"2070":{"start":{"line":6976,"column":8},"end":{"line":6976,"column":34}},"2071":{"start":{"line":6977,"column":8},"end":{"line":6977,"column":14}},"2072":{"start":{"line":6979,"column":41},"end":{"line":6979,"column":60}},"2073":{"start":{"line":6980,"column":8},"end":{"line":6980,"column":37}},"2074":{"start":{"line":6981,"column":8},"end":{"line":6981,"column":14}},"2075":{"start":{"line":6983,"column":8},"end":{"line":6983,"column":27}},"2076":{"start":{"line":6984,"column":8},"end":{"line":6984,"column":14}},"2077":{"start":{"line":6987,"column":2},"end":{"line":6987,"column":13}},"2078":{"start":{"line":6995,"column":0},"end":{"line":6999,"column":2}},"2079":{"start":{"line":6996,"column":15},"end":{"line":6996,"column":38}},"2080":{"start":{"line":6997,"column":2},"end":{"line":6997,"column":61}},"2081":{"start":{"line":6998,"column":2},"end":{"line":6998,"column":34}},"2082":{"start":{"line":7009,"column":0},"end":{"line":7032,"column":2}},"2083":{"start":{"line":7010,"column":10},"end":{"line":7010,"column":19}},"2084":{"start":{"line":7011,"column":2},"end":{"line":7011,"column":22}},"2085":{"start":{"line":7012,"column":2},"end":{"line":7017,"column":3}},"2086":{"start":{"line":7013,"column":4},"end":{"line":7015,"column":7}},"2087":{"start":{"line":7018,"column":2},"end":{"line":7018,"column":31}},"2088":{"start":{"line":7019,"column":2},"end":{"line":7024,"column":3}},"2089":{"start":{"line":7020,"column":4},"end":{"line":7022,"column":7}},"2090":{"start":{"line":7025,"column":2},"end":{"line":7025,"column":34}},"2091":{"start":{"line":7026,"column":2},"end":{"line":7031,"column":3}},"2092":{"start":{"line":7027,"column":4},"end":{"line":7029,"column":7}},"2093":{"start":{"line":7039,"column":0},"end":{"line":7041,"column":2}},"2094":{"start":{"line":7040,"column":2},"end":{"line":7040,"column":78}},"2095":{"start":{"line":7045,"column":0},"end":{"line":7047,"column":2}},"2096":{"start":{"line":7046,"column":2},"end":{"line":7046,"column":52}},"2097":{"start":{"line":7054,"column":0},"end":{"line":7056,"column":2}},"2098":{"start":{"line":7055,"column":2},"end":{"line":7055,"column":78}},"2099":{"start":{"line":7060,"column":0},"end":{"line":7062,"column":2}},"2100":{"start":{"line":7061,"column":2},"end":{"line":7061,"column":52}},"2101":{"start":{"line":7069,"column":0},"end":{"line":7071,"column":2}},"2102":{"start":{"line":7070,"column":2},"end":{"line":7070,"column":77}},"2103":{"start":{"line":7075,"column":0},"end":{"line":7077,"column":2}},"2104":{"start":{"line":7076,"column":2},"end":{"line":7076,"column":49}},"2105":{"start":{"line":7083,"column":0},"end":{"line":7090,"column":14}},"2106":{"start":{"line":7093,"column":0},"end":{"line":7093,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":48,"column":20},"end":{"line":48,"column":21}},"loc":{"start":{"line":48,"column":40},"end":{"line":50,"column":1}},"line":48},"1":{"name":"(anonymous_1)","decl":{"start":{"line":68,"column":41},"end":{"line":68,"column":42}},"loc":{"start":{"line":68,"column":72},"end":{"line":70,"column":3}},"line":68},"2":{"name":"(anonymous_2)","decl":{"start":{"line":82,"column":31},"end":{"line":82,"column":32}},"loc":{"start":{"line":82,"column":63},"end":{"line":93,"column":3}},"line":82},"3":{"name":"(anonymous_3)","decl":{"start":{"line":102,"column":38},"end":{"line":102,"column":39}},"loc":{"start":{"line":102,"column":55},"end":{"line":106,"column":1}},"line":102},"4":{"name":"(anonymous_4)","decl":{"start":{"line":116,"column":48},"end":{"line":116,"column":49}},"loc":{"start":{"line":116,"column":71},"end":{"line":143,"column":1}},"line":116},"5":{"name":"(anonymous_5)","decl":{"start":{"line":150,"column":46},"end":{"line":150,"column":47}},"loc":{"start":{"line":150,"column":58},"end":{"line":154,"column":1}},"line":150},"6":{"name":"(anonymous_6)","decl":{"start":{"line":164,"column":44},"end":{"line":164,"column":45}},"loc":{"start":{"line":164,"column":71},"end":{"line":189,"column":1}},"line":164},"7":{"name":"(anonymous_7)","decl":{"start":{"line":196,"column":38},"end":{"line":196,"column":39}},"loc":{"start":{"line":196,"column":50},"end":{"line":198,"column":1}},"line":196},"8":{"name":"(anonymous_8)","decl":{"start":{"line":206,"column":44},"end":{"line":206,"column":45}},"loc":{"start":{"line":206,"column":56},"end":{"line":209,"column":1}},"line":206},"9":{"name":"(anonymous_9)","decl":{"start":{"line":219,"column":43},"end":{"line":219,"column":44}},"loc":{"start":{"line":219,"column":55},"end":{"line":222,"column":1}},"line":219},"10":{"name":"(anonymous_10)","decl":{"start":{"line":226,"column":38},"end":{"line":226,"column":39}},"loc":{"start":{"line":226,"column":55},"end":{"line":228,"column":1}},"line":226},"11":{"name":"(anonymous_11)","decl":{"start":{"line":235,"column":40},"end":{"line":235,"column":41}},"loc":{"start":{"line":235,"column":52},"end":{"line":238,"column":1}},"line":235},"12":{"name":"(anonymous_12)","decl":{"start":{"line":242,"column":40},"end":{"line":242,"column":41}},"loc":{"start":{"line":242,"column":57},"end":{"line":244,"column":1}},"line":242},"13":{"name":"(anonymous_13)","decl":{"start":{"line":247,"column":42},"end":{"line":247,"column":43}},"loc":{"start":{"line":247,"column":54},"end":{"line":249,"column":1}},"line":247},"14":{"name":"(anonymous_14)","decl":{"start":{"line":256,"column":40},"end":{"line":256,"column":41}},"loc":{"start":{"line":256,"column":52},"end":{"line":258,"column":1}},"line":256},"15":{"name":"(anonymous_15)","decl":{"start":{"line":265,"column":38},"end":{"line":265,"column":39}},"loc":{"start":{"line":265,"column":50},"end":{"line":268,"column":1}},"line":265},"16":{"name":"(anonymous_16)","decl":{"start":{"line":272,"column":38},"end":{"line":272,"column":39}},"loc":{"start":{"line":272,"column":55},"end":{"line":274,"column":1}},"line":272},"17":{"name":"(anonymous_17)","decl":{"start":{"line":277,"column":40},"end":{"line":277,"column":41}},"loc":{"start":{"line":277,"column":52},"end":{"line":279,"column":1}},"line":277},"18":{"name":"(anonymous_18)","decl":{"start":{"line":286,"column":38},"end":{"line":286,"column":39}},"loc":{"start":{"line":286,"column":50},"end":{"line":288,"column":1}},"line":286},"19":{"name":"(anonymous_19)","decl":{"start":{"line":302,"column":26},"end":{"line":302,"column":27}},"loc":{"start":{"line":302,"column":46},"end":{"line":304,"column":1}},"line":302},"20":{"name":"(anonymous_20)","decl":{"start":{"line":322,"column":47},"end":{"line":322,"column":48}},"loc":{"start":{"line":322,"column":78},"end":{"line":324,"column":3}},"line":322},"21":{"name":"(anonymous_21)","decl":{"start":{"line":336,"column":37},"end":{"line":336,"column":38}},"loc":{"start":{"line":336,"column":69},"end":{"line":356,"column":3}},"line":336},"22":{"name":"(anonymous_22)","decl":{"start":{"line":365,"column":44},"end":{"line":365,"column":45}},"loc":{"start":{"line":365,"column":61},"end":{"line":369,"column":1}},"line":365},"23":{"name":"(anonymous_23)","decl":{"start":{"line":379,"column":54},"end":{"line":379,"column":55}},"loc":{"start":{"line":379,"column":77},"end":{"line":440,"column":1}},"line":379},"24":{"name":"(anonymous_24)","decl":{"start":{"line":447,"column":52},"end":{"line":447,"column":53}},"loc":{"start":{"line":447,"column":64},"end":{"line":451,"column":1}},"line":447},"25":{"name":"(anonymous_25)","decl":{"start":{"line":461,"column":50},"end":{"line":461,"column":51}},"loc":{"start":{"line":461,"column":77},"end":{"line":547,"column":1}},"line":461},"26":{"name":"(anonymous_26)","decl":{"start":{"line":554,"column":47},"end":{"line":554,"column":48}},"loc":{"start":{"line":554,"column":59},"end":{"line":556,"column":1}},"line":554},"27":{"name":"(anonymous_27)","decl":{"start":{"line":564,"column":53},"end":{"line":564,"column":54}},"loc":{"start":{"line":564,"column":65},"end":{"line":567,"column":1}},"line":564},"28":{"name":"(anonymous_28)","decl":{"start":{"line":577,"column":52},"end":{"line":577,"column":53}},"loc":{"start":{"line":577,"column":64},"end":{"line":580,"column":1}},"line":577},"29":{"name":"(anonymous_29)","decl":{"start":{"line":584,"column":47},"end":{"line":584,"column":48}},"loc":{"start":{"line":584,"column":64},"end":{"line":586,"column":1}},"line":584},"30":{"name":"(anonymous_30)","decl":{"start":{"line":593,"column":53},"end":{"line":593,"column":54}},"loc":{"start":{"line":593,"column":65},"end":{"line":595,"column":1}},"line":593},"31":{"name":"(anonymous_31)","decl":{"start":{"line":603,"column":59},"end":{"line":603,"column":60}},"loc":{"start":{"line":603,"column":71},"end":{"line":606,"column":1}},"line":603},"32":{"name":"(anonymous_32)","decl":{"start":{"line":616,"column":58},"end":{"line":616,"column":59}},"loc":{"start":{"line":616,"column":70},"end":{"line":619,"column":1}},"line":616},"33":{"name":"(anonymous_33)","decl":{"start":{"line":623,"column":53},"end":{"line":623,"column":54}},"loc":{"start":{"line":623,"column":70},"end":{"line":625,"column":1}},"line":623},"34":{"name":"(anonymous_34)","decl":{"start":{"line":632,"column":47},"end":{"line":632,"column":48}},"loc":{"start":{"line":632,"column":59},"end":{"line":634,"column":1}},"line":632},"35":{"name":"(anonymous_35)","decl":{"start":{"line":638,"column":47},"end":{"line":638,"column":48}},"loc":{"start":{"line":638,"column":64},"end":{"line":640,"column":1}},"line":638},"36":{"name":"(anonymous_36)","decl":{"start":{"line":647,"column":49},"end":{"line":647,"column":50}},"loc":{"start":{"line":647,"column":61},"end":{"line":649,"column":1}},"line":647},"37":{"name":"(anonymous_37)","decl":{"start":{"line":653,"column":49},"end":{"line":653,"column":50}},"loc":{"start":{"line":653,"column":66},"end":{"line":655,"column":1}},"line":653},"38":{"name":"(anonymous_38)","decl":{"start":{"line":662,"column":54},"end":{"line":662,"column":55}},"loc":{"start":{"line":662,"column":66},"end":{"line":664,"column":1}},"line":662},"39":{"name":"(anonymous_39)","decl":{"start":{"line":672,"column":60},"end":{"line":672,"column":61}},"loc":{"start":{"line":672,"column":72},"end":{"line":675,"column":1}},"line":672},"40":{"name":"(anonymous_40)","decl":{"start":{"line":685,"column":59},"end":{"line":685,"column":60}},"loc":{"start":{"line":685,"column":71},"end":{"line":688,"column":1}},"line":685},"41":{"name":"(anonymous_41)","decl":{"start":{"line":692,"column":54},"end":{"line":692,"column":55}},"loc":{"start":{"line":692,"column":71},"end":{"line":694,"column":1}},"line":692},"42":{"name":"(anonymous_42)","decl":{"start":{"line":701,"column":51},"end":{"line":701,"column":52}},"loc":{"start":{"line":701,"column":63},"end":{"line":703,"column":1}},"line":701},"43":{"name":"(anonymous_43)","decl":{"start":{"line":711,"column":57},"end":{"line":711,"column":58}},"loc":{"start":{"line":711,"column":69},"end":{"line":714,"column":1}},"line":711},"44":{"name":"(anonymous_44)","decl":{"start":{"line":724,"column":56},"end":{"line":724,"column":57}},"loc":{"start":{"line":724,"column":68},"end":{"line":727,"column":1}},"line":724},"45":{"name":"(anonymous_45)","decl":{"start":{"line":731,"column":51},"end":{"line":731,"column":52}},"loc":{"start":{"line":731,"column":68},"end":{"line":733,"column":1}},"line":731},"46":{"name":"(anonymous_46)","decl":{"start":{"line":740,"column":56},"end":{"line":740,"column":57}},"loc":{"start":{"line":740,"column":68},"end":{"line":742,"column":1}},"line":740},"47":{"name":"(anonymous_47)","decl":{"start":{"line":750,"column":62},"end":{"line":750,"column":63}},"loc":{"start":{"line":750,"column":74},"end":{"line":753,"column":1}},"line":750},"48":{"name":"(anonymous_48)","decl":{"start":{"line":763,"column":61},"end":{"line":763,"column":62}},"loc":{"start":{"line":763,"column":73},"end":{"line":766,"column":1}},"line":763},"49":{"name":"(anonymous_49)","decl":{"start":{"line":770,"column":56},"end":{"line":770,"column":57}},"loc":{"start":{"line":770,"column":73},"end":{"line":772,"column":1}},"line":770},"50":{"name":"(anonymous_50)","decl":{"start":{"line":779,"column":48},"end":{"line":779,"column":49}},"loc":{"start":{"line":779,"column":60},"end":{"line":781,"column":1}},"line":779},"51":{"name":"(anonymous_51)","decl":{"start":{"line":785,"column":48},"end":{"line":785,"column":49}},"loc":{"start":{"line":785,"column":65},"end":{"line":787,"column":1}},"line":785},"52":{"name":"(anonymous_52)","decl":{"start":{"line":794,"column":46},"end":{"line":794,"column":47}},"loc":{"start":{"line":794,"column":58},"end":{"line":796,"column":1}},"line":794},"53":{"name":"(anonymous_53)","decl":{"start":{"line":804,"column":52},"end":{"line":804,"column":53}},"loc":{"start":{"line":804,"column":64},"end":{"line":807,"column":1}},"line":804},"54":{"name":"(anonymous_54)","decl":{"start":{"line":817,"column":51},"end":{"line":817,"column":52}},"loc":{"start":{"line":817,"column":63},"end":{"line":820,"column":1}},"line":817},"55":{"name":"(anonymous_55)","decl":{"start":{"line":824,"column":46},"end":{"line":824,"column":47}},"loc":{"start":{"line":824,"column":63},"end":{"line":826,"column":1}},"line":824},"56":{"name":"(anonymous_56)","decl":{"start":{"line":833,"column":55},"end":{"line":833,"column":56}},"loc":{"start":{"line":833,"column":67},"end":{"line":835,"column":1}},"line":833},"57":{"name":"(anonymous_57)","decl":{"start":{"line":843,"column":61},"end":{"line":843,"column":62}},"loc":{"start":{"line":843,"column":73},"end":{"line":846,"column":1}},"line":843},"58":{"name":"(anonymous_58)","decl":{"start":{"line":856,"column":60},"end":{"line":856,"column":61}},"loc":{"start":{"line":856,"column":72},"end":{"line":859,"column":1}},"line":856},"59":{"name":"(anonymous_59)","decl":{"start":{"line":863,"column":55},"end":{"line":863,"column":56}},"loc":{"start":{"line":863,"column":72},"end":{"line":865,"column":1}},"line":863},"60":{"name":"(anonymous_60)","decl":{"start":{"line":872,"column":44},"end":{"line":872,"column":45}},"loc":{"start":{"line":872,"column":56},"end":{"line":874,"column":1}},"line":872},"61":{"name":"(anonymous_61)","decl":{"start":{"line":882,"column":50},"end":{"line":882,"column":51}},"loc":{"start":{"line":882,"column":62},"end":{"line":885,"column":1}},"line":882},"62":{"name":"(anonymous_62)","decl":{"start":{"line":895,"column":49},"end":{"line":895,"column":50}},"loc":{"start":{"line":895,"column":61},"end":{"line":898,"column":1}},"line":895},"63":{"name":"(anonymous_63)","decl":{"start":{"line":902,"column":44},"end":{"line":902,"column":45}},"loc":{"start":{"line":902,"column":61},"end":{"line":904,"column":1}},"line":902},"64":{"name":"(anonymous_64)","decl":{"start":{"line":911,"column":49},"end":{"line":911,"column":50}},"loc":{"start":{"line":911,"column":61},"end":{"line":913,"column":1}},"line":911},"65":{"name":"(anonymous_65)","decl":{"start":{"line":921,"column":55},"end":{"line":921,"column":56}},"loc":{"start":{"line":921,"column":67},"end":{"line":924,"column":1}},"line":921},"66":{"name":"(anonymous_66)","decl":{"start":{"line":934,"column":54},"end":{"line":934,"column":55}},"loc":{"start":{"line":934,"column":66},"end":{"line":937,"column":1}},"line":934},"67":{"name":"(anonymous_67)","decl":{"start":{"line":941,"column":49},"end":{"line":941,"column":50}},"loc":{"start":{"line":941,"column":66},"end":{"line":943,"column":1}},"line":941},"68":{"name":"(anonymous_68)","decl":{"start":{"line":957,"column":24},"end":{"line":957,"column":25}},"loc":{"start":{"line":957,"column":44},"end":{"line":959,"column":1}},"line":957},"69":{"name":"(anonymous_69)","decl":{"start":{"line":984,"column":45},"end":{"line":984,"column":46}},"loc":{"start":{"line":984,"column":76},"end":{"line":986,"column":3}},"line":984},"70":{"name":"(anonymous_70)","decl":{"start":{"line":998,"column":35},"end":{"line":998,"column":36}},"loc":{"start":{"line":998,"column":67},"end":{"line":1008,"column":3}},"line":998},"71":{"name":"(anonymous_71)","decl":{"start":{"line":1017,"column":42},"end":{"line":1017,"column":43}},"loc":{"start":{"line":1017,"column":59},"end":{"line":1021,"column":1}},"line":1017},"72":{"name":"(anonymous_72)","decl":{"start":{"line":1031,"column":52},"end":{"line":1031,"column":53}},"loc":{"start":{"line":1031,"column":75},"end":{"line":1049,"column":1}},"line":1031},"73":{"name":"(anonymous_73)","decl":{"start":{"line":1056,"column":50},"end":{"line":1056,"column":51}},"loc":{"start":{"line":1056,"column":62},"end":{"line":1060,"column":1}},"line":1056},"74":{"name":"(anonymous_74)","decl":{"start":{"line":1070,"column":48},"end":{"line":1070,"column":49}},"loc":{"start":{"line":1070,"column":75},"end":{"line":1080,"column":1}},"line":1070},"75":{"name":"(anonymous_75)","decl":{"start":{"line":1087,"column":45},"end":{"line":1087,"column":46}},"loc":{"start":{"line":1087,"column":57},"end":{"line":1090,"column":1}},"line":1087},"76":{"name":"(anonymous_76)","decl":{"start":{"line":1094,"column":45},"end":{"line":1094,"column":46}},"loc":{"start":{"line":1094,"column":62},"end":{"line":1096,"column":1}},"line":1094},"77":{"name":"(anonymous_77)","decl":{"start":{"line":1104,"column":41},"end":{"line":1104,"column":42}},"loc":{"start":{"line":1104,"column":73},"end":{"line":1106,"column":1}},"line":1104},"78":{"name":"(anonymous_78)","decl":{"start":{"line":1109,"column":47},"end":{"line":1109,"column":48}},"loc":{"start":{"line":1109,"column":59},"end":{"line":1111,"column":1}},"line":1109},"79":{"name":"(anonymous_79)","decl":{"start":{"line":1125,"column":21},"end":{"line":1125,"column":22}},"loc":{"start":{"line":1125,"column":41},"end":{"line":1127,"column":1}},"line":1125},"80":{"name":"(anonymous_80)","decl":{"start":{"line":1152,"column":42},"end":{"line":1152,"column":43}},"loc":{"start":{"line":1152,"column":73},"end":{"line":1154,"column":3}},"line":1152},"81":{"name":"(anonymous_81)","decl":{"start":{"line":1166,"column":32},"end":{"line":1166,"column":33}},"loc":{"start":{"line":1166,"column":64},"end":{"line":1176,"column":3}},"line":1166},"82":{"name":"(anonymous_82)","decl":{"start":{"line":1185,"column":39},"end":{"line":1185,"column":40}},"loc":{"start":{"line":1185,"column":56},"end":{"line":1189,"column":1}},"line":1185},"83":{"name":"(anonymous_83)","decl":{"start":{"line":1199,"column":49},"end":{"line":1199,"column":50}},"loc":{"start":{"line":1199,"column":72},"end":{"line":1217,"column":1}},"line":1199},"84":{"name":"(anonymous_84)","decl":{"start":{"line":1224,"column":47},"end":{"line":1224,"column":48}},"loc":{"start":{"line":1224,"column":59},"end":{"line":1228,"column":1}},"line":1224},"85":{"name":"(anonymous_85)","decl":{"start":{"line":1238,"column":45},"end":{"line":1238,"column":46}},"loc":{"start":{"line":1238,"column":72},"end":{"line":1248,"column":1}},"line":1238},"86":{"name":"(anonymous_86)","decl":{"start":{"line":1255,"column":42},"end":{"line":1255,"column":43}},"loc":{"start":{"line":1255,"column":54},"end":{"line":1258,"column":1}},"line":1255},"87":{"name":"(anonymous_87)","decl":{"start":{"line":1262,"column":42},"end":{"line":1262,"column":43}},"loc":{"start":{"line":1262,"column":59},"end":{"line":1264,"column":1}},"line":1262},"88":{"name":"(anonymous_88)","decl":{"start":{"line":1272,"column":38},"end":{"line":1272,"column":39}},"loc":{"start":{"line":1272,"column":70},"end":{"line":1274,"column":1}},"line":1272},"89":{"name":"(anonymous_89)","decl":{"start":{"line":1277,"column":44},"end":{"line":1277,"column":45}},"loc":{"start":{"line":1277,"column":56},"end":{"line":1279,"column":1}},"line":1277},"90":{"name":"(anonymous_90)","decl":{"start":{"line":1293,"column":17},"end":{"line":1293,"column":18}},"loc":{"start":{"line":1293,"column":37},"end":{"line":1295,"column":1}},"line":1293},"91":{"name":"(anonymous_91)","decl":{"start":{"line":1313,"column":38},"end":{"line":1313,"column":39}},"loc":{"start":{"line":1313,"column":69},"end":{"line":1315,"column":3}},"line":1313},"92":{"name":"(anonymous_92)","decl":{"start":{"line":1327,"column":28},"end":{"line":1327,"column":29}},"loc":{"start":{"line":1327,"column":60},"end":{"line":1337,"column":3}},"line":1327},"93":{"name":"(anonymous_93)","decl":{"start":{"line":1346,"column":35},"end":{"line":1346,"column":36}},"loc":{"start":{"line":1346,"column":52},"end":{"line":1350,"column":1}},"line":1346},"94":{"name":"(anonymous_94)","decl":{"start":{"line":1360,"column":45},"end":{"line":1360,"column":46}},"loc":{"start":{"line":1360,"column":68},"end":{"line":1382,"column":1}},"line":1360},"95":{"name":"(anonymous_95)","decl":{"start":{"line":1389,"column":43},"end":{"line":1389,"column":44}},"loc":{"start":{"line":1389,"column":55},"end":{"line":1393,"column":1}},"line":1389},"96":{"name":"(anonymous_96)","decl":{"start":{"line":1403,"column":41},"end":{"line":1403,"column":42}},"loc":{"start":{"line":1403,"column":68},"end":{"line":1420,"column":1}},"line":1403},"97":{"name":"(anonymous_97)","decl":{"start":{"line":1427,"column":35},"end":{"line":1427,"column":36}},"loc":{"start":{"line":1427,"column":47},"end":{"line":1429,"column":1}},"line":1427},"98":{"name":"(anonymous_98)","decl":{"start":{"line":1437,"column":41},"end":{"line":1437,"column":42}},"loc":{"start":{"line":1437,"column":53},"end":{"line":1440,"column":1}},"line":1437},"99":{"name":"(anonymous_99)","decl":{"start":{"line":1450,"column":40},"end":{"line":1450,"column":41}},"loc":{"start":{"line":1450,"column":52},"end":{"line":1453,"column":1}},"line":1450},"100":{"name":"(anonymous_100)","decl":{"start":{"line":1457,"column":35},"end":{"line":1457,"column":36}},"loc":{"start":{"line":1457,"column":52},"end":{"line":1459,"column":1}},"line":1457},"101":{"name":"(anonymous_101)","decl":{"start":{"line":1466,"column":35},"end":{"line":1466,"column":36}},"loc":{"start":{"line":1466,"column":47},"end":{"line":1469,"column":1}},"line":1466},"102":{"name":"(anonymous_102)","decl":{"start":{"line":1473,"column":35},"end":{"line":1473,"column":36}},"loc":{"start":{"line":1473,"column":52},"end":{"line":1475,"column":1}},"line":1473},"103":{"name":"(anonymous_103)","decl":{"start":{"line":1478,"column":37},"end":{"line":1478,"column":38}},"loc":{"start":{"line":1478,"column":49},"end":{"line":1480,"column":1}},"line":1478},"104":{"name":"(anonymous_104)","decl":{"start":{"line":1487,"column":35},"end":{"line":1487,"column":36}},"loc":{"start":{"line":1487,"column":47},"end":{"line":1489,"column":1}},"line":1487},"105":{"name":"(anonymous_105)","decl":{"start":{"line":1503,"column":21},"end":{"line":1503,"column":22}},"loc":{"start":{"line":1503,"column":41},"end":{"line":1505,"column":1}},"line":1503},"106":{"name":"(anonymous_106)","decl":{"start":{"line":1523,"column":42},"end":{"line":1523,"column":43}},"loc":{"start":{"line":1523,"column":73},"end":{"line":1525,"column":3}},"line":1523},"107":{"name":"(anonymous_107)","decl":{"start":{"line":1537,"column":32},"end":{"line":1537,"column":33}},"loc":{"start":{"line":1537,"column":64},"end":{"line":1555,"column":3}},"line":1537},"108":{"name":"(anonymous_108)","decl":{"start":{"line":1564,"column":39},"end":{"line":1564,"column":40}},"loc":{"start":{"line":1564,"column":56},"end":{"line":1568,"column":1}},"line":1564},"109":{"name":"(anonymous_109)","decl":{"start":{"line":1578,"column":49},"end":{"line":1578,"column":50}},"loc":{"start":{"line":1578,"column":72},"end":{"line":1631,"column":1}},"line":1578},"110":{"name":"(anonymous_110)","decl":{"start":{"line":1638,"column":47},"end":{"line":1638,"column":48}},"loc":{"start":{"line":1638,"column":59},"end":{"line":1642,"column":1}},"line":1638},"111":{"name":"(anonymous_111)","decl":{"start":{"line":1652,"column":45},"end":{"line":1652,"column":46}},"loc":{"start":{"line":1652,"column":72},"end":{"line":1724,"column":1}},"line":1652},"112":{"name":"(anonymous_112)","decl":{"start":{"line":1731,"column":40},"end":{"line":1731,"column":41}},"loc":{"start":{"line":1731,"column":52},"end":{"line":1733,"column":1}},"line":1731},"113":{"name":"(anonymous_113)","decl":{"start":{"line":1737,"column":40},"end":{"line":1737,"column":41}},"loc":{"start":{"line":1737,"column":57},"end":{"line":1739,"column":1}},"line":1737},"114":{"name":"(anonymous_114)","decl":{"start":{"line":1746,"column":42},"end":{"line":1746,"column":43}},"loc":{"start":{"line":1746,"column":54},"end":{"line":1748,"column":1}},"line":1746},"115":{"name":"(anonymous_115)","decl":{"start":{"line":1756,"column":48},"end":{"line":1756,"column":49}},"loc":{"start":{"line":1756,"column":60},"end":{"line":1759,"column":1}},"line":1756},"116":{"name":"(anonymous_116)","decl":{"start":{"line":1769,"column":47},"end":{"line":1769,"column":48}},"loc":{"start":{"line":1769,"column":59},"end":{"line":1772,"column":1}},"line":1769},"117":{"name":"(anonymous_117)","decl":{"start":{"line":1776,"column":42},"end":{"line":1776,"column":43}},"loc":{"start":{"line":1776,"column":59},"end":{"line":1778,"column":1}},"line":1776},"118":{"name":"(anonymous_118)","decl":{"start":{"line":1785,"column":44},"end":{"line":1785,"column":45}},"loc":{"start":{"line":1785,"column":56},"end":{"line":1787,"column":1}},"line":1785},"119":{"name":"(anonymous_119)","decl":{"start":{"line":1795,"column":50},"end":{"line":1795,"column":51}},"loc":{"start":{"line":1795,"column":62},"end":{"line":1798,"column":1}},"line":1795},"120":{"name":"(anonymous_120)","decl":{"start":{"line":1808,"column":49},"end":{"line":1808,"column":50}},"loc":{"start":{"line":1808,"column":61},"end":{"line":1811,"column":1}},"line":1808},"121":{"name":"(anonymous_121)","decl":{"start":{"line":1815,"column":44},"end":{"line":1815,"column":45}},"loc":{"start":{"line":1815,"column":61},"end":{"line":1817,"column":1}},"line":1815},"122":{"name":"(anonymous_122)","decl":{"start":{"line":1824,"column":41},"end":{"line":1824,"column":42}},"loc":{"start":{"line":1824,"column":53},"end":{"line":1826,"column":1}},"line":1824},"123":{"name":"(anonymous_123)","decl":{"start":{"line":1834,"column":47},"end":{"line":1834,"column":48}},"loc":{"start":{"line":1834,"column":59},"end":{"line":1837,"column":1}},"line":1834},"124":{"name":"(anonymous_124)","decl":{"start":{"line":1847,"column":46},"end":{"line":1847,"column":47}},"loc":{"start":{"line":1847,"column":58},"end":{"line":1850,"column":1}},"line":1847},"125":{"name":"(anonymous_125)","decl":{"start":{"line":1854,"column":41},"end":{"line":1854,"column":42}},"loc":{"start":{"line":1854,"column":58},"end":{"line":1856,"column":1}},"line":1854},"126":{"name":"(anonymous_126)","decl":{"start":{"line":1863,"column":42},"end":{"line":1863,"column":43}},"loc":{"start":{"line":1863,"column":54},"end":{"line":1865,"column":1}},"line":1863},"127":{"name":"(anonymous_127)","decl":{"start":{"line":1873,"column":48},"end":{"line":1873,"column":49}},"loc":{"start":{"line":1873,"column":60},"end":{"line":1876,"column":1}},"line":1873},"128":{"name":"(anonymous_128)","decl":{"start":{"line":1886,"column":47},"end":{"line":1886,"column":48}},"loc":{"start":{"line":1886,"column":59},"end":{"line":1889,"column":1}},"line":1886},"129":{"name":"(anonymous_129)","decl":{"start":{"line":1893,"column":42},"end":{"line":1893,"column":43}},"loc":{"start":{"line":1893,"column":59},"end":{"line":1895,"column":1}},"line":1893},"130":{"name":"(anonymous_130)","decl":{"start":{"line":1902,"column":43},"end":{"line":1902,"column":44}},"loc":{"start":{"line":1902,"column":55},"end":{"line":1904,"column":1}},"line":1902},"131":{"name":"(anonymous_131)","decl":{"start":{"line":1908,"column":43},"end":{"line":1908,"column":44}},"loc":{"start":{"line":1908,"column":60},"end":{"line":1910,"column":1}},"line":1908},"132":{"name":"(anonymous_132)","decl":{"start":{"line":1917,"column":43},"end":{"line":1917,"column":44}},"loc":{"start":{"line":1917,"column":55},"end":{"line":1919,"column":1}},"line":1917},"133":{"name":"(anonymous_133)","decl":{"start":{"line":1927,"column":49},"end":{"line":1927,"column":50}},"loc":{"start":{"line":1927,"column":61},"end":{"line":1930,"column":1}},"line":1927},"134":{"name":"(anonymous_134)","decl":{"start":{"line":1940,"column":48},"end":{"line":1940,"column":49}},"loc":{"start":{"line":1940,"column":60},"end":{"line":1943,"column":1}},"line":1940},"135":{"name":"(anonymous_135)","decl":{"start":{"line":1947,"column":43},"end":{"line":1947,"column":44}},"loc":{"start":{"line":1947,"column":60},"end":{"line":1949,"column":1}},"line":1947},"136":{"name":"(anonymous_136)","decl":{"start":{"line":1956,"column":39},"end":{"line":1956,"column":40}},"loc":{"start":{"line":1956,"column":51},"end":{"line":1958,"column":1}},"line":1956},"137":{"name":"(anonymous_137)","decl":{"start":{"line":1962,"column":39},"end":{"line":1962,"column":40}},"loc":{"start":{"line":1962,"column":56},"end":{"line":1964,"column":1}},"line":1962},"138":{"name":"(anonymous_138)","decl":{"start":{"line":1971,"column":46},"end":{"line":1971,"column":47}},"loc":{"start":{"line":1971,"column":58},"end":{"line":1973,"column":1}},"line":1971},"139":{"name":"(anonymous_139)","decl":{"start":{"line":1981,"column":52},"end":{"line":1981,"column":53}},"loc":{"start":{"line":1981,"column":64},"end":{"line":1984,"column":1}},"line":1981},"140":{"name":"(anonymous_140)","decl":{"start":{"line":1994,"column":51},"end":{"line":1994,"column":52}},"loc":{"start":{"line":1994,"column":63},"end":{"line":1997,"column":1}},"line":1994},"141":{"name":"(anonymous_141)","decl":{"start":{"line":2001,"column":46},"end":{"line":2001,"column":47}},"loc":{"start":{"line":2001,"column":63},"end":{"line":2003,"column":1}},"line":2001},"142":{"name":"(anonymous_142)","decl":{"start":{"line":2010,"column":39},"end":{"line":2010,"column":40}},"loc":{"start":{"line":2010,"column":51},"end":{"line":2012,"column":1}},"line":2010},"143":{"name":"(anonymous_143)","decl":{"start":{"line":2020,"column":45},"end":{"line":2020,"column":46}},"loc":{"start":{"line":2020,"column":57},"end":{"line":2023,"column":1}},"line":2020},"144":{"name":"(anonymous_144)","decl":{"start":{"line":2033,"column":44},"end":{"line":2033,"column":45}},"loc":{"start":{"line":2033,"column":56},"end":{"line":2036,"column":1}},"line":2033},"145":{"name":"(anonymous_145)","decl":{"start":{"line":2040,"column":39},"end":{"line":2040,"column":40}},"loc":{"start":{"line":2040,"column":56},"end":{"line":2042,"column":1}},"line":2040},"146":{"name":"(anonymous_146)","decl":{"start":{"line":2056,"column":20},"end":{"line":2056,"column":21}},"loc":{"start":{"line":2056,"column":40},"end":{"line":2058,"column":1}},"line":2056},"147":{"name":"(anonymous_147)","decl":{"start":{"line":2076,"column":41},"end":{"line":2076,"column":42}},"loc":{"start":{"line":2076,"column":72},"end":{"line":2078,"column":3}},"line":2076},"148":{"name":"(anonymous_148)","decl":{"start":{"line":2090,"column":31},"end":{"line":2090,"column":32}},"loc":{"start":{"line":2090,"column":63},"end":{"line":2100,"column":3}},"line":2090},"149":{"name":"(anonymous_149)","decl":{"start":{"line":2109,"column":38},"end":{"line":2109,"column":39}},"loc":{"start":{"line":2109,"column":55},"end":{"line":2113,"column":1}},"line":2109},"150":{"name":"(anonymous_150)","decl":{"start":{"line":2123,"column":48},"end":{"line":2123,"column":49}},"loc":{"start":{"line":2123,"column":71},"end":{"line":2144,"column":1}},"line":2123},"151":{"name":"(anonymous_151)","decl":{"start":{"line":2151,"column":46},"end":{"line":2151,"column":47}},"loc":{"start":{"line":2151,"column":58},"end":{"line":2155,"column":1}},"line":2151},"152":{"name":"(anonymous_152)","decl":{"start":{"line":2165,"column":44},"end":{"line":2165,"column":45}},"loc":{"start":{"line":2165,"column":71},"end":{"line":2181,"column":1}},"line":2165},"153":{"name":"(anonymous_153)","decl":{"start":{"line":2188,"column":43},"end":{"line":2188,"column":44}},"loc":{"start":{"line":2188,"column":55},"end":{"line":2190,"column":1}},"line":2188},"154":{"name":"(anonymous_154)","decl":{"start":{"line":2198,"column":49},"end":{"line":2198,"column":50}},"loc":{"start":{"line":2198,"column":61},"end":{"line":2201,"column":1}},"line":2198},"155":{"name":"(anonymous_155)","decl":{"start":{"line":2211,"column":48},"end":{"line":2211,"column":49}},"loc":{"start":{"line":2211,"column":60},"end":{"line":2214,"column":1}},"line":2211},"156":{"name":"(anonymous_156)","decl":{"start":{"line":2218,"column":43},"end":{"line":2218,"column":44}},"loc":{"start":{"line":2218,"column":60},"end":{"line":2220,"column":1}},"line":2218},"157":{"name":"(anonymous_157)","decl":{"start":{"line":2227,"column":37},"end":{"line":2227,"column":38}},"loc":{"start":{"line":2227,"column":49},"end":{"line":2229,"column":1}},"line":2227},"158":{"name":"(anonymous_158)","decl":{"start":{"line":2233,"column":37},"end":{"line":2233,"column":38}},"loc":{"start":{"line":2233,"column":54},"end":{"line":2235,"column":1}},"line":2233},"159":{"name":"(anonymous_159)","decl":{"start":{"line":2249,"column":24},"end":{"line":2249,"column":25}},"loc":{"start":{"line":2249,"column":44},"end":{"line":2251,"column":1}},"line":2249},"160":{"name":"(anonymous_160)","decl":{"start":{"line":2269,"column":45},"end":{"line":2269,"column":46}},"loc":{"start":{"line":2269,"column":76},"end":{"line":2271,"column":3}},"line":2269},"161":{"name":"(anonymous_161)","decl":{"start":{"line":2283,"column":35},"end":{"line":2283,"column":36}},"loc":{"start":{"line":2283,"column":67},"end":{"line":2293,"column":3}},"line":2283},"162":{"name":"(anonymous_162)","decl":{"start":{"line":2302,"column":42},"end":{"line":2302,"column":43}},"loc":{"start":{"line":2302,"column":59},"end":{"line":2306,"column":1}},"line":2302},"163":{"name":"(anonymous_163)","decl":{"start":{"line":2316,"column":52},"end":{"line":2316,"column":53}},"loc":{"start":{"line":2316,"column":75},"end":{"line":2339,"column":1}},"line":2316},"164":{"name":"(anonymous_164)","decl":{"start":{"line":2346,"column":50},"end":{"line":2346,"column":51}},"loc":{"start":{"line":2346,"column":62},"end":{"line":2350,"column":1}},"line":2346},"165":{"name":"(anonymous_165)","decl":{"start":{"line":2360,"column":48},"end":{"line":2360,"column":49}},"loc":{"start":{"line":2360,"column":75},"end":{"line":2378,"column":1}},"line":2360},"166":{"name":"(anonymous_166)","decl":{"start":{"line":2385,"column":43},"end":{"line":2385,"column":44}},"loc":{"start":{"line":2385,"column":55},"end":{"line":2388,"column":1}},"line":2385},"167":{"name":"(anonymous_167)","decl":{"start":{"line":2392,"column":43},"end":{"line":2392,"column":44}},"loc":{"start":{"line":2392,"column":60},"end":{"line":2394,"column":1}},"line":2392},"168":{"name":"(anonymous_168)","decl":{"start":{"line":2397,"column":45},"end":{"line":2397,"column":46}},"loc":{"start":{"line":2397,"column":57},"end":{"line":2399,"column":1}},"line":2397},"169":{"name":"(anonymous_169)","decl":{"start":{"line":2406,"column":43},"end":{"line":2406,"column":44}},"loc":{"start":{"line":2406,"column":55},"end":{"line":2408,"column":1}},"line":2406},"170":{"name":"(anonymous_170)","decl":{"start":{"line":2415,"column":40},"end":{"line":2415,"column":41}},"loc":{"start":{"line":2415,"column":52},"end":{"line":2418,"column":1}},"line":2415},"171":{"name":"(anonymous_171)","decl":{"start":{"line":2422,"column":40},"end":{"line":2422,"column":41}},"loc":{"start":{"line":2422,"column":57},"end":{"line":2424,"column":1}},"line":2422},"172":{"name":"(anonymous_172)","decl":{"start":{"line":2427,"column":42},"end":{"line":2427,"column":43}},"loc":{"start":{"line":2427,"column":54},"end":{"line":2429,"column":1}},"line":2427},"173":{"name":"(anonymous_173)","decl":{"start":{"line":2436,"column":40},"end":{"line":2436,"column":41}},"loc":{"start":{"line":2436,"column":52},"end":{"line":2438,"column":1}},"line":2436},"174":{"name":"(anonymous_174)","decl":{"start":{"line":2452,"column":20},"end":{"line":2452,"column":21}},"loc":{"start":{"line":2452,"column":40},"end":{"line":2454,"column":1}},"line":2452},"175":{"name":"(anonymous_175)","decl":{"start":{"line":2472,"column":41},"end":{"line":2472,"column":42}},"loc":{"start":{"line":2472,"column":72},"end":{"line":2474,"column":3}},"line":2472},"176":{"name":"(anonymous_176)","decl":{"start":{"line":2486,"column":31},"end":{"line":2486,"column":32}},"loc":{"start":{"line":2486,"column":63},"end":{"line":2499,"column":3}},"line":2486},"177":{"name":"(anonymous_177)","decl":{"start":{"line":2508,"column":38},"end":{"line":2508,"column":39}},"loc":{"start":{"line":2508,"column":55},"end":{"line":2512,"column":1}},"line":2508},"178":{"name":"(anonymous_178)","decl":{"start":{"line":2522,"column":48},"end":{"line":2522,"column":49}},"loc":{"start":{"line":2522,"column":71},"end":{"line":2555,"column":1}},"line":2522},"179":{"name":"(anonymous_179)","decl":{"start":{"line":2562,"column":46},"end":{"line":2562,"column":47}},"loc":{"start":{"line":2562,"column":58},"end":{"line":2566,"column":1}},"line":2562},"180":{"name":"(anonymous_180)","decl":{"start":{"line":2576,"column":44},"end":{"line":2576,"column":45}},"loc":{"start":{"line":2576,"column":71},"end":{"line":2613,"column":1}},"line":2576},"181":{"name":"(anonymous_181)","decl":{"start":{"line":2620,"column":39},"end":{"line":2620,"column":40}},"loc":{"start":{"line":2620,"column":51},"end":{"line":2622,"column":1}},"line":2620},"182":{"name":"(anonymous_182)","decl":{"start":{"line":2626,"column":39},"end":{"line":2626,"column":40}},"loc":{"start":{"line":2626,"column":56},"end":{"line":2628,"column":1}},"line":2626},"183":{"name":"(anonymous_183)","decl":{"start":{"line":2635,"column":41},"end":{"line":2635,"column":42}},"loc":{"start":{"line":2635,"column":53},"end":{"line":2637,"column":1}},"line":2635},"184":{"name":"(anonymous_184)","decl":{"start":{"line":2645,"column":47},"end":{"line":2645,"column":48}},"loc":{"start":{"line":2645,"column":59},"end":{"line":2648,"column":1}},"line":2645},"185":{"name":"(anonymous_185)","decl":{"start":{"line":2658,"column":46},"end":{"line":2658,"column":47}},"loc":{"start":{"line":2658,"column":58},"end":{"line":2661,"column":1}},"line":2658},"186":{"name":"(anonymous_186)","decl":{"start":{"line":2665,"column":41},"end":{"line":2665,"column":42}},"loc":{"start":{"line":2665,"column":58},"end":{"line":2667,"column":1}},"line":2665},"187":{"name":"(anonymous_187)","decl":{"start":{"line":2674,"column":42},"end":{"line":2674,"column":43}},"loc":{"start":{"line":2674,"column":54},"end":{"line":2676,"column":1}},"line":2674},"188":{"name":"(anonymous_188)","decl":{"start":{"line":2684,"column":48},"end":{"line":2684,"column":49}},"loc":{"start":{"line":2684,"column":60},"end":{"line":2687,"column":1}},"line":2684},"189":{"name":"(anonymous_189)","decl":{"start":{"line":2697,"column":47},"end":{"line":2697,"column":48}},"loc":{"start":{"line":2697,"column":59},"end":{"line":2700,"column":1}},"line":2697},"190":{"name":"(anonymous_190)","decl":{"start":{"line":2704,"column":42},"end":{"line":2704,"column":43}},"loc":{"start":{"line":2704,"column":59},"end":{"line":2706,"column":1}},"line":2704},"191":{"name":"(anonymous_191)","decl":{"start":{"line":2713,"column":45},"end":{"line":2713,"column":46}},"loc":{"start":{"line":2713,"column":57},"end":{"line":2715,"column":1}},"line":2713},"192":{"name":"(anonymous_192)","decl":{"start":{"line":2723,"column":51},"end":{"line":2723,"column":52}},"loc":{"start":{"line":2723,"column":63},"end":{"line":2726,"column":1}},"line":2723},"193":{"name":"(anonymous_193)","decl":{"start":{"line":2736,"column":50},"end":{"line":2736,"column":51}},"loc":{"start":{"line":2736,"column":62},"end":{"line":2739,"column":1}},"line":2736},"194":{"name":"(anonymous_194)","decl":{"start":{"line":2743,"column":45},"end":{"line":2743,"column":46}},"loc":{"start":{"line":2743,"column":62},"end":{"line":2745,"column":1}},"line":2743},"195":{"name":"(anonymous_195)","decl":{"start":{"line":2752,"column":50},"end":{"line":2752,"column":51}},"loc":{"start":{"line":2752,"column":62},"end":{"line":2754,"column":1}},"line":2752},"196":{"name":"(anonymous_196)","decl":{"start":{"line":2758,"column":50},"end":{"line":2758,"column":51}},"loc":{"start":{"line":2758,"column":67},"end":{"line":2760,"column":1}},"line":2758},"197":{"name":"(anonymous_197)","decl":{"start":{"line":2774,"column":27},"end":{"line":2774,"column":28}},"loc":{"start":{"line":2774,"column":47},"end":{"line":2776,"column":1}},"line":2774},"198":{"name":"(anonymous_198)","decl":{"start":{"line":2801,"column":48},"end":{"line":2801,"column":49}},"loc":{"start":{"line":2801,"column":79},"end":{"line":2803,"column":3}},"line":2801},"199":{"name":"(anonymous_199)","decl":{"start":{"line":2815,"column":38},"end":{"line":2815,"column":39}},"loc":{"start":{"line":2815,"column":70},"end":{"line":2831,"column":3}},"line":2815},"200":{"name":"(anonymous_200)","decl":{"start":{"line":2840,"column":45},"end":{"line":2840,"column":46}},"loc":{"start":{"line":2840,"column":62},"end":{"line":2844,"column":1}},"line":2840},"201":{"name":"(anonymous_201)","decl":{"start":{"line":2854,"column":55},"end":{"line":2854,"column":56}},"loc":{"start":{"line":2854,"column":78},"end":{"line":2900,"column":1}},"line":2854},"202":{"name":"(anonymous_202)","decl":{"start":{"line":2907,"column":53},"end":{"line":2907,"column":54}},"loc":{"start":{"line":2907,"column":65},"end":{"line":2911,"column":1}},"line":2907},"203":{"name":"(anonymous_203)","decl":{"start":{"line":2921,"column":51},"end":{"line":2921,"column":52}},"loc":{"start":{"line":2921,"column":78},"end":{"line":2980,"column":1}},"line":2921},"204":{"name":"(anonymous_204)","decl":{"start":{"line":2987,"column":46},"end":{"line":2987,"column":47}},"loc":{"start":{"line":2987,"column":58},"end":{"line":2990,"column":1}},"line":2987},"205":{"name":"(anonymous_205)","decl":{"start":{"line":2994,"column":46},"end":{"line":2994,"column":47}},"loc":{"start":{"line":2994,"column":63},"end":{"line":2996,"column":1}},"line":2994},"206":{"name":"(anonymous_206)","decl":{"start":{"line":2999,"column":48},"end":{"line":2999,"column":49}},"loc":{"start":{"line":2999,"column":60},"end":{"line":3001,"column":1}},"line":2999},"207":{"name":"(anonymous_207)","decl":{"start":{"line":3008,"column":46},"end":{"line":3008,"column":47}},"loc":{"start":{"line":3008,"column":58},"end":{"line":3010,"column":1}},"line":3008},"208":{"name":"(anonymous_208)","decl":{"start":{"line":3019,"column":50},"end":{"line":3019,"column":51}},"loc":{"start":{"line":3019,"column":62},"end":{"line":3021,"column":1}},"line":3019},"209":{"name":"(anonymous_209)","decl":{"start":{"line":3025,"column":50},"end":{"line":3025,"column":51}},"loc":{"start":{"line":3025,"column":67},"end":{"line":3027,"column":1}},"line":3025},"210":{"name":"(anonymous_210)","decl":{"start":{"line":3034,"column":44},"end":{"line":3034,"column":45}},"loc":{"start":{"line":3034,"column":56},"end":{"line":3036,"column":1}},"line":3034},"211":{"name":"(anonymous_211)","decl":{"start":{"line":3044,"column":50},"end":{"line":3044,"column":51}},"loc":{"start":{"line":3044,"column":62},"end":{"line":3047,"column":1}},"line":3044},"212":{"name":"(anonymous_212)","decl":{"start":{"line":3057,"column":49},"end":{"line":3057,"column":50}},"loc":{"start":{"line":3057,"column":61},"end":{"line":3060,"column":1}},"line":3057},"213":{"name":"(anonymous_213)","decl":{"start":{"line":3064,"column":44},"end":{"line":3064,"column":45}},"loc":{"start":{"line":3064,"column":61},"end":{"line":3066,"column":1}},"line":3064},"214":{"name":"(anonymous_214)","decl":{"start":{"line":3073,"column":49},"end":{"line":3073,"column":50}},"loc":{"start":{"line":3073,"column":61},"end":{"line":3075,"column":1}},"line":3073},"215":{"name":"(anonymous_215)","decl":{"start":{"line":3083,"column":55},"end":{"line":3083,"column":56}},"loc":{"start":{"line":3083,"column":67},"end":{"line":3086,"column":1}},"line":3083},"216":{"name":"(anonymous_216)","decl":{"start":{"line":3096,"column":54},"end":{"line":3096,"column":55}},"loc":{"start":{"line":3096,"column":66},"end":{"line":3099,"column":1}},"line":3096},"217":{"name":"(anonymous_217)","decl":{"start":{"line":3103,"column":49},"end":{"line":3103,"column":50}},"loc":{"start":{"line":3103,"column":66},"end":{"line":3105,"column":1}},"line":3103},"218":{"name":"(anonymous_218)","decl":{"start":{"line":3112,"column":49},"end":{"line":3112,"column":50}},"loc":{"start":{"line":3112,"column":61},"end":{"line":3114,"column":1}},"line":3112},"219":{"name":"(anonymous_219)","decl":{"start":{"line":3122,"column":55},"end":{"line":3122,"column":56}},"loc":{"start":{"line":3122,"column":67},"end":{"line":3125,"column":1}},"line":3122},"220":{"name":"(anonymous_220)","decl":{"start":{"line":3135,"column":54},"end":{"line":3135,"column":55}},"loc":{"start":{"line":3135,"column":66},"end":{"line":3138,"column":1}},"line":3135},"221":{"name":"(anonymous_221)","decl":{"start":{"line":3142,"column":49},"end":{"line":3142,"column":50}},"loc":{"start":{"line":3142,"column":66},"end":{"line":3144,"column":1}},"line":3142},"222":{"name":"(anonymous_222)","decl":{"start":{"line":3151,"column":47},"end":{"line":3151,"column":48}},"loc":{"start":{"line":3151,"column":59},"end":{"line":3153,"column":1}},"line":3151},"223":{"name":"(anonymous_223)","decl":{"start":{"line":3161,"column":53},"end":{"line":3161,"column":54}},"loc":{"start":{"line":3161,"column":65},"end":{"line":3164,"column":1}},"line":3161},"224":{"name":"(anonymous_224)","decl":{"start":{"line":3174,"column":52},"end":{"line":3174,"column":53}},"loc":{"start":{"line":3174,"column":64},"end":{"line":3177,"column":1}},"line":3174},"225":{"name":"(anonymous_225)","decl":{"start":{"line":3181,"column":47},"end":{"line":3181,"column":48}},"loc":{"start":{"line":3181,"column":64},"end":{"line":3183,"column":1}},"line":3181},"226":{"name":"(anonymous_226)","decl":{"start":{"line":3190,"column":47},"end":{"line":3190,"column":48}},"loc":{"start":{"line":3190,"column":59},"end":{"line":3192,"column":1}},"line":3190},"227":{"name":"(anonymous_227)","decl":{"start":{"line":3196,"column":47},"end":{"line":3196,"column":48}},"loc":{"start":{"line":3196,"column":64},"end":{"line":3198,"column":1}},"line":3196},"228":{"name":"(anonymous_228)","decl":{"start":{"line":3205,"column":54},"end":{"line":3205,"column":55}},"loc":{"start":{"line":3205,"column":66},"end":{"line":3207,"column":1}},"line":3205},"229":{"name":"(anonymous_229)","decl":{"start":{"line":3215,"column":60},"end":{"line":3215,"column":61}},"loc":{"start":{"line":3215,"column":72},"end":{"line":3218,"column":1}},"line":3215},"230":{"name":"(anonymous_230)","decl":{"start":{"line":3228,"column":59},"end":{"line":3228,"column":60}},"loc":{"start":{"line":3228,"column":71},"end":{"line":3231,"column":1}},"line":3228},"231":{"name":"(anonymous_231)","decl":{"start":{"line":3235,"column":54},"end":{"line":3235,"column":55}},"loc":{"start":{"line":3235,"column":71},"end":{"line":3237,"column":1}},"line":3235},"232":{"name":"(anonymous_232)","decl":{"start":{"line":3244,"column":50},"end":{"line":3244,"column":51}},"loc":{"start":{"line":3244,"column":78},"end":{"line":3246,"column":1}},"line":3244},"233":{"name":"(anonymous_233)","decl":{"start":{"line":3249,"column":56},"end":{"line":3249,"column":57}},"loc":{"start":{"line":3249,"column":68},"end":{"line":3251,"column":1}},"line":3249},"234":{"name":"(anonymous_234)","decl":{"start":{"line":3265,"column":31},"end":{"line":3265,"column":32}},"loc":{"start":{"line":3265,"column":51},"end":{"line":3267,"column":1}},"line":3265},"235":{"name":"(anonymous_235)","decl":{"start":{"line":3292,"column":52},"end":{"line":3292,"column":53}},"loc":{"start":{"line":3292,"column":83},"end":{"line":3294,"column":3}},"line":3292},"236":{"name":"(anonymous_236)","decl":{"start":{"line":3306,"column":42},"end":{"line":3306,"column":43}},"loc":{"start":{"line":3306,"column":74},"end":{"line":3322,"column":3}},"line":3306},"237":{"name":"(anonymous_237)","decl":{"start":{"line":3331,"column":49},"end":{"line":3331,"column":50}},"loc":{"start":{"line":3331,"column":66},"end":{"line":3335,"column":1}},"line":3331},"238":{"name":"(anonymous_238)","decl":{"start":{"line":3345,"column":59},"end":{"line":3345,"column":60}},"loc":{"start":{"line":3345,"column":82},"end":{"line":3390,"column":1}},"line":3345},"239":{"name":"(anonymous_239)","decl":{"start":{"line":3397,"column":57},"end":{"line":3397,"column":58}},"loc":{"start":{"line":3397,"column":69},"end":{"line":3401,"column":1}},"line":3397},"240":{"name":"(anonymous_240)","decl":{"start":{"line":3411,"column":55},"end":{"line":3411,"column":56}},"loc":{"start":{"line":3411,"column":82},"end":{"line":3469,"column":1}},"line":3411},"241":{"name":"(anonymous_241)","decl":{"start":{"line":3476,"column":50},"end":{"line":3476,"column":51}},"loc":{"start":{"line":3476,"column":62},"end":{"line":3478,"column":1}},"line":3476},"242":{"name":"(anonymous_242)","decl":{"start":{"line":3486,"column":56},"end":{"line":3486,"column":57}},"loc":{"start":{"line":3486,"column":68},"end":{"line":3489,"column":1}},"line":3486},"243":{"name":"(anonymous_243)","decl":{"start":{"line":3499,"column":55},"end":{"line":3499,"column":56}},"loc":{"start":{"line":3499,"column":67},"end":{"line":3502,"column":1}},"line":3499},"244":{"name":"(anonymous_244)","decl":{"start":{"line":3506,"column":50},"end":{"line":3506,"column":51}},"loc":{"start":{"line":3506,"column":67},"end":{"line":3508,"column":1}},"line":3506},"245":{"name":"(anonymous_245)","decl":{"start":{"line":3517,"column":54},"end":{"line":3517,"column":55}},"loc":{"start":{"line":3517,"column":66},"end":{"line":3519,"column":1}},"line":3517},"246":{"name":"(anonymous_246)","decl":{"start":{"line":3523,"column":54},"end":{"line":3523,"column":55}},"loc":{"start":{"line":3523,"column":71},"end":{"line":3525,"column":1}},"line":3523},"247":{"name":"(anonymous_247)","decl":{"start":{"line":3532,"column":53},"end":{"line":3532,"column":54}},"loc":{"start":{"line":3532,"column":65},"end":{"line":3534,"column":1}},"line":3532},"248":{"name":"(anonymous_248)","decl":{"start":{"line":3542,"column":59},"end":{"line":3542,"column":60}},"loc":{"start":{"line":3542,"column":71},"end":{"line":3545,"column":1}},"line":3542},"249":{"name":"(anonymous_249)","decl":{"start":{"line":3555,"column":58},"end":{"line":3555,"column":59}},"loc":{"start":{"line":3555,"column":70},"end":{"line":3558,"column":1}},"line":3555},"250":{"name":"(anonymous_250)","decl":{"start":{"line":3562,"column":53},"end":{"line":3562,"column":54}},"loc":{"start":{"line":3562,"column":70},"end":{"line":3564,"column":1}},"line":3562},"251":{"name":"(anonymous_251)","decl":{"start":{"line":3571,"column":53},"end":{"line":3571,"column":54}},"loc":{"start":{"line":3571,"column":65},"end":{"line":3573,"column":1}},"line":3571},"252":{"name":"(anonymous_252)","decl":{"start":{"line":3581,"column":59},"end":{"line":3581,"column":60}},"loc":{"start":{"line":3581,"column":71},"end":{"line":3584,"column":1}},"line":3581},"253":{"name":"(anonymous_253)","decl":{"start":{"line":3594,"column":58},"end":{"line":3594,"column":59}},"loc":{"start":{"line":3594,"column":70},"end":{"line":3597,"column":1}},"line":3594},"254":{"name":"(anonymous_254)","decl":{"start":{"line":3601,"column":53},"end":{"line":3601,"column":54}},"loc":{"start":{"line":3601,"column":70},"end":{"line":3603,"column":1}},"line":3601},"255":{"name":"(anonymous_255)","decl":{"start":{"line":3610,"column":51},"end":{"line":3610,"column":52}},"loc":{"start":{"line":3610,"column":63},"end":{"line":3612,"column":1}},"line":3610},"256":{"name":"(anonymous_256)","decl":{"start":{"line":3620,"column":57},"end":{"line":3620,"column":58}},"loc":{"start":{"line":3620,"column":69},"end":{"line":3623,"column":1}},"line":3620},"257":{"name":"(anonymous_257)","decl":{"start":{"line":3633,"column":56},"end":{"line":3633,"column":57}},"loc":{"start":{"line":3633,"column":68},"end":{"line":3636,"column":1}},"line":3633},"258":{"name":"(anonymous_258)","decl":{"start":{"line":3640,"column":51},"end":{"line":3640,"column":52}},"loc":{"start":{"line":3640,"column":68},"end":{"line":3642,"column":1}},"line":3640},"259":{"name":"(anonymous_259)","decl":{"start":{"line":3649,"column":51},"end":{"line":3649,"column":52}},"loc":{"start":{"line":3649,"column":63},"end":{"line":3651,"column":1}},"line":3649},"260":{"name":"(anonymous_260)","decl":{"start":{"line":3655,"column":51},"end":{"line":3655,"column":52}},"loc":{"start":{"line":3655,"column":68},"end":{"line":3657,"column":1}},"line":3655},"261":{"name":"(anonymous_261)","decl":{"start":{"line":3664,"column":58},"end":{"line":3664,"column":59}},"loc":{"start":{"line":3664,"column":70},"end":{"line":3666,"column":1}},"line":3664},"262":{"name":"(anonymous_262)","decl":{"start":{"line":3674,"column":64},"end":{"line":3674,"column":65}},"loc":{"start":{"line":3674,"column":76},"end":{"line":3677,"column":1}},"line":3674},"263":{"name":"(anonymous_263)","decl":{"start":{"line":3687,"column":63},"end":{"line":3687,"column":64}},"loc":{"start":{"line":3687,"column":75},"end":{"line":3690,"column":1}},"line":3687},"264":{"name":"(anonymous_264)","decl":{"start":{"line":3694,"column":58},"end":{"line":3694,"column":59}},"loc":{"start":{"line":3694,"column":75},"end":{"line":3696,"column":1}},"line":3694},"265":{"name":"(anonymous_265)","decl":{"start":{"line":3703,"column":54},"end":{"line":3703,"column":55}},"loc":{"start":{"line":3703,"column":82},"end":{"line":3705,"column":1}},"line":3703},"266":{"name":"(anonymous_266)","decl":{"start":{"line":3708,"column":60},"end":{"line":3708,"column":61}},"loc":{"start":{"line":3708,"column":72},"end":{"line":3710,"column":1}},"line":3708},"267":{"name":"(anonymous_267)","decl":{"start":{"line":3717,"column":48},"end":{"line":3717,"column":49}},"loc":{"start":{"line":3717,"column":60},"end":{"line":3719,"column":1}},"line":3717},"268":{"name":"(anonymous_268)","decl":{"start":{"line":3727,"column":54},"end":{"line":3727,"column":55}},"loc":{"start":{"line":3727,"column":66},"end":{"line":3730,"column":1}},"line":3727},"269":{"name":"(anonymous_269)","decl":{"start":{"line":3740,"column":53},"end":{"line":3740,"column":54}},"loc":{"start":{"line":3740,"column":65},"end":{"line":3743,"column":1}},"line":3740},"270":{"name":"(anonymous_270)","decl":{"start":{"line":3747,"column":48},"end":{"line":3747,"column":49}},"loc":{"start":{"line":3747,"column":65},"end":{"line":3749,"column":1}},"line":3747},"271":{"name":"(anonymous_271)","decl":{"start":{"line":3763,"column":30},"end":{"line":3763,"column":31}},"loc":{"start":{"line":3763,"column":50},"end":{"line":3765,"column":1}},"line":3763},"272":{"name":"(anonymous_272)","decl":{"start":{"line":3790,"column":51},"end":{"line":3790,"column":52}},"loc":{"start":{"line":3790,"column":82},"end":{"line":3792,"column":3}},"line":3790},"273":{"name":"(anonymous_273)","decl":{"start":{"line":3804,"column":41},"end":{"line":3804,"column":42}},"loc":{"start":{"line":3804,"column":73},"end":{"line":3815,"column":3}},"line":3804},"274":{"name":"(anonymous_274)","decl":{"start":{"line":3824,"column":48},"end":{"line":3824,"column":49}},"loc":{"start":{"line":3824,"column":65},"end":{"line":3828,"column":1}},"line":3824},"275":{"name":"(anonymous_275)","decl":{"start":{"line":3838,"column":58},"end":{"line":3838,"column":59}},"loc":{"start":{"line":3838,"column":81},"end":{"line":3861,"column":1}},"line":3838},"276":{"name":"(anonymous_276)","decl":{"start":{"line":3868,"column":56},"end":{"line":3868,"column":57}},"loc":{"start":{"line":3868,"column":68},"end":{"line":3872,"column":1}},"line":3868},"277":{"name":"(anonymous_277)","decl":{"start":{"line":3882,"column":54},"end":{"line":3882,"column":55}},"loc":{"start":{"line":3882,"column":81},"end":{"line":3900,"column":1}},"line":3882},"278":{"name":"(anonymous_278)","decl":{"start":{"line":3907,"column":57},"end":{"line":3907,"column":58}},"loc":{"start":{"line":3907,"column":69},"end":{"line":3910,"column":1}},"line":3907},"279":{"name":"(anonymous_279)","decl":{"start":{"line":3914,"column":57},"end":{"line":3914,"column":58}},"loc":{"start":{"line":3914,"column":74},"end":{"line":3916,"column":1}},"line":3914},"280":{"name":"(anonymous_280)","decl":{"start":{"line":3919,"column":59},"end":{"line":3919,"column":60}},"loc":{"start":{"line":3919,"column":71},"end":{"line":3921,"column":1}},"line":3919},"281":{"name":"(anonymous_281)","decl":{"start":{"line":3928,"column":57},"end":{"line":3928,"column":58}},"loc":{"start":{"line":3928,"column":69},"end":{"line":3930,"column":1}},"line":3928},"282":{"name":"(anonymous_282)","decl":{"start":{"line":3937,"column":57},"end":{"line":3937,"column":58}},"loc":{"start":{"line":3937,"column":69},"end":{"line":3940,"column":1}},"line":3937},"283":{"name":"(anonymous_283)","decl":{"start":{"line":3944,"column":57},"end":{"line":3944,"column":58}},"loc":{"start":{"line":3944,"column":74},"end":{"line":3946,"column":1}},"line":3944},"284":{"name":"(anonymous_284)","decl":{"start":{"line":3954,"column":53},"end":{"line":3954,"column":54}},"loc":{"start":{"line":3954,"column":85},"end":{"line":3956,"column":1}},"line":3954},"285":{"name":"(anonymous_285)","decl":{"start":{"line":3959,"column":59},"end":{"line":3959,"column":60}},"loc":{"start":{"line":3959,"column":71},"end":{"line":3961,"column":1}},"line":3959},"286":{"name":"(anonymous_286)","decl":{"start":{"line":3975,"column":22},"end":{"line":3975,"column":23}},"loc":{"start":{"line":3975,"column":42},"end":{"line":3977,"column":1}},"line":3975},"287":{"name":"(anonymous_287)","decl":{"start":{"line":4002,"column":43},"end":{"line":4002,"column":44}},"loc":{"start":{"line":4002,"column":74},"end":{"line":4004,"column":3}},"line":4002},"288":{"name":"(anonymous_288)","decl":{"start":{"line":4016,"column":33},"end":{"line":4016,"column":34}},"loc":{"start":{"line":4016,"column":65},"end":{"line":4040,"column":3}},"line":4016},"289":{"name":"(anonymous_289)","decl":{"start":{"line":4049,"column":40},"end":{"line":4049,"column":41}},"loc":{"start":{"line":4049,"column":57},"end":{"line":4053,"column":1}},"line":4049},"290":{"name":"(anonymous_290)","decl":{"start":{"line":4063,"column":50},"end":{"line":4063,"column":51}},"loc":{"start":{"line":4063,"column":73},"end":{"line":4137,"column":1}},"line":4063},"291":{"name":"(anonymous_291)","decl":{"start":{"line":4144,"column":48},"end":{"line":4144,"column":49}},"loc":{"start":{"line":4144,"column":60},"end":{"line":4148,"column":1}},"line":4144},"292":{"name":"(anonymous_292)","decl":{"start":{"line":4158,"column":46},"end":{"line":4158,"column":47}},"loc":{"start":{"line":4158,"column":73},"end":{"line":4266,"column":1}},"line":4158},"293":{"name":"(anonymous_293)","decl":{"start":{"line":4273,"column":51},"end":{"line":4273,"column":52}},"loc":{"start":{"line":4273,"column":63},"end":{"line":4275,"column":1}},"line":4273},"294":{"name":"(anonymous_294)","decl":{"start":{"line":4283,"column":57},"end":{"line":4283,"column":58}},"loc":{"start":{"line":4283,"column":69},"end":{"line":4286,"column":1}},"line":4283},"295":{"name":"(anonymous_295)","decl":{"start":{"line":4296,"column":56},"end":{"line":4296,"column":57}},"loc":{"start":{"line":4296,"column":68},"end":{"line":4299,"column":1}},"line":4296},"296":{"name":"(anonymous_296)","decl":{"start":{"line":4303,"column":51},"end":{"line":4303,"column":52}},"loc":{"start":{"line":4303,"column":68},"end":{"line":4305,"column":1}},"line":4303},"297":{"name":"(anonymous_297)","decl":{"start":{"line":4312,"column":42},"end":{"line":4312,"column":43}},"loc":{"start":{"line":4312,"column":54},"end":{"line":4314,"column":1}},"line":4312},"298":{"name":"(anonymous_298)","decl":{"start":{"line":4318,"column":42},"end":{"line":4318,"column":43}},"loc":{"start":{"line":4318,"column":59},"end":{"line":4320,"column":1}},"line":4318},"299":{"name":"(anonymous_299)","decl":{"start":{"line":4327,"column":39},"end":{"line":4327,"column":40}},"loc":{"start":{"line":4327,"column":51},"end":{"line":4329,"column":1}},"line":4327},"300":{"name":"(anonymous_300)","decl":{"start":{"line":4333,"column":39},"end":{"line":4333,"column":40}},"loc":{"start":{"line":4333,"column":56},"end":{"line":4335,"column":1}},"line":4333},"301":{"name":"(anonymous_301)","decl":{"start":{"line":4342,"column":42},"end":{"line":4342,"column":43}},"loc":{"start":{"line":4342,"column":54},"end":{"line":4344,"column":1}},"line":4342},"302":{"name":"(anonymous_302)","decl":{"start":{"line":4352,"column":48},"end":{"line":4352,"column":49}},"loc":{"start":{"line":4352,"column":60},"end":{"line":4355,"column":1}},"line":4352},"303":{"name":"(anonymous_303)","decl":{"start":{"line":4365,"column":47},"end":{"line":4365,"column":48}},"loc":{"start":{"line":4365,"column":59},"end":{"line":4368,"column":1}},"line":4365},"304":{"name":"(anonymous_304)","decl":{"start":{"line":4372,"column":42},"end":{"line":4372,"column":43}},"loc":{"start":{"line":4372,"column":59},"end":{"line":4374,"column":1}},"line":4372},"305":{"name":"(anonymous_305)","decl":{"start":{"line":4381,"column":43},"end":{"line":4381,"column":44}},"loc":{"start":{"line":4381,"column":55},"end":{"line":4383,"column":1}},"line":4381},"306":{"name":"(anonymous_306)","decl":{"start":{"line":4391,"column":49},"end":{"line":4391,"column":50}},"loc":{"start":{"line":4391,"column":61},"end":{"line":4394,"column":1}},"line":4391},"307":{"name":"(anonymous_307)","decl":{"start":{"line":4404,"column":48},"end":{"line":4404,"column":49}},"loc":{"start":{"line":4404,"column":60},"end":{"line":4407,"column":1}},"line":4404},"308":{"name":"(anonymous_308)","decl":{"start":{"line":4411,"column":43},"end":{"line":4411,"column":44}},"loc":{"start":{"line":4411,"column":60},"end":{"line":4413,"column":1}},"line":4411},"309":{"name":"(anonymous_309)","decl":{"start":{"line":4420,"column":53},"end":{"line":4420,"column":54}},"loc":{"start":{"line":4420,"column":65},"end":{"line":4422,"column":1}},"line":4420},"310":{"name":"(anonymous_310)","decl":{"start":{"line":4430,"column":59},"end":{"line":4430,"column":60}},"loc":{"start":{"line":4430,"column":71},"end":{"line":4433,"column":1}},"line":4430},"311":{"name":"(anonymous_311)","decl":{"start":{"line":4443,"column":58},"end":{"line":4443,"column":59}},"loc":{"start":{"line":4443,"column":70},"end":{"line":4446,"column":1}},"line":4443},"312":{"name":"(anonymous_312)","decl":{"start":{"line":4450,"column":53},"end":{"line":4450,"column":54}},"loc":{"start":{"line":4450,"column":70},"end":{"line":4452,"column":1}},"line":4450},"313":{"name":"(anonymous_313)","decl":{"start":{"line":4459,"column":41},"end":{"line":4459,"column":42}},"loc":{"start":{"line":4459,"column":53},"end":{"line":4461,"column":1}},"line":4459},"314":{"name":"(anonymous_314)","decl":{"start":{"line":4469,"column":47},"end":{"line":4469,"column":48}},"loc":{"start":{"line":4469,"column":59},"end":{"line":4472,"column":1}},"line":4469},"315":{"name":"(anonymous_315)","decl":{"start":{"line":4482,"column":46},"end":{"line":4482,"column":47}},"loc":{"start":{"line":4482,"column":58},"end":{"line":4485,"column":1}},"line":4482},"316":{"name":"(anonymous_316)","decl":{"start":{"line":4489,"column":41},"end":{"line":4489,"column":42}},"loc":{"start":{"line":4489,"column":58},"end":{"line":4491,"column":1}},"line":4489},"317":{"name":"(anonymous_317)","decl":{"start":{"line":4498,"column":46},"end":{"line":4498,"column":47}},"loc":{"start":{"line":4498,"column":58},"end":{"line":4501,"column":1}},"line":4498},"318":{"name":"(anonymous_318)","decl":{"start":{"line":4505,"column":46},"end":{"line":4505,"column":47}},"loc":{"start":{"line":4505,"column":63},"end":{"line":4507,"column":1}},"line":4505},"319":{"name":"(anonymous_319)","decl":{"start":{"line":4515,"column":42},"end":{"line":4515,"column":43}},"loc":{"start":{"line":4515,"column":74},"end":{"line":4517,"column":1}},"line":4515},"320":{"name":"(anonymous_320)","decl":{"start":{"line":4520,"column":48},"end":{"line":4520,"column":49}},"loc":{"start":{"line":4520,"column":60},"end":{"line":4522,"column":1}},"line":4520},"321":{"name":"(anonymous_321)","decl":{"start":{"line":4529,"column":43},"end":{"line":4529,"column":44}},"loc":{"start":{"line":4529,"column":55},"end":{"line":4531,"column":1}},"line":4529},"322":{"name":"(anonymous_322)","decl":{"start":{"line":4535,"column":43},"end":{"line":4535,"column":44}},"loc":{"start":{"line":4535,"column":60},"end":{"line":4537,"column":1}},"line":4535},"323":{"name":"(anonymous_323)","decl":{"start":{"line":4544,"column":45},"end":{"line":4544,"column":46}},"loc":{"start":{"line":4544,"column":57},"end":{"line":4546,"column":1}},"line":4544},"324":{"name":"(anonymous_324)","decl":{"start":{"line":4554,"column":51},"end":{"line":4554,"column":52}},"loc":{"start":{"line":4554,"column":63},"end":{"line":4557,"column":1}},"line":4554},"325":{"name":"(anonymous_325)","decl":{"start":{"line":4567,"column":50},"end":{"line":4567,"column":51}},"loc":{"start":{"line":4567,"column":62},"end":{"line":4570,"column":1}},"line":4567},"326":{"name":"(anonymous_326)","decl":{"start":{"line":4574,"column":45},"end":{"line":4574,"column":46}},"loc":{"start":{"line":4574,"column":62},"end":{"line":4576,"column":1}},"line":4574},"327":{"name":"(anonymous_327)","decl":{"start":{"line":4583,"column":43},"end":{"line":4583,"column":44}},"loc":{"start":{"line":4583,"column":55},"end":{"line":4585,"column":1}},"line":4583},"328":{"name":"(anonymous_328)","decl":{"start":{"line":4589,"column":43},"end":{"line":4589,"column":44}},"loc":{"start":{"line":4589,"column":60},"end":{"line":4591,"column":1}},"line":4589},"329":{"name":"(anonymous_329)","decl":{"start":{"line":4598,"column":40},"end":{"line":4598,"column":41}},"loc":{"start":{"line":4598,"column":52},"end":{"line":4600,"column":1}},"line":4598},"330":{"name":"(anonymous_330)","decl":{"start":{"line":4608,"column":46},"end":{"line":4608,"column":47}},"loc":{"start":{"line":4608,"column":58},"end":{"line":4611,"column":1}},"line":4608},"331":{"name":"(anonymous_331)","decl":{"start":{"line":4621,"column":45},"end":{"line":4621,"column":46}},"loc":{"start":{"line":4621,"column":57},"end":{"line":4624,"column":1}},"line":4621},"332":{"name":"(anonymous_332)","decl":{"start":{"line":4628,"column":40},"end":{"line":4628,"column":41}},"loc":{"start":{"line":4628,"column":57},"end":{"line":4630,"column":1}},"line":4628},"333":{"name":"(anonymous_333)","decl":{"start":{"line":4637,"column":38},"end":{"line":4637,"column":39}},"loc":{"start":{"line":4637,"column":50},"end":{"line":4639,"column":1}},"line":4637},"334":{"name":"(anonymous_334)","decl":{"start":{"line":4647,"column":44},"end":{"line":4647,"column":45}},"loc":{"start":{"line":4647,"column":56},"end":{"line":4650,"column":1}},"line":4647},"335":{"name":"(anonymous_335)","decl":{"start":{"line":4660,"column":43},"end":{"line":4660,"column":44}},"loc":{"start":{"line":4660,"column":55},"end":{"line":4663,"column":1}},"line":4660},"336":{"name":"(anonymous_336)","decl":{"start":{"line":4667,"column":38},"end":{"line":4667,"column":39}},"loc":{"start":{"line":4667,"column":55},"end":{"line":4669,"column":1}},"line":4667},"337":{"name":"(anonymous_337)","decl":{"start":{"line":4678,"column":49},"end":{"line":4678,"column":50}},"loc":{"start":{"line":4678,"column":61},"end":{"line":4680,"column":1}},"line":4678},"338":{"name":"(anonymous_338)","decl":{"start":{"line":4684,"column":49},"end":{"line":4684,"column":50}},"loc":{"start":{"line":4684,"column":66},"end":{"line":4686,"column":1}},"line":4684},"339":{"name":"(anonymous_339)","decl":{"start":{"line":4693,"column":43},"end":{"line":4693,"column":44}},"loc":{"start":{"line":4693,"column":55},"end":{"line":4695,"column":1}},"line":4693},"340":{"name":"(anonymous_340)","decl":{"start":{"line":4699,"column":43},"end":{"line":4699,"column":44}},"loc":{"start":{"line":4699,"column":60},"end":{"line":4701,"column":1}},"line":4699},"341":{"name":"(anonymous_341)","decl":{"start":{"line":4715,"column":20},"end":{"line":4715,"column":21}},"loc":{"start":{"line":4715,"column":40},"end":{"line":4717,"column":1}},"line":4715},"342":{"name":"(anonymous_342)","decl":{"start":{"line":4735,"column":41},"end":{"line":4735,"column":42}},"loc":{"start":{"line":4735,"column":72},"end":{"line":4737,"column":3}},"line":4735},"343":{"name":"(anonymous_343)","decl":{"start":{"line":4749,"column":31},"end":{"line":4749,"column":32}},"loc":{"start":{"line":4749,"column":63},"end":{"line":4765,"column":3}},"line":4749},"344":{"name":"(anonymous_344)","decl":{"start":{"line":4774,"column":38},"end":{"line":4774,"column":39}},"loc":{"start":{"line":4774,"column":55},"end":{"line":4778,"column":1}},"line":4774},"345":{"name":"(anonymous_345)","decl":{"start":{"line":4788,"column":48},"end":{"line":4788,"column":49}},"loc":{"start":{"line":4788,"column":71},"end":{"line":4833,"column":1}},"line":4788},"346":{"name":"(anonymous_346)","decl":{"start":{"line":4840,"column":46},"end":{"line":4840,"column":47}},"loc":{"start":{"line":4840,"column":58},"end":{"line":4844,"column":1}},"line":4840},"347":{"name":"(anonymous_347)","decl":{"start":{"line":4854,"column":44},"end":{"line":4854,"column":45}},"loc":{"start":{"line":4854,"column":71},"end":{"line":4912,"column":1}},"line":4854},"348":{"name":"(anonymous_348)","decl":{"start":{"line":4919,"column":49},"end":{"line":4919,"column":50}},"loc":{"start":{"line":4919,"column":61},"end":{"line":4921,"column":1}},"line":4919},"349":{"name":"(anonymous_349)","decl":{"start":{"line":4929,"column":55},"end":{"line":4929,"column":56}},"loc":{"start":{"line":4929,"column":67},"end":{"line":4932,"column":1}},"line":4929},"350":{"name":"(anonymous_350)","decl":{"start":{"line":4942,"column":54},"end":{"line":4942,"column":55}},"loc":{"start":{"line":4942,"column":66},"end":{"line":4945,"column":1}},"line":4942},"351":{"name":"(anonymous_351)","decl":{"start":{"line":4949,"column":49},"end":{"line":4949,"column":50}},"loc":{"start":{"line":4949,"column":66},"end":{"line":4951,"column":1}},"line":4949},"352":{"name":"(anonymous_352)","decl":{"start":{"line":4958,"column":43},"end":{"line":4958,"column":44}},"loc":{"start":{"line":4958,"column":55},"end":{"line":4960,"column":1}},"line":4958},"353":{"name":"(anonymous_353)","decl":{"start":{"line":4964,"column":43},"end":{"line":4964,"column":44}},"loc":{"start":{"line":4964,"column":60},"end":{"line":4966,"column":1}},"line":4964},"354":{"name":"(anonymous_354)","decl":{"start":{"line":4973,"column":42},"end":{"line":4973,"column":43}},"loc":{"start":{"line":4973,"column":54},"end":{"line":4975,"column":1}},"line":4973},"355":{"name":"(anonymous_355)","decl":{"start":{"line":4979,"column":42},"end":{"line":4979,"column":43}},"loc":{"start":{"line":4979,"column":59},"end":{"line":4981,"column":1}},"line":4979},"356":{"name":"(anonymous_356)","decl":{"start":{"line":4988,"column":42},"end":{"line":4988,"column":43}},"loc":{"start":{"line":4988,"column":54},"end":{"line":4990,"column":1}},"line":4988},"357":{"name":"(anonymous_357)","decl":{"start":{"line":4994,"column":42},"end":{"line":4994,"column":43}},"loc":{"start":{"line":4994,"column":59},"end":{"line":4996,"column":1}},"line":4994},"358":{"name":"(anonymous_358)","decl":{"start":{"line":5003,"column":40},"end":{"line":5003,"column":41}},"loc":{"start":{"line":5003,"column":52},"end":{"line":5005,"column":1}},"line":5003},"359":{"name":"(anonymous_359)","decl":{"start":{"line":5013,"column":46},"end":{"line":5013,"column":47}},"loc":{"start":{"line":5013,"column":58},"end":{"line":5016,"column":1}},"line":5013},"360":{"name":"(anonymous_360)","decl":{"start":{"line":5026,"column":45},"end":{"line":5026,"column":46}},"loc":{"start":{"line":5026,"column":57},"end":{"line":5029,"column":1}},"line":5026},"361":{"name":"(anonymous_361)","decl":{"start":{"line":5033,"column":40},"end":{"line":5033,"column":41}},"loc":{"start":{"line":5033,"column":57},"end":{"line":5035,"column":1}},"line":5033},"362":{"name":"(anonymous_362)","decl":{"start":{"line":5042,"column":43},"end":{"line":5042,"column":44}},"loc":{"start":{"line":5042,"column":55},"end":{"line":5044,"column":1}},"line":5042},"363":{"name":"(anonymous_363)","decl":{"start":{"line":5052,"column":49},"end":{"line":5052,"column":50}},"loc":{"start":{"line":5052,"column":61},"end":{"line":5055,"column":1}},"line":5052},"364":{"name":"(anonymous_364)","decl":{"start":{"line":5065,"column":48},"end":{"line":5065,"column":49}},"loc":{"start":{"line":5065,"column":60},"end":{"line":5068,"column":1}},"line":5065},"365":{"name":"(anonymous_365)","decl":{"start":{"line":5072,"column":43},"end":{"line":5072,"column":44}},"loc":{"start":{"line":5072,"column":60},"end":{"line":5074,"column":1}},"line":5072},"366":{"name":"(anonymous_366)","decl":{"start":{"line":5081,"column":41},"end":{"line":5081,"column":42}},"loc":{"start":{"line":5081,"column":53},"end":{"line":5083,"column":1}},"line":5081},"367":{"name":"(anonymous_367)","decl":{"start":{"line":5087,"column":41},"end":{"line":5087,"column":42}},"loc":{"start":{"line":5087,"column":58},"end":{"line":5089,"column":1}},"line":5087},"368":{"name":"(anonymous_368)","decl":{"start":{"line":5096,"column":41},"end":{"line":5096,"column":42}},"loc":{"start":{"line":5096,"column":53},"end":{"line":5098,"column":1}},"line":5096},"369":{"name":"(anonymous_369)","decl":{"start":{"line":5102,"column":41},"end":{"line":5102,"column":42}},"loc":{"start":{"line":5102,"column":58},"end":{"line":5104,"column":1}},"line":5102},"370":{"name":"(anonymous_370)","decl":{"start":{"line":5118,"column":25},"end":{"line":5118,"column":26}},"loc":{"start":{"line":5118,"column":45},"end":{"line":5120,"column":1}},"line":5118},"371":{"name":"(anonymous_371)","decl":{"start":{"line":5138,"column":46},"end":{"line":5138,"column":47}},"loc":{"start":{"line":5138,"column":77},"end":{"line":5140,"column":3}},"line":5138},"372":{"name":"(anonymous_372)","decl":{"start":{"line":5152,"column":36},"end":{"line":5152,"column":37}},"loc":{"start":{"line":5152,"column":68},"end":{"line":5161,"column":3}},"line":5152},"373":{"name":"(anonymous_373)","decl":{"start":{"line":5170,"column":43},"end":{"line":5170,"column":44}},"loc":{"start":{"line":5170,"column":60},"end":{"line":5174,"column":1}},"line":5170},"374":{"name":"(anonymous_374)","decl":{"start":{"line":5184,"column":53},"end":{"line":5184,"column":54}},"loc":{"start":{"line":5184,"column":76},"end":{"line":5201,"column":1}},"line":5184},"375":{"name":"(anonymous_375)","decl":{"start":{"line":5208,"column":51},"end":{"line":5208,"column":52}},"loc":{"start":{"line":5208,"column":63},"end":{"line":5212,"column":1}},"line":5208},"376":{"name":"(anonymous_376)","decl":{"start":{"line":5222,"column":49},"end":{"line":5222,"column":50}},"loc":{"start":{"line":5222,"column":76},"end":{"line":5231,"column":1}},"line":5222},"377":{"name":"(anonymous_377)","decl":{"start":{"line":5238,"column":43},"end":{"line":5238,"column":44}},"loc":{"start":{"line":5238,"column":55},"end":{"line":5240,"column":1}},"line":5238},"378":{"name":"(anonymous_378)","decl":{"start":{"line":5244,"column":43},"end":{"line":5244,"column":44}},"loc":{"start":{"line":5244,"column":60},"end":{"line":5246,"column":1}},"line":5244},"379":{"name":"(anonymous_379)","decl":{"start":{"line":5260,"column":23},"end":{"line":5260,"column":24}},"loc":{"start":{"line":5260,"column":43},"end":{"line":5262,"column":1}},"line":5260},"380":{"name":"(anonymous_380)","decl":{"start":{"line":5287,"column":44},"end":{"line":5287,"column":45}},"loc":{"start":{"line":5287,"column":75},"end":{"line":5289,"column":3}},"line":5287},"381":{"name":"(anonymous_381)","decl":{"start":{"line":5301,"column":34},"end":{"line":5301,"column":35}},"loc":{"start":{"line":5301,"column":66},"end":{"line":5315,"column":3}},"line":5301},"382":{"name":"(anonymous_382)","decl":{"start":{"line":5324,"column":41},"end":{"line":5324,"column":42}},"loc":{"start":{"line":5324,"column":58},"end":{"line":5328,"column":1}},"line":5324},"383":{"name":"(anonymous_383)","decl":{"start":{"line":5338,"column":51},"end":{"line":5338,"column":52}},"loc":{"start":{"line":5338,"column":74},"end":{"line":5372,"column":1}},"line":5338},"384":{"name":"(anonymous_384)","decl":{"start":{"line":5379,"column":49},"end":{"line":5379,"column":50}},"loc":{"start":{"line":5379,"column":61},"end":{"line":5383,"column":1}},"line":5379},"385":{"name":"(anonymous_385)","decl":{"start":{"line":5393,"column":47},"end":{"line":5393,"column":48}},"loc":{"start":{"line":5393,"column":74},"end":{"line":5431,"column":1}},"line":5393},"386":{"name":"(anonymous_386)","decl":{"start":{"line":5438,"column":41},"end":{"line":5438,"column":42}},"loc":{"start":{"line":5438,"column":53},"end":{"line":5440,"column":1}},"line":5438},"387":{"name":"(anonymous_387)","decl":{"start":{"line":5444,"column":41},"end":{"line":5444,"column":42}},"loc":{"start":{"line":5444,"column":58},"end":{"line":5446,"column":1}},"line":5444},"388":{"name":"(anonymous_388)","decl":{"start":{"line":5453,"column":50},"end":{"line":5453,"column":51}},"loc":{"start":{"line":5453,"column":62},"end":{"line":5456,"column":1}},"line":5453},"389":{"name":"(anonymous_389)","decl":{"start":{"line":5460,"column":50},"end":{"line":5460,"column":51}},"loc":{"start":{"line":5460,"column":67},"end":{"line":5462,"column":1}},"line":5460},"390":{"name":"(anonymous_390)","decl":{"start":{"line":5470,"column":46},"end":{"line":5470,"column":47}},"loc":{"start":{"line":5470,"column":78},"end":{"line":5472,"column":1}},"line":5470},"391":{"name":"(anonymous_391)","decl":{"start":{"line":5475,"column":52},"end":{"line":5475,"column":53}},"loc":{"start":{"line":5475,"column":64},"end":{"line":5477,"column":1}},"line":5475},"392":{"name":"(anonymous_392)","decl":{"start":{"line":5486,"column":44},"end":{"line":5486,"column":45}},"loc":{"start":{"line":5486,"column":56},"end":{"line":5488,"column":1}},"line":5486},"393":{"name":"(anonymous_393)","decl":{"start":{"line":5492,"column":44},"end":{"line":5492,"column":45}},"loc":{"start":{"line":5492,"column":61},"end":{"line":5494,"column":1}},"line":5492},"394":{"name":"(anonymous_394)","decl":{"start":{"line":5503,"column":41},"end":{"line":5503,"column":42}},"loc":{"start":{"line":5503,"column":53},"end":{"line":5505,"column":1}},"line":5503},"395":{"name":"(anonymous_395)","decl":{"start":{"line":5509,"column":41},"end":{"line":5509,"column":42}},"loc":{"start":{"line":5509,"column":58},"end":{"line":5511,"column":1}},"line":5509},"396":{"name":"(anonymous_396)","decl":{"start":{"line":5520,"column":50},"end":{"line":5520,"column":51}},"loc":{"start":{"line":5520,"column":62},"end":{"line":5522,"column":1}},"line":5520},"397":{"name":"(anonymous_397)","decl":{"start":{"line":5526,"column":50},"end":{"line":5526,"column":51}},"loc":{"start":{"line":5526,"column":67},"end":{"line":5528,"column":1}},"line":5526},"398":{"name":"(anonymous_398)","decl":{"start":{"line":5542,"column":23},"end":{"line":5542,"column":24}},"loc":{"start":{"line":5542,"column":43},"end":{"line":5544,"column":1}},"line":5542},"399":{"name":"(anonymous_399)","decl":{"start":{"line":5562,"column":44},"end":{"line":5562,"column":45}},"loc":{"start":{"line":5562,"column":75},"end":{"line":5564,"column":3}},"line":5562},"400":{"name":"(anonymous_400)","decl":{"start":{"line":5576,"column":34},"end":{"line":5576,"column":35}},"loc":{"start":{"line":5576,"column":66},"end":{"line":5587,"column":3}},"line":5576},"401":{"name":"(anonymous_401)","decl":{"start":{"line":5596,"column":41},"end":{"line":5596,"column":42}},"loc":{"start":{"line":5596,"column":58},"end":{"line":5600,"column":1}},"line":5596},"402":{"name":"(anonymous_402)","decl":{"start":{"line":5610,"column":51},"end":{"line":5610,"column":52}},"loc":{"start":{"line":5610,"column":74},"end":{"line":5635,"column":1}},"line":5610},"403":{"name":"(anonymous_403)","decl":{"start":{"line":5642,"column":49},"end":{"line":5642,"column":50}},"loc":{"start":{"line":5642,"column":61},"end":{"line":5646,"column":1}},"line":5642},"404":{"name":"(anonymous_404)","decl":{"start":{"line":5656,"column":47},"end":{"line":5656,"column":48}},"loc":{"start":{"line":5656,"column":74},"end":{"line":5679,"column":1}},"line":5656},"405":{"name":"(anonymous_405)","decl":{"start":{"line":5686,"column":41},"end":{"line":5686,"column":42}},"loc":{"start":{"line":5686,"column":53},"end":{"line":5688,"column":1}},"line":5686},"406":{"name":"(anonymous_406)","decl":{"start":{"line":5692,"column":41},"end":{"line":5692,"column":42}},"loc":{"start":{"line":5692,"column":58},"end":{"line":5694,"column":1}},"line":5692},"407":{"name":"(anonymous_407)","decl":{"start":{"line":5701,"column":41},"end":{"line":5701,"column":42}},"loc":{"start":{"line":5701,"column":53},"end":{"line":5703,"column":1}},"line":5701},"408":{"name":"(anonymous_408)","decl":{"start":{"line":5707,"column":41},"end":{"line":5707,"column":42}},"loc":{"start":{"line":5707,"column":58},"end":{"line":5709,"column":1}},"line":5707},"409":{"name":"(anonymous_409)","decl":{"start":{"line":5716,"column":40},"end":{"line":5716,"column":41}},"loc":{"start":{"line":5716,"column":52},"end":{"line":5718,"column":1}},"line":5716},"410":{"name":"(anonymous_410)","decl":{"start":{"line":5722,"column":40},"end":{"line":5722,"column":41}},"loc":{"start":{"line":5722,"column":57},"end":{"line":5724,"column":1}},"line":5722},"411":{"name":"(anonymous_411)","decl":{"start":{"line":5738,"column":18},"end":{"line":5738,"column":19}},"loc":{"start":{"line":5738,"column":38},"end":{"line":5740,"column":1}},"line":5738},"412":{"name":"(anonymous_412)","decl":{"start":{"line":5765,"column":39},"end":{"line":5765,"column":40}},"loc":{"start":{"line":5765,"column":70},"end":{"line":5767,"column":3}},"line":5765},"413":{"name":"(anonymous_413)","decl":{"start":{"line":5779,"column":29},"end":{"line":5779,"column":30}},"loc":{"start":{"line":5779,"column":61},"end":{"line":5793,"column":3}},"line":5779},"414":{"name":"(anonymous_414)","decl":{"start":{"line":5802,"column":36},"end":{"line":5802,"column":37}},"loc":{"start":{"line":5802,"column":53},"end":{"line":5806,"column":1}},"line":5802},"415":{"name":"(anonymous_415)","decl":{"start":{"line":5816,"column":46},"end":{"line":5816,"column":47}},"loc":{"start":{"line":5816,"column":69},"end":{"line":5847,"column":1}},"line":5816},"416":{"name":"(anonymous_416)","decl":{"start":{"line":5854,"column":44},"end":{"line":5854,"column":45}},"loc":{"start":{"line":5854,"column":56},"end":{"line":5858,"column":1}},"line":5854},"417":{"name":"(anonymous_417)","decl":{"start":{"line":5868,"column":42},"end":{"line":5868,"column":43}},"loc":{"start":{"line":5868,"column":69},"end":{"line":5900,"column":1}},"line":5868},"418":{"name":"(anonymous_418)","decl":{"start":{"line":5907,"column":39},"end":{"line":5907,"column":40}},"loc":{"start":{"line":5907,"column":51},"end":{"line":5909,"column":1}},"line":5907},"419":{"name":"(anonymous_419)","decl":{"start":{"line":5913,"column":39},"end":{"line":5913,"column":40}},"loc":{"start":{"line":5913,"column":56},"end":{"line":5915,"column":1}},"line":5913},"420":{"name":"(anonymous_420)","decl":{"start":{"line":5922,"column":40},"end":{"line":5922,"column":41}},"loc":{"start":{"line":5922,"column":52},"end":{"line":5924,"column":1}},"line":5922},"421":{"name":"(anonymous_421)","decl":{"start":{"line":5928,"column":40},"end":{"line":5928,"column":41}},"loc":{"start":{"line":5928,"column":57},"end":{"line":5930,"column":1}},"line":5928},"422":{"name":"(anonymous_422)","decl":{"start":{"line":5937,"column":45},"end":{"line":5937,"column":46}},"loc":{"start":{"line":5937,"column":57},"end":{"line":5940,"column":1}},"line":5937},"423":{"name":"(anonymous_423)","decl":{"start":{"line":5944,"column":45},"end":{"line":5944,"column":46}},"loc":{"start":{"line":5944,"column":62},"end":{"line":5946,"column":1}},"line":5944},"424":{"name":"(anonymous_424)","decl":{"start":{"line":5954,"column":41},"end":{"line":5954,"column":42}},"loc":{"start":{"line":5954,"column":73},"end":{"line":5956,"column":1}},"line":5954},"425":{"name":"(anonymous_425)","decl":{"start":{"line":5959,"column":47},"end":{"line":5959,"column":48}},"loc":{"start":{"line":5959,"column":59},"end":{"line":5961,"column":1}},"line":5959},"426":{"name":"(anonymous_426)","decl":{"start":{"line":5968,"column":50},"end":{"line":5968,"column":51}},"loc":{"start":{"line":5968,"column":62},"end":{"line":5971,"column":1}},"line":5968},"427":{"name":"(anonymous_427)","decl":{"start":{"line":5975,"column":50},"end":{"line":5975,"column":51}},"loc":{"start":{"line":5975,"column":67},"end":{"line":5977,"column":1}},"line":5975},"428":{"name":"(anonymous_428)","decl":{"start":{"line":5985,"column":46},"end":{"line":5985,"column":47}},"loc":{"start":{"line":5985,"column":78},"end":{"line":5987,"column":1}},"line":5985},"429":{"name":"(anonymous_429)","decl":{"start":{"line":5990,"column":52},"end":{"line":5990,"column":53}},"loc":{"start":{"line":5990,"column":64},"end":{"line":5992,"column":1}},"line":5990},"430":{"name":"(anonymous_430)","decl":{"start":{"line":6006,"column":20},"end":{"line":6006,"column":21}},"loc":{"start":{"line":6006,"column":40},"end":{"line":6008,"column":1}},"line":6006},"431":{"name":"(anonymous_431)","decl":{"start":{"line":6026,"column":41},"end":{"line":6026,"column":42}},"loc":{"start":{"line":6026,"column":72},"end":{"line":6028,"column":3}},"line":6026},"432":{"name":"(anonymous_432)","decl":{"start":{"line":6040,"column":31},"end":{"line":6040,"column":32}},"loc":{"start":{"line":6040,"column":63},"end":{"line":6050,"column":3}},"line":6040},"433":{"name":"(anonymous_433)","decl":{"start":{"line":6059,"column":38},"end":{"line":6059,"column":39}},"loc":{"start":{"line":6059,"column":55},"end":{"line":6063,"column":1}},"line":6059},"434":{"name":"(anonymous_434)","decl":{"start":{"line":6073,"column":48},"end":{"line":6073,"column":49}},"loc":{"start":{"line":6073,"column":71},"end":{"line":6094,"column":1}},"line":6073},"435":{"name":"(anonymous_435)","decl":{"start":{"line":6101,"column":46},"end":{"line":6101,"column":47}},"loc":{"start":{"line":6101,"column":58},"end":{"line":6105,"column":1}},"line":6101},"436":{"name":"(anonymous_436)","decl":{"start":{"line":6115,"column":44},"end":{"line":6115,"column":45}},"loc":{"start":{"line":6115,"column":71},"end":{"line":6131,"column":1}},"line":6115},"437":{"name":"(anonymous_437)","decl":{"start":{"line":6138,"column":49},"end":{"line":6138,"column":50}},"loc":{"start":{"line":6138,"column":61},"end":{"line":6140,"column":1}},"line":6138},"438":{"name":"(anonymous_438)","decl":{"start":{"line":6148,"column":55},"end":{"line":6148,"column":56}},"loc":{"start":{"line":6148,"column":67},"end":{"line":6151,"column":1}},"line":6148},"439":{"name":"(anonymous_439)","decl":{"start":{"line":6161,"column":54},"end":{"line":6161,"column":55}},"loc":{"start":{"line":6161,"column":66},"end":{"line":6164,"column":1}},"line":6161},"440":{"name":"(anonymous_440)","decl":{"start":{"line":6168,"column":49},"end":{"line":6168,"column":50}},"loc":{"start":{"line":6168,"column":66},"end":{"line":6170,"column":1}},"line":6168},"441":{"name":"(anonymous_441)","decl":{"start":{"line":6177,"column":43},"end":{"line":6177,"column":44}},"loc":{"start":{"line":6177,"column":55},"end":{"line":6179,"column":1}},"line":6177},"442":{"name":"(anonymous_442)","decl":{"start":{"line":6187,"column":49},"end":{"line":6187,"column":50}},"loc":{"start":{"line":6187,"column":61},"end":{"line":6190,"column":1}},"line":6187},"443":{"name":"(anonymous_443)","decl":{"start":{"line":6200,"column":48},"end":{"line":6200,"column":49}},"loc":{"start":{"line":6200,"column":60},"end":{"line":6203,"column":1}},"line":6200},"444":{"name":"(anonymous_444)","decl":{"start":{"line":6207,"column":43},"end":{"line":6207,"column":44}},"loc":{"start":{"line":6207,"column":60},"end":{"line":6209,"column":1}},"line":6207},"445":{"name":"(anonymous_445)","decl":{"start":{"line":6223,"column":25},"end":{"line":6223,"column":26}},"loc":{"start":{"line":6223,"column":45},"end":{"line":6225,"column":1}},"line":6223},"446":{"name":"(anonymous_446)","decl":{"start":{"line":6250,"column":46},"end":{"line":6250,"column":47}},"loc":{"start":{"line":6250,"column":77},"end":{"line":6252,"column":3}},"line":6250},"447":{"name":"(anonymous_447)","decl":{"start":{"line":6264,"column":36},"end":{"line":6264,"column":37}},"loc":{"start":{"line":6264,"column":68},"end":{"line":6276,"column":3}},"line":6264},"448":{"name":"(anonymous_448)","decl":{"start":{"line":6285,"column":43},"end":{"line":6285,"column":44}},"loc":{"start":{"line":6285,"column":60},"end":{"line":6289,"column":1}},"line":6285},"449":{"name":"(anonymous_449)","decl":{"start":{"line":6299,"column":53},"end":{"line":6299,"column":54}},"loc":{"start":{"line":6299,"column":76},"end":{"line":6328,"column":1}},"line":6299},"450":{"name":"(anonymous_450)","decl":{"start":{"line":6335,"column":51},"end":{"line":6335,"column":52}},"loc":{"start":{"line":6335,"column":63},"end":{"line":6339,"column":1}},"line":6335},"451":{"name":"(anonymous_451)","decl":{"start":{"line":6349,"column":49},"end":{"line":6349,"column":50}},"loc":{"start":{"line":6349,"column":76},"end":{"line":6379,"column":1}},"line":6349},"452":{"name":"(anonymous_452)","decl":{"start":{"line":6386,"column":54},"end":{"line":6386,"column":55}},"loc":{"start":{"line":6386,"column":66},"end":{"line":6388,"column":1}},"line":6386},"453":{"name":"(anonymous_453)","decl":{"start":{"line":6396,"column":60},"end":{"line":6396,"column":61}},"loc":{"start":{"line":6396,"column":72},"end":{"line":6399,"column":1}},"line":6396},"454":{"name":"(anonymous_454)","decl":{"start":{"line":6409,"column":59},"end":{"line":6409,"column":60}},"loc":{"start":{"line":6409,"column":71},"end":{"line":6412,"column":1}},"line":6409},"455":{"name":"(anonymous_455)","decl":{"start":{"line":6416,"column":54},"end":{"line":6416,"column":55}},"loc":{"start":{"line":6416,"column":71},"end":{"line":6418,"column":1}},"line":6416},"456":{"name":"(anonymous_456)","decl":{"start":{"line":6425,"column":43},"end":{"line":6425,"column":44}},"loc":{"start":{"line":6425,"column":55},"end":{"line":6427,"column":1}},"line":6425},"457":{"name":"(anonymous_457)","decl":{"start":{"line":6435,"column":49},"end":{"line":6435,"column":50}},"loc":{"start":{"line":6435,"column":61},"end":{"line":6438,"column":1}},"line":6435},"458":{"name":"(anonymous_458)","decl":{"start":{"line":6448,"column":48},"end":{"line":6448,"column":49}},"loc":{"start":{"line":6448,"column":60},"end":{"line":6451,"column":1}},"line":6448},"459":{"name":"(anonymous_459)","decl":{"start":{"line":6455,"column":43},"end":{"line":6455,"column":44}},"loc":{"start":{"line":6455,"column":60},"end":{"line":6457,"column":1}},"line":6455},"460":{"name":"(anonymous_460)","decl":{"start":{"line":6466,"column":49},"end":{"line":6466,"column":50}},"loc":{"start":{"line":6466,"column":61},"end":{"line":6468,"column":1}},"line":6466},"461":{"name":"(anonymous_461)","decl":{"start":{"line":6472,"column":49},"end":{"line":6472,"column":50}},"loc":{"start":{"line":6472,"column":66},"end":{"line":6474,"column":1}},"line":6472},"462":{"name":"(anonymous_462)","decl":{"start":{"line":6481,"column":54},"end":{"line":6481,"column":55}},"loc":{"start":{"line":6481,"column":66},"end":{"line":6483,"column":1}},"line":6481},"463":{"name":"(anonymous_463)","decl":{"start":{"line":6491,"column":60},"end":{"line":6491,"column":61}},"loc":{"start":{"line":6491,"column":72},"end":{"line":6494,"column":1}},"line":6491},"464":{"name":"(anonymous_464)","decl":{"start":{"line":6504,"column":59},"end":{"line":6504,"column":60}},"loc":{"start":{"line":6504,"column":71},"end":{"line":6507,"column":1}},"line":6504},"465":{"name":"(anonymous_465)","decl":{"start":{"line":6511,"column":54},"end":{"line":6511,"column":55}},"loc":{"start":{"line":6511,"column":71},"end":{"line":6513,"column":1}},"line":6511},"466":{"name":"(anonymous_466)","decl":{"start":{"line":6520,"column":50},"end":{"line":6520,"column":51}},"loc":{"start":{"line":6520,"column":78},"end":{"line":6522,"column":1}},"line":6520},"467":{"name":"(anonymous_467)","decl":{"start":{"line":6525,"column":56},"end":{"line":6525,"column":57}},"loc":{"start":{"line":6525,"column":68},"end":{"line":6527,"column":1}},"line":6525},"468":{"name":"(anonymous_468)","decl":{"start":{"line":6541,"column":25},"end":{"line":6541,"column":26}},"loc":{"start":{"line":6541,"column":45},"end":{"line":6543,"column":1}},"line":6541},"469":{"name":"(anonymous_469)","decl":{"start":{"line":6561,"column":46},"end":{"line":6561,"column":47}},"loc":{"start":{"line":6561,"column":77},"end":{"line":6563,"column":3}},"line":6561},"470":{"name":"(anonymous_470)","decl":{"start":{"line":6575,"column":36},"end":{"line":6575,"column":37}},"loc":{"start":{"line":6575,"column":68},"end":{"line":6590,"column":3}},"line":6575},"471":{"name":"(anonymous_471)","decl":{"start":{"line":6599,"column":43},"end":{"line":6599,"column":44}},"loc":{"start":{"line":6599,"column":60},"end":{"line":6603,"column":1}},"line":6599},"472":{"name":"(anonymous_472)","decl":{"start":{"line":6613,"column":53},"end":{"line":6613,"column":54}},"loc":{"start":{"line":6613,"column":76},"end":{"line":6654,"column":1}},"line":6613},"473":{"name":"(anonymous_473)","decl":{"start":{"line":6661,"column":51},"end":{"line":6661,"column":52}},"loc":{"start":{"line":6661,"column":63},"end":{"line":6665,"column":1}},"line":6661},"474":{"name":"(anonymous_474)","decl":{"start":{"line":6675,"column":49},"end":{"line":6675,"column":50}},"loc":{"start":{"line":6675,"column":76},"end":{"line":6726,"column":1}},"line":6675},"475":{"name":"(anonymous_475)","decl":{"start":{"line":6733,"column":54},"end":{"line":6733,"column":55}},"loc":{"start":{"line":6733,"column":66},"end":{"line":6735,"column":1}},"line":6733},"476":{"name":"(anonymous_476)","decl":{"start":{"line":6743,"column":60},"end":{"line":6743,"column":61}},"loc":{"start":{"line":6743,"column":72},"end":{"line":6746,"column":1}},"line":6743},"477":{"name":"(anonymous_477)","decl":{"start":{"line":6756,"column":59},"end":{"line":6756,"column":60}},"loc":{"start":{"line":6756,"column":71},"end":{"line":6759,"column":1}},"line":6756},"478":{"name":"(anonymous_478)","decl":{"start":{"line":6763,"column":54},"end":{"line":6763,"column":55}},"loc":{"start":{"line":6763,"column":71},"end":{"line":6765,"column":1}},"line":6763},"479":{"name":"(anonymous_479)","decl":{"start":{"line":6772,"column":48},"end":{"line":6772,"column":49}},"loc":{"start":{"line":6772,"column":60},"end":{"line":6774,"column":1}},"line":6772},"480":{"name":"(anonymous_480)","decl":{"start":{"line":6778,"column":48},"end":{"line":6778,"column":49}},"loc":{"start":{"line":6778,"column":65},"end":{"line":6780,"column":1}},"line":6778},"481":{"name":"(anonymous_481)","decl":{"start":{"line":6787,"column":48},"end":{"line":6787,"column":49}},"loc":{"start":{"line":6787,"column":60},"end":{"line":6789,"column":1}},"line":6787},"482":{"name":"(anonymous_482)","decl":{"start":{"line":6793,"column":48},"end":{"line":6793,"column":49}},"loc":{"start":{"line":6793,"column":65},"end":{"line":6795,"column":1}},"line":6793},"483":{"name":"(anonymous_483)","decl":{"start":{"line":6802,"column":46},"end":{"line":6802,"column":47}},"loc":{"start":{"line":6802,"column":58},"end":{"line":6804,"column":1}},"line":6802},"484":{"name":"(anonymous_484)","decl":{"start":{"line":6808,"column":46},"end":{"line":6808,"column":47}},"loc":{"start":{"line":6808,"column":63},"end":{"line":6810,"column":1}},"line":6808},"485":{"name":"(anonymous_485)","decl":{"start":{"line":6819,"column":43},"end":{"line":6819,"column":44}},"loc":{"start":{"line":6819,"column":55},"end":{"line":6821,"column":1}},"line":6819},"486":{"name":"(anonymous_486)","decl":{"start":{"line":6825,"column":43},"end":{"line":6825,"column":44}},"loc":{"start":{"line":6825,"column":60},"end":{"line":6827,"column":1}},"line":6825},"487":{"name":"(anonymous_487)","decl":{"start":{"line":6834,"column":48},"end":{"line":6834,"column":49}},"loc":{"start":{"line":6834,"column":60},"end":{"line":6836,"column":1}},"line":6834},"488":{"name":"(anonymous_488)","decl":{"start":{"line":6844,"column":54},"end":{"line":6844,"column":55}},"loc":{"start":{"line":6844,"column":66},"end":{"line":6847,"column":1}},"line":6844},"489":{"name":"(anonymous_489)","decl":{"start":{"line":6857,"column":53},"end":{"line":6857,"column":54}},"loc":{"start":{"line":6857,"column":65},"end":{"line":6860,"column":1}},"line":6857},"490":{"name":"(anonymous_490)","decl":{"start":{"line":6864,"column":48},"end":{"line":6864,"column":49}},"loc":{"start":{"line":6864,"column":65},"end":{"line":6866,"column":1}},"line":6864},"491":{"name":"(anonymous_491)","decl":{"start":{"line":6873,"column":53},"end":{"line":6873,"column":54}},"loc":{"start":{"line":6873,"column":65},"end":{"line":6875,"column":1}},"line":6873},"492":{"name":"(anonymous_492)","decl":{"start":{"line":6879,"column":53},"end":{"line":6879,"column":54}},"loc":{"start":{"line":6879,"column":70},"end":{"line":6881,"column":1}},"line":6879},"493":{"name":"(anonymous_493)","decl":{"start":{"line":6895,"column":23},"end":{"line":6895,"column":24}},"loc":{"start":{"line":6895,"column":43},"end":{"line":6897,"column":1}},"line":6895},"494":{"name":"(anonymous_494)","decl":{"start":{"line":6915,"column":44},"end":{"line":6915,"column":45}},"loc":{"start":{"line":6915,"column":75},"end":{"line":6917,"column":3}},"line":6915},"495":{"name":"(anonymous_495)","decl":{"start":{"line":6929,"column":34},"end":{"line":6929,"column":35}},"loc":{"start":{"line":6929,"column":66},"end":{"line":6940,"column":3}},"line":6929},"496":{"name":"(anonymous_496)","decl":{"start":{"line":6949,"column":41},"end":{"line":6949,"column":42}},"loc":{"start":{"line":6949,"column":58},"end":{"line":6953,"column":1}},"line":6949},"497":{"name":"(anonymous_497)","decl":{"start":{"line":6963,"column":51},"end":{"line":6963,"column":52}},"loc":{"start":{"line":6963,"column":74},"end":{"line":6988,"column":1}},"line":6963},"498":{"name":"(anonymous_498)","decl":{"start":{"line":6995,"column":49},"end":{"line":6995,"column":50}},"loc":{"start":{"line":6995,"column":61},"end":{"line":6999,"column":1}},"line":6995},"499":{"name":"(anonymous_499)","decl":{"start":{"line":7009,"column":47},"end":{"line":7009,"column":48}},"loc":{"start":{"line":7009,"column":74},"end":{"line":7032,"column":1}},"line":7009},"500":{"name":"(anonymous_500)","decl":{"start":{"line":7039,"column":39},"end":{"line":7039,"column":40}},"loc":{"start":{"line":7039,"column":51},"end":{"line":7041,"column":1}},"line":7039},"501":{"name":"(anonymous_501)","decl":{"start":{"line":7045,"column":39},"end":{"line":7045,"column":40}},"loc":{"start":{"line":7045,"column":56},"end":{"line":7047,"column":1}},"line":7045},"502":{"name":"(anonymous_502)","decl":{"start":{"line":7054,"column":48},"end":{"line":7054,"column":49}},"loc":{"start":{"line":7054,"column":60},"end":{"line":7056,"column":1}},"line":7054},"503":{"name":"(anonymous_503)","decl":{"start":{"line":7060,"column":48},"end":{"line":7060,"column":49}},"loc":{"start":{"line":7060,"column":65},"end":{"line":7062,"column":1}},"line":7060},"504":{"name":"(anonymous_504)","decl":{"start":{"line":7069,"column":51},"end":{"line":7069,"column":52}},"loc":{"start":{"line":7069,"column":63},"end":{"line":7071,"column":1}},"line":7069},"505":{"name":"(anonymous_505)","decl":{"start":{"line":7075,"column":51},"end":{"line":7075,"column":52}},"loc":{"start":{"line":7075,"column":68},"end":{"line":7077,"column":1}},"line":7075}},"branchMap":{"0":{"loc":{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},"type":"if","locations":[{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},{"start":{"line":52,"column":0},"end":{"line":54,"column":1}}],"line":52},"1":{"loc":{"start":{"line":52,"column":4},"end":{"line":52,"column":27}},"type":"binary-expr","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":14}},{"start":{"line":52,"column":18},"end":{"line":52,"column":27}}],"line":52},"2":{"loc":{"start":{"line":57,"column":0},"end":{"line":94,"column":1}},"type":"if","locations":[{"start":{"line":57,"column":0},"end":{"line":94,"column":1}},{"start":{"line":57,"column":0},"end":{"line":94,"column":1}}],"line":57},"3":{"loc":{"start":{"line":85,"column":14},"end":{"line":85,"column":91}},"type":"binary-expr","locations":[{"start":{"line":85,"column":15},"end":{"line":85,"column":34}},{"start":{"line":85,"column":39},"end":{"line":85,"column":91}}],"line":85},"4":{"loc":{"start":{"line":86,"column":12},"end":{"line":86,"column":85}},"type":"binary-expr","locations":[{"start":{"line":86,"column":13},"end":{"line":86,"column":30}},{"start":{"line":86,"column":35},"end":{"line":86,"column":85}}],"line":86},"5":{"loc":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},{"start":{"line":89,"column":4},"end":{"line":91,"column":5}}],"line":89},"6":{"loc":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},{"start":{"line":118,"column":4},"end":{"line":120,"column":5}}],"line":118},"7":{"loc":{"start":{"line":122,"column":4},"end":{"line":139,"column":15}},"type":"switch","locations":[{"start":{"line":123,"column":6},"end":{"line":126,"column":14}},{"start":{"line":127,"column":6},"end":{"line":131,"column":14}},{"start":{"line":132,"column":6},"end":{"line":136,"column":14}},{"start":{"line":137,"column":6},"end":{"line":139,"column":14}}],"line":122},"8":{"loc":{"start":{"line":167,"column":2},"end":{"line":172,"column":3}},"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":172,"column":3}},{"start":{"line":167,"column":2},"end":{"line":172,"column":3}}],"line":167},"9":{"loc":{"start":{"line":174,"column":2},"end":{"line":180,"column":3}},"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":180,"column":3}},{"start":{"line":174,"column":2},"end":{"line":180,"column":3}}],"line":174},"10":{"loc":{"start":{"line":182,"column":2},"end":{"line":188,"column":3}},"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":188,"column":3}},{"start":{"line":182,"column":2},"end":{"line":188,"column":3}}],"line":182},"11":{"loc":{"start":{"line":306,"column":0},"end":{"line":308,"column":1}},"type":"if","locations":[{"start":{"line":306,"column":0},"end":{"line":308,"column":1}},{"start":{"line":306,"column":0},"end":{"line":308,"column":1}}],"line":306},"12":{"loc":{"start":{"line":306,"column":4},"end":{"line":306,"column":27}},"type":"binary-expr","locations":[{"start":{"line":306,"column":4},"end":{"line":306,"column":14}},{"start":{"line":306,"column":18},"end":{"line":306,"column":27}}],"line":306},"13":{"loc":{"start":{"line":311,"column":0},"end":{"line":357,"column":1}},"type":"if","locations":[{"start":{"line":311,"column":0},"end":{"line":357,"column":1}},{"start":{"line":311,"column":0},"end":{"line":357,"column":1}}],"line":311},"14":{"loc":{"start":{"line":352,"column":4},"end":{"line":354,"column":5}},"type":"if","locations":[{"start":{"line":352,"column":4},"end":{"line":354,"column":5}},{"start":{"line":352,"column":4},"end":{"line":354,"column":5}}],"line":352},"15":{"loc":{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},{"start":{"line":381,"column":4},"end":{"line":383,"column":5}}],"line":381},"16":{"loc":{"start":{"line":385,"column":4},"end":{"line":436,"column":15}},"type":"switch","locations":[{"start":{"line":386,"column":6},"end":{"line":389,"column":14}},{"start":{"line":390,"column":6},"end":{"line":393,"column":14}},{"start":{"line":394,"column":6},"end":{"line":397,"column":14}},{"start":{"line":398,"column":6},"end":{"line":401,"column":14}},{"start":{"line":402,"column":6},"end":{"line":405,"column":14}},{"start":{"line":406,"column":6},"end":{"line":409,"column":14}},{"start":{"line":410,"column":6},"end":{"line":413,"column":14}},{"start":{"line":414,"column":6},"end":{"line":417,"column":14}},{"start":{"line":418,"column":6},"end":{"line":421,"column":14}},{"start":{"line":422,"column":6},"end":{"line":425,"column":14}},{"start":{"line":426,"column":6},"end":{"line":429,"column":14}},{"start":{"line":430,"column":6},"end":{"line":433,"column":14}},{"start":{"line":434,"column":6},"end":{"line":436,"column":14}}],"line":385},"17":{"loc":{"start":{"line":464,"column":2},"end":{"line":469,"column":3}},"type":"if","locations":[{"start":{"line":464,"column":2},"end":{"line":469,"column":3}},{"start":{"line":464,"column":2},"end":{"line":469,"column":3}}],"line":464},"18":{"loc":{"start":{"line":471,"column":2},"end":{"line":476,"column":3}},"type":"if","locations":[{"start":{"line":471,"column":2},"end":{"line":476,"column":3}},{"start":{"line":471,"column":2},"end":{"line":476,"column":3}}],"line":471},"19":{"loc":{"start":{"line":478,"column":2},"end":{"line":483,"column":3}},"type":"if","locations":[{"start":{"line":478,"column":2},"end":{"line":483,"column":3}},{"start":{"line":478,"column":2},"end":{"line":483,"column":3}}],"line":478},"20":{"loc":{"start":{"line":485,"column":2},"end":{"line":490,"column":3}},"type":"if","locations":[{"start":{"line":485,"column":2},"end":{"line":490,"column":3}},{"start":{"line":485,"column":2},"end":{"line":490,"column":3}}],"line":485},"21":{"loc":{"start":{"line":492,"column":2},"end":{"line":497,"column":3}},"type":"if","locations":[{"start":{"line":492,"column":2},"end":{"line":497,"column":3}},{"start":{"line":492,"column":2},"end":{"line":497,"column":3}}],"line":492},"22":{"loc":{"start":{"line":499,"column":2},"end":{"line":504,"column":3}},"type":"if","locations":[{"start":{"line":499,"column":2},"end":{"line":504,"column":3}},{"start":{"line":499,"column":2},"end":{"line":504,"column":3}}],"line":499},"23":{"loc":{"start":{"line":506,"column":2},"end":{"line":511,"column":3}},"type":"if","locations":[{"start":{"line":506,"column":2},"end":{"line":511,"column":3}},{"start":{"line":506,"column":2},"end":{"line":511,"column":3}}],"line":506},"24":{"loc":{"start":{"line":513,"column":2},"end":{"line":518,"column":3}},"type":"if","locations":[{"start":{"line":513,"column":2},"end":{"line":518,"column":3}},{"start":{"line":513,"column":2},"end":{"line":518,"column":3}}],"line":513},"25":{"loc":{"start":{"line":520,"column":2},"end":{"line":525,"column":3}},"type":"if","locations":[{"start":{"line":520,"column":2},"end":{"line":525,"column":3}},{"start":{"line":520,"column":2},"end":{"line":525,"column":3}}],"line":520},"26":{"loc":{"start":{"line":527,"column":2},"end":{"line":532,"column":3}},"type":"if","locations":[{"start":{"line":527,"column":2},"end":{"line":532,"column":3}},{"start":{"line":527,"column":2},"end":{"line":532,"column":3}}],"line":527},"27":{"loc":{"start":{"line":534,"column":2},"end":{"line":539,"column":3}},"type":"if","locations":[{"start":{"line":534,"column":2},"end":{"line":539,"column":3}},{"start":{"line":534,"column":2},"end":{"line":539,"column":3}}],"line":534},"28":{"loc":{"start":{"line":541,"column":2},"end":{"line":546,"column":3}},"type":"if","locations":[{"start":{"line":541,"column":2},"end":{"line":546,"column":3}},{"start":{"line":541,"column":2},"end":{"line":546,"column":3}}],"line":541},"29":{"loc":{"start":{"line":961,"column":0},"end":{"line":963,"column":1}},"type":"if","locations":[{"start":{"line":961,"column":0},"end":{"line":963,"column":1}},{"start":{"line":961,"column":0},"end":{"line":963,"column":1}}],"line":961},"30":{"loc":{"start":{"line":961,"column":4},"end":{"line":961,"column":27}},"type":"binary-expr","locations":[{"start":{"line":961,"column":4},"end":{"line":961,"column":14}},{"start":{"line":961,"column":18},"end":{"line":961,"column":27}}],"line":961},"31":{"loc":{"start":{"line":973,"column":0},"end":{"line":1009,"column":1}},"type":"if","locations":[{"start":{"line":973,"column":0},"end":{"line":1009,"column":1}},{"start":{"line":973,"column":0},"end":{"line":1009,"column":1}}],"line":973},"32":{"loc":{"start":{"line":1004,"column":4},"end":{"line":1006,"column":5}},"type":"if","locations":[{"start":{"line":1004,"column":4},"end":{"line":1006,"column":5}},{"start":{"line":1004,"column":4},"end":{"line":1006,"column":5}}],"line":1004},"33":{"loc":{"start":{"line":1033,"column":4},"end":{"line":1035,"column":5}},"type":"if","locations":[{"start":{"line":1033,"column":4},"end":{"line":1035,"column":5}},{"start":{"line":1033,"column":4},"end":{"line":1035,"column":5}}],"line":1033},"34":{"loc":{"start":{"line":1037,"column":4},"end":{"line":1045,"column":15}},"type":"switch","locations":[{"start":{"line":1038,"column":6},"end":{"line":1042,"column":14}},{"start":{"line":1043,"column":6},"end":{"line":1045,"column":14}}],"line":1037},"35":{"loc":{"start":{"line":1073,"column":2},"end":{"line":1079,"column":3}},"type":"if","locations":[{"start":{"line":1073,"column":2},"end":{"line":1079,"column":3}},{"start":{"line":1073,"column":2},"end":{"line":1079,"column":3}}],"line":1073},"36":{"loc":{"start":{"line":1129,"column":0},"end":{"line":1131,"column":1}},"type":"if","locations":[{"start":{"line":1129,"column":0},"end":{"line":1131,"column":1}},{"start":{"line":1129,"column":0},"end":{"line":1131,"column":1}}],"line":1129},"37":{"loc":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1129,"column":4},"end":{"line":1129,"column":14}},{"start":{"line":1129,"column":18},"end":{"line":1129,"column":27}}],"line":1129},"38":{"loc":{"start":{"line":1141,"column":0},"end":{"line":1177,"column":1}},"type":"if","locations":[{"start":{"line":1141,"column":0},"end":{"line":1177,"column":1}},{"start":{"line":1141,"column":0},"end":{"line":1177,"column":1}}],"line":1141},"39":{"loc":{"start":{"line":1172,"column":4},"end":{"line":1174,"column":5}},"type":"if","locations":[{"start":{"line":1172,"column":4},"end":{"line":1174,"column":5}},{"start":{"line":1172,"column":4},"end":{"line":1174,"column":5}}],"line":1172},"40":{"loc":{"start":{"line":1201,"column":4},"end":{"line":1203,"column":5}},"type":"if","locations":[{"start":{"line":1201,"column":4},"end":{"line":1203,"column":5}},{"start":{"line":1201,"column":4},"end":{"line":1203,"column":5}}],"line":1201},"41":{"loc":{"start":{"line":1205,"column":4},"end":{"line":1213,"column":15}},"type":"switch","locations":[{"start":{"line":1206,"column":6},"end":{"line":1210,"column":14}},{"start":{"line":1211,"column":6},"end":{"line":1213,"column":14}}],"line":1205},"42":{"loc":{"start":{"line":1241,"column":2},"end":{"line":1247,"column":3}},"type":"if","locations":[{"start":{"line":1241,"column":2},"end":{"line":1247,"column":3}},{"start":{"line":1241,"column":2},"end":{"line":1247,"column":3}}],"line":1241},"43":{"loc":{"start":{"line":1297,"column":0},"end":{"line":1299,"column":1}},"type":"if","locations":[{"start":{"line":1297,"column":0},"end":{"line":1299,"column":1}},{"start":{"line":1297,"column":0},"end":{"line":1299,"column":1}}],"line":1297},"44":{"loc":{"start":{"line":1297,"column":4},"end":{"line":1297,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1297,"column":4},"end":{"line":1297,"column":14}},{"start":{"line":1297,"column":18},"end":{"line":1297,"column":27}}],"line":1297},"45":{"loc":{"start":{"line":1302,"column":0},"end":{"line":1338,"column":1}},"type":"if","locations":[{"start":{"line":1302,"column":0},"end":{"line":1338,"column":1}},{"start":{"line":1302,"column":0},"end":{"line":1338,"column":1}}],"line":1302},"46":{"loc":{"start":{"line":1330,"column":12},"end":{"line":1330,"column":82}},"type":"binary-expr","locations":[{"start":{"line":1330,"column":13},"end":{"line":1330,"column":30}},{"start":{"line":1330,"column":35},"end":{"line":1330,"column":82}}],"line":1330},"47":{"loc":{"start":{"line":1333,"column":4},"end":{"line":1335,"column":5}},"type":"if","locations":[{"start":{"line":1333,"column":4},"end":{"line":1335,"column":5}},{"start":{"line":1333,"column":4},"end":{"line":1335,"column":5}}],"line":1333},"48":{"loc":{"start":{"line":1362,"column":4},"end":{"line":1364,"column":5}},"type":"if","locations":[{"start":{"line":1362,"column":4},"end":{"line":1364,"column":5}},{"start":{"line":1362,"column":4},"end":{"line":1364,"column":5}}],"line":1362},"49":{"loc":{"start":{"line":1366,"column":4},"end":{"line":1378,"column":15}},"type":"switch","locations":[{"start":{"line":1367,"column":6},"end":{"line":1370,"column":14}},{"start":{"line":1371,"column":6},"end":{"line":1375,"column":14}},{"start":{"line":1376,"column":6},"end":{"line":1378,"column":14}}],"line":1366},"50":{"loc":{"start":{"line":1406,"column":2},"end":{"line":1411,"column":3}},"type":"if","locations":[{"start":{"line":1406,"column":2},"end":{"line":1411,"column":3}},{"start":{"line":1406,"column":2},"end":{"line":1411,"column":3}}],"line":1406},"51":{"loc":{"start":{"line":1413,"column":2},"end":{"line":1419,"column":3}},"type":"if","locations":[{"start":{"line":1413,"column":2},"end":{"line":1419,"column":3}},{"start":{"line":1413,"column":2},"end":{"line":1419,"column":3}}],"line":1413},"52":{"loc":{"start":{"line":1507,"column":0},"end":{"line":1509,"column":1}},"type":"if","locations":[{"start":{"line":1507,"column":0},"end":{"line":1509,"column":1}},{"start":{"line":1507,"column":0},"end":{"line":1509,"column":1}}],"line":1507},"53":{"loc":{"start":{"line":1507,"column":4},"end":{"line":1507,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1507,"column":4},"end":{"line":1507,"column":14}},{"start":{"line":1507,"column":18},"end":{"line":1507,"column":27}}],"line":1507},"54":{"loc":{"start":{"line":1512,"column":0},"end":{"line":1556,"column":1}},"type":"if","locations":[{"start":{"line":1512,"column":0},"end":{"line":1556,"column":1}},{"start":{"line":1512,"column":0},"end":{"line":1556,"column":1}}],"line":1512},"55":{"loc":{"start":{"line":1551,"column":4},"end":{"line":1553,"column":5}},"type":"if","locations":[{"start":{"line":1551,"column":4},"end":{"line":1553,"column":5}},{"start":{"line":1551,"column":4},"end":{"line":1553,"column":5}}],"line":1551},"56":{"loc":{"start":{"line":1580,"column":4},"end":{"line":1582,"column":5}},"type":"if","locations":[{"start":{"line":1580,"column":4},"end":{"line":1582,"column":5}},{"start":{"line":1580,"column":4},"end":{"line":1582,"column":5}}],"line":1580},"57":{"loc":{"start":{"line":1584,"column":4},"end":{"line":1627,"column":15}},"type":"switch","locations":[{"start":{"line":1585,"column":6},"end":{"line":1588,"column":14}},{"start":{"line":1589,"column":6},"end":{"line":1592,"column":14}},{"start":{"line":1593,"column":6},"end":{"line":1596,"column":14}},{"start":{"line":1597,"column":6},"end":{"line":1600,"column":14}},{"start":{"line":1601,"column":6},"end":{"line":1604,"column":14}},{"start":{"line":1605,"column":6},"end":{"line":1608,"column":14}},{"start":{"line":1609,"column":6},"end":{"line":1612,"column":14}},{"start":{"line":1613,"column":6},"end":{"line":1616,"column":14}},{"start":{"line":1617,"column":6},"end":{"line":1620,"column":14}},{"start":{"line":1621,"column":6},"end":{"line":1624,"column":14}},{"start":{"line":1625,"column":6},"end":{"line":1627,"column":14}}],"line":1584},"58":{"loc":{"start":{"line":1655,"column":2},"end":{"line":1660,"column":3}},"type":"if","locations":[{"start":{"line":1655,"column":2},"end":{"line":1660,"column":3}},{"start":{"line":1655,"column":2},"end":{"line":1660,"column":3}}],"line":1655},"59":{"loc":{"start":{"line":1662,"column":2},"end":{"line":1667,"column":3}},"type":"if","locations":[{"start":{"line":1662,"column":2},"end":{"line":1667,"column":3}},{"start":{"line":1662,"column":2},"end":{"line":1667,"column":3}}],"line":1662},"60":{"loc":{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}},"type":"if","locations":[{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}},{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}}],"line":1669},"61":{"loc":{"start":{"line":1676,"column":2},"end":{"line":1681,"column":3}},"type":"if","locations":[{"start":{"line":1676,"column":2},"end":{"line":1681,"column":3}},{"start":{"line":1676,"column":2},"end":{"line":1681,"column":3}}],"line":1676},"62":{"loc":{"start":{"line":1683,"column":2},"end":{"line":1688,"column":3}},"type":"if","locations":[{"start":{"line":1683,"column":2},"end":{"line":1688,"column":3}},{"start":{"line":1683,"column":2},"end":{"line":1688,"column":3}}],"line":1683},"63":{"loc":{"start":{"line":1690,"column":2},"end":{"line":1695,"column":3}},"type":"if","locations":[{"start":{"line":1690,"column":2},"end":{"line":1695,"column":3}},{"start":{"line":1690,"column":2},"end":{"line":1695,"column":3}}],"line":1690},"64":{"loc":{"start":{"line":1697,"column":2},"end":{"line":1702,"column":3}},"type":"if","locations":[{"start":{"line":1697,"column":2},"end":{"line":1702,"column":3}},{"start":{"line":1697,"column":2},"end":{"line":1702,"column":3}}],"line":1697},"65":{"loc":{"start":{"line":1704,"column":2},"end":{"line":1709,"column":3}},"type":"if","locations":[{"start":{"line":1704,"column":2},"end":{"line":1709,"column":3}},{"start":{"line":1704,"column":2},"end":{"line":1709,"column":3}}],"line":1704},"66":{"loc":{"start":{"line":1711,"column":2},"end":{"line":1716,"column":3}},"type":"if","locations":[{"start":{"line":1711,"column":2},"end":{"line":1716,"column":3}},{"start":{"line":1711,"column":2},"end":{"line":1716,"column":3}}],"line":1711},"67":{"loc":{"start":{"line":1718,"column":2},"end":{"line":1723,"column":3}},"type":"if","locations":[{"start":{"line":1718,"column":2},"end":{"line":1723,"column":3}},{"start":{"line":1718,"column":2},"end":{"line":1723,"column":3}}],"line":1718},"68":{"loc":{"start":{"line":2060,"column":0},"end":{"line":2062,"column":1}},"type":"if","locations":[{"start":{"line":2060,"column":0},"end":{"line":2062,"column":1}},{"start":{"line":2060,"column":0},"end":{"line":2062,"column":1}}],"line":2060},"69":{"loc":{"start":{"line":2060,"column":4},"end":{"line":2060,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2060,"column":4},"end":{"line":2060,"column":14}},{"start":{"line":2060,"column":18},"end":{"line":2060,"column":27}}],"line":2060},"70":{"loc":{"start":{"line":2065,"column":0},"end":{"line":2101,"column":1}},"type":"if","locations":[{"start":{"line":2065,"column":0},"end":{"line":2101,"column":1}},{"start":{"line":2065,"column":0},"end":{"line":2101,"column":1}}],"line":2065},"71":{"loc":{"start":{"line":2096,"column":4},"end":{"line":2098,"column":5}},"type":"if","locations":[{"start":{"line":2096,"column":4},"end":{"line":2098,"column":5}},{"start":{"line":2096,"column":4},"end":{"line":2098,"column":5}}],"line":2096},"72":{"loc":{"start":{"line":2125,"column":4},"end":{"line":2127,"column":5}},"type":"if","locations":[{"start":{"line":2125,"column":4},"end":{"line":2127,"column":5}},{"start":{"line":2125,"column":4},"end":{"line":2127,"column":5}}],"line":2125},"73":{"loc":{"start":{"line":2129,"column":4},"end":{"line":2140,"column":15}},"type":"switch","locations":[{"start":{"line":2130,"column":6},"end":{"line":2133,"column":14}},{"start":{"line":2134,"column":6},"end":{"line":2137,"column":14}},{"start":{"line":2138,"column":6},"end":{"line":2140,"column":14}}],"line":2129},"74":{"loc":{"start":{"line":2168,"column":2},"end":{"line":2173,"column":3}},"type":"if","locations":[{"start":{"line":2168,"column":2},"end":{"line":2173,"column":3}},{"start":{"line":2168,"column":2},"end":{"line":2173,"column":3}}],"line":2168},"75":{"loc":{"start":{"line":2175,"column":2},"end":{"line":2180,"column":3}},"type":"if","locations":[{"start":{"line":2175,"column":2},"end":{"line":2180,"column":3}},{"start":{"line":2175,"column":2},"end":{"line":2180,"column":3}}],"line":2175},"76":{"loc":{"start":{"line":2253,"column":0},"end":{"line":2255,"column":1}},"type":"if","locations":[{"start":{"line":2253,"column":0},"end":{"line":2255,"column":1}},{"start":{"line":2253,"column":0},"end":{"line":2255,"column":1}}],"line":2253},"77":{"loc":{"start":{"line":2253,"column":4},"end":{"line":2253,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2253,"column":4},"end":{"line":2253,"column":14}},{"start":{"line":2253,"column":18},"end":{"line":2253,"column":27}}],"line":2253},"78":{"loc":{"start":{"line":2258,"column":0},"end":{"line":2294,"column":1}},"type":"if","locations":[{"start":{"line":2258,"column":0},"end":{"line":2294,"column":1}},{"start":{"line":2258,"column":0},"end":{"line":2294,"column":1}}],"line":2258},"79":{"loc":{"start":{"line":2285,"column":13},"end":{"line":2285,"column":83}},"type":"binary-expr","locations":[{"start":{"line":2285,"column":14},"end":{"line":2285,"column":32}},{"start":{"line":2285,"column":37},"end":{"line":2285,"column":83}}],"line":2285},"80":{"loc":{"start":{"line":2286,"column":10},"end":{"line":2286,"column":74}},"type":"binary-expr","locations":[{"start":{"line":2286,"column":11},"end":{"line":2286,"column":26}},{"start":{"line":2286,"column":31},"end":{"line":2286,"column":74}}],"line":2286},"81":{"loc":{"start":{"line":2289,"column":4},"end":{"line":2291,"column":5}},"type":"if","locations":[{"start":{"line":2289,"column":4},"end":{"line":2291,"column":5}},{"start":{"line":2289,"column":4},"end":{"line":2291,"column":5}}],"line":2289},"82":{"loc":{"start":{"line":2318,"column":4},"end":{"line":2320,"column":5}},"type":"if","locations":[{"start":{"line":2318,"column":4},"end":{"line":2320,"column":5}},{"start":{"line":2318,"column":4},"end":{"line":2320,"column":5}}],"line":2318},"83":{"loc":{"start":{"line":2322,"column":4},"end":{"line":2335,"column":15}},"type":"switch","locations":[{"start":{"line":2323,"column":6},"end":{"line":2327,"column":14}},{"start":{"line":2328,"column":6},"end":{"line":2332,"column":14}},{"start":{"line":2333,"column":6},"end":{"line":2335,"column":14}}],"line":2322},"84":{"loc":{"start":{"line":2363,"column":2},"end":{"line":2369,"column":3}},"type":"if","locations":[{"start":{"line":2363,"column":2},"end":{"line":2369,"column":3}},{"start":{"line":2363,"column":2},"end":{"line":2369,"column":3}}],"line":2363},"85":{"loc":{"start":{"line":2371,"column":2},"end":{"line":2377,"column":3}},"type":"if","locations":[{"start":{"line":2371,"column":2},"end":{"line":2377,"column":3}},{"start":{"line":2371,"column":2},"end":{"line":2377,"column":3}}],"line":2371},"86":{"loc":{"start":{"line":2456,"column":0},"end":{"line":2458,"column":1}},"type":"if","locations":[{"start":{"line":2456,"column":0},"end":{"line":2458,"column":1}},{"start":{"line":2456,"column":0},"end":{"line":2458,"column":1}}],"line":2456},"87":{"loc":{"start":{"line":2456,"column":4},"end":{"line":2456,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2456,"column":4},"end":{"line":2456,"column":14}},{"start":{"line":2456,"column":18},"end":{"line":2456,"column":27}}],"line":2456},"88":{"loc":{"start":{"line":2461,"column":0},"end":{"line":2500,"column":1}},"type":"if","locations":[{"start":{"line":2461,"column":0},"end":{"line":2500,"column":1}},{"start":{"line":2461,"column":0},"end":{"line":2500,"column":1}}],"line":2461},"89":{"loc":{"start":{"line":2495,"column":4},"end":{"line":2497,"column":5}},"type":"if","locations":[{"start":{"line":2495,"column":4},"end":{"line":2497,"column":5}},{"start":{"line":2495,"column":4},"end":{"line":2497,"column":5}}],"line":2495},"90":{"loc":{"start":{"line":2524,"column":4},"end":{"line":2526,"column":5}},"type":"if","locations":[{"start":{"line":2524,"column":4},"end":{"line":2526,"column":5}},{"start":{"line":2524,"column":4},"end":{"line":2526,"column":5}}],"line":2524},"91":{"loc":{"start":{"line":2528,"column":4},"end":{"line":2551,"column":15}},"type":"switch","locations":[{"start":{"line":2529,"column":6},"end":{"line":2532,"column":14}},{"start":{"line":2533,"column":6},"end":{"line":2536,"column":14}},{"start":{"line":2537,"column":6},"end":{"line":2540,"column":14}},{"start":{"line":2541,"column":6},"end":{"line":2544,"column":14}},{"start":{"line":2545,"column":6},"end":{"line":2548,"column":14}},{"start":{"line":2549,"column":6},"end":{"line":2551,"column":14}}],"line":2528},"92":{"loc":{"start":{"line":2579,"column":2},"end":{"line":2584,"column":3}},"type":"if","locations":[{"start":{"line":2579,"column":2},"end":{"line":2584,"column":3}},{"start":{"line":2579,"column":2},"end":{"line":2584,"column":3}}],"line":2579},"93":{"loc":{"start":{"line":2586,"column":2},"end":{"line":2591,"column":3}},"type":"if","locations":[{"start":{"line":2586,"column":2},"end":{"line":2591,"column":3}},{"start":{"line":2586,"column":2},"end":{"line":2591,"column":3}}],"line":2586},"94":{"loc":{"start":{"line":2593,"column":2},"end":{"line":2598,"column":3}},"type":"if","locations":[{"start":{"line":2593,"column":2},"end":{"line":2598,"column":3}},{"start":{"line":2593,"column":2},"end":{"line":2598,"column":3}}],"line":2593},"95":{"loc":{"start":{"line":2600,"column":2},"end":{"line":2605,"column":3}},"type":"if","locations":[{"start":{"line":2600,"column":2},"end":{"line":2605,"column":3}},{"start":{"line":2600,"column":2},"end":{"line":2605,"column":3}}],"line":2600},"96":{"loc":{"start":{"line":2607,"column":2},"end":{"line":2612,"column":3}},"type":"if","locations":[{"start":{"line":2607,"column":2},"end":{"line":2612,"column":3}},{"start":{"line":2607,"column":2},"end":{"line":2612,"column":3}}],"line":2607},"97":{"loc":{"start":{"line":2778,"column":0},"end":{"line":2780,"column":1}},"type":"if","locations":[{"start":{"line":2778,"column":0},"end":{"line":2780,"column":1}},{"start":{"line":2778,"column":0},"end":{"line":2780,"column":1}}],"line":2778},"98":{"loc":{"start":{"line":2778,"column":4},"end":{"line":2778,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2778,"column":4},"end":{"line":2778,"column":14}},{"start":{"line":2778,"column":18},"end":{"line":2778,"column":27}}],"line":2778},"99":{"loc":{"start":{"line":2790,"column":0},"end":{"line":2832,"column":1}},"type":"if","locations":[{"start":{"line":2790,"column":0},"end":{"line":2832,"column":1}},{"start":{"line":2790,"column":0},"end":{"line":2832,"column":1}}],"line":2790},"100":{"loc":{"start":{"line":2817,"column":13},"end":{"line":2817,"column":83}},"type":"binary-expr","locations":[{"start":{"line":2817,"column":14},"end":{"line":2817,"column":32}},{"start":{"line":2817,"column":37},"end":{"line":2817,"column":83}}],"line":2817},"101":{"loc":{"start":{"line":2827,"column":4},"end":{"line":2829,"column":5}},"type":"if","locations":[{"start":{"line":2827,"column":4},"end":{"line":2829,"column":5}},{"start":{"line":2827,"column":4},"end":{"line":2829,"column":5}}],"line":2827},"102":{"loc":{"start":{"line":2856,"column":4},"end":{"line":2858,"column":5}},"type":"if","locations":[{"start":{"line":2856,"column":4},"end":{"line":2858,"column":5}},{"start":{"line":2856,"column":4},"end":{"line":2858,"column":5}}],"line":2856},"103":{"loc":{"start":{"line":2860,"column":4},"end":{"line":2896,"column":15}},"type":"switch","locations":[{"start":{"line":2861,"column":6},"end":{"line":2865,"column":14}},{"start":{"line":2866,"column":6},"end":{"line":2869,"column":14}},{"start":{"line":2870,"column":6},"end":{"line":2873,"column":14}},{"start":{"line":2874,"column":6},"end":{"line":2877,"column":14}},{"start":{"line":2878,"column":6},"end":{"line":2881,"column":14}},{"start":{"line":2882,"column":6},"end":{"line":2885,"column":14}},{"start":{"line":2886,"column":6},"end":{"line":2889,"column":14}},{"start":{"line":2890,"column":6},"end":{"line":2893,"column":14}},{"start":{"line":2894,"column":6},"end":{"line":2896,"column":14}}],"line":2860},"104":{"loc":{"start":{"line":2924,"column":2},"end":{"line":2930,"column":3}},"type":"if","locations":[{"start":{"line":2924,"column":2},"end":{"line":2930,"column":3}},{"start":{"line":2924,"column":2},"end":{"line":2930,"column":3}}],"line":2924},"105":{"loc":{"start":{"line":2932,"column":2},"end":{"line":2937,"column":3}},"type":"if","locations":[{"start":{"line":2932,"column":2},"end":{"line":2937,"column":3}},{"start":{"line":2932,"column":2},"end":{"line":2937,"column":3}}],"line":2932},"106":{"loc":{"start":{"line":2939,"column":2},"end":{"line":2944,"column":3}},"type":"if","locations":[{"start":{"line":2939,"column":2},"end":{"line":2944,"column":3}},{"start":{"line":2939,"column":2},"end":{"line":2944,"column":3}}],"line":2939},"107":{"loc":{"start":{"line":2946,"column":2},"end":{"line":2951,"column":3}},"type":"if","locations":[{"start":{"line":2946,"column":2},"end":{"line":2951,"column":3}},{"start":{"line":2946,"column":2},"end":{"line":2951,"column":3}}],"line":2946},"108":{"loc":{"start":{"line":2953,"column":2},"end":{"line":2958,"column":3}},"type":"if","locations":[{"start":{"line":2953,"column":2},"end":{"line":2958,"column":3}},{"start":{"line":2953,"column":2},"end":{"line":2958,"column":3}}],"line":2953},"109":{"loc":{"start":{"line":2960,"column":2},"end":{"line":2965,"column":3}},"type":"if","locations":[{"start":{"line":2960,"column":2},"end":{"line":2965,"column":3}},{"start":{"line":2960,"column":2},"end":{"line":2965,"column":3}}],"line":2960},"110":{"loc":{"start":{"line":2967,"column":2},"end":{"line":2972,"column":3}},"type":"if","locations":[{"start":{"line":2967,"column":2},"end":{"line":2972,"column":3}},{"start":{"line":2967,"column":2},"end":{"line":2972,"column":3}}],"line":2967},"111":{"loc":{"start":{"line":2974,"column":2},"end":{"line":2979,"column":3}},"type":"if","locations":[{"start":{"line":2974,"column":2},"end":{"line":2979,"column":3}},{"start":{"line":2974,"column":2},"end":{"line":2979,"column":3}}],"line":2974},"112":{"loc":{"start":{"line":3236,"column":33},"end":{"line":3236,"column":44}},"type":"binary-expr","locations":[{"start":{"line":3236,"column":33},"end":{"line":3236,"column":38}},{"start":{"line":3236,"column":42},"end":{"line":3236,"column":44}}],"line":3236},"113":{"loc":{"start":{"line":3269,"column":0},"end":{"line":3271,"column":1}},"type":"if","locations":[{"start":{"line":3269,"column":0},"end":{"line":3271,"column":1}},{"start":{"line":3269,"column":0},"end":{"line":3271,"column":1}}],"line":3269},"114":{"loc":{"start":{"line":3269,"column":4},"end":{"line":3269,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3269,"column":4},"end":{"line":3269,"column":14}},{"start":{"line":3269,"column":18},"end":{"line":3269,"column":27}}],"line":3269},"115":{"loc":{"start":{"line":3281,"column":0},"end":{"line":3323,"column":1}},"type":"if","locations":[{"start":{"line":3281,"column":0},"end":{"line":3323,"column":1}},{"start":{"line":3281,"column":0},"end":{"line":3323,"column":1}}],"line":3281},"116":{"loc":{"start":{"line":3318,"column":4},"end":{"line":3320,"column":5}},"type":"if","locations":[{"start":{"line":3318,"column":4},"end":{"line":3320,"column":5}},{"start":{"line":3318,"column":4},"end":{"line":3320,"column":5}}],"line":3318},"117":{"loc":{"start":{"line":3347,"column":4},"end":{"line":3349,"column":5}},"type":"if","locations":[{"start":{"line":3347,"column":4},"end":{"line":3349,"column":5}},{"start":{"line":3347,"column":4},"end":{"line":3349,"column":5}}],"line":3347},"118":{"loc":{"start":{"line":3351,"column":4},"end":{"line":3386,"column":15}},"type":"switch","locations":[{"start":{"line":3352,"column":6},"end":{"line":3355,"column":14}},{"start":{"line":3356,"column":6},"end":{"line":3359,"column":14}},{"start":{"line":3360,"column":6},"end":{"line":3363,"column":14}},{"start":{"line":3364,"column":6},"end":{"line":3367,"column":14}},{"start":{"line":3368,"column":6},"end":{"line":3371,"column":14}},{"start":{"line":3372,"column":6},"end":{"line":3375,"column":14}},{"start":{"line":3376,"column":6},"end":{"line":3379,"column":14}},{"start":{"line":3380,"column":6},"end":{"line":3383,"column":14}},{"start":{"line":3384,"column":6},"end":{"line":3386,"column":14}}],"line":3351},"119":{"loc":{"start":{"line":3414,"column":2},"end":{"line":3419,"column":3}},"type":"if","locations":[{"start":{"line":3414,"column":2},"end":{"line":3419,"column":3}},{"start":{"line":3414,"column":2},"end":{"line":3419,"column":3}}],"line":3414},"120":{"loc":{"start":{"line":3421,"column":2},"end":{"line":3426,"column":3}},"type":"if","locations":[{"start":{"line":3421,"column":2},"end":{"line":3426,"column":3}},{"start":{"line":3421,"column":2},"end":{"line":3426,"column":3}}],"line":3421},"121":{"loc":{"start":{"line":3428,"column":2},"end":{"line":3433,"column":3}},"type":"if","locations":[{"start":{"line":3428,"column":2},"end":{"line":3433,"column":3}},{"start":{"line":3428,"column":2},"end":{"line":3433,"column":3}}],"line":3428},"122":{"loc":{"start":{"line":3435,"column":2},"end":{"line":3440,"column":3}},"type":"if","locations":[{"start":{"line":3435,"column":2},"end":{"line":3440,"column":3}},{"start":{"line":3435,"column":2},"end":{"line":3440,"column":3}}],"line":3435},"123":{"loc":{"start":{"line":3442,"column":2},"end":{"line":3447,"column":3}},"type":"if","locations":[{"start":{"line":3442,"column":2},"end":{"line":3447,"column":3}},{"start":{"line":3442,"column":2},"end":{"line":3447,"column":3}}],"line":3442},"124":{"loc":{"start":{"line":3449,"column":2},"end":{"line":3454,"column":3}},"type":"if","locations":[{"start":{"line":3449,"column":2},"end":{"line":3454,"column":3}},{"start":{"line":3449,"column":2},"end":{"line":3454,"column":3}}],"line":3449},"125":{"loc":{"start":{"line":3456,"column":2},"end":{"line":3461,"column":3}},"type":"if","locations":[{"start":{"line":3456,"column":2},"end":{"line":3461,"column":3}},{"start":{"line":3456,"column":2},"end":{"line":3461,"column":3}}],"line":3456},"126":{"loc":{"start":{"line":3463,"column":2},"end":{"line":3468,"column":3}},"type":"if","locations":[{"start":{"line":3463,"column":2},"end":{"line":3468,"column":3}},{"start":{"line":3463,"column":2},"end":{"line":3468,"column":3}}],"line":3463},"127":{"loc":{"start":{"line":3695,"column":33},"end":{"line":3695,"column":44}},"type":"binary-expr","locations":[{"start":{"line":3695,"column":33},"end":{"line":3695,"column":38}},{"start":{"line":3695,"column":42},"end":{"line":3695,"column":44}}],"line":3695},"128":{"loc":{"start":{"line":3767,"column":0},"end":{"line":3769,"column":1}},"type":"if","locations":[{"start":{"line":3767,"column":0},"end":{"line":3769,"column":1}},{"start":{"line":3767,"column":0},"end":{"line":3769,"column":1}}],"line":3767},"129":{"loc":{"start":{"line":3767,"column":4},"end":{"line":3767,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3767,"column":4},"end":{"line":3767,"column":14}},{"start":{"line":3767,"column":18},"end":{"line":3767,"column":27}}],"line":3767},"130":{"loc":{"start":{"line":3779,"column":0},"end":{"line":3816,"column":1}},"type":"if","locations":[{"start":{"line":3779,"column":0},"end":{"line":3816,"column":1}},{"start":{"line":3779,"column":0},"end":{"line":3816,"column":1}}],"line":3779},"131":{"loc":{"start":{"line":3806,"column":21},"end":{"line":3806,"column":106}},"type":"binary-expr","locations":[{"start":{"line":3806,"column":22},"end":{"line":3806,"column":48}},{"start":{"line":3806,"column":53},"end":{"line":3806,"column":106}}],"line":3806},"132":{"loc":{"start":{"line":3811,"column":4},"end":{"line":3813,"column":5}},"type":"if","locations":[{"start":{"line":3811,"column":4},"end":{"line":3813,"column":5}},{"start":{"line":3811,"column":4},"end":{"line":3813,"column":5}}],"line":3811},"133":{"loc":{"start":{"line":3840,"column":4},"end":{"line":3842,"column":5}},"type":"if","locations":[{"start":{"line":3840,"column":4},"end":{"line":3842,"column":5}},{"start":{"line":3840,"column":4},"end":{"line":3842,"column":5}}],"line":3840},"134":{"loc":{"start":{"line":3844,"column":4},"end":{"line":3857,"column":15}},"type":"switch","locations":[{"start":{"line":3845,"column":6},"end":{"line":3849,"column":14}},{"start":{"line":3850,"column":6},"end":{"line":3854,"column":14}},{"start":{"line":3855,"column":6},"end":{"line":3857,"column":14}}],"line":3844},"135":{"loc":{"start":{"line":3885,"column":2},"end":{"line":3891,"column":3}},"type":"if","locations":[{"start":{"line":3885,"column":2},"end":{"line":3891,"column":3}},{"start":{"line":3885,"column":2},"end":{"line":3891,"column":3}}],"line":3885},"136":{"loc":{"start":{"line":3893,"column":2},"end":{"line":3899,"column":3}},"type":"if","locations":[{"start":{"line":3893,"column":2},"end":{"line":3899,"column":3}},{"start":{"line":3893,"column":2},"end":{"line":3899,"column":3}}],"line":3893},"137":{"loc":{"start":{"line":3979,"column":0},"end":{"line":3981,"column":1}},"type":"if","locations":[{"start":{"line":3979,"column":0},"end":{"line":3981,"column":1}},{"start":{"line":3979,"column":0},"end":{"line":3981,"column":1}}],"line":3979},"138":{"loc":{"start":{"line":3979,"column":4},"end":{"line":3979,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3979,"column":4},"end":{"line":3979,"column":14}},{"start":{"line":3979,"column":18},"end":{"line":3979,"column":27}}],"line":3979},"139":{"loc":{"start":{"line":3991,"column":0},"end":{"line":4041,"column":1}},"type":"if","locations":[{"start":{"line":3991,"column":0},"end":{"line":4041,"column":1}},{"start":{"line":3991,"column":0},"end":{"line":4041,"column":1}}],"line":3991},"140":{"loc":{"start":{"line":4036,"column":4},"end":{"line":4038,"column":5}},"type":"if","locations":[{"start":{"line":4036,"column":4},"end":{"line":4038,"column":5}},{"start":{"line":4036,"column":4},"end":{"line":4038,"column":5}}],"line":4036},"141":{"loc":{"start":{"line":4065,"column":4},"end":{"line":4067,"column":5}},"type":"if","locations":[{"start":{"line":4065,"column":4},"end":{"line":4067,"column":5}},{"start":{"line":4065,"column":4},"end":{"line":4067,"column":5}}],"line":4065},"142":{"loc":{"start":{"line":4069,"column":4},"end":{"line":4133,"column":15}},"type":"switch","locations":[{"start":{"line":4070,"column":6},"end":{"line":4073,"column":14}},{"start":{"line":4074,"column":6},"end":{"line":4077,"column":14}},{"start":{"line":4078,"column":6},"end":{"line":4081,"column":14}},{"start":{"line":4082,"column":6},"end":{"line":4085,"column":14}},{"start":{"line":4086,"column":6},"end":{"line":4089,"column":14}},{"start":{"line":4090,"column":6},"end":{"line":4093,"column":14}},{"start":{"line":4094,"column":6},"end":{"line":4097,"column":14}},{"start":{"line":4098,"column":6},"end":{"line":4102,"column":14}},{"start":{"line":4103,"column":6},"end":{"line":4106,"column":14}},{"start":{"line":4107,"column":6},"end":{"line":4110,"column":14}},{"start":{"line":4111,"column":6},"end":{"line":4114,"column":14}},{"start":{"line":4115,"column":6},"end":{"line":4118,"column":14}},{"start":{"line":4119,"column":6},"end":{"line":4122,"column":14}},{"start":{"line":4123,"column":6},"end":{"line":4126,"column":14}},{"start":{"line":4127,"column":6},"end":{"line":4130,"column":14}},{"start":{"line":4131,"column":6},"end":{"line":4133,"column":14}}],"line":4069},"143":{"loc":{"start":{"line":4161,"column":2},"end":{"line":4166,"column":3}},"type":"if","locations":[{"start":{"line":4161,"column":2},"end":{"line":4166,"column":3}},{"start":{"line":4161,"column":2},"end":{"line":4166,"column":3}}],"line":4161},"144":{"loc":{"start":{"line":4168,"column":2},"end":{"line":4173,"column":3}},"type":"if","locations":[{"start":{"line":4168,"column":2},"end":{"line":4173,"column":3}},{"start":{"line":4168,"column":2},"end":{"line":4173,"column":3}}],"line":4168},"145":{"loc":{"start":{"line":4175,"column":2},"end":{"line":4180,"column":3}},"type":"if","locations":[{"start":{"line":4175,"column":2},"end":{"line":4180,"column":3}},{"start":{"line":4175,"column":2},"end":{"line":4180,"column":3}}],"line":4175},"146":{"loc":{"start":{"line":4182,"column":2},"end":{"line":4187,"column":3}},"type":"if","locations":[{"start":{"line":4182,"column":2},"end":{"line":4187,"column":3}},{"start":{"line":4182,"column":2},"end":{"line":4187,"column":3}}],"line":4182},"147":{"loc":{"start":{"line":4189,"column":2},"end":{"line":4194,"column":3}},"type":"if","locations":[{"start":{"line":4189,"column":2},"end":{"line":4194,"column":3}},{"start":{"line":4189,"column":2},"end":{"line":4194,"column":3}}],"line":4189},"148":{"loc":{"start":{"line":4196,"column":2},"end":{"line":4201,"column":3}},"type":"if","locations":[{"start":{"line":4196,"column":2},"end":{"line":4201,"column":3}},{"start":{"line":4196,"column":2},"end":{"line":4201,"column":3}}],"line":4196},"149":{"loc":{"start":{"line":4203,"column":2},"end":{"line":4208,"column":3}},"type":"if","locations":[{"start":{"line":4203,"column":2},"end":{"line":4208,"column":3}},{"start":{"line":4203,"column":2},"end":{"line":4208,"column":3}}],"line":4203},"150":{"loc":{"start":{"line":4210,"column":2},"end":{"line":4216,"column":3}},"type":"if","locations":[{"start":{"line":4210,"column":2},"end":{"line":4216,"column":3}},{"start":{"line":4210,"column":2},"end":{"line":4216,"column":3}}],"line":4210},"151":{"loc":{"start":{"line":4218,"column":2},"end":{"line":4223,"column":3}},"type":"if","locations":[{"start":{"line":4218,"column":2},"end":{"line":4223,"column":3}},{"start":{"line":4218,"column":2},"end":{"line":4223,"column":3}}],"line":4218},"152":{"loc":{"start":{"line":4225,"column":2},"end":{"line":4230,"column":3}},"type":"if","locations":[{"start":{"line":4225,"column":2},"end":{"line":4230,"column":3}},{"start":{"line":4225,"column":2},"end":{"line":4230,"column":3}}],"line":4225},"153":{"loc":{"start":{"line":4232,"column":2},"end":{"line":4237,"column":3}},"type":"if","locations":[{"start":{"line":4232,"column":2},"end":{"line":4237,"column":3}},{"start":{"line":4232,"column":2},"end":{"line":4237,"column":3}}],"line":4232},"154":{"loc":{"start":{"line":4239,"column":2},"end":{"line":4244,"column":3}},"type":"if","locations":[{"start":{"line":4239,"column":2},"end":{"line":4244,"column":3}},{"start":{"line":4239,"column":2},"end":{"line":4244,"column":3}}],"line":4239},"155":{"loc":{"start":{"line":4246,"column":2},"end":{"line":4251,"column":3}},"type":"if","locations":[{"start":{"line":4246,"column":2},"end":{"line":4251,"column":3}},{"start":{"line":4246,"column":2},"end":{"line":4251,"column":3}}],"line":4246},"156":{"loc":{"start":{"line":4253,"column":2},"end":{"line":4258,"column":3}},"type":"if","locations":[{"start":{"line":4253,"column":2},"end":{"line":4258,"column":3}},{"start":{"line":4253,"column":2},"end":{"line":4258,"column":3}}],"line":4253},"157":{"loc":{"start":{"line":4260,"column":2},"end":{"line":4265,"column":3}},"type":"if","locations":[{"start":{"line":4260,"column":2},"end":{"line":4265,"column":3}},{"start":{"line":4260,"column":2},"end":{"line":4265,"column":3}}],"line":4260},"158":{"loc":{"start":{"line":4719,"column":0},"end":{"line":4721,"column":1}},"type":"if","locations":[{"start":{"line":4719,"column":0},"end":{"line":4721,"column":1}},{"start":{"line":4719,"column":0},"end":{"line":4721,"column":1}}],"line":4719},"159":{"loc":{"start":{"line":4719,"column":4},"end":{"line":4719,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4719,"column":4},"end":{"line":4719,"column":14}},{"start":{"line":4719,"column":18},"end":{"line":4719,"column":27}}],"line":4719},"160":{"loc":{"start":{"line":4724,"column":0},"end":{"line":4766,"column":1}},"type":"if","locations":[{"start":{"line":4724,"column":0},"end":{"line":4766,"column":1}},{"start":{"line":4724,"column":0},"end":{"line":4766,"column":1}}],"line":4724},"161":{"loc":{"start":{"line":4761,"column":4},"end":{"line":4763,"column":5}},"type":"if","locations":[{"start":{"line":4761,"column":4},"end":{"line":4763,"column":5}},{"start":{"line":4761,"column":4},"end":{"line":4763,"column":5}}],"line":4761},"162":{"loc":{"start":{"line":4790,"column":4},"end":{"line":4792,"column":5}},"type":"if","locations":[{"start":{"line":4790,"column":4},"end":{"line":4792,"column":5}},{"start":{"line":4790,"column":4},"end":{"line":4792,"column":5}}],"line":4790},"163":{"loc":{"start":{"line":4794,"column":4},"end":{"line":4829,"column":15}},"type":"switch","locations":[{"start":{"line":4795,"column":6},"end":{"line":4798,"column":14}},{"start":{"line":4799,"column":6},"end":{"line":4802,"column":14}},{"start":{"line":4803,"column":6},"end":{"line":4806,"column":14}},{"start":{"line":4807,"column":6},"end":{"line":4810,"column":14}},{"start":{"line":4811,"column":6},"end":{"line":4814,"column":14}},{"start":{"line":4815,"column":6},"end":{"line":4818,"column":14}},{"start":{"line":4819,"column":6},"end":{"line":4822,"column":14}},{"start":{"line":4823,"column":6},"end":{"line":4826,"column":14}},{"start":{"line":4827,"column":6},"end":{"line":4829,"column":14}}],"line":4794},"164":{"loc":{"start":{"line":4857,"column":2},"end":{"line":4862,"column":3}},"type":"if","locations":[{"start":{"line":4857,"column":2},"end":{"line":4862,"column":3}},{"start":{"line":4857,"column":2},"end":{"line":4862,"column":3}}],"line":4857},"165":{"loc":{"start":{"line":4864,"column":2},"end":{"line":4869,"column":3}},"type":"if","locations":[{"start":{"line":4864,"column":2},"end":{"line":4869,"column":3}},{"start":{"line":4864,"column":2},"end":{"line":4869,"column":3}}],"line":4864},"166":{"loc":{"start":{"line":4871,"column":2},"end":{"line":4876,"column":3}},"type":"if","locations":[{"start":{"line":4871,"column":2},"end":{"line":4876,"column":3}},{"start":{"line":4871,"column":2},"end":{"line":4876,"column":3}}],"line":4871},"167":{"loc":{"start":{"line":4878,"column":2},"end":{"line":4883,"column":3}},"type":"if","locations":[{"start":{"line":4878,"column":2},"end":{"line":4883,"column":3}},{"start":{"line":4878,"column":2},"end":{"line":4883,"column":3}}],"line":4878},"168":{"loc":{"start":{"line":4885,"column":2},"end":{"line":4890,"column":3}},"type":"if","locations":[{"start":{"line":4885,"column":2},"end":{"line":4890,"column":3}},{"start":{"line":4885,"column":2},"end":{"line":4890,"column":3}}],"line":4885},"169":{"loc":{"start":{"line":4892,"column":2},"end":{"line":4897,"column":3}},"type":"if","locations":[{"start":{"line":4892,"column":2},"end":{"line":4897,"column":3}},{"start":{"line":4892,"column":2},"end":{"line":4897,"column":3}}],"line":4892},"170":{"loc":{"start":{"line":4899,"column":2},"end":{"line":4904,"column":3}},"type":"if","locations":[{"start":{"line":4899,"column":2},"end":{"line":4904,"column":3}},{"start":{"line":4899,"column":2},"end":{"line":4904,"column":3}}],"line":4899},"171":{"loc":{"start":{"line":4906,"column":2},"end":{"line":4911,"column":3}},"type":"if","locations":[{"start":{"line":4906,"column":2},"end":{"line":4911,"column":3}},{"start":{"line":4906,"column":2},"end":{"line":4911,"column":3}}],"line":4906},"172":{"loc":{"start":{"line":5122,"column":0},"end":{"line":5124,"column":1}},"type":"if","locations":[{"start":{"line":5122,"column":0},"end":{"line":5124,"column":1}},{"start":{"line":5122,"column":0},"end":{"line":5124,"column":1}}],"line":5122},"173":{"loc":{"start":{"line":5122,"column":4},"end":{"line":5122,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5122,"column":4},"end":{"line":5122,"column":14}},{"start":{"line":5122,"column":18},"end":{"line":5122,"column":27}}],"line":5122},"174":{"loc":{"start":{"line":5127,"column":0},"end":{"line":5162,"column":1}},"type":"if","locations":[{"start":{"line":5127,"column":0},"end":{"line":5162,"column":1}},{"start":{"line":5127,"column":0},"end":{"line":5162,"column":1}}],"line":5127},"175":{"loc":{"start":{"line":5157,"column":4},"end":{"line":5159,"column":5}},"type":"if","locations":[{"start":{"line":5157,"column":4},"end":{"line":5159,"column":5}},{"start":{"line":5157,"column":4},"end":{"line":5159,"column":5}}],"line":5157},"176":{"loc":{"start":{"line":5186,"column":4},"end":{"line":5188,"column":5}},"type":"if","locations":[{"start":{"line":5186,"column":4},"end":{"line":5188,"column":5}},{"start":{"line":5186,"column":4},"end":{"line":5188,"column":5}}],"line":5186},"177":{"loc":{"start":{"line":5190,"column":4},"end":{"line":5197,"column":15}},"type":"switch","locations":[{"start":{"line":5191,"column":6},"end":{"line":5194,"column":14}},{"start":{"line":5195,"column":6},"end":{"line":5197,"column":14}}],"line":5190},"178":{"loc":{"start":{"line":5225,"column":2},"end":{"line":5230,"column":3}},"type":"if","locations":[{"start":{"line":5225,"column":2},"end":{"line":5230,"column":3}},{"start":{"line":5225,"column":2},"end":{"line":5230,"column":3}}],"line":5225},"179":{"loc":{"start":{"line":5264,"column":0},"end":{"line":5266,"column":1}},"type":"if","locations":[{"start":{"line":5264,"column":0},"end":{"line":5266,"column":1}},{"start":{"line":5264,"column":0},"end":{"line":5266,"column":1}}],"line":5264},"180":{"loc":{"start":{"line":5264,"column":4},"end":{"line":5264,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5264,"column":4},"end":{"line":5264,"column":14}},{"start":{"line":5264,"column":18},"end":{"line":5264,"column":27}}],"line":5264},"181":{"loc":{"start":{"line":5276,"column":0},"end":{"line":5316,"column":1}},"type":"if","locations":[{"start":{"line":5276,"column":0},"end":{"line":5316,"column":1}},{"start":{"line":5276,"column":0},"end":{"line":5316,"column":1}}],"line":5276},"182":{"loc":{"start":{"line":5311,"column":4},"end":{"line":5313,"column":5}},"type":"if","locations":[{"start":{"line":5311,"column":4},"end":{"line":5313,"column":5}},{"start":{"line":5311,"column":4},"end":{"line":5313,"column":5}}],"line":5311},"183":{"loc":{"start":{"line":5340,"column":4},"end":{"line":5342,"column":5}},"type":"if","locations":[{"start":{"line":5340,"column":4},"end":{"line":5342,"column":5}},{"start":{"line":5340,"column":4},"end":{"line":5342,"column":5}}],"line":5340},"184":{"loc":{"start":{"line":5344,"column":4},"end":{"line":5368,"column":15}},"type":"switch","locations":[{"start":{"line":5345,"column":6},"end":{"line":5348,"column":14}},{"start":{"line":5349,"column":6},"end":{"line":5353,"column":14}},{"start":{"line":5354,"column":6},"end":{"line":5357,"column":14}},{"start":{"line":5358,"column":6},"end":{"line":5361,"column":14}},{"start":{"line":5362,"column":6},"end":{"line":5365,"column":14}},{"start":{"line":5366,"column":6},"end":{"line":5368,"column":14}}],"line":5344},"185":{"loc":{"start":{"line":5396,"column":2},"end":{"line":5401,"column":3}},"type":"if","locations":[{"start":{"line":5396,"column":2},"end":{"line":5401,"column":3}},{"start":{"line":5396,"column":2},"end":{"line":5401,"column":3}}],"line":5396},"186":{"loc":{"start":{"line":5403,"column":2},"end":{"line":5409,"column":3}},"type":"if","locations":[{"start":{"line":5403,"column":2},"end":{"line":5409,"column":3}},{"start":{"line":5403,"column":2},"end":{"line":5409,"column":3}}],"line":5403},"187":{"loc":{"start":{"line":5411,"column":2},"end":{"line":5416,"column":3}},"type":"if","locations":[{"start":{"line":5411,"column":2},"end":{"line":5416,"column":3}},{"start":{"line":5411,"column":2},"end":{"line":5416,"column":3}}],"line":5411},"188":{"loc":{"start":{"line":5418,"column":2},"end":{"line":5423,"column":3}},"type":"if","locations":[{"start":{"line":5418,"column":2},"end":{"line":5423,"column":3}},{"start":{"line":5418,"column":2},"end":{"line":5423,"column":3}}],"line":5418},"189":{"loc":{"start":{"line":5425,"column":2},"end":{"line":5430,"column":3}},"type":"if","locations":[{"start":{"line":5425,"column":2},"end":{"line":5430,"column":3}},{"start":{"line":5425,"column":2},"end":{"line":5430,"column":3}}],"line":5425},"190":{"loc":{"start":{"line":5546,"column":0},"end":{"line":5548,"column":1}},"type":"if","locations":[{"start":{"line":5546,"column":0},"end":{"line":5548,"column":1}},{"start":{"line":5546,"column":0},"end":{"line":5548,"column":1}}],"line":5546},"191":{"loc":{"start":{"line":5546,"column":4},"end":{"line":5546,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5546,"column":4},"end":{"line":5546,"column":14}},{"start":{"line":5546,"column":18},"end":{"line":5546,"column":27}}],"line":5546},"192":{"loc":{"start":{"line":5551,"column":0},"end":{"line":5588,"column":1}},"type":"if","locations":[{"start":{"line":5551,"column":0},"end":{"line":5588,"column":1}},{"start":{"line":5551,"column":0},"end":{"line":5588,"column":1}}],"line":5551},"193":{"loc":{"start":{"line":5583,"column":4},"end":{"line":5585,"column":5}},"type":"if","locations":[{"start":{"line":5583,"column":4},"end":{"line":5585,"column":5}},{"start":{"line":5583,"column":4},"end":{"line":5585,"column":5}}],"line":5583},"194":{"loc":{"start":{"line":5612,"column":4},"end":{"line":5614,"column":5}},"type":"if","locations":[{"start":{"line":5612,"column":4},"end":{"line":5614,"column":5}},{"start":{"line":5612,"column":4},"end":{"line":5614,"column":5}}],"line":5612},"195":{"loc":{"start":{"line":5616,"column":4},"end":{"line":5631,"column":15}},"type":"switch","locations":[{"start":{"line":5617,"column":6},"end":{"line":5620,"column":14}},{"start":{"line":5621,"column":6},"end":{"line":5624,"column":14}},{"start":{"line":5625,"column":6},"end":{"line":5628,"column":14}},{"start":{"line":5629,"column":6},"end":{"line":5631,"column":14}}],"line":5616},"196":{"loc":{"start":{"line":5659,"column":2},"end":{"line":5664,"column":3}},"type":"if","locations":[{"start":{"line":5659,"column":2},"end":{"line":5664,"column":3}},{"start":{"line":5659,"column":2},"end":{"line":5664,"column":3}}],"line":5659},"197":{"loc":{"start":{"line":5666,"column":2},"end":{"line":5671,"column":3}},"type":"if","locations":[{"start":{"line":5666,"column":2},"end":{"line":5671,"column":3}},{"start":{"line":5666,"column":2},"end":{"line":5671,"column":3}}],"line":5666},"198":{"loc":{"start":{"line":5673,"column":2},"end":{"line":5678,"column":3}},"type":"if","locations":[{"start":{"line":5673,"column":2},"end":{"line":5678,"column":3}},{"start":{"line":5673,"column":2},"end":{"line":5678,"column":3}}],"line":5673},"199":{"loc":{"start":{"line":5742,"column":0},"end":{"line":5744,"column":1}},"type":"if","locations":[{"start":{"line":5742,"column":0},"end":{"line":5744,"column":1}},{"start":{"line":5742,"column":0},"end":{"line":5744,"column":1}}],"line":5742},"200":{"loc":{"start":{"line":5742,"column":4},"end":{"line":5742,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5742,"column":4},"end":{"line":5742,"column":14}},{"start":{"line":5742,"column":18},"end":{"line":5742,"column":27}}],"line":5742},"201":{"loc":{"start":{"line":5754,"column":0},"end":{"line":5794,"column":1}},"type":"if","locations":[{"start":{"line":5754,"column":0},"end":{"line":5794,"column":1}},{"start":{"line":5754,"column":0},"end":{"line":5794,"column":1}}],"line":5754},"202":{"loc":{"start":{"line":5789,"column":4},"end":{"line":5791,"column":5}},"type":"if","locations":[{"start":{"line":5789,"column":4},"end":{"line":5791,"column":5}},{"start":{"line":5789,"column":4},"end":{"line":5791,"column":5}}],"line":5789},"203":{"loc":{"start":{"line":5818,"column":4},"end":{"line":5820,"column":5}},"type":"if","locations":[{"start":{"line":5818,"column":4},"end":{"line":5820,"column":5}},{"start":{"line":5818,"column":4},"end":{"line":5820,"column":5}}],"line":5818},"204":{"loc":{"start":{"line":5822,"column":4},"end":{"line":5843,"column":15}},"type":"switch","locations":[{"start":{"line":5823,"column":6},"end":{"line":5826,"column":14}},{"start":{"line":5827,"column":6},"end":{"line":5830,"column":14}},{"start":{"line":5831,"column":6},"end":{"line":5835,"column":14}},{"start":{"line":5836,"column":6},"end":{"line":5840,"column":14}},{"start":{"line":5841,"column":6},"end":{"line":5843,"column":14}}],"line":5822},"205":{"loc":{"start":{"line":5871,"column":2},"end":{"line":5876,"column":3}},"type":"if","locations":[{"start":{"line":5871,"column":2},"end":{"line":5876,"column":3}},{"start":{"line":5871,"column":2},"end":{"line":5876,"column":3}}],"line":5871},"206":{"loc":{"start":{"line":5878,"column":2},"end":{"line":5883,"column":3}},"type":"if","locations":[{"start":{"line":5878,"column":2},"end":{"line":5883,"column":3}},{"start":{"line":5878,"column":2},"end":{"line":5883,"column":3}}],"line":5878},"207":{"loc":{"start":{"line":5885,"column":2},"end":{"line":5891,"column":3}},"type":"if","locations":[{"start":{"line":5885,"column":2},"end":{"line":5891,"column":3}},{"start":{"line":5885,"column":2},"end":{"line":5891,"column":3}}],"line":5885},"208":{"loc":{"start":{"line":5893,"column":2},"end":{"line":5899,"column":3}},"type":"if","locations":[{"start":{"line":5893,"column":2},"end":{"line":5899,"column":3}},{"start":{"line":5893,"column":2},"end":{"line":5899,"column":3}}],"line":5893},"209":{"loc":{"start":{"line":6010,"column":0},"end":{"line":6012,"column":1}},"type":"if","locations":[{"start":{"line":6010,"column":0},"end":{"line":6012,"column":1}},{"start":{"line":6010,"column":0},"end":{"line":6012,"column":1}}],"line":6010},"210":{"loc":{"start":{"line":6010,"column":4},"end":{"line":6010,"column":27}},"type":"binary-expr","locations":[{"start":{"line":6010,"column":4},"end":{"line":6010,"column":14}},{"start":{"line":6010,"column":18},"end":{"line":6010,"column":27}}],"line":6010},"211":{"loc":{"start":{"line":6015,"column":0},"end":{"line":6051,"column":1}},"type":"if","locations":[{"start":{"line":6015,"column":0},"end":{"line":6051,"column":1}},{"start":{"line":6015,"column":0},"end":{"line":6051,"column":1}}],"line":6015},"212":{"loc":{"start":{"line":6046,"column":4},"end":{"line":6048,"column":5}},"type":"if","locations":[{"start":{"line":6046,"column":4},"end":{"line":6048,"column":5}},{"start":{"line":6046,"column":4},"end":{"line":6048,"column":5}}],"line":6046},"213":{"loc":{"start":{"line":6075,"column":4},"end":{"line":6077,"column":5}},"type":"if","locations":[{"start":{"line":6075,"column":4},"end":{"line":6077,"column":5}},{"start":{"line":6075,"column":4},"end":{"line":6077,"column":5}}],"line":6075},"214":{"loc":{"start":{"line":6079,"column":4},"end":{"line":6090,"column":15}},"type":"switch","locations":[{"start":{"line":6080,"column":6},"end":{"line":6083,"column":14}},{"start":{"line":6084,"column":6},"end":{"line":6087,"column":14}},{"start":{"line":6088,"column":6},"end":{"line":6090,"column":14}}],"line":6079},"215":{"loc":{"start":{"line":6118,"column":2},"end":{"line":6123,"column":3}},"type":"if","locations":[{"start":{"line":6118,"column":2},"end":{"line":6123,"column":3}},{"start":{"line":6118,"column":2},"end":{"line":6123,"column":3}}],"line":6118},"216":{"loc":{"start":{"line":6125,"column":2},"end":{"line":6130,"column":3}},"type":"if","locations":[{"start":{"line":6125,"column":2},"end":{"line":6130,"column":3}},{"start":{"line":6125,"column":2},"end":{"line":6130,"column":3}}],"line":6125},"217":{"loc":{"start":{"line":6227,"column":0},"end":{"line":6229,"column":1}},"type":"if","locations":[{"start":{"line":6227,"column":0},"end":{"line":6229,"column":1}},{"start":{"line":6227,"column":0},"end":{"line":6229,"column":1}}],"line":6227},"218":{"loc":{"start":{"line":6227,"column":4},"end":{"line":6227,"column":27}},"type":"binary-expr","locations":[{"start":{"line":6227,"column":4},"end":{"line":6227,"column":14}},{"start":{"line":6227,"column":18},"end":{"line":6227,"column":27}}],"line":6227},"219":{"loc":{"start":{"line":6239,"column":0},"end":{"line":6277,"column":1}},"type":"if","locations":[{"start":{"line":6239,"column":0},"end":{"line":6277,"column":1}},{"start":{"line":6239,"column":0},"end":{"line":6277,"column":1}}],"line":6239},"220":{"loc":{"start":{"line":6272,"column":4},"end":{"line":6274,"column":5}},"type":"if","locations":[{"start":{"line":6272,"column":4},"end":{"line":6274,"column":5}},{"start":{"line":6272,"column":4},"end":{"line":6274,"column":5}}],"line":6272},"221":{"loc":{"start":{"line":6301,"column":4},"end":{"line":6303,"column":5}},"type":"if","locations":[{"start":{"line":6301,"column":4},"end":{"line":6303,"column":5}},{"start":{"line":6301,"column":4},"end":{"line":6303,"column":5}}],"line":6301},"222":{"loc":{"start":{"line":6305,"column":4},"end":{"line":6324,"column":15}},"type":"switch","locations":[{"start":{"line":6306,"column":6},"end":{"line":6309,"column":14}},{"start":{"line":6310,"column":6},"end":{"line":6313,"column":14}},{"start":{"line":6314,"column":6},"end":{"line":6317,"column":14}},{"start":{"line":6318,"column":6},"end":{"line":6321,"column":14}},{"start":{"line":6322,"column":6},"end":{"line":6324,"column":14}}],"line":6305},"223":{"loc":{"start":{"line":6352,"column":2},"end":{"line":6357,"column":3}},"type":"if","locations":[{"start":{"line":6352,"column":2},"end":{"line":6357,"column":3}},{"start":{"line":6352,"column":2},"end":{"line":6357,"column":3}}],"line":6352},"224":{"loc":{"start":{"line":6359,"column":2},"end":{"line":6364,"column":3}},"type":"if","locations":[{"start":{"line":6359,"column":2},"end":{"line":6364,"column":3}},{"start":{"line":6359,"column":2},"end":{"line":6364,"column":3}}],"line":6359},"225":{"loc":{"start":{"line":6366,"column":2},"end":{"line":6371,"column":3}},"type":"if","locations":[{"start":{"line":6366,"column":2},"end":{"line":6371,"column":3}},{"start":{"line":6366,"column":2},"end":{"line":6371,"column":3}}],"line":6366},"226":{"loc":{"start":{"line":6373,"column":2},"end":{"line":6378,"column":3}},"type":"if","locations":[{"start":{"line":6373,"column":2},"end":{"line":6378,"column":3}},{"start":{"line":6373,"column":2},"end":{"line":6378,"column":3}}],"line":6373},"227":{"loc":{"start":{"line":6512,"column":33},"end":{"line":6512,"column":44}},"type":"binary-expr","locations":[{"start":{"line":6512,"column":33},"end":{"line":6512,"column":38}},{"start":{"line":6512,"column":42},"end":{"line":6512,"column":44}}],"line":6512},"228":{"loc":{"start":{"line":6545,"column":0},"end":{"line":6547,"column":1}},"type":"if","locations":[{"start":{"line":6545,"column":0},"end":{"line":6547,"column":1}},{"start":{"line":6545,"column":0},"end":{"line":6547,"column":1}}],"line":6545},"229":{"loc":{"start":{"line":6545,"column":4},"end":{"line":6545,"column":27}},"type":"binary-expr","locations":[{"start":{"line":6545,"column":4},"end":{"line":6545,"column":14}},{"start":{"line":6545,"column":18},"end":{"line":6545,"column":27}}],"line":6545},"230":{"loc":{"start":{"line":6550,"column":0},"end":{"line":6591,"column":1}},"type":"if","locations":[{"start":{"line":6550,"column":0},"end":{"line":6591,"column":1}},{"start":{"line":6550,"column":0},"end":{"line":6591,"column":1}}],"line":6550},"231":{"loc":{"start":{"line":6586,"column":4},"end":{"line":6588,"column":5}},"type":"if","locations":[{"start":{"line":6586,"column":4},"end":{"line":6588,"column":5}},{"start":{"line":6586,"column":4},"end":{"line":6588,"column":5}}],"line":6586},"232":{"loc":{"start":{"line":6615,"column":4},"end":{"line":6617,"column":5}},"type":"if","locations":[{"start":{"line":6615,"column":4},"end":{"line":6617,"column":5}},{"start":{"line":6615,"column":4},"end":{"line":6617,"column":5}}],"line":6615},"233":{"loc":{"start":{"line":6619,"column":4},"end":{"line":6650,"column":15}},"type":"switch","locations":[{"start":{"line":6620,"column":6},"end":{"line":6623,"column":14}},{"start":{"line":6624,"column":6},"end":{"line":6627,"column":14}},{"start":{"line":6628,"column":6},"end":{"line":6631,"column":14}},{"start":{"line":6632,"column":6},"end":{"line":6635,"column":14}},{"start":{"line":6636,"column":6},"end":{"line":6639,"column":14}},{"start":{"line":6640,"column":6},"end":{"line":6643,"column":14}},{"start":{"line":6644,"column":6},"end":{"line":6647,"column":14}},{"start":{"line":6648,"column":6},"end":{"line":6650,"column":14}}],"line":6619},"234":{"loc":{"start":{"line":6678,"column":2},"end":{"line":6683,"column":3}},"type":"if","locations":[{"start":{"line":6678,"column":2},"end":{"line":6683,"column":3}},{"start":{"line":6678,"column":2},"end":{"line":6683,"column":3}}],"line":6678},"235":{"loc":{"start":{"line":6685,"column":2},"end":{"line":6690,"column":3}},"type":"if","locations":[{"start":{"line":6685,"column":2},"end":{"line":6690,"column":3}},{"start":{"line":6685,"column":2},"end":{"line":6690,"column":3}}],"line":6685},"236":{"loc":{"start":{"line":6692,"column":2},"end":{"line":6697,"column":3}},"type":"if","locations":[{"start":{"line":6692,"column":2},"end":{"line":6697,"column":3}},{"start":{"line":6692,"column":2},"end":{"line":6697,"column":3}}],"line":6692},"237":{"loc":{"start":{"line":6699,"column":2},"end":{"line":6704,"column":3}},"type":"if","locations":[{"start":{"line":6699,"column":2},"end":{"line":6704,"column":3}},{"start":{"line":6699,"column":2},"end":{"line":6704,"column":3}}],"line":6699},"238":{"loc":{"start":{"line":6706,"column":2},"end":{"line":6711,"column":3}},"type":"if","locations":[{"start":{"line":6706,"column":2},"end":{"line":6711,"column":3}},{"start":{"line":6706,"column":2},"end":{"line":6711,"column":3}}],"line":6706},"239":{"loc":{"start":{"line":6713,"column":2},"end":{"line":6718,"column":3}},"type":"if","locations":[{"start":{"line":6713,"column":2},"end":{"line":6718,"column":3}},{"start":{"line":6713,"column":2},"end":{"line":6718,"column":3}}],"line":6713},"240":{"loc":{"start":{"line":6720,"column":2},"end":{"line":6725,"column":3}},"type":"if","locations":[{"start":{"line":6720,"column":2},"end":{"line":6725,"column":3}},{"start":{"line":6720,"column":2},"end":{"line":6725,"column":3}}],"line":6720},"241":{"loc":{"start":{"line":6899,"column":0},"end":{"line":6901,"column":1}},"type":"if","locations":[{"start":{"line":6899,"column":0},"end":{"line":6901,"column":1}},{"start":{"line":6899,"column":0},"end":{"line":6901,"column":1}}],"line":6899},"242":{"loc":{"start":{"line":6899,"column":4},"end":{"line":6899,"column":27}},"type":"binary-expr","locations":[{"start":{"line":6899,"column":4},"end":{"line":6899,"column":14}},{"start":{"line":6899,"column":18},"end":{"line":6899,"column":27}}],"line":6899},"243":{"loc":{"start":{"line":6904,"column":0},"end":{"line":6941,"column":1}},"type":"if","locations":[{"start":{"line":6904,"column":0},"end":{"line":6941,"column":1}},{"start":{"line":6904,"column":0},"end":{"line":6941,"column":1}}],"line":6904},"244":{"loc":{"start":{"line":6936,"column":4},"end":{"line":6938,"column":5}},"type":"if","locations":[{"start":{"line":6936,"column":4},"end":{"line":6938,"column":5}},{"start":{"line":6936,"column":4},"end":{"line":6938,"column":5}}],"line":6936},"245":{"loc":{"start":{"line":6965,"column":4},"end":{"line":6967,"column":5}},"type":"if","locations":[{"start":{"line":6965,"column":4},"end":{"line":6967,"column":5}},{"start":{"line":6965,"column":4},"end":{"line":6967,"column":5}}],"line":6965},"246":{"loc":{"start":{"line":6969,"column":4},"end":{"line":6984,"column":15}},"type":"switch","locations":[{"start":{"line":6970,"column":6},"end":{"line":6973,"column":14}},{"start":{"line":6974,"column":6},"end":{"line":6977,"column":14}},{"start":{"line":6978,"column":6},"end":{"line":6981,"column":14}},{"start":{"line":6982,"column":6},"end":{"line":6984,"column":14}}],"line":6969},"247":{"loc":{"start":{"line":7012,"column":2},"end":{"line":7017,"column":3}},"type":"if","locations":[{"start":{"line":7012,"column":2},"end":{"line":7017,"column":3}},{"start":{"line":7012,"column":2},"end":{"line":7017,"column":3}}],"line":7012},"248":{"loc":{"start":{"line":7019,"column":2},"end":{"line":7024,"column":3}},"type":"if","locations":[{"start":{"line":7019,"column":2},"end":{"line":7024,"column":3}},{"start":{"line":7019,"column":2},"end":{"line":7024,"column":3}}],"line":7019},"249":{"loc":{"start":{"line":7026,"column":2},"end":{"line":7031,"column":3}},"type":"if","locations":[{"start":{"line":7026,"column":2},"end":{"line":7031,"column":3}},{"start":{"line":7026,"column":2},"end":{"line":7031,"column":3}}],"line":7026}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":37,"28":1,"29":1,"30":0,"31":1,"32":1,"33":37,"34":1,"35":37,"36":37,"37":0,"38":37,"39":1,"40":7,"41":7,"42":7,"43":1,"44":37,"45":81,"46":0,"47":81,"48":81,"49":37,"50":37,"51":37,"52":37,"53":37,"54":37,"55":37,"56":7,"57":7,"58":7,"59":7,"60":0,"61":0,"62":37,"63":1,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":74,"80":1,"81":37,"82":1,"83":37,"84":1,"85":37,"86":1,"87":74,"88":1,"89":37,"90":1,"91":0,"92":1,"93":0,"94":1,"95":74,"96":1,"97":7,"98":1,"99":0,"100":1,"101":0,"102":1,"103":42,"104":1,"105":1,"106":0,"107":1,"108":1,"109":0,"110":1,"111":42,"112":42,"113":0,"114":42,"115":1,"116":0,"117":0,"118":0,"119":1,"120":42,"121":294,"122":0,"123":294,"124":294,"125":42,"126":42,"127":42,"128":42,"129":42,"130":42,"131":42,"132":42,"133":42,"134":42,"135":42,"136":42,"137":42,"138":42,"139":42,"140":42,"141":42,"142":42,"143":42,"144":42,"145":42,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":42,"164":1,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":84,"208":1,"209":42,"210":1,"211":42,"212":1,"213":42,"214":1,"215":84,"216":1,"217":42,"218":1,"219":42,"220":1,"221":42,"222":1,"223":42,"224":1,"225":42,"226":1,"227":42,"228":1,"229":42,"230":1,"231":84,"232":1,"233":42,"234":1,"235":42,"236":1,"237":42,"238":1,"239":84,"240":1,"241":42,"242":1,"243":42,"244":1,"245":42,"246":1,"247":84,"248":1,"249":42,"250":1,"251":42,"252":1,"253":42,"254":1,"255":42,"256":1,"257":0,"258":1,"259":84,"260":1,"261":42,"262":1,"263":42,"264":1,"265":0,"266":1,"267":84,"268":1,"269":42,"270":1,"271":42,"272":1,"273":0,"274":1,"275":84,"276":1,"277":42,"278":1,"279":0,"280":1,"281":0,"282":1,"283":84,"284":1,"285":42,"286":1,"287":42,"288":1,"289":0,"290":1,"291":10,"292":1,"293":1,"294":0,"295":1,"296":1,"297":1,"298":0,"299":1,"300":10,"301":10,"302":0,"303":10,"304":1,"305":0,"306":0,"307":0,"308":1,"309":10,"310":66,"311":0,"312":66,"313":66,"314":66,"315":66,"316":66,"317":66,"318":0,"319":0,"320":10,"321":1,"322":0,"323":0,"324":0,"325":1,"326":0,"327":0,"328":0,"329":0,"330":1,"331":20,"332":1,"333":0,"334":1,"335":66,"336":1,"337":0,"338":1,"339":29,"340":1,"341":1,"342":0,"343":1,"344":1,"345":1,"346":0,"347":1,"348":0,"349":0,"350":0,"351":0,"352":1,"353":0,"354":0,"355":0,"356":1,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":1,"370":29,"371":29,"372":29,"373":1,"374":29,"375":29,"376":29,"377":29,"378":1,"379":29,"380":1,"381":0,"382":1,"383":31,"384":1,"385":0,"386":1,"387":170,"388":1,"389":1,"390":0,"391":1,"392":1,"393":0,"394":1,"395":66,"396":66,"397":0,"398":66,"399":1,"400":33,"401":33,"402":33,"403":1,"404":103,"405":206,"406":0,"407":206,"408":206,"409":103,"410":103,"411":103,"412":103,"413":103,"414":103,"415":103,"416":0,"417":0,"418":103,"419":1,"420":36,"421":36,"422":36,"423":1,"424":67,"425":67,"426":67,"427":31,"428":67,"429":67,"430":67,"431":1,"432":236,"433":1,"434":66,"435":1,"436":170,"437":1,"438":134,"439":1,"440":236,"441":1,"442":170,"443":1,"444":0,"445":1,"446":0,"447":1,"448":170,"449":1,"450":1,"451":0,"452":1,"453":1,"454":0,"455":1,"456":66,"457":66,"458":0,"459":66,"460":1,"461":0,"462":0,"463":0,"464":1,"465":103,"466":732,"467":0,"468":732,"469":732,"470":103,"471":103,"472":103,"473":103,"474":103,"475":103,"476":103,"477":103,"478":103,"479":103,"480":103,"481":103,"482":6,"483":6,"484":6,"485":0,"486":0,"487":0,"488":103,"489":103,"490":103,"491":5,"492":5,"493":5,"494":103,"495":103,"496":103,"497":103,"498":103,"499":103,"500":0,"501":0,"502":103,"503":1,"504":0,"505":0,"506":0,"507":1,"508":67,"509":67,"510":67,"511":57,"512":67,"513":67,"514":67,"515":67,"516":67,"517":66,"518":67,"519":67,"520":67,"521":67,"522":67,"523":8,"524":67,"525":67,"526":0,"527":67,"528":67,"529":67,"530":67,"531":67,"532":6,"533":67,"534":67,"535":67,"536":67,"537":67,"538":31,"539":1,"540":170,"541":1,"542":170,"543":1,"544":236,"545":1,"546":66,"547":1,"548":170,"549":1,"550":170,"551":1,"552":236,"553":1,"554":66,"555":1,"556":170,"557":1,"558":169,"559":1,"560":236,"561":1,"562":66,"563":1,"564":170,"565":1,"566":170,"567":1,"568":236,"569":1,"570":66,"571":1,"572":170,"573":1,"574":40,"575":1,"576":170,"577":1,"578":67,"579":1,"580":236,"581":1,"582":66,"583":1,"584":170,"585":1,"586":170,"587":1,"588":170,"589":1,"590":72,"591":1,"592":236,"593":1,"594":66,"595":1,"596":170,"597":1,"598":170,"599":1,"600":236,"601":1,"602":169,"603":1,"604":67,"605":1,"606":134,"607":1,"608":4,"609":1,"610":1,"611":0,"612":1,"613":1,"614":0,"615":1,"616":0,"617":0,"618":0,"619":0,"620":1,"621":0,"622":0,"623":0,"624":1,"625":4,"626":5,"627":0,"628":5,"629":5,"630":4,"631":4,"632":4,"633":1,"634":1,"635":1,"636":0,"637":0,"638":4,"639":1,"640":0,"641":0,"642":0,"643":1,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":1,"652":4,"653":1,"654":0,"655":1,"656":4,"657":1,"658":4,"659":1,"660":4,"661":1,"662":1,"663":1,"664":4,"665":1,"666":1,"667":0,"668":1,"669":1,"670":0,"671":1,"672":0,"673":0,"674":0,"675":0,"676":1,"677":4,"678":4,"679":4,"680":1,"681":4,"682":8,"683":0,"684":8,"685":8,"686":4,"687":4,"688":4,"689":4,"690":4,"691":4,"692":4,"693":4,"694":0,"695":0,"696":4,"697":1,"698":0,"699":0,"700":0,"701":1,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":1,"710":8,"711":1,"712":4,"713":1,"714":0,"715":1,"716":0,"717":1,"718":4,"719":1,"720":4,"721":1,"722":0,"723":1,"724":0,"725":1,"726":8,"727":1,"728":1,"729":0,"730":1,"731":1,"732":0,"733":1,"734":0,"735":0,"736":0,"737":0,"738":1,"739":3,"740":3,"741":3,"742":1,"743":8,"744":24,"745":0,"746":24,"747":24,"748":1,"749":1,"750":1,"751":8,"752":8,"753":8,"754":5,"755":5,"756":5,"757":5,"758":5,"759":5,"760":5,"761":5,"762":5,"763":0,"764":0,"765":8,"766":1,"767":0,"768":0,"769":0,"770":1,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":1,"788":4,"789":1,"790":1,"791":1,"792":2,"793":1,"794":0,"795":1,"796":2,"797":1,"798":8,"799":1,"800":2,"801":1,"802":2,"803":1,"804":0,"805":1,"806":5,"807":1,"808":2,"809":1,"810":2,"811":1,"812":0,"813":1,"814":5,"815":1,"816":2,"817":1,"818":5,"819":1,"820":6,"821":1,"822":1,"823":0,"824":1,"825":1,"826":1,"827":0,"828":1,"829":0,"830":0,"831":0,"832":0,"833":1,"834":0,"835":0,"836":0,"837":1,"838":6,"839":57,"840":0,"841":57,"842":57,"843":5,"844":5,"845":5,"846":5,"847":5,"848":5,"849":5,"850":6,"851":6,"852":6,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":41,"866":41,"867":41,"868":0,"869":0,"870":6,"871":1,"872":0,"873":0,"874":0,"875":1,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":1,"902":1,"903":1,"904":5,"905":1,"906":0,"907":1,"908":0,"909":1,"910":6,"911":1,"912":5,"913":1,"914":1,"915":1,"916":0,"917":1,"918":1,"919":1,"920":6,"921":1,"922":1,"923":1,"924":0,"925":1,"926":1,"927":1,"928":0,"929":1,"930":1,"931":1,"932":0,"933":1,"934":1,"935":1,"936":0,"937":1,"938":1,"939":1,"940":0,"941":1,"942":1,"943":1,"944":0,"945":1,"946":1,"947":1,"948":0,"949":1,"950":1,"951":1,"952":0,"953":1,"954":1,"955":1,"956":0,"957":1,"958":41,"959":1,"960":0,"961":1,"962":7,"963":1,"964":1,"965":0,"966":1,"967":1,"968":1,"969":0,"970":1,"971":0,"972":0,"973":0,"974":0,"975":1,"976":0,"977":0,"978":0,"979":1,"980":7,"981":32,"982":0,"983":32,"984":32,"985":6,"986":6,"987":6,"988":6,"989":6,"990":6,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":13,"1004":13,"1005":13,"1006":7,"1007":7,"1008":7,"1009":0,"1010":0,"1011":7,"1012":1,"1013":0,"1014":0,"1015":0,"1016":1,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":1,"1043":6,"1044":1,"1045":0,"1046":1,"1047":6,"1048":1,"1049":6,"1050":1,"1051":10,"1052":1,"1053":6,"1054":1,"1055":3,"1056":1,"1057":0,"1058":1,"1059":3,"1060":1,"1061":0,"1062":1,"1063":3,"1064":1,"1065":0,"1066":1,"1067":3,"1068":1,"1069":0,"1070":1,"1071":3,"1072":1,"1073":0,"1074":1,"1075":3,"1076":1,"1077":0,"1078":1,"1079":3,"1080":1,"1081":0,"1082":1,"1083":3,"1084":1,"1085":0,"1086":1,"1087":3,"1088":1,"1089":0,"1090":1,"1091":13,"1092":1,"1093":0,"1094":1,"1095":3,"1096":1,"1097":0,"1098":1,"1099":3,"1100":1,"1101":7,"1102":1,"1103":6,"1104":1,"1105":1,"1106":0,"1107":1,"1108":1,"1109":1,"1110":0,"1111":1,"1112":0,"1113":0,"1114":0,"1115":0,"1116":1,"1117":6,"1118":6,"1119":6,"1120":1,"1121":6,"1122":13,"1123":0,"1124":13,"1125":13,"1126":6,"1127":6,"1128":6,"1129":6,"1130":7,"1131":7,"1132":7,"1133":7,"1134":0,"1135":0,"1136":6,"1137":1,"1138":0,"1139":0,"1140":0,"1141":1,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":1,"1150":6,"1151":1,"1152":6,"1153":1,"1154":0,"1155":1,"1156":0,"1157":1,"1158":5,"1159":1,"1160":0,"1161":1,"1162":7,"1163":1,"1164":0,"1165":1,"1166":6,"1167":1,"1168":1,"1169":0,"1170":1,"1171":1,"1172":1,"1173":6,"1174":1,"1175":6,"1176":6,"1177":0,"1178":6,"1179":1,"1180":6,"1181":6,"1182":6,"1183":1,"1184":6,"1185":57,"1186":0,"1187":57,"1188":57,"1189":6,"1190":6,"1191":6,"1192":6,"1193":6,"1194":6,"1195":0,"1196":0,"1197":0,"1198":6,"1199":6,"1200":6,"1201":5,"1202":5,"1203":5,"1204":0,"1205":0,"1206":0,"1207":3,"1208":3,"1209":3,"1210":3,"1211":3,"1212":3,"1213":3,"1214":6,"1215":6,"1216":6,"1217":6,"1218":6,"1219":6,"1220":0,"1221":0,"1222":0,"1223":6,"1224":6,"1225":6,"1226":5,"1227":5,"1228":5,"1229":0,"1230":0,"1231":0,"1232":5,"1233":5,"1234":5,"1235":0,"1236":0,"1237":6,"1238":1,"1239":0,"1240":0,"1241":0,"1242":1,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":1,"1290":12,"1291":1,"1292":6,"1293":1,"1294":6,"1295":1,"1296":6,"1297":1,"1298":0,"1299":1,"1300":6,"1301":1,"1302":0,"1303":1,"1304":0,"1305":1,"1306":6,"1307":1,"1308":6,"1309":1,"1310":0,"1311":1,"1312":6,"1313":1,"1314":12,"1315":1,"1316":6,"1317":1,"1318":6,"1319":1,"1320":5,"1321":1,"1322":12,"1323":1,"1324":6,"1325":1,"1326":6,"1327":1,"1328":0,"1329":1,"1330":6,"1331":1,"1332":6,"1333":1,"1334":0,"1335":1,"1336":3,"1337":1,"1338":6,"1339":1,"1340":0,"1341":1,"1342":3,"1343":1,"1344":0,"1345":1,"1346":0,"1347":1,"1348":6,"1349":1,"1350":12,"1351":1,"1352":6,"1353":1,"1354":6,"1355":1,"1356":6,"1357":1,"1358":0,"1359":1,"1360":0,"1361":1,"1362":6,"1363":1,"1364":6,"1365":1,"1366":0,"1367":1,"1368":6,"1369":1,"1370":6,"1371":1,"1372":6,"1373":1,"1374":0,"1375":1,"1376":5,"1377":1,"1378":0,"1379":1,"1380":0,"1381":1,"1382":0,"1383":1,"1384":5,"1385":1,"1386":8,"1387":1,"1388":1,"1389":0,"1390":1,"1391":1,"1392":0,"1393":1,"1394":3,"1395":3,"1396":0,"1397":3,"1398":1,"1399":1,"1400":1,"1401":1,"1402":1,"1403":8,"1404":48,"1405":0,"1406":48,"1407":48,"1408":8,"1409":8,"1410":8,"1411":8,"1412":8,"1413":8,"1414":8,"1415":8,"1416":8,"1417":0,"1418":0,"1419":0,"1420":8,"1421":8,"1422":8,"1423":8,"1424":8,"1425":8,"1426":8,"1427":8,"1428":8,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":8,"1435":1,"1436":0,"1437":0,"1438":0,"1439":1,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":1,"1466":8,"1467":1,"1468":3,"1469":1,"1470":5,"1471":1,"1472":8,"1473":1,"1474":5,"1475":1,"1476":8,"1477":1,"1478":5,"1479":1,"1480":8,"1481":1,"1482":5,"1483":1,"1484":0,"1485":1,"1486":8,"1487":1,"1488":3,"1489":1,"1490":5,"1491":1,"1492":8,"1493":1,"1494":8,"1495":1,"1496":3,"1497":1,"1498":5,"1499":1,"1500":8,"1501":1,"1502":5,"1503":1,"1504":8,"1505":1,"1506":5,"1507":1,"1508":0,"1509":1,"1510":4,"1511":1,"1512":1,"1513":0,"1514":1,"1515":1,"1516":0,"1517":1,"1518":4,"1519":4,"1520":0,"1521":4,"1522":1,"1523":0,"1524":0,"1525":0,"1526":1,"1527":4,"1528":4,"1529":0,"1530":4,"1531":4,"1532":4,"1533":4,"1534":4,"1535":0,"1536":0,"1537":4,"1538":1,"1539":0,"1540":0,"1541":0,"1542":1,"1543":0,"1544":0,"1545":0,"1546":0,"1547":1,"1548":0,"1549":1,"1550":4,"1551":1,"1552":6,"1553":1,"1554":1,"1555":0,"1556":1,"1557":1,"1558":1,"1559":0,"1560":1,"1561":6,"1562":6,"1563":0,"1564":6,"1565":1,"1566":0,"1567":0,"1568":0,"1569":1,"1570":6,"1571":10,"1572":0,"1573":10,"1574":10,"1575":6,"1576":6,"1577":6,"1578":4,"1579":4,"1580":4,"1581":4,"1582":0,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1593":6,"1594":1,"1595":0,"1596":0,"1597":0,"1598":1,"1599":0,"1600":0,"1601":0,"1602":0,"1603":0,"1604":0,"1605":0,"1606":0,"1607":0,"1608":0,"1609":0,"1610":0,"1611":0,"1612":0,"1613":0,"1614":0,"1615":1,"1616":0,"1617":1,"1618":6,"1619":1,"1620":6,"1621":1,"1622":0,"1623":1,"1624":4,"1625":1,"1626":0,"1627":1,"1628":0,"1629":1,"1630":0,"1631":1,"1632":0,"1633":1,"1634":0,"1635":1,"1636":0,"1637":1,"1638":0,"1639":1,"1640":2,"1641":1,"1642":1,"1643":0,"1644":1,"1645":1,"1646":0,"1647":1,"1648":2,"1649":2,"1650":0,"1651":2,"1652":1,"1653":0,"1654":0,"1655":0,"1656":1,"1657":2,"1658":4,"1659":0,"1660":4,"1661":4,"1662":2,"1663":2,"1664":2,"1665":2,"1666":2,"1667":2,"1668":0,"1669":0,"1670":0,"1671":0,"1672":0,"1673":2,"1674":1,"1675":0,"1676":0,"1677":0,"1678":1,"1679":0,"1680":0,"1681":0,"1682":0,"1683":0,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1689":1,"1690":0,"1691":1,"1692":2,"1693":1,"1694":0,"1695":1,"1696":2,"1697":1,"1698":0,"1699":1,"1700":0,"1701":1,"1702":2,"1703":1,"1704":1,"1705":0,"1706":1,"1707":1,"1708":1,"1709":2,"1710":1,"1711":2,"1712":2,"1713":0,"1714":2,"1715":1,"1716":2,"1717":2,"1718":2,"1719":1,"1720":2,"1721":12,"1722":0,"1723":12,"1724":12,"1725":2,"1726":2,"1727":2,"1728":2,"1729":2,"1730":2,"1731":6,"1732":6,"1733":6,"1734":6,"1735":2,"1736":2,"1737":2,"1738":2,"1739":0,"1740":0,"1741":2,"1742":1,"1743":0,"1744":0,"1745":0,"1746":1,"1747":0,"1748":0,"1749":0,"1750":0,"1751":0,"1752":0,"1753":0,"1754":0,"1755":0,"1756":0,"1757":0,"1758":0,"1759":0,"1760":1,"1761":0,"1762":1,"1763":2,"1764":1,"1765":0,"1766":1,"1767":2,"1768":1,"1769":2,"1770":1,"1771":0,"1772":1,"1773":6,"1774":1,"1775":0,"1776":1,"1777":2,"1778":1,"1779":0,"1780":1,"1781":2,"1782":1,"1783":0,"1784":1,"1785":2,"1786":1,"1787":1,"1788":0,"1789":1,"1790":1,"1791":0,"1792":1,"1793":0,"1794":0,"1795":0,"1796":0,"1797":1,"1798":0,"1799":0,"1800":0,"1801":1,"1802":0,"1803":0,"1804":0,"1805":0,"1806":0,"1807":0,"1808":0,"1809":0,"1810":0,"1811":0,"1812":0,"1813":0,"1814":0,"1815":0,"1816":1,"1817":2,"1818":2,"1819":2,"1820":1,"1821":2,"1822":2,"1823":2,"1824":2,"1825":2,"1826":2,"1827":2,"1828":1,"1829":2,"1830":1,"1831":0,"1832":1,"1833":2,"1834":1,"1835":2,"1836":1,"1837":2,"1838":1,"1839":0,"1840":1,"1841":2,"1842":1,"1843":2,"1844":1,"1845":6,"1846":1,"1847":1,"1848":0,"1849":1,"1850":1,"1851":1,"1852":0,"1853":1,"1854":0,"1855":0,"1856":0,"1857":0,"1858":1,"1859":0,"1860":0,"1861":0,"1862":1,"1863":0,"1864":0,"1865":0,"1866":0,"1867":0,"1868":0,"1869":0,"1870":0,"1871":0,"1872":0,"1873":0,"1874":0,"1875":0,"1876":0,"1877":0,"1878":0,"1879":0,"1880":0,"1881":0,"1882":0,"1883":1,"1884":6,"1885":6,"1886":6,"1887":1,"1888":6,"1889":6,"1890":6,"1891":6,"1892":6,"1893":6,"1894":0,"1895":6,"1896":6,"1897":0,"1898":6,"1899":6,"1900":6,"1901":1,"1902":11,"1903":1,"1904":0,"1905":1,"1906":11,"1907":1,"1908":6,"1909":1,"1910":6,"1911":1,"1912":0,"1913":1,"1914":6,"1915":1,"1916":0,"1917":1,"1918":6,"1919":1,"1920":6,"1921":1,"1922":6,"1923":1,"1924":0,"1925":1,"1926":6,"1927":1,"1928":6,"1929":1,"1930":0,"1931":1,"1932":0,"1933":1,"1934":4,"1935":1,"1936":1,"1937":0,"1938":1,"1939":1,"1940":0,"1941":1,"1942":0,"1943":0,"1944":0,"1945":0,"1946":1,"1947":0,"1948":0,"1949":0,"1950":1,"1951":0,"1952":0,"1953":0,"1954":0,"1955":0,"1956":0,"1957":0,"1958":0,"1959":0,"1960":0,"1961":0,"1962":0,"1963":0,"1964":0,"1965":0,"1966":0,"1967":0,"1968":0,"1969":0,"1970":0,"1971":0,"1972":0,"1973":0,"1974":0,"1975":0,"1976":0,"1977":0,"1978":0,"1979":0,"1980":1,"1981":4,"1982":4,"1983":4,"1984":1,"1985":4,"1986":4,"1987":4,"1988":4,"1989":4,"1990":4,"1991":0,"1992":4,"1993":4,"1994":3,"1995":4,"1996":4,"1997":0,"1998":4,"1999":4,"2000":4,"2001":4,"2002":4,"2003":2,"2004":4,"2005":4,"2006":0,"2007":1,"2008":4,"2009":1,"2010":0,"2011":1,"2012":4,"2013":1,"2014":4,"2015":1,"2016":4,"2017":1,"2018":0,"2019":1,"2020":4,"2021":1,"2022":3,"2023":1,"2024":4,"2025":1,"2026":0,"2027":1,"2028":4,"2029":1,"2030":4,"2031":1,"2032":4,"2033":1,"2034":0,"2035":1,"2036":4,"2037":1,"2038":2,"2039":1,"2040":4,"2041":1,"2042":0,"2043":1,"2044":0,"2045":1,"2046":1,"2047":0,"2048":1,"2049":1,"2050":0,"2051":1,"2052":0,"2053":0,"2054":0,"2055":0,"2056":1,"2057":0,"2058":0,"2059":0,"2060":1,"2061":0,"2062":0,"2063":0,"2064":0,"2065":0,"2066":0,"2067":0,"2068":0,"2069":0,"2070":0,"2071":0,"2072":0,"2073":0,"2074":0,"2075":0,"2076":0,"2077":0,"2078":1,"2079":0,"2080":0,"2081":0,"2082":1,"2083":0,"2084":0,"2085":0,"2086":0,"2087":0,"2088":0,"2089":0,"2090":0,"2091":0,"2092":0,"2093":1,"2094":0,"2095":1,"2096":0,"2097":1,"2098":0,"2099":1,"2100":0,"2101":1,"2102":0,"2103":1,"2104":0,"2105":1,"2106":1},"f":{"0":37,"1":37,"2":37,"3":7,"4":37,"5":0,"6":0,"7":74,"8":37,"9":37,"10":37,"11":74,"12":37,"13":0,"14":0,"15":74,"16":7,"17":0,"18":0,"19":42,"20":0,"21":42,"22":0,"23":42,"24":0,"25":0,"26":84,"27":42,"28":42,"29":42,"30":84,"31":42,"32":42,"33":42,"34":42,"35":42,"36":42,"37":42,"38":84,"39":42,"40":42,"41":42,"42":84,"43":42,"44":42,"45":42,"46":84,"47":42,"48":42,"49":42,"50":42,"51":0,"52":84,"53":42,"54":42,"55":0,"56":84,"57":42,"58":42,"59":0,"60":84,"61":42,"62":0,"63":0,"64":84,"65":42,"66":42,"67":0,"68":10,"69":0,"70":10,"71":0,"72":10,"73":0,"74":0,"75":20,"76":0,"77":66,"78":0,"79":29,"80":0,"81":0,"82":0,"83":0,"84":29,"85":29,"86":29,"87":0,"88":31,"89":0,"90":170,"91":0,"92":66,"93":33,"94":103,"95":36,"96":67,"97":236,"98":66,"99":170,"100":134,"101":236,"102":170,"103":0,"104":0,"105":170,"106":0,"107":66,"108":0,"109":103,"110":0,"111":67,"112":170,"113":170,"114":236,"115":66,"116":170,"117":170,"118":236,"119":66,"120":170,"121":169,"122":236,"123":66,"124":170,"125":170,"126":236,"127":66,"128":170,"129":40,"130":170,"131":67,"132":236,"133":66,"134":170,"135":170,"136":170,"137":72,"138":236,"139":66,"140":170,"141":170,"142":236,"143":169,"144":67,"145":134,"146":4,"147":0,"148":0,"149":0,"150":4,"151":0,"152":0,"153":4,"154":0,"155":4,"156":4,"157":4,"158":1,"159":4,"160":0,"161":0,"162":4,"163":4,"164":0,"165":0,"166":8,"167":4,"168":0,"169":0,"170":4,"171":4,"172":0,"173":0,"174":8,"175":0,"176":0,"177":3,"178":8,"179":0,"180":0,"181":4,"182":1,"183":2,"184":0,"185":2,"186":8,"187":2,"188":2,"189":0,"190":5,"191":2,"192":2,"193":0,"194":5,"195":2,"196":5,"197":6,"198":0,"199":0,"200":0,"201":6,"202":0,"203":0,"204":1,"205":5,"206":0,"207":0,"208":6,"209":5,"210":1,"211":0,"212":1,"213":6,"214":1,"215":0,"216":1,"217":0,"218":1,"219":0,"220":1,"221":0,"222":1,"223":0,"224":1,"225":0,"226":1,"227":0,"228":1,"229":0,"230":1,"231":0,"232":41,"233":0,"234":7,"235":0,"236":0,"237":0,"238":7,"239":0,"240":0,"241":6,"242":0,"243":6,"244":6,"245":10,"246":6,"247":3,"248":0,"249":3,"250":0,"251":3,"252":0,"253":3,"254":0,"255":3,"256":0,"257":3,"258":0,"259":3,"260":0,"261":3,"262":0,"263":3,"264":0,"265":13,"266":0,"267":3,"268":0,"269":3,"270":7,"271":6,"272":0,"273":0,"274":6,"275":6,"276":0,"277":0,"278":6,"279":6,"280":0,"281":0,"282":5,"283":0,"284":7,"285":0,"286":6,"287":6,"288":6,"289":6,"290":6,"291":0,"292":0,"293":12,"294":6,"295":6,"296":6,"297":0,"298":6,"299":0,"300":0,"301":6,"302":6,"303":0,"304":6,"305":12,"306":6,"307":6,"308":5,"309":12,"310":6,"311":6,"312":0,"313":6,"314":6,"315":0,"316":3,"317":6,"318":0,"319":3,"320":0,"321":0,"322":6,"323":12,"324":6,"325":6,"326":6,"327":0,"328":0,"329":6,"330":6,"331":0,"332":6,"333":6,"334":6,"335":0,"336":5,"337":0,"338":0,"339":0,"340":5,"341":8,"342":0,"343":3,"344":1,"345":8,"346":0,"347":0,"348":8,"349":3,"350":5,"351":8,"352":5,"353":8,"354":5,"355":8,"356":5,"357":0,"358":8,"359":3,"360":5,"361":8,"362":8,"363":3,"364":5,"365":8,"366":5,"367":8,"368":5,"369":0,"370":4,"371":0,"372":4,"373":0,"374":4,"375":0,"376":0,"377":0,"378":4,"379":6,"380":0,"381":6,"382":0,"383":6,"384":0,"385":0,"386":0,"387":6,"388":6,"389":0,"390":4,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":2,"399":0,"400":2,"401":0,"402":2,"403":0,"404":0,"405":0,"406":2,"407":0,"408":2,"409":0,"410":0,"411":2,"412":2,"413":2,"414":2,"415":2,"416":0,"417":0,"418":0,"419":2,"420":0,"421":2,"422":2,"423":0,"424":6,"425":0,"426":2,"427":0,"428":2,"429":0,"430":2,"431":0,"432":0,"433":0,"434":0,"435":2,"436":2,"437":2,"438":0,"439":2,"440":2,"441":2,"442":0,"443":2,"444":2,"445":6,"446":0,"447":0,"448":0,"449":0,"450":6,"451":6,"452":11,"453":0,"454":11,"455":6,"456":6,"457":0,"458":6,"459":0,"460":6,"461":6,"462":6,"463":0,"464":6,"465":6,"466":0,"467":0,"468":4,"469":0,"470":0,"471":0,"472":0,"473":4,"474":4,"475":4,"476":0,"477":4,"478":4,"479":4,"480":0,"481":4,"482":3,"483":4,"484":0,"485":4,"486":4,"487":4,"488":0,"489":4,"490":2,"491":4,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0},"b":{"0":[0,1],"1":[1,0],"2":[1,0],"3":[37,37],"4":[37,7],"5":[0,37],"6":[0,81],"7":[37,37,7,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,1],"12":[1,0],"13":[1,0],"14":[0,42],"15":[0,294],"16":[42,42,42,42,42,42,42,0,0,0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,1],"30":[1,0],"31":[1,0],"32":[0,10],"33":[0,66],"34":[66,0],"35":[0,0],"36":[0,1],"37":[1,0],"38":[1,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[29,0],"43":[0,1],"44":[1,0],"45":[1,0],"46":[66,66],"47":[0,66],"48":[0,206],"49":[103,103,0],"50":[31,36],"51":[67,0],"52":[0,1],"53":[1,0],"54":[1,0],"55":[0,66],"56":[0,732],"57":[103,103,103,103,6,0,103,5,103,103,0],"58":[57,10],"59":[67,0],"60":[66,1],"61":[67,0],"62":[8,59],"63":[0,67],"64":[67,0],"65":[6,61],"66":[67,0],"67":[31,36],"68":[0,1],"69":[1,0],"70":[1,0],"71":[0,0],"72":[0,5],"73":[4,1,0],"74":[0,0],"75":[0,0],"76":[0,1],"77":[1,0],"78":[1,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,8],"83":[4,4,0],"84":[0,0],"85":[0,0],"86":[0,1],"87":[1,0],"88":[1,0],"89":[0,0],"90":[0,24],"91":[1,8,5,5,5,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,1],"98":[1,0],"99":[1,0],"100":[0,0],"101":[0,0],"102":[0,57],"103":[5,5,6,0,0,0,0,41,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,1],"114":[1,0],"115":[1,0],"116":[0,0],"117":[0,32],"118":[6,6,0,0,0,0,13,7,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,1],"129":[1,0],"130":[1,0],"131":[0,0],"132":[0,0],"133":[0,13],"134":[6,7,0],"135":[0,0],"136":[0,0],"137":[0,1],"138":[1,0],"139":[1,0],"140":[0,6],"141":[0,57],"142":[6,6,0,6,5,0,3,3,6,6,0,6,5,0,5,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,1],"159":[1,0],"160":[1,0],"161":[0,3],"162":[0,48],"163":[8,8,8,0,8,8,8,0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,1],"173":[1,0],"174":[1,0],"175":[0,4],"176":[0,4],"177":[4,0],"178":[0,0],"179":[0,1],"180":[1,0],"181":[1,0],"182":[0,6],"183":[0,10],"184":[6,4,0,0,0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,1],"191":[1,0],"192":[1,0],"193":[0,2],"194":[0,4],"195":[2,2,0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,1],"200":[1,0],"201":[1,0],"202":[0,2],"203":[0,12],"204":[2,2,6,2,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,1],"210":[1,0],"211":[1,0],"212":[0,0],"213":[0,0],"214":[0,0,0],"215":[2,0],"216":[2,0],"217":[0,1],"218":[1,0],"219":[1,0],"220":[0,0],"221":[0,0],"222":[0,0,0,0,0],"223":[6,0],"224":[0,6],"225":[0,6],"226":[6,0],"227":[6,0],"228":[0,1],"229":[1,0],"230":[1,0],"231":[0,0],"232":[0,0],"233":[0,0,0,0,0,0,0,0],"234":[4,0],"235":[0,4],"236":[3,1],"237":[0,4],"238":[4,0],"239":[2,2],"240":[0,4],"241":[0,1],"242":[1,0],"243":[1,0],"244":[0,0],"245":[0,0],"246":[0,0,0,0],"247":[0,0],"248":[0,0],"249":[0,0]},"inputSourceMap":{"version":3,"sources":["blockchain_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","types","Block","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","hash","getHash_asB64","header","getHeader","BlockHeader","body","getBody","BlockBody","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readBytes","setHash","readMessage","setHeader","setBody","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getHash_asU8","length","writeBytes","writeMessage","getHash","getFieldWithDefault","bytesAsB64","bytesAsU8","setProto3BytesField","getWrapperField","setWrapperField","clearHeader","hasHeader","getField","clearBody","hasBody","chainid","getChainid_asB64","prevblockhash","getPrevblockhash_asB64","blockno","timestamp","blocksroothash","getBlocksroothash_asB64","txsroothash","getTxsroothash_asB64","receiptsroothash","getReceiptsroothash_asB64","confirms","pubkey","getPubkey_asB64","coinbaseaccount","getCoinbaseaccount_asB64","sign","getSign_asB64","consensus","getConsensus_asB64","setChainid","setPrevblockhash","readUint64","setBlockno","readInt64","setTimestamp","setBlocksroothash","setTxsroothash","setReceiptsroothash","setConfirms","setPubkey","setCoinbaseaccount","setSign","setConsensus","getChainid_asU8","getPrevblockhash_asU8","getBlockno","writeUint64","getTimestamp","writeInt64","getBlocksroothash_asU8","getTxsroothash_asU8","getReceiptsroothash_asU8","getConfirms","getPubkey_asU8","getCoinbaseaccount_asU8","getSign_asU8","getConsensus_asU8","getChainid","getPrevblockhash","setProto3IntField","getBlocksroothash","getTxsroothash","getReceiptsroothash","getPubkey","getCoinbaseaccount","getSign","getConsensus","repeatedFields_","txsList","toObjectList","getTxsList","Tx","addTxs","writeRepeatedMessage","getRepeatedWrapperField","setTxsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearTxsList","TxList","TxBody","nonce","account","getAccount_asB64","recipient","getRecipient_asB64","amount","getAmount_asB64","payload","getPayload_asB64","gaslimit","gasprice","getGasprice_asB64","type","chainidhash","getChainidhash_asB64","setNonce","setAccount","setRecipient","setAmount","setPayload","setGaslimit","setGasprice","readEnum","setType","setChainidhash","getNonce","getAccount_asU8","getRecipient_asU8","getAmount_asU8","getPayload_asU8","getGaslimit","getGasprice_asU8","getType","writeEnum","getChainidhash_asU8","getAccount","getRecipient","getAmount","getPayload","getGasprice","setProto3EnumField","getChainidhash","TxIdx","blockhash","getBlockhash_asB64","idx","setBlockhash","readInt32","setIdx","getBlockhash_asU8","getIdx","writeInt32","getBlockhash","TxInBlock","txidx","getTxidx","tx","getTx","setTxidx","setTx","clearTxidx","hasTxidx","clearTx","hasTx","State","balance","getBalance_asB64","codehash","getCodehash_asB64","storageroot","getStorageroot_asB64","sqlrecoverypoint","setBalance","setCodehash","setStorageroot","setSqlrecoverypoint","getBalance_asU8","getCodehash_asU8","getStorageroot_asU8","getSqlrecoverypoint","getBalance","getCodehash","getStorageroot","AccountProof","state","getState","inclusion","key","getKey_asB64","proofkey","getProofkey_asB64","proofval","getProofval_asB64","bitmap","getBitmap_asB64","height","auditpathList","getAuditpathList_asB64","setState","readBool","setInclusion","setKey","setProofkey","setProofval","setBitmap","readUint32","setHeight","addAuditpath","getInclusion","writeBool","getKey_asU8","getProofkey_asU8","getProofval_asU8","getBitmap_asU8","getHeight","writeUint32","getAuditpathList_asU8","writeRepeatedBytes","clearState","hasState","setProto3BooleanField","getKey","getProofkey","getProofval","getBitmap","getAuditpathList","getRepeatedField","bytesListAsB64","bytesListAsU8","setAuditpathList","setField","addToRepeatedField","clearAuditpathList","ContractVarProof","getValue_asB64","setValue","getValue_asU8","getValue","StateQueryProof","contractproof","getContractproof","varproofsList","getVarproofsList","setContractproof","addVarproofs","clearContractproof","hasContractproof","setVarproofsList","clearVarproofsList","Receipt","contractaddress","getContractaddress_asB64","status","ret","txhash","getTxhash_asB64","feeused","getFeeused_asB64","cumulativefeeused","getCumulativefeeused_asB64","bloom","getBloom_asB64","eventsList","getEventsList","Event","txindex","from","getFrom_asB64","to","getTo_asB64","feedelegation","gasused","setContractaddress","readString","setStatus","setRet","setTxhash","setFeeused","setCumulativefeeused","setBloom","addEvents","setTxindex","setFrom","setTo","setFeedelegation","setGasused","getContractaddress_asU8","getStatus","writeString","getRet","getTxhash_asU8","getFeeused_asU8","getCumulativefeeused_asU8","getBloom_asU8","getTxindex","getFrom_asU8","getTo_asU8","getFeedelegation","getGasused","getContractaddress","setProto3StringField","getTxhash","getFeeused","getCumulativefeeused","getBloom","setEventsList","clearEventsList","getFrom","getTo","eventname","jsonargs","eventidx","setEventname","setJsonargs","setEventidx","getEventname","getJsonargs","getEventidx","FnArgument","name","setName","getName","argumentsList","getArgumentsList","payable","view","feeDelegation","addArguments","setPayable","setView","setFeeDelegation","getPayable","getView","getFeeDelegation","setArgumentsList","clearArgumentsList","StateVar","len","setLen","getLen","ABI","version","language","functionsList","getFunctionsList","stateVariablesList","getStateVariablesList","setVersion","setLanguage","addFunctions","addStateVariables","getVersion","getLanguage","setFunctionsList","clearFunctionsList","setStateVariablesList","clearStateVariablesList","Query","queryinfo","getQueryinfo_asB64","setQueryinfo","getQueryinfo_asU8","getQueryinfo","StateQuery","root","getRoot_asB64","compressed","storagekeysList","getStoragekeysList_asB64","setRoot","setCompressed","addStoragekeys","getRoot_asU8","getCompressed","getStoragekeysList_asU8","getRoot","getStoragekeysList","setStoragekeysList","clearStoragekeysList","FilterInfo","blockfrom","blockto","desc","argfilter","getArgfilter_asB64","recentblockcnt","setBlockfrom","setBlockto","setDesc","setArgfilter","setRecentblockcnt","getBlockfrom","getBlockto","getDesc","getArgfilter_asU8","getRecentblockcnt","getArgfilter","Proposal","id","description","multiplechoice","setId","setDescription","setMultiplechoice","getId","getDescription","getMultiplechoice","TxType","NORMAL","GOVERNANCE","REDEPLOY","FEEDELEGATION","TRANSFER","CALL","DEPLOY","object","extend","exports"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/types","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.types.ABI', null, global);\ngoog.exportSymbol('proto.types.AccountProof', null, global);\ngoog.exportSymbol('proto.types.Block', null, global);\ngoog.exportSymbol('proto.types.BlockBody', null, global);\ngoog.exportSymbol('proto.types.BlockHeader', null, global);\ngoog.exportSymbol('proto.types.ContractVarProof', null, global);\ngoog.exportSymbol('proto.types.Event', null, global);\ngoog.exportSymbol('proto.types.FilterInfo', null, global);\ngoog.exportSymbol('proto.types.FnArgument', null, global);\ngoog.exportSymbol('proto.types.Function', null, global);\ngoog.exportSymbol('proto.types.Proposal', null, global);\ngoog.exportSymbol('proto.types.Query', null, global);\ngoog.exportSymbol('proto.types.Receipt', null, global);\ngoog.exportSymbol('proto.types.State', null, global);\ngoog.exportSymbol('proto.types.StateQuery', null, global);\ngoog.exportSymbol('proto.types.StateQueryProof', null, global);\ngoog.exportSymbol('proto.types.StateVar', null, global);\ngoog.exportSymbol('proto.types.Tx', null, global);\ngoog.exportSymbol('proto.types.TxBody', null, global);\ngoog.exportSymbol('proto.types.TxIdx', null, global);\ngoog.exportSymbol('proto.types.TxInBlock', null, global);\ngoog.exportSymbol('proto.types.TxList', null, global);\ngoog.exportSymbol('proto.types.TxType', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Block = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Block, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Block.displayName = 'proto.types.Block';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Block.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Block.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Block} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Block.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    header: (f = msg.getHeader()) && proto.types.BlockHeader.toObject(includeInstance, f),\n    body: (f = msg.getBody()) && proto.types.BlockBody.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Block}\n */\nproto.types.Block.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Block;\n  return proto.types.Block.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Block} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Block}\n */\nproto.types.Block.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = new proto.types.BlockHeader;\n      reader.readMessage(value,proto.types.BlockHeader.deserializeBinaryFromReader);\n      msg.setHeader(value);\n      break;\n    case 3:\n      var value = new proto.types.BlockBody;\n      reader.readMessage(value,proto.types.BlockBody.deserializeBinaryFromReader);\n      msg.setBody(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Block.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Block.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Block} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Block.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getHeader();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.types.BlockHeader.serializeBinaryToWriter\n    );\n  }\n  f = message.getBody();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.types.BlockBody.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Block.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.types.Block.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.types.Block.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Block.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional BlockHeader header = 2;\n * @return {?proto.types.BlockHeader}\n */\nproto.types.Block.prototype.getHeader = function() {\n  return /** @type{?proto.types.BlockHeader} */ (\n    jspb.Message.getWrapperField(this, proto.types.BlockHeader, 2));\n};\n\n\n/** @param {?proto.types.BlockHeader|undefined} value */\nproto.types.Block.prototype.setHeader = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.types.Block.prototype.clearHeader = function() {\n  this.setHeader(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.Block.prototype.hasHeader = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional BlockBody body = 3;\n * @return {?proto.types.BlockBody}\n */\nproto.types.Block.prototype.getBody = function() {\n  return /** @type{?proto.types.BlockBody} */ (\n    jspb.Message.getWrapperField(this, proto.types.BlockBody, 3));\n};\n\n\n/** @param {?proto.types.BlockBody|undefined} value */\nproto.types.Block.prototype.setBody = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.types.Block.prototype.clearBody = function() {\n  this.setBody(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.Block.prototype.hasBody = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.BlockHeader = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.BlockHeader, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.BlockHeader.displayName = 'proto.types.BlockHeader';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.BlockHeader.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.BlockHeader.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.BlockHeader} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockHeader.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chainid: msg.getChainid_asB64(),\n    prevblockhash: msg.getPrevblockhash_asB64(),\n    blockno: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    blocksroothash: msg.getBlocksroothash_asB64(),\n    txsroothash: msg.getTxsroothash_asB64(),\n    receiptsroothash: msg.getReceiptsroothash_asB64(),\n    confirms: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    pubkey: msg.getPubkey_asB64(),\n    coinbaseaccount: msg.getCoinbaseaccount_asB64(),\n    sign: msg.getSign_asB64(),\n    consensus: msg.getConsensus_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.BlockHeader}\n */\nproto.types.BlockHeader.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.BlockHeader;\n  return proto.types.BlockHeader.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.BlockHeader} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.BlockHeader}\n */\nproto.types.BlockHeader.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainid(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPrevblockhash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockno(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlocksroothash(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxsroothash(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReceiptsroothash(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setConfirms(value);\n      break;\n    case 9:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPubkey(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCoinbaseaccount(value);\n      break;\n    case 11:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSign(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setConsensus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.BlockHeader.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.BlockHeader} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockHeader.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChainid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPrevblockhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getBlockno();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getBlocksroothash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getTxsroothash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getReceiptsroothash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n  f = message.getConfirms();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      9,\n      f\n    );\n  }\n  f = message.getCoinbaseaccount_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getSign_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      11,\n      f\n    );\n  }\n  f = message.getConsensus_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes chainID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockHeader.prototype.getChainid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes chainID = 1;\n * This is a type-conversion wrapper around `getChainid()`\n * @return {string}\n */\nproto.types.BlockHeader.prototype.getChainid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainid()));\n};\n\n\n/**\n * optional bytes chainID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainid()`\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.getChainid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockHeader.prototype.setChainid = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes prevBlockHash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockHeader.prototype.getPrevblockhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes prevBlockHash = 2;\n * This is a type-conversion wrapper around `getPrevblockhash()`\n * @return {string}\n */\nproto.types.BlockHeader.prototype.getPrevblockhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPrevblockhash()));\n};\n\n\n/**\n * optional bytes prevBlockHash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPrevblockhash()`\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.getPrevblockhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPrevblockhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockHeader.prototype.setPrevblockhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional uint64 blockNo = 3;\n * @return {number}\n */\nproto.types.BlockHeader.prototype.getBlockno = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockHeader.prototype.setBlockno = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 timestamp = 4;\n * @return {number}\n */\nproto.types.BlockHeader.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockHeader.prototype.setTimestamp = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bytes blocksRootHash = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockHeader.prototype.getBlocksroothash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes blocksRootHash = 5;\n * This is a type-conversion wrapper around `getBlocksroothash()`\n * @return {string}\n */\nproto.types.BlockHeader.prototype.getBlocksroothash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlocksroothash()));\n};\n\n\n/**\n * optional bytes blocksRootHash = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlocksroothash()`\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.getBlocksroothash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlocksroothash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockHeader.prototype.setBlocksroothash = function(value) {\n  jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional bytes txsRootHash = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockHeader.prototype.getTxsroothash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes txsRootHash = 6;\n * This is a type-conversion wrapper around `getTxsroothash()`\n * @return {string}\n */\nproto.types.BlockHeader.prototype.getTxsroothash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxsroothash()));\n};\n\n\n/**\n * optional bytes txsRootHash = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxsroothash()`\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.getTxsroothash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxsroothash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockHeader.prototype.setTxsroothash = function(value) {\n  jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional bytes receiptsRootHash = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockHeader.prototype.getReceiptsroothash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes receiptsRootHash = 7;\n * This is a type-conversion wrapper around `getReceiptsroothash()`\n * @return {string}\n */\nproto.types.BlockHeader.prototype.getReceiptsroothash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReceiptsroothash()));\n};\n\n\n/**\n * optional bytes receiptsRootHash = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiptsroothash()`\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.getReceiptsroothash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReceiptsroothash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockHeader.prototype.setReceiptsroothash = function(value) {\n  jspb.Message.setProto3BytesField(this, 7, value);\n};\n\n\n/**\n * optional uint64 confirms = 8;\n * @return {number}\n */\nproto.types.BlockHeader.prototype.getConfirms = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockHeader.prototype.setConfirms = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bytes pubKey = 9;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockHeader.prototype.getPubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * optional bytes pubKey = 9;\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {string}\n */\nproto.types.BlockHeader.prototype.getPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPubkey()));\n};\n\n\n/**\n * optional bytes pubKey = 9;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.getPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockHeader.prototype.setPubkey = function(value) {\n  jspb.Message.setProto3BytesField(this, 9, value);\n};\n\n\n/**\n * optional bytes coinbaseAccount = 10;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockHeader.prototype.getCoinbaseaccount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes coinbaseAccount = 10;\n * This is a type-conversion wrapper around `getCoinbaseaccount()`\n * @return {string}\n */\nproto.types.BlockHeader.prototype.getCoinbaseaccount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCoinbaseaccount()));\n};\n\n\n/**\n * optional bytes coinbaseAccount = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCoinbaseaccount()`\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.getCoinbaseaccount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCoinbaseaccount()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockHeader.prototype.setCoinbaseaccount = function(value) {\n  jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n/**\n * optional bytes sign = 11;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockHeader.prototype.getSign = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * optional bytes sign = 11;\n * This is a type-conversion wrapper around `getSign()`\n * @return {string}\n */\nproto.types.BlockHeader.prototype.getSign_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSign()));\n};\n\n\n/**\n * optional bytes sign = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSign()`\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.getSign_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSign()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockHeader.prototype.setSign = function(value) {\n  jspb.Message.setProto3BytesField(this, 11, value);\n};\n\n\n/**\n * optional bytes consensus = 12;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockHeader.prototype.getConsensus = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes consensus = 12;\n * This is a type-conversion wrapper around `getConsensus()`\n * @return {string}\n */\nproto.types.BlockHeader.prototype.getConsensus_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getConsensus()));\n};\n\n\n/**\n * optional bytes consensus = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getConsensus()`\n * @return {!Uint8Array}\n */\nproto.types.BlockHeader.prototype.getConsensus_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getConsensus()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockHeader.prototype.setConsensus = function(value) {\n  jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.BlockBody = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.BlockBody.repeatedFields_, null);\n};\ngoog.inherits(proto.types.BlockBody, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.BlockBody.displayName = 'proto.types.BlockBody';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.BlockBody.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.BlockBody.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.BlockBody.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.BlockBody} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockBody.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txsList: jspb.Message.toObjectList(msg.getTxsList(),\n    proto.types.Tx.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.BlockBody}\n */\nproto.types.BlockBody.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.BlockBody;\n  return proto.types.BlockBody.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.BlockBody} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.BlockBody}\n */\nproto.types.BlockBody.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.Tx;\n      reader.readMessage(value,proto.types.Tx.deserializeBinaryFromReader);\n      msg.addTxs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.BlockBody.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.BlockBody.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.BlockBody} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockBody.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.types.Tx.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Tx txs = 1;\n * @return {!Array<!proto.types.Tx>}\n */\nproto.types.BlockBody.prototype.getTxsList = function() {\n  return /** @type{!Array<!proto.types.Tx>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.Tx, 1));\n};\n\n\n/** @param {!Array<!proto.types.Tx>} value */\nproto.types.BlockBody.prototype.setTxsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.Tx=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Tx}\n */\nproto.types.BlockBody.prototype.addTxs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.Tx, opt_index);\n};\n\n\nproto.types.BlockBody.prototype.clearTxsList = function() {\n  this.setTxsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.TxList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.TxList.repeatedFields_, null);\n};\ngoog.inherits(proto.types.TxList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.TxList.displayName = 'proto.types.TxList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.TxList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.TxList.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.TxList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.TxList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.TxList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txsList: jspb.Message.toObjectList(msg.getTxsList(),\n    proto.types.Tx.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.TxList}\n */\nproto.types.TxList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.TxList;\n  return proto.types.TxList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.TxList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.TxList}\n */\nproto.types.TxList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.Tx;\n      reader.readMessage(value,proto.types.Tx.deserializeBinaryFromReader);\n      msg.addTxs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.TxList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.TxList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.TxList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.TxList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.types.Tx.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Tx txs = 1;\n * @return {!Array<!proto.types.Tx>}\n */\nproto.types.TxList.prototype.getTxsList = function() {\n  return /** @type{!Array<!proto.types.Tx>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.Tx, 1));\n};\n\n\n/** @param {!Array<!proto.types.Tx>} value */\nproto.types.TxList.prototype.setTxsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.Tx=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Tx}\n */\nproto.types.TxList.prototype.addTxs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.Tx, opt_index);\n};\n\n\nproto.types.TxList.prototype.clearTxsList = function() {\n  this.setTxsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Tx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Tx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Tx.displayName = 'proto.types.Tx';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Tx.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Tx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Tx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Tx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    body: (f = msg.getBody()) && proto.types.TxBody.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Tx}\n */\nproto.types.Tx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Tx;\n  return proto.types.Tx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Tx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Tx}\n */\nproto.types.Tx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = new proto.types.TxBody;\n      reader.readMessage(value,proto.types.TxBody.deserializeBinaryFromReader);\n      msg.setBody(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Tx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Tx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Tx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Tx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBody();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.types.TxBody.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Tx.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.types.Tx.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.types.Tx.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Tx.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional TxBody body = 2;\n * @return {?proto.types.TxBody}\n */\nproto.types.Tx.prototype.getBody = function() {\n  return /** @type{?proto.types.TxBody} */ (\n    jspb.Message.getWrapperField(this, proto.types.TxBody, 2));\n};\n\n\n/** @param {?proto.types.TxBody|undefined} value */\nproto.types.Tx.prototype.setBody = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.types.Tx.prototype.clearBody = function() {\n  this.setBody(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.Tx.prototype.hasBody = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.TxBody = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.TxBody, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.TxBody.displayName = 'proto.types.TxBody';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.TxBody.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.TxBody.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.TxBody} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.TxBody.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    account: msg.getAccount_asB64(),\n    recipient: msg.getRecipient_asB64(),\n    amount: msg.getAmount_asB64(),\n    payload: msg.getPayload_asB64(),\n    gaslimit: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    gasprice: msg.getGasprice_asB64(),\n    type: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    chainidhash: msg.getChainidhash_asB64(),\n    sign: msg.getSign_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.TxBody}\n */\nproto.types.TxBody.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.TxBody;\n  return proto.types.TxBody.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.TxBody} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.TxBody}\n */\nproto.types.TxBody.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNonce(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRecipient(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAmount(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setGaslimit(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setGasprice(value);\n      break;\n    case 8:\n      var value = /** @type {!proto.types.TxType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 9:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainidhash(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSign(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.TxBody.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.TxBody.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.TxBody} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.TxBody.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNonce();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getAccount_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRecipient_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAmount_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPayload_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getGaslimit();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getGasprice_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n  f = message.getChainidhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      9,\n      f\n    );\n  }\n  f = message.getSign_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 nonce = 1;\n * @return {number}\n */\nproto.types.TxBody.prototype.getNonce = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.types.TxBody.prototype.setNonce = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes account = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.TxBody.prototype.getAccount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes account = 2;\n * This is a type-conversion wrapper around `getAccount()`\n * @return {string}\n */\nproto.types.TxBody.prototype.getAccount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccount()));\n};\n\n\n/**\n * optional bytes account = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccount()`\n * @return {!Uint8Array}\n */\nproto.types.TxBody.prototype.getAccount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccount()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.TxBody.prototype.setAccount = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes recipient = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.types.TxBody.prototype.getRecipient = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes recipient = 3;\n * This is a type-conversion wrapper around `getRecipient()`\n * @return {string}\n */\nproto.types.TxBody.prototype.getRecipient_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRecipient()));\n};\n\n\n/**\n * optional bytes recipient = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRecipient()`\n * @return {!Uint8Array}\n */\nproto.types.TxBody.prototype.getRecipient_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRecipient()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.TxBody.prototype.setRecipient = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes amount = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.TxBody.prototype.getAmount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes amount = 4;\n * This is a type-conversion wrapper around `getAmount()`\n * @return {string}\n */\nproto.types.TxBody.prototype.getAmount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAmount()));\n};\n\n\n/**\n * optional bytes amount = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAmount()`\n * @return {!Uint8Array}\n */\nproto.types.TxBody.prototype.getAmount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAmount()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.TxBody.prototype.setAmount = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes payload = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.types.TxBody.prototype.getPayload = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes payload = 5;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.types.TxBody.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * optional bytes payload = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.types.TxBody.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.TxBody.prototype.setPayload = function(value) {\n  jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional uint64 gasLimit = 6;\n * @return {number}\n */\nproto.types.TxBody.prototype.getGaslimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.types.TxBody.prototype.setGaslimit = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional bytes gasPrice = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.types.TxBody.prototype.getGasprice = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes gasPrice = 7;\n * This is a type-conversion wrapper around `getGasprice()`\n * @return {string}\n */\nproto.types.TxBody.prototype.getGasprice_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getGasprice()));\n};\n\n\n/**\n * optional bytes gasPrice = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGasprice()`\n * @return {!Uint8Array}\n */\nproto.types.TxBody.prototype.getGasprice_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getGasprice()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.TxBody.prototype.setGasprice = function(value) {\n  jspb.Message.setProto3BytesField(this, 7, value);\n};\n\n\n/**\n * optional TxType type = 8;\n * @return {!proto.types.TxType}\n */\nproto.types.TxBody.prototype.getType = function() {\n  return /** @type {!proto.types.TxType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {!proto.types.TxType} value */\nproto.types.TxBody.prototype.setType = function(value) {\n  jspb.Message.setProto3EnumField(this, 8, value);\n};\n\n\n/**\n * optional bytes chainIdHash = 9;\n * @return {!(string|Uint8Array)}\n */\nproto.types.TxBody.prototype.getChainidhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * optional bytes chainIdHash = 9;\n * This is a type-conversion wrapper around `getChainidhash()`\n * @return {string}\n */\nproto.types.TxBody.prototype.getChainidhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainidhash()));\n};\n\n\n/**\n * optional bytes chainIdHash = 9;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainidhash()`\n * @return {!Uint8Array}\n */\nproto.types.TxBody.prototype.getChainidhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainidhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.TxBody.prototype.setChainidhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 9, value);\n};\n\n\n/**\n * optional bytes sign = 10;\n * @return {!(string|Uint8Array)}\n */\nproto.types.TxBody.prototype.getSign = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes sign = 10;\n * This is a type-conversion wrapper around `getSign()`\n * @return {string}\n */\nproto.types.TxBody.prototype.getSign_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSign()));\n};\n\n\n/**\n * optional bytes sign = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSign()`\n * @return {!Uint8Array}\n */\nproto.types.TxBody.prototype.getSign_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSign()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.TxBody.prototype.setSign = function(value) {\n  jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.TxIdx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.TxIdx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.TxIdx.displayName = 'proto.types.TxIdx';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.TxIdx.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.TxIdx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.TxIdx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.TxIdx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockhash: msg.getBlockhash_asB64(),\n    idx: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.TxIdx}\n */\nproto.types.TxIdx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.TxIdx;\n  return proto.types.TxIdx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.TxIdx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.TxIdx}\n */\nproto.types.TxIdx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlockhash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setIdx(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.TxIdx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.TxIdx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.TxIdx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.TxIdx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getIdx();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes blockHash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.TxIdx.prototype.getBlockhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes blockHash = 1;\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {string}\n */\nproto.types.TxIdx.prototype.getBlockhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlockhash()));\n};\n\n\n/**\n * optional bytes blockHash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {!Uint8Array}\n */\nproto.types.TxIdx.prototype.getBlockhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlockhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.TxIdx.prototype.setBlockhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int32 idx = 2;\n * @return {number}\n */\nproto.types.TxIdx.prototype.getIdx = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.TxIdx.prototype.setIdx = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.TxInBlock = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.TxInBlock, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.TxInBlock.displayName = 'proto.types.TxInBlock';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.TxInBlock.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.TxInBlock.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.TxInBlock} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.TxInBlock.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txidx: (f = msg.getTxidx()) && proto.types.TxIdx.toObject(includeInstance, f),\n    tx: (f = msg.getTx()) && proto.types.Tx.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.TxInBlock}\n */\nproto.types.TxInBlock.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.TxInBlock;\n  return proto.types.TxInBlock.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.TxInBlock} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.TxInBlock}\n */\nproto.types.TxInBlock.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.TxIdx;\n      reader.readMessage(value,proto.types.TxIdx.deserializeBinaryFromReader);\n      msg.setTxidx(value);\n      break;\n    case 2:\n      var value = new proto.types.Tx;\n      reader.readMessage(value,proto.types.Tx.deserializeBinaryFromReader);\n      msg.setTx(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.TxInBlock.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.TxInBlock.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.TxInBlock} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.TxInBlock.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxidx();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.types.TxIdx.serializeBinaryToWriter\n    );\n  }\n  f = message.getTx();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.types.Tx.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional TxIdx txIdx = 1;\n * @return {?proto.types.TxIdx}\n */\nproto.types.TxInBlock.prototype.getTxidx = function() {\n  return /** @type{?proto.types.TxIdx} */ (\n    jspb.Message.getWrapperField(this, proto.types.TxIdx, 1));\n};\n\n\n/** @param {?proto.types.TxIdx|undefined} value */\nproto.types.TxInBlock.prototype.setTxidx = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.TxInBlock.prototype.clearTxidx = function() {\n  this.setTxidx(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.TxInBlock.prototype.hasTxidx = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Tx tx = 2;\n * @return {?proto.types.Tx}\n */\nproto.types.TxInBlock.prototype.getTx = function() {\n  return /** @type{?proto.types.Tx} */ (\n    jspb.Message.getWrapperField(this, proto.types.Tx, 2));\n};\n\n\n/** @param {?proto.types.Tx|undefined} value */\nproto.types.TxInBlock.prototype.setTx = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.types.TxInBlock.prototype.clearTx = function() {\n  this.setTx(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.TxInBlock.prototype.hasTx = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.State = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.State, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.State.displayName = 'proto.types.State';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.State.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.State.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.State} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.State.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    balance: msg.getBalance_asB64(),\n    codehash: msg.getCodehash_asB64(),\n    storageroot: msg.getStorageroot_asB64(),\n    sqlrecoverypoint: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.State}\n */\nproto.types.State.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.State;\n  return proto.types.State.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.State} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.State}\n */\nproto.types.State.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNonce(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBalance(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCodehash(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setStorageroot(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSqlrecoverypoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.State.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.State.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.State} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.State.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNonce();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getBalance_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getCodehash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getStorageroot_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getSqlrecoverypoint();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 nonce = 1;\n * @return {number}\n */\nproto.types.State.prototype.getNonce = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.types.State.prototype.setNonce = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes balance = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.State.prototype.getBalance = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes balance = 2;\n * This is a type-conversion wrapper around `getBalance()`\n * @return {string}\n */\nproto.types.State.prototype.getBalance_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBalance()));\n};\n\n\n/**\n * optional bytes balance = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBalance()`\n * @return {!Uint8Array}\n */\nproto.types.State.prototype.getBalance_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBalance()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.State.prototype.setBalance = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes codeHash = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.types.State.prototype.getCodehash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes codeHash = 3;\n * This is a type-conversion wrapper around `getCodehash()`\n * @return {string}\n */\nproto.types.State.prototype.getCodehash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCodehash()));\n};\n\n\n/**\n * optional bytes codeHash = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCodehash()`\n * @return {!Uint8Array}\n */\nproto.types.State.prototype.getCodehash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCodehash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.State.prototype.setCodehash = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes storageRoot = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.State.prototype.getStorageroot = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes storageRoot = 4;\n * This is a type-conversion wrapper around `getStorageroot()`\n * @return {string}\n */\nproto.types.State.prototype.getStorageroot_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getStorageroot()));\n};\n\n\n/**\n * optional bytes storageRoot = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStorageroot()`\n * @return {!Uint8Array}\n */\nproto.types.State.prototype.getStorageroot_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getStorageroot()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.State.prototype.setStorageroot = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional uint64 sqlRecoveryPoint = 5;\n * @return {number}\n */\nproto.types.State.prototype.getSqlrecoverypoint = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.types.State.prototype.setSqlrecoverypoint = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.AccountProof = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.AccountProof.repeatedFields_, null);\n};\ngoog.inherits(proto.types.AccountProof, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.AccountProof.displayName = 'proto.types.AccountProof';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.AccountProof.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.AccountProof.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.AccountProof.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.AccountProof} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountProof.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    state: (f = msg.getState()) && proto.types.State.toObject(includeInstance, f),\n    inclusion: jspb.Message.getFieldWithDefault(msg, 2, false),\n    key: msg.getKey_asB64(),\n    proofkey: msg.getProofkey_asB64(),\n    proofval: msg.getProofval_asB64(),\n    bitmap: msg.getBitmap_asB64(),\n    height: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    auditpathList: msg.getAuditpathList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.AccountProof}\n */\nproto.types.AccountProof.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.AccountProof;\n  return proto.types.AccountProof.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.AccountProof} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.AccountProof}\n */\nproto.types.AccountProof.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.State;\n      reader.readMessage(value,proto.types.State.deserializeBinaryFromReader);\n      msg.setState(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInclusion(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setKey(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProofkey(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProofval(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBitmap(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setHeight(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addAuditpath(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.AccountProof.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.AccountProof.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.AccountProof} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountProof.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getState();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.types.State.serializeBinaryToWriter\n    );\n  }\n  f = message.getInclusion();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getProofkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getProofval_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getBitmap_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = message.getAuditpathList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional State state = 1;\n * @return {?proto.types.State}\n */\nproto.types.AccountProof.prototype.getState = function() {\n  return /** @type{?proto.types.State} */ (\n    jspb.Message.getWrapperField(this, proto.types.State, 1));\n};\n\n\n/** @param {?proto.types.State|undefined} value */\nproto.types.AccountProof.prototype.setState = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.AccountProof.prototype.clearState = function() {\n  this.setState(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.AccountProof.prototype.hasState = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool inclusion = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.AccountProof.prototype.getInclusion = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.AccountProof.prototype.setInclusion = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional bytes key = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AccountProof.prototype.getKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes key = 3;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\nproto.types.AccountProof.prototype.getKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getKey()));\n};\n\n\n/**\n * optional bytes key = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\nproto.types.AccountProof.prototype.getKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getKey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AccountProof.prototype.setKey = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes proofKey = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AccountProof.prototype.getProofkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes proofKey = 4;\n * This is a type-conversion wrapper around `getProofkey()`\n * @return {string}\n */\nproto.types.AccountProof.prototype.getProofkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProofkey()));\n};\n\n\n/**\n * optional bytes proofKey = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProofkey()`\n * @return {!Uint8Array}\n */\nproto.types.AccountProof.prototype.getProofkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProofkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AccountProof.prototype.setProofkey = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes proofVal = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AccountProof.prototype.getProofval = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes proofVal = 5;\n * This is a type-conversion wrapper around `getProofval()`\n * @return {string}\n */\nproto.types.AccountProof.prototype.getProofval_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProofval()));\n};\n\n\n/**\n * optional bytes proofVal = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProofval()`\n * @return {!Uint8Array}\n */\nproto.types.AccountProof.prototype.getProofval_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProofval()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AccountProof.prototype.setProofval = function(value) {\n  jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional bytes bitmap = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AccountProof.prototype.getBitmap = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes bitmap = 6;\n * This is a type-conversion wrapper around `getBitmap()`\n * @return {string}\n */\nproto.types.AccountProof.prototype.getBitmap_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBitmap()));\n};\n\n\n/**\n * optional bytes bitmap = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBitmap()`\n * @return {!Uint8Array}\n */\nproto.types.AccountProof.prototype.getBitmap_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBitmap()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AccountProof.prototype.setBitmap = function(value) {\n  jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional uint32 height = 7;\n * @return {number}\n */\nproto.types.AccountProof.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.types.AccountProof.prototype.setHeight = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * repeated bytes auditPath = 8;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.AccountProof.prototype.getAuditpathList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 8));\n};\n\n\n/**\n * repeated bytes auditPath = 8;\n * This is a type-conversion wrapper around `getAuditpathList()`\n * @return {!Array<string>}\n */\nproto.types.AccountProof.prototype.getAuditpathList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getAuditpathList()));\n};\n\n\n/**\n * repeated bytes auditPath = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAuditpathList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.AccountProof.prototype.getAuditpathList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getAuditpathList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.AccountProof.prototype.setAuditpathList = function(value) {\n  jspb.Message.setField(this, 8, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.AccountProof.prototype.addAuditpath = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 8, value, opt_index);\n};\n\n\nproto.types.AccountProof.prototype.clearAuditpathList = function() {\n  this.setAuditpathList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ContractVarProof = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.ContractVarProof.repeatedFields_, null);\n};\ngoog.inherits(proto.types.ContractVarProof, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ContractVarProof.displayName = 'proto.types.ContractVarProof';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.ContractVarProof.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ContractVarProof.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ContractVarProof.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ContractVarProof} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ContractVarProof.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: msg.getValue_asB64(),\n    inclusion: jspb.Message.getFieldWithDefault(msg, 2, false),\n    proofkey: msg.getProofkey_asB64(),\n    proofval: msg.getProofval_asB64(),\n    bitmap: msg.getBitmap_asB64(),\n    height: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    auditpathList: msg.getAuditpathList_asB64(),\n    key: msg.getKey_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ContractVarProof}\n */\nproto.types.ContractVarProof.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ContractVarProof;\n  return proto.types.ContractVarProof.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ContractVarProof} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ContractVarProof}\n */\nproto.types.ContractVarProof.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInclusion(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProofkey(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProofval(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBitmap(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setHeight(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addAuditpath(value);\n      break;\n    case 9:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ContractVarProof.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ContractVarProof.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ContractVarProof} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ContractVarProof.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getInclusion();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getProofkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getProofval_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getBitmap_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = message.getAuditpathList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      8,\n      f\n    );\n  }\n  f = message.getKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ContractVarProof.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.types.ContractVarProof.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.types.ContractVarProof.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ContractVarProof.prototype.setValue = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bool inclusion = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.ContractVarProof.prototype.getInclusion = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.ContractVarProof.prototype.setInclusion = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional bytes proofKey = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ContractVarProof.prototype.getProofkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes proofKey = 4;\n * This is a type-conversion wrapper around `getProofkey()`\n * @return {string}\n */\nproto.types.ContractVarProof.prototype.getProofkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProofkey()));\n};\n\n\n/**\n * optional bytes proofKey = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProofkey()`\n * @return {!Uint8Array}\n */\nproto.types.ContractVarProof.prototype.getProofkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProofkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ContractVarProof.prototype.setProofkey = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes proofVal = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ContractVarProof.prototype.getProofval = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes proofVal = 5;\n * This is a type-conversion wrapper around `getProofval()`\n * @return {string}\n */\nproto.types.ContractVarProof.prototype.getProofval_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProofval()));\n};\n\n\n/**\n * optional bytes proofVal = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProofval()`\n * @return {!Uint8Array}\n */\nproto.types.ContractVarProof.prototype.getProofval_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProofval()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ContractVarProof.prototype.setProofval = function(value) {\n  jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional bytes bitmap = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ContractVarProof.prototype.getBitmap = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes bitmap = 6;\n * This is a type-conversion wrapper around `getBitmap()`\n * @return {string}\n */\nproto.types.ContractVarProof.prototype.getBitmap_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBitmap()));\n};\n\n\n/**\n * optional bytes bitmap = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBitmap()`\n * @return {!Uint8Array}\n */\nproto.types.ContractVarProof.prototype.getBitmap_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBitmap()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ContractVarProof.prototype.setBitmap = function(value) {\n  jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional uint32 height = 7;\n * @return {number}\n */\nproto.types.ContractVarProof.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.types.ContractVarProof.prototype.setHeight = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * repeated bytes auditPath = 8;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.ContractVarProof.prototype.getAuditpathList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 8));\n};\n\n\n/**\n * repeated bytes auditPath = 8;\n * This is a type-conversion wrapper around `getAuditpathList()`\n * @return {!Array<string>}\n */\nproto.types.ContractVarProof.prototype.getAuditpathList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getAuditpathList()));\n};\n\n\n/**\n * repeated bytes auditPath = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAuditpathList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.ContractVarProof.prototype.getAuditpathList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getAuditpathList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.ContractVarProof.prototype.setAuditpathList = function(value) {\n  jspb.Message.setField(this, 8, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.ContractVarProof.prototype.addAuditpath = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 8, value, opt_index);\n};\n\n\nproto.types.ContractVarProof.prototype.clearAuditpathList = function() {\n  this.setAuditpathList([]);\n};\n\n\n/**\n * optional bytes key = 9;\n * @return {!(string|Uint8Array)}\n */\nproto.types.ContractVarProof.prototype.getKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * optional bytes key = 9;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\nproto.types.ContractVarProof.prototype.getKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getKey()));\n};\n\n\n/**\n * optional bytes key = 9;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\nproto.types.ContractVarProof.prototype.getKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getKey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.ContractVarProof.prototype.setKey = function(value) {\n  jspb.Message.setProto3BytesField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.StateQueryProof = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.StateQueryProof.repeatedFields_, null);\n};\ngoog.inherits(proto.types.StateQueryProof, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.StateQueryProof.displayName = 'proto.types.StateQueryProof';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.StateQueryProof.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.StateQueryProof.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.StateQueryProof.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.StateQueryProof} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.StateQueryProof.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    contractproof: (f = msg.getContractproof()) && proto.types.AccountProof.toObject(includeInstance, f),\n    varproofsList: jspb.Message.toObjectList(msg.getVarproofsList(),\n    proto.types.ContractVarProof.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.StateQueryProof}\n */\nproto.types.StateQueryProof.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.StateQueryProof;\n  return proto.types.StateQueryProof.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.StateQueryProof} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.StateQueryProof}\n */\nproto.types.StateQueryProof.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.AccountProof;\n      reader.readMessage(value,proto.types.AccountProof.deserializeBinaryFromReader);\n      msg.setContractproof(value);\n      break;\n    case 2:\n      var value = new proto.types.ContractVarProof;\n      reader.readMessage(value,proto.types.ContractVarProof.deserializeBinaryFromReader);\n      msg.addVarproofs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.StateQueryProof.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.StateQueryProof.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.StateQueryProof} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.StateQueryProof.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContractproof();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.types.AccountProof.serializeBinaryToWriter\n    );\n  }\n  f = message.getVarproofsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.types.ContractVarProof.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional AccountProof contractProof = 1;\n * @return {?proto.types.AccountProof}\n */\nproto.types.StateQueryProof.prototype.getContractproof = function() {\n  return /** @type{?proto.types.AccountProof} */ (\n    jspb.Message.getWrapperField(this, proto.types.AccountProof, 1));\n};\n\n\n/** @param {?proto.types.AccountProof|undefined} value */\nproto.types.StateQueryProof.prototype.setContractproof = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.StateQueryProof.prototype.clearContractproof = function() {\n  this.setContractproof(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.StateQueryProof.prototype.hasContractproof = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated ContractVarProof varProofs = 2;\n * @return {!Array<!proto.types.ContractVarProof>}\n */\nproto.types.StateQueryProof.prototype.getVarproofsList = function() {\n  return /** @type{!Array<!proto.types.ContractVarProof>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.ContractVarProof, 2));\n};\n\n\n/** @param {!Array<!proto.types.ContractVarProof>} value */\nproto.types.StateQueryProof.prototype.setVarproofsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.types.ContractVarProof=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.ContractVarProof}\n */\nproto.types.StateQueryProof.prototype.addVarproofs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.types.ContractVarProof, opt_index);\n};\n\n\nproto.types.StateQueryProof.prototype.clearVarproofsList = function() {\n  this.setVarproofsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Receipt = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.Receipt.repeatedFields_, null);\n};\ngoog.inherits(proto.types.Receipt, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Receipt.displayName = 'proto.types.Receipt';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.Receipt.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Receipt.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Receipt.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Receipt} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Receipt.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    contractaddress: msg.getContractaddress_asB64(),\n    status: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    ret: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    txhash: msg.getTxhash_asB64(),\n    feeused: msg.getFeeused_asB64(),\n    cumulativefeeused: msg.getCumulativefeeused_asB64(),\n    bloom: msg.getBloom_asB64(),\n    eventsList: jspb.Message.toObjectList(msg.getEventsList(),\n    proto.types.Event.toObject, includeInstance),\n    blockno: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    blockhash: msg.getBlockhash_asB64(),\n    txindex: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    from: msg.getFrom_asB64(),\n    to: msg.getTo_asB64(),\n    feedelegation: jspb.Message.getFieldWithDefault(msg, 14, false),\n    gasused: jspb.Message.getFieldWithDefault(msg, 15, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Receipt}\n */\nproto.types.Receipt.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Receipt;\n  return proto.types.Receipt.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Receipt} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Receipt}\n */\nproto.types.Receipt.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractaddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRet(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxhash(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFeeused(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCumulativefeeused(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBloom(value);\n      break;\n    case 8:\n      var value = new proto.types.Event;\n      reader.readMessage(value,proto.types.Event.deserializeBinaryFromReader);\n      msg.addEvents(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockno(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlockhash(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTxindex(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFrom(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTo(value);\n      break;\n    case 14:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFeedelegation(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setGasused(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Receipt.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Receipt.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Receipt} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Receipt.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContractaddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getRet();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getTxhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getFeeused_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getCumulativefeeused_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getBloom_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n  f = message.getEventsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      proto.types.Event.serializeBinaryToWriter\n    );\n  }\n  f = message.getBlockno();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getBlockhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getTxindex();\n  if (f !== 0) {\n    writer.writeInt32(\n      11,\n      f\n    );\n  }\n  f = message.getFrom_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n  f = message.getTo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = message.getFeedelegation();\n  if (f) {\n    writer.writeBool(\n      14,\n      f\n    );\n  }\n  f = message.getGasused();\n  if (f !== 0) {\n    writer.writeUint64(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Receipt.prototype.getContractaddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {string}\n */\nproto.types.Receipt.prototype.getContractaddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractaddress()));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {!Uint8Array}\n */\nproto.types.Receipt.prototype.getContractaddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractaddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Receipt.prototype.setContractaddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.types.Receipt.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Receipt.prototype.setStatus = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string ret = 3;\n * @return {string}\n */\nproto.types.Receipt.prototype.getRet = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Receipt.prototype.setRet = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bytes txHash = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Receipt.prototype.getTxhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes txHash = 4;\n * This is a type-conversion wrapper around `getTxhash()`\n * @return {string}\n */\nproto.types.Receipt.prototype.getTxhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxhash()));\n};\n\n\n/**\n * optional bytes txHash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxhash()`\n * @return {!Uint8Array}\n */\nproto.types.Receipt.prototype.getTxhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Receipt.prototype.setTxhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes feeUsed = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Receipt.prototype.getFeeused = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes feeUsed = 5;\n * This is a type-conversion wrapper around `getFeeused()`\n * @return {string}\n */\nproto.types.Receipt.prototype.getFeeused_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFeeused()));\n};\n\n\n/**\n * optional bytes feeUsed = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFeeused()`\n * @return {!Uint8Array}\n */\nproto.types.Receipt.prototype.getFeeused_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFeeused()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Receipt.prototype.setFeeused = function(value) {\n  jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional bytes cumulativeFeeUsed = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Receipt.prototype.getCumulativefeeused = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes cumulativeFeeUsed = 6;\n * This is a type-conversion wrapper around `getCumulativefeeused()`\n * @return {string}\n */\nproto.types.Receipt.prototype.getCumulativefeeused_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCumulativefeeused()));\n};\n\n\n/**\n * optional bytes cumulativeFeeUsed = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCumulativefeeused()`\n * @return {!Uint8Array}\n */\nproto.types.Receipt.prototype.getCumulativefeeused_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCumulativefeeused()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Receipt.prototype.setCumulativefeeused = function(value) {\n  jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional bytes bloom = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Receipt.prototype.getBloom = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes bloom = 7;\n * This is a type-conversion wrapper around `getBloom()`\n * @return {string}\n */\nproto.types.Receipt.prototype.getBloom_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBloom()));\n};\n\n\n/**\n * optional bytes bloom = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBloom()`\n * @return {!Uint8Array}\n */\nproto.types.Receipt.prototype.getBloom_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBloom()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Receipt.prototype.setBloom = function(value) {\n  jspb.Message.setProto3BytesField(this, 7, value);\n};\n\n\n/**\n * repeated Event events = 8;\n * @return {!Array<!proto.types.Event>}\n */\nproto.types.Receipt.prototype.getEventsList = function() {\n  return /** @type{!Array<!proto.types.Event>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.Event, 8));\n};\n\n\n/** @param {!Array<!proto.types.Event>} value */\nproto.types.Receipt.prototype.setEventsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.types.Event=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Event}\n */\nproto.types.Receipt.prototype.addEvents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.types.Event, opt_index);\n};\n\n\nproto.types.Receipt.prototype.clearEventsList = function() {\n  this.setEventsList([]);\n};\n\n\n/**\n * optional uint64 blockNo = 9;\n * @return {number}\n */\nproto.types.Receipt.prototype.getBlockno = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Receipt.prototype.setBlockno = function(value) {\n  jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional bytes blockHash = 10;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Receipt.prototype.getBlockhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes blockHash = 10;\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {string}\n */\nproto.types.Receipt.prototype.getBlockhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlockhash()));\n};\n\n\n/**\n * optional bytes blockHash = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {!Uint8Array}\n */\nproto.types.Receipt.prototype.getBlockhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlockhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Receipt.prototype.setBlockhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n/**\n * optional int32 txIndex = 11;\n * @return {number}\n */\nproto.types.Receipt.prototype.getTxindex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Receipt.prototype.setTxindex = function(value) {\n  jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n/**\n * optional bytes from = 12;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Receipt.prototype.getFrom = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes from = 12;\n * This is a type-conversion wrapper around `getFrom()`\n * @return {string}\n */\nproto.types.Receipt.prototype.getFrom_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFrom()));\n};\n\n\n/**\n * optional bytes from = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFrom()`\n * @return {!Uint8Array}\n */\nproto.types.Receipt.prototype.getFrom_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFrom()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Receipt.prototype.setFrom = function(value) {\n  jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n/**\n * optional bytes to = 13;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Receipt.prototype.getTo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes to = 13;\n * This is a type-conversion wrapper around `getTo()`\n * @return {string}\n */\nproto.types.Receipt.prototype.getTo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTo()));\n};\n\n\n/**\n * optional bytes to = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTo()`\n * @return {!Uint8Array}\n */\nproto.types.Receipt.prototype.getTo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTo()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Receipt.prototype.setTo = function(value) {\n  jspb.Message.setProto3BytesField(this, 13, value);\n};\n\n\n/**\n * optional bool feeDelegation = 14;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.Receipt.prototype.getFeedelegation = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.Receipt.prototype.setFeedelegation = function(value) {\n  jspb.Message.setProto3BooleanField(this, 14, value);\n};\n\n\n/**\n * optional uint64 gasUsed = 15;\n * @return {number}\n */\nproto.types.Receipt.prototype.getGasused = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Receipt.prototype.setGasused = function(value) {\n  jspb.Message.setProto3IntField(this, 15, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Event = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Event, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Event.displayName = 'proto.types.Event';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Event.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Event.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Event} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Event.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    contractaddress: msg.getContractaddress_asB64(),\n    eventname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    jsonargs: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    eventidx: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    txhash: msg.getTxhash_asB64(),\n    blockhash: msg.getBlockhash_asB64(),\n    blockno: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    txindex: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Event}\n */\nproto.types.Event.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Event;\n  return proto.types.Event.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Event} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Event}\n */\nproto.types.Event.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractaddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEventname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJsonargs(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setEventidx(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxhash(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlockhash(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockno(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTxindex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Event.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Event.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Event} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Event.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContractaddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getEventname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getJsonargs();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getEventidx();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getTxhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getBlockhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getBlockno();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getTxindex();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Event.prototype.getContractaddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {string}\n */\nproto.types.Event.prototype.getContractaddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractaddress()));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {!Uint8Array}\n */\nproto.types.Event.prototype.getContractaddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractaddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Event.prototype.setContractaddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string eventName = 2;\n * @return {string}\n */\nproto.types.Event.prototype.getEventname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Event.prototype.setEventname = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string jsonArgs = 3;\n * @return {string}\n */\nproto.types.Event.prototype.getJsonargs = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Event.prototype.setJsonargs = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int32 eventIdx = 4;\n * @return {number}\n */\nproto.types.Event.prototype.getEventidx = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Event.prototype.setEventidx = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bytes txHash = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Event.prototype.getTxhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes txHash = 5;\n * This is a type-conversion wrapper around `getTxhash()`\n * @return {string}\n */\nproto.types.Event.prototype.getTxhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxhash()));\n};\n\n\n/**\n * optional bytes txHash = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxhash()`\n * @return {!Uint8Array}\n */\nproto.types.Event.prototype.getTxhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Event.prototype.setTxhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional bytes blockHash = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Event.prototype.getBlockhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes blockHash = 6;\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {string}\n */\nproto.types.Event.prototype.getBlockhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlockhash()));\n};\n\n\n/**\n * optional bytes blockHash = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {!Uint8Array}\n */\nproto.types.Event.prototype.getBlockhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlockhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Event.prototype.setBlockhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional uint64 blockNo = 7;\n * @return {number}\n */\nproto.types.Event.prototype.getBlockno = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Event.prototype.setBlockno = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int32 txIndex = 8;\n * @return {number}\n */\nproto.types.Event.prototype.getTxindex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Event.prototype.setTxindex = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.FnArgument = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.FnArgument, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.FnArgument.displayName = 'proto.types.FnArgument';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.FnArgument.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.FnArgument.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.FnArgument} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.FnArgument.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.FnArgument}\n */\nproto.types.FnArgument.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.FnArgument;\n  return proto.types.FnArgument.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.FnArgument} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.FnArgument}\n */\nproto.types.FnArgument.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.FnArgument.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.FnArgument.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.FnArgument} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.FnArgument.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.types.FnArgument.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.FnArgument.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Function = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.Function.repeatedFields_, null);\n};\ngoog.inherits(proto.types.Function, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Function.displayName = 'proto.types.Function';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.Function.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Function.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Function.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Function} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Function.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    argumentsList: jspb.Message.toObjectList(msg.getArgumentsList(),\n    proto.types.FnArgument.toObject, includeInstance),\n    payable: jspb.Message.getFieldWithDefault(msg, 3, false),\n    view: jspb.Message.getFieldWithDefault(msg, 4, false),\n    feeDelegation: jspb.Message.getFieldWithDefault(msg, 5, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Function}\n */\nproto.types.Function.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Function;\n  return proto.types.Function.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Function} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Function}\n */\nproto.types.Function.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.types.FnArgument;\n      reader.readMessage(value,proto.types.FnArgument.deserializeBinaryFromReader);\n      msg.addArguments(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPayable(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setView(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFeeDelegation(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Function.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Function.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Function} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Function.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getArgumentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.types.FnArgument.serializeBinaryToWriter\n    );\n  }\n  f = message.getPayable();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getView();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getFeeDelegation();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.types.Function.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Function.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated FnArgument arguments = 2;\n * @return {!Array<!proto.types.FnArgument>}\n */\nproto.types.Function.prototype.getArgumentsList = function() {\n  return /** @type{!Array<!proto.types.FnArgument>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.FnArgument, 2));\n};\n\n\n/** @param {!Array<!proto.types.FnArgument>} value */\nproto.types.Function.prototype.setArgumentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.types.FnArgument=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.FnArgument}\n */\nproto.types.Function.prototype.addArguments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.types.FnArgument, opt_index);\n};\n\n\nproto.types.Function.prototype.clearArgumentsList = function() {\n  this.setArgumentsList([]);\n};\n\n\n/**\n * optional bool payable = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.Function.prototype.getPayable = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.Function.prototype.setPayable = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional bool view = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.Function.prototype.getView = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.Function.prototype.setView = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional bool fee_delegation = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.Function.prototype.getFeeDelegation = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.Function.prototype.setFeeDelegation = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.StateVar = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.StateVar, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.StateVar.displayName = 'proto.types.StateVar';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.StateVar.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.StateVar.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.StateVar} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.StateVar.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    len: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.StateVar}\n */\nproto.types.StateVar.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.StateVar;\n  return proto.types.StateVar.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.StateVar} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.StateVar}\n */\nproto.types.StateVar.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLen(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.StateVar.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.StateVar.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.StateVar} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.StateVar.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLen();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.types.StateVar.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.StateVar.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string type = 2;\n * @return {string}\n */\nproto.types.StateVar.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.StateVar.prototype.setType = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int32 len = 3;\n * @return {number}\n */\nproto.types.StateVar.prototype.getLen = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.StateVar.prototype.setLen = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ABI = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.ABI.repeatedFields_, null);\n};\ngoog.inherits(proto.types.ABI, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ABI.displayName = 'proto.types.ABI';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.ABI.repeatedFields_ = [3,4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ABI.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ABI.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ABI} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ABI.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    version: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    language: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    functionsList: jspb.Message.toObjectList(msg.getFunctionsList(),\n    proto.types.Function.toObject, includeInstance),\n    stateVariablesList: jspb.Message.toObjectList(msg.getStateVariablesList(),\n    proto.types.StateVar.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ABI}\n */\nproto.types.ABI.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ABI;\n  return proto.types.ABI.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ABI} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ABI}\n */\nproto.types.ABI.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLanguage(value);\n      break;\n    case 3:\n      var value = new proto.types.Function;\n      reader.readMessage(value,proto.types.Function.deserializeBinaryFromReader);\n      msg.addFunctions(value);\n      break;\n    case 4:\n      var value = new proto.types.StateVar;\n      reader.readMessage(value,proto.types.StateVar.deserializeBinaryFromReader);\n      msg.addStateVariables(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ABI.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ABI.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ABI} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ABI.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLanguage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getFunctionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.types.Function.serializeBinaryToWriter\n    );\n  }\n  f = message.getStateVariablesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.types.StateVar.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string version = 1;\n * @return {string}\n */\nproto.types.ABI.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ABI.prototype.setVersion = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string language = 2;\n * @return {string}\n */\nproto.types.ABI.prototype.getLanguage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ABI.prototype.setLanguage = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated Function functions = 3;\n * @return {!Array<!proto.types.Function>}\n */\nproto.types.ABI.prototype.getFunctionsList = function() {\n  return /** @type{!Array<!proto.types.Function>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.Function, 3));\n};\n\n\n/** @param {!Array<!proto.types.Function>} value */\nproto.types.ABI.prototype.setFunctionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.types.Function=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Function}\n */\nproto.types.ABI.prototype.addFunctions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.types.Function, opt_index);\n};\n\n\nproto.types.ABI.prototype.clearFunctionsList = function() {\n  this.setFunctionsList([]);\n};\n\n\n/**\n * repeated StateVar state_variables = 4;\n * @return {!Array<!proto.types.StateVar>}\n */\nproto.types.ABI.prototype.getStateVariablesList = function() {\n  return /** @type{!Array<!proto.types.StateVar>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.StateVar, 4));\n};\n\n\n/** @param {!Array<!proto.types.StateVar>} value */\nproto.types.ABI.prototype.setStateVariablesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.types.StateVar=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.StateVar}\n */\nproto.types.ABI.prototype.addStateVariables = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.types.StateVar, opt_index);\n};\n\n\nproto.types.ABI.prototype.clearStateVariablesList = function() {\n  this.setStateVariablesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Query = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Query, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Query.displayName = 'proto.types.Query';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Query.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Query.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Query} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Query.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    contractaddress: msg.getContractaddress_asB64(),\n    queryinfo: msg.getQueryinfo_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Query}\n */\nproto.types.Query.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Query;\n  return proto.types.Query.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Query} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Query}\n */\nproto.types.Query.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractaddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setQueryinfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Query.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Query.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Query} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Query.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContractaddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getQueryinfo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Query.prototype.getContractaddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {string}\n */\nproto.types.Query.prototype.getContractaddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractaddress()));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {!Uint8Array}\n */\nproto.types.Query.prototype.getContractaddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractaddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Query.prototype.setContractaddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes queryinfo = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Query.prototype.getQueryinfo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes queryinfo = 2;\n * This is a type-conversion wrapper around `getQueryinfo()`\n * @return {string}\n */\nproto.types.Query.prototype.getQueryinfo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getQueryinfo()));\n};\n\n\n/**\n * optional bytes queryinfo = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getQueryinfo()`\n * @return {!Uint8Array}\n */\nproto.types.Query.prototype.getQueryinfo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getQueryinfo()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Query.prototype.setQueryinfo = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.StateQuery = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.StateQuery.repeatedFields_, null);\n};\ngoog.inherits(proto.types.StateQuery, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.StateQuery.displayName = 'proto.types.StateQuery';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.StateQuery.repeatedFields_ = [5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.StateQuery.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.StateQuery.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.StateQuery} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.StateQuery.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    contractaddress: msg.getContractaddress_asB64(),\n    root: msg.getRoot_asB64(),\n    compressed: jspb.Message.getFieldWithDefault(msg, 4, false),\n    storagekeysList: msg.getStoragekeysList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.StateQuery}\n */\nproto.types.StateQuery.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.StateQuery;\n  return proto.types.StateQuery.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.StateQuery} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.StateQuery}\n */\nproto.types.StateQuery.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractaddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRoot(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCompressed(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addStoragekeys(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.StateQuery.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.StateQuery.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.StateQuery} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.StateQuery.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContractaddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getRoot_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getCompressed();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getStoragekeysList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.StateQuery.prototype.getContractaddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {string}\n */\nproto.types.StateQuery.prototype.getContractaddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractaddress()));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {!Uint8Array}\n */\nproto.types.StateQuery.prototype.getContractaddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractaddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.StateQuery.prototype.setContractaddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes root = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.types.StateQuery.prototype.getRoot = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes root = 3;\n * This is a type-conversion wrapper around `getRoot()`\n * @return {string}\n */\nproto.types.StateQuery.prototype.getRoot_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRoot()));\n};\n\n\n/**\n * optional bytes root = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRoot()`\n * @return {!Uint8Array}\n */\nproto.types.StateQuery.prototype.getRoot_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRoot()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.StateQuery.prototype.setRoot = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bool compressed = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.StateQuery.prototype.getCompressed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.StateQuery.prototype.setCompressed = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * repeated bytes storageKeys = 5;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.StateQuery.prototype.getStoragekeysList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 5));\n};\n\n\n/**\n * repeated bytes storageKeys = 5;\n * This is a type-conversion wrapper around `getStoragekeysList()`\n * @return {!Array<string>}\n */\nproto.types.StateQuery.prototype.getStoragekeysList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getStoragekeysList()));\n};\n\n\n/**\n * repeated bytes storageKeys = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStoragekeysList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.StateQuery.prototype.getStoragekeysList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getStoragekeysList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.StateQuery.prototype.setStoragekeysList = function(value) {\n  jspb.Message.setField(this, 5, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.StateQuery.prototype.addStoragekeys = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 5, value, opt_index);\n};\n\n\nproto.types.StateQuery.prototype.clearStoragekeysList = function() {\n  this.setStoragekeysList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.FilterInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.FilterInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.FilterInfo.displayName = 'proto.types.FilterInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.FilterInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.FilterInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.FilterInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.FilterInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    contractaddress: msg.getContractaddress_asB64(),\n    eventname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    blockfrom: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    blockto: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    desc: jspb.Message.getFieldWithDefault(msg, 5, false),\n    argfilter: msg.getArgfilter_asB64(),\n    recentblockcnt: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.FilterInfo}\n */\nproto.types.FilterInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.FilterInfo;\n  return proto.types.FilterInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.FilterInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.FilterInfo}\n */\nproto.types.FilterInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractaddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEventname(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockfrom(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockto(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDesc(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setArgfilter(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setRecentblockcnt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.FilterInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.FilterInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.FilterInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.FilterInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContractaddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getEventname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getBlockfrom();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getBlockto();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getDesc();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getArgfilter_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getRecentblockcnt();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.FilterInfo.prototype.getContractaddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {string}\n */\nproto.types.FilterInfo.prototype.getContractaddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractaddress()));\n};\n\n\n/**\n * optional bytes contractAddress = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractaddress()`\n * @return {!Uint8Array}\n */\nproto.types.FilterInfo.prototype.getContractaddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractaddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.FilterInfo.prototype.setContractaddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string eventName = 2;\n * @return {string}\n */\nproto.types.FilterInfo.prototype.getEventname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.FilterInfo.prototype.setEventname = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional uint64 blockfrom = 3;\n * @return {number}\n */\nproto.types.FilterInfo.prototype.getBlockfrom = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.FilterInfo.prototype.setBlockfrom = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 blockto = 4;\n * @return {number}\n */\nproto.types.FilterInfo.prototype.getBlockto = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.types.FilterInfo.prototype.setBlockto = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bool desc = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.FilterInfo.prototype.getDesc = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.FilterInfo.prototype.setDesc = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional bytes argFilter = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.types.FilterInfo.prototype.getArgfilter = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes argFilter = 6;\n * This is a type-conversion wrapper around `getArgfilter()`\n * @return {string}\n */\nproto.types.FilterInfo.prototype.getArgfilter_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getArgfilter()));\n};\n\n\n/**\n * optional bytes argFilter = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getArgfilter()`\n * @return {!Uint8Array}\n */\nproto.types.FilterInfo.prototype.getArgfilter_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getArgfilter()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.FilterInfo.prototype.setArgfilter = function(value) {\n  jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional int32 recentBlockCnt = 7;\n * @return {number}\n */\nproto.types.FilterInfo.prototype.getRecentblockcnt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.types.FilterInfo.prototype.setRecentblockcnt = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Proposal = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Proposal, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Proposal.displayName = 'proto.types.Proposal';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Proposal.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Proposal.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Proposal} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Proposal.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    multiplechoice: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Proposal}\n */\nproto.types.Proposal.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Proposal;\n  return proto.types.Proposal.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Proposal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Proposal}\n */\nproto.types.Proposal.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMultiplechoice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Proposal.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Proposal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Proposal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Proposal.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMultiplechoice();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.types.Proposal.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Proposal.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.types.Proposal.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Proposal.prototype.setDescription = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional uint32 multipleChoice = 6;\n * @return {number}\n */\nproto.types.Proposal.prototype.getMultiplechoice = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Proposal.prototype.setMultiplechoice = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.types.TxType = {\n  NORMAL: 0,\n  GOVERNANCE: 1,\n  REDEPLOY: 2,\n  FEEDELEGATION: 3,\n  TRANSFER: 4,\n  CALL: 5,\n  DEPLOY: 6\n};\n\ngoog.object.extend(exports, proto.types);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9e6e86f3dba66b8ce8c86b2d77eb9013ff116056","contentHash":"ede1506ad68622371e5093d7b11104a8c31aded15153f87d97f6e6b5899bb5ce"},"/Users/paulgrau/projects/aergo/herajs/packages/client/types/account_pb.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/types/account_pb.js","statementMap":{"0":{"start":{"line":10,"column":11},"end":{"line":10,"column":37}},"1":{"start":{"line":11,"column":11},"end":{"line":11,"column":15}},"2":{"start":{"line":12,"column":13},"end":{"line":12,"column":38}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":59}},"5":{"start":{"line":27,"column":0},"end":{"line":29,"column":2}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":61}},"7":{"start":{"line":30,"column":0},"end":{"line":30,"column":49}},"8":{"start":{"line":31,"column":0},"end":{"line":33,"column":1}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":58}},"10":{"start":{"line":36,"column":0},"end":{"line":71,"column":1}},"11":{"start":{"line":47,"column":2},"end":{"line":49,"column":4}},"12":{"start":{"line":48,"column":4},"end":{"line":48,"column":67}},"13":{"start":{"line":61,"column":2},"end":{"line":70,"column":4}},"14":{"start":{"line":62,"column":16},"end":{"line":63,"column":39}},"15":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"16":{"start":{"line":67,"column":6},"end":{"line":67,"column":37}},"17":{"start":{"line":69,"column":4},"end":{"line":69,"column":15}},"18":{"start":{"line":79,"column":0},"end":{"line":83,"column":2}},"19":{"start":{"line":80,"column":15},"end":{"line":80,"column":43}},"20":{"start":{"line":81,"column":12},"end":{"line":81,"column":37}},"21":{"start":{"line":82,"column":2},"end":{"line":82,"column":70}},"22":{"start":{"line":93,"column":0},"end":{"line":110,"column":2}},"23":{"start":{"line":94,"column":2},"end":{"line":108,"column":3}},"24":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"25":{"start":{"line":96,"column":6},"end":{"line":96,"column":12}},"26":{"start":{"line":98,"column":16},"end":{"line":98,"column":39}},"27":{"start":{"line":99,"column":4},"end":{"line":106,"column":15}},"28":{"start":{"line":101,"column":46},"end":{"line":101,"column":64}},"29":{"start":{"line":102,"column":8},"end":{"line":102,"column":30}},"30":{"start":{"line":103,"column":8},"end":{"line":103,"column":14}},"31":{"start":{"line":105,"column":8},"end":{"line":105,"column":27}},"32":{"start":{"line":106,"column":8},"end":{"line":106,"column":14}},"33":{"start":{"line":109,"column":2},"end":{"line":109,"column":13}},"34":{"start":{"line":117,"column":0},"end":{"line":121,"column":2}},"35":{"start":{"line":118,"column":15},"end":{"line":118,"column":38}},"36":{"start":{"line":119,"column":2},"end":{"line":119,"column":60}},"37":{"start":{"line":120,"column":2},"end":{"line":120,"column":34}},"38":{"start":{"line":131,"column":0},"end":{"line":140,"column":2}},"39":{"start":{"line":132,"column":10},"end":{"line":132,"column":19}},"40":{"start":{"line":133,"column":2},"end":{"line":133,"column":32}},"41":{"start":{"line":134,"column":2},"end":{"line":139,"column":3}},"42":{"start":{"line":135,"column":4},"end":{"line":137,"column":7}},"43":{"start":{"line":147,"column":0},"end":{"line":149,"column":2}},"44":{"start":{"line":148,"column":2},"end":{"line":148,"column":92}},"45":{"start":{"line":157,"column":0},"end":{"line":160,"column":2}},"46":{"start":{"line":158,"column":2},"end":{"line":159,"column":24}},"47":{"start":{"line":170,"column":0},"end":{"line":173,"column":2}},"48":{"start":{"line":171,"column":2},"end":{"line":172,"column":24}},"49":{"start":{"line":177,"column":0},"end":{"line":179,"column":2}},"50":{"start":{"line":178,"column":2},"end":{"line":178,"column":51}},"51":{"start":{"line":193,"column":0},"end":{"line":195,"column":2}},"52":{"start":{"line":194,"column":2},"end":{"line":194,"column":96}},"53":{"start":{"line":196,"column":0},"end":{"line":196,"column":53}},"54":{"start":{"line":197,"column":0},"end":{"line":199,"column":1}},"55":{"start":{"line":198,"column":2},"end":{"line":198,"column":66}},"56":{"start":{"line":205,"column":0},"end":{"line":205,"column":46}},"57":{"start":{"line":209,"column":0},"end":{"line":245,"column":1}},"58":{"start":{"line":220,"column":2},"end":{"line":222,"column":4}},"59":{"start":{"line":221,"column":4},"end":{"line":221,"column":71}},"60":{"start":{"line":234,"column":2},"end":{"line":244,"column":4}},"61":{"start":{"line":235,"column":16},"end":{"line":237,"column":54}},"62":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"63":{"start":{"line":241,"column":6},"end":{"line":241,"column":37}},"64":{"start":{"line":243,"column":4},"end":{"line":243,"column":15}},"65":{"start":{"line":253,"column":0},"end":{"line":257,"column":2}},"66":{"start":{"line":254,"column":15},"end":{"line":254,"column":43}},"67":{"start":{"line":255,"column":12},"end":{"line":255,"column":41}},"68":{"start":{"line":256,"column":2},"end":{"line":256,"column":74}},"69":{"start":{"line":267,"column":0},"end":{"line":285,"column":2}},"70":{"start":{"line":268,"column":2},"end":{"line":283,"column":3}},"71":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"72":{"start":{"line":270,"column":6},"end":{"line":270,"column":12}},"73":{"start":{"line":272,"column":16},"end":{"line":272,"column":39}},"74":{"start":{"line":273,"column":4},"end":{"line":281,"column":15}},"75":{"start":{"line":275,"column":20},"end":{"line":275,"column":45}},"76":{"start":{"line":276,"column":8},"end":{"line":276,"column":83}},"77":{"start":{"line":277,"column":8},"end":{"line":277,"column":31}},"78":{"start":{"line":278,"column":8},"end":{"line":278,"column":14}},"79":{"start":{"line":280,"column":8},"end":{"line":280,"column":27}},"80":{"start":{"line":281,"column":8},"end":{"line":281,"column":14}},"81":{"start":{"line":284,"column":2},"end":{"line":284,"column":13}},"82":{"start":{"line":292,"column":0},"end":{"line":296,"column":2}},"83":{"start":{"line":293,"column":15},"end":{"line":293,"column":38}},"84":{"start":{"line":294,"column":2},"end":{"line":294,"column":64}},"85":{"start":{"line":295,"column":2},"end":{"line":295,"column":34}},"86":{"start":{"line":306,"column":0},"end":{"line":316,"column":2}},"87":{"start":{"line":307,"column":10},"end":{"line":307,"column":19}},"88":{"start":{"line":308,"column":2},"end":{"line":308,"column":32}},"89":{"start":{"line":309,"column":2},"end":{"line":315,"column":3}},"90":{"start":{"line":310,"column":4},"end":{"line":313,"column":49}},"91":{"start":{"line":323,"column":0},"end":{"line":326,"column":2}},"92":{"start":{"line":324,"column":2},"end":{"line":325,"column":72}},"93":{"start":{"line":330,"column":0},"end":{"line":332,"column":2}},"94":{"start":{"line":331,"column":2},"end":{"line":331,"column":55}},"95":{"start":{"line":340,"column":0},"end":{"line":342,"column":2}},"96":{"start":{"line":341,"column":2},"end":{"line":341,"column":100}},"97":{"start":{"line":345,"column":0},"end":{"line":347,"column":2}},"98":{"start":{"line":346,"column":2},"end":{"line":346,"column":27}},"99":{"start":{"line":350,"column":0},"end":{"line":350,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":27,"column":22},"end":{"line":27,"column":23}},"loc":{"start":{"line":27,"column":42},"end":{"line":29,"column":1}},"line":27},"1":{"name":"(anonymous_1)","decl":{"start":{"line":47,"column":43},"end":{"line":47,"column":44}},"loc":{"start":{"line":47,"column":74},"end":{"line":49,"column":3}},"line":47},"2":{"name":"(anonymous_2)","decl":{"start":{"line":61,"column":33},"end":{"line":61,"column":34}},"loc":{"start":{"line":61,"column":65},"end":{"line":70,"column":3}},"line":61},"3":{"name":"(anonymous_3)","decl":{"start":{"line":79,"column":40},"end":{"line":79,"column":41}},"loc":{"start":{"line":79,"column":57},"end":{"line":83,"column":1}},"line":79},"4":{"name":"(anonymous_4)","decl":{"start":{"line":93,"column":50},"end":{"line":93,"column":51}},"loc":{"start":{"line":93,"column":73},"end":{"line":110,"column":1}},"line":93},"5":{"name":"(anonymous_5)","decl":{"start":{"line":117,"column":48},"end":{"line":117,"column":49}},"loc":{"start":{"line":117,"column":60},"end":{"line":121,"column":1}},"line":117},"6":{"name":"(anonymous_6)","decl":{"start":{"line":131,"column":46},"end":{"line":131,"column":47}},"loc":{"start":{"line":131,"column":73},"end":{"line":140,"column":1}},"line":131},"7":{"name":"(anonymous_7)","decl":{"start":{"line":147,"column":43},"end":{"line":147,"column":44}},"loc":{"start":{"line":147,"column":55},"end":{"line":149,"column":1}},"line":147},"8":{"name":"(anonymous_8)","decl":{"start":{"line":157,"column":49},"end":{"line":157,"column":50}},"loc":{"start":{"line":157,"column":61},"end":{"line":160,"column":1}},"line":157},"9":{"name":"(anonymous_9)","decl":{"start":{"line":170,"column":48},"end":{"line":170,"column":49}},"loc":{"start":{"line":170,"column":60},"end":{"line":173,"column":1}},"line":170},"10":{"name":"(anonymous_10)","decl":{"start":{"line":177,"column":43},"end":{"line":177,"column":44}},"loc":{"start":{"line":177,"column":60},"end":{"line":179,"column":1}},"line":177},"11":{"name":"(anonymous_11)","decl":{"start":{"line":193,"column":26},"end":{"line":193,"column":27}},"loc":{"start":{"line":193,"column":46},"end":{"line":195,"column":1}},"line":193},"12":{"name":"(anonymous_12)","decl":{"start":{"line":220,"column":47},"end":{"line":220,"column":48}},"loc":{"start":{"line":220,"column":78},"end":{"line":222,"column":3}},"line":220},"13":{"name":"(anonymous_13)","decl":{"start":{"line":234,"column":37},"end":{"line":234,"column":38}},"loc":{"start":{"line":234,"column":69},"end":{"line":244,"column":3}},"line":234},"14":{"name":"(anonymous_14)","decl":{"start":{"line":253,"column":44},"end":{"line":253,"column":45}},"loc":{"start":{"line":253,"column":61},"end":{"line":257,"column":1}},"line":253},"15":{"name":"(anonymous_15)","decl":{"start":{"line":267,"column":54},"end":{"line":267,"column":55}},"loc":{"start":{"line":267,"column":77},"end":{"line":285,"column":1}},"line":267},"16":{"name":"(anonymous_16)","decl":{"start":{"line":292,"column":52},"end":{"line":292,"column":53}},"loc":{"start":{"line":292,"column":64},"end":{"line":296,"column":1}},"line":292},"17":{"name":"(anonymous_17)","decl":{"start":{"line":306,"column":50},"end":{"line":306,"column":51}},"loc":{"start":{"line":306,"column":77},"end":{"line":316,"column":1}},"line":306},"18":{"name":"(anonymous_18)","decl":{"start":{"line":323,"column":52},"end":{"line":323,"column":53}},"loc":{"start":{"line":323,"column":64},"end":{"line":326,"column":1}},"line":323},"19":{"name":"(anonymous_19)","decl":{"start":{"line":330,"column":52},"end":{"line":330,"column":53}},"loc":{"start":{"line":330,"column":69},"end":{"line":332,"column":1}},"line":330},"20":{"name":"(anonymous_20)","decl":{"start":{"line":340,"column":48},"end":{"line":340,"column":49}},"loc":{"start":{"line":340,"column":80},"end":{"line":342,"column":1}},"line":340},"21":{"name":"(anonymous_21)","decl":{"start":{"line":345,"column":54},"end":{"line":345,"column":55}},"loc":{"start":{"line":345,"column":66},"end":{"line":347,"column":1}},"line":345}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":0},"end":{"line":33,"column":1}},"type":"if","locations":[{"start":{"line":31,"column":0},"end":{"line":33,"column":1}},{"start":{"line":31,"column":0},"end":{"line":33,"column":1}}],"line":31},"1":{"loc":{"start":{"line":31,"column":4},"end":{"line":31,"column":27}},"type":"binary-expr","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":14}},{"start":{"line":31,"column":18},"end":{"line":31,"column":27}}],"line":31},"2":{"loc":{"start":{"line":36,"column":0},"end":{"line":71,"column":1}},"type":"if","locations":[{"start":{"line":36,"column":0},"end":{"line":71,"column":1}},{"start":{"line":36,"column":0},"end":{"line":71,"column":1}}],"line":36},"3":{"loc":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},{"start":{"line":66,"column":4},"end":{"line":68,"column":5}}],"line":66},"4":{"loc":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},{"start":{"line":95,"column":4},"end":{"line":97,"column":5}}],"line":95},"5":{"loc":{"start":{"line":99,"column":4},"end":{"line":106,"column":15}},"type":"switch","locations":[{"start":{"line":100,"column":6},"end":{"line":103,"column":14}},{"start":{"line":104,"column":6},"end":{"line":106,"column":14}}],"line":99},"6":{"loc":{"start":{"line":134,"column":2},"end":{"line":139,"column":3}},"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":139,"column":3}},{"start":{"line":134,"column":2},"end":{"line":139,"column":3}}],"line":134},"7":{"loc":{"start":{"line":197,"column":0},"end":{"line":199,"column":1}},"type":"if","locations":[{"start":{"line":197,"column":0},"end":{"line":199,"column":1}},{"start":{"line":197,"column":0},"end":{"line":199,"column":1}}],"line":197},"8":{"loc":{"start":{"line":197,"column":4},"end":{"line":197,"column":27}},"type":"binary-expr","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":14}},{"start":{"line":197,"column":18},"end":{"line":197,"column":27}}],"line":197},"9":{"loc":{"start":{"line":209,"column":0},"end":{"line":245,"column":1}},"type":"if","locations":[{"start":{"line":209,"column":0},"end":{"line":245,"column":1}},{"start":{"line":209,"column":0},"end":{"line":245,"column":1}}],"line":209},"10":{"loc":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},{"start":{"line":240,"column":4},"end":{"line":242,"column":5}}],"line":240},"11":{"loc":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},{"start":{"line":269,"column":4},"end":{"line":271,"column":5}}],"line":269},"12":{"loc":{"start":{"line":273,"column":4},"end":{"line":281,"column":15}},"type":"switch","locations":[{"start":{"line":274,"column":6},"end":{"line":278,"column":14}},{"start":{"line":279,"column":6},"end":{"line":281,"column":14}}],"line":273},"13":{"loc":{"start":{"line":309,"column":2},"end":{"line":315,"column":3}},"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":315,"column":3}},{"start":{"line":309,"column":2},"end":{"line":315,"column":3}}],"line":309}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":340,"7":1,"8":1,"9":0,"10":1,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":50,"20":50,"21":50,"22":1,"23":314,"24":314,"25":0,"26":314,"27":314,"28":314,"29":314,"30":314,"31":0,"32":0,"33":314,"34":1,"35":0,"36":0,"37":0,"38":1,"39":26,"40":26,"41":26,"42":26,"43":1,"44":340,"45":1,"46":0,"47":1,"48":340,"49":1,"50":340,"51":1,"52":1,"53":1,"54":1,"55":0,"56":1,"57":1,"58":1,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":264,"72":0,"73":264,"74":264,"75":264,"76":264,"77":264,"78":264,"79":0,"80":0,"81":1,"82":1,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":1,"92":1,"93":1,"94":0,"95":1,"96":264,"97":1,"98":0,"99":1},"f":{"0":340,"1":0,"2":0,"3":50,"4":314,"5":0,"6":26,"7":340,"8":0,"9":340,"10":340,"11":1,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":1,"19":0,"20":264,"21":0},"b":{"0":[0,1],"1":[1,0],"2":[1,0],"3":[0,0],"4":[0,314],"5":[314,0],"6":[26,0],"7":[0,1],"8":[1,0],"9":[1,0],"10":[0,0],"11":[0,264],"12":[264,0],"13":[0,0]},"inputSourceMap":{"version":3,"sources":["account_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","types","Account","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","address","getAddress_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readBytes","setAddress","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getAddress_asU8","length","writeBytes","getAddress","getFieldWithDefault","bytesAsB64","bytesAsU8","setProto3BytesField","AccountList","repeatedFields_","accountsList","toObjectList","getAccountsList","readMessage","addAccounts","writeRepeatedMessage","getRepeatedWrapperField","setAccountsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearAccountsList","object","extend","exports"],"mappings":"cAAA;;;;;;;AAOA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;AACA,IAAIC,IAAI,GAAGF,IAAX;AACA,IAAIG,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;;AAEAF,IAAI,CAACG,YAAL,CAAkB,qBAAlB,EAAyC,IAAzC,EAA+CF,MAA/C;AACAD,IAAI,CAACG,YAAL,CAAkB,yBAAlB,EAA6C,IAA7C,EAAmDF,MAAnD;;AAEA;;;;;;;;;;AAUAG,KAAK,CAACC,KAAN,CAAYC,OAAZ,GAAsB,UAASC,QAAT,EAAmB;AACvCT,EAAAA,IAAI,CAACU,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;AAGAP,IAAI,CAACU,QAAL,CAAcN,KAAK,CAACC,KAAN,CAAYC,OAA1B,EAAmCR,IAAI,CAACU,OAAxC;AACA,IAAIR,IAAI,CAACW,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3BR,EAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBO,WAApB,GAAkC,qBAAlC;AACD;;;AAGD,IAAIf,IAAI,CAACU,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAV,EAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBS,SAApB,CAA8BC,QAA9B,GAAyC,UAASC,mBAAT,EAA8B;AACrE,WAAOb,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBU,QAApB,CAA6BC,mBAA7B,EAAkD,IAAlD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAb,EAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBU,QAApB,GAA+B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC5D,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXC,MAAAA,OAAO,EAAEH,GAAG,CAACI,gBAAJ,EADE,EAAb;;;AAIA,QAAIL,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GATD;AAUC;;;AAGD;;;;;AAKAjB,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBmB,iBAApB,GAAwC,UAASC,KAAT,EAAgB;AACtD,MAAIC,MAAM,GAAG,IAAI7B,IAAI,CAAC8B,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIf,KAAK,CAACC,KAAN,CAAYC,OAAhB,EAAV;AACA,SAAOF,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBuB,2BAApB,CAAgDV,GAAhD,EAAqDQ,MAArD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOAvB,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBuB,2BAApB,GAAkD,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AACtE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,0BAA4BP,MAAM,CAACQ,SAAP,EAAxC;AACAhB,QAAAA,GAAG,CAACiB,UAAJ,CAAeF,KAAf;AACA;AACF;AACEP,QAAAA,MAAM,CAACU,SAAP;AACA,cAPF;;AASD;AACD,SAAOlB,GAAP;AACD,CAjBD;;;AAoBA;;;;AAIAf,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBS,SAApB,CAA8BuB,eAA9B,GAAgD,YAAW;AACzD,MAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,EAAb;AACApC,EAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBmC,uBAApB,CAA4C,IAA5C,EAAkDF,MAAlD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOAtC,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBmC,uBAApB,GAA8C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACtE,MAAInB,CAAC,GAAGwB,SAAR;AACAxB,EAAAA,CAAC,GAAGuB,OAAO,CAACE,eAAR,EAAJ;AACA,MAAIzB,CAAC,CAAC0B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,UAAP;AACE,KADF;AAEE3B,IAAAA,CAFF;;AAID;AACF,CATD;;;AAYA;;;;AAIAhB,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBS,SAApB,CAA8BiC,UAA9B,GAA2C,YAAW;AACpD,SAAO,oCAAqClD,IAAI,CAACU,OAAL,CAAayC,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;;;AAKA;;;;;AAKA7C,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBS,SAApB,CAA8BQ,gBAA9B,GAAiD,YAAW;AAC1D,SAAO,sBAAuBzB,IAAI,CAACU,OAAL,CAAa0C,UAAb;AAC1B,SAAKF,UAAL,EAD0B,CAA9B;AAED,CAHD;;;AAMA;;;;;;;AAOA5C,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBS,SAApB,CAA8B8B,eAA9B,GAAgD,YAAW;AACzD,SAAO,2BAA4B/C,IAAI,CAACU,OAAL,CAAa2C,SAAb;AAC/B,SAAKH,UAAL,EAD+B,CAAnC;AAED,CAHD;;;AAMA;AACA5C,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBS,SAApB,CAA8BqB,UAA9B,GAA2C,UAASF,KAAT,EAAgB;AACzDpC,EAAAA,IAAI,CAACU,OAAL,CAAa4C,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0ClB,KAA1C;AACD,CAFD;;;;AAMA;;;;;;;;;;AAUA9B,KAAK,CAACC,KAAN,CAAYgD,WAAZ,GAA0B,UAAS9C,QAAT,EAAmB;AAC3CT,EAAAA,IAAI,CAACU,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CH,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBC,eAAvE,EAAwF,IAAxF;AACD,CAFD;AAGAtD,IAAI,CAACU,QAAL,CAAcN,KAAK,CAACC,KAAN,CAAYgD,WAA1B,EAAuCvD,IAAI,CAACU,OAA5C;AACA,IAAIR,IAAI,CAACW,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3BR,EAAAA,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBxC,WAAxB,GAAsC,yBAAtC;AACD;AACD;;;;;AAKAT,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBC,eAAxB,GAA0C,CAAC,CAAD,CAA1C;;;;AAIA,IAAIxD,IAAI,CAACU,OAAL,CAAaM,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAV,EAAAA,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBtC,SAAxB,CAAkCC,QAAlC,GAA6C,UAASC,mBAAT,EAA8B;AACzE,WAAOb,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBrC,QAAxB,CAAiCC,mBAAjC,EAAsD,IAAtD,CAAP;AACD,GAFD;;;AAKA;;;;;;;;;AASAb,EAAAA,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBrC,QAAxB,GAAmC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAChE,QAAIC,CAAJ,CAAOC,GAAG,GAAG;AACXkC,MAAAA,YAAY,EAAEzD,IAAI,CAACU,OAAL,CAAagD,YAAb,CAA0BrC,GAAG,CAACsC,eAAJ,EAA1B;AACdrD,MAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBU,QADN,EACgBE,eADhB,CADH,EAAb;;;AAKA,QAAIA,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;;;AAGD;;;;;AAKAjB,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwB5B,iBAAxB,GAA4C,UAASC,KAAT,EAAgB;AAC1D,MAAIC,MAAM,GAAG,IAAI7B,IAAI,CAAC8B,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIf,KAAK,CAACC,KAAN,CAAYgD,WAAhB,EAAV;AACA,SAAOjD,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBxB,2BAAxB,CAAoDV,GAApD,EAAyDQ,MAAzD,CAAP;AACD,CAJD;;;AAOA;;;;;;;AAOAvB,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBxB,2BAAxB,GAAsD,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AAC1E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAI9B,KAAK,CAACC,KAAN,CAAYC,OAAhB,EAAZ;AACAqB,QAAAA,MAAM,CAAC+B,WAAP,CAAmBxB,KAAnB,EAAyB9B,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBuB,2BAA7C;AACAV,QAAAA,GAAG,CAACwC,WAAJ,CAAgBzB,KAAhB;AACA;AACF;AACEP,QAAAA,MAAM,CAACU,SAAP;AACA,cARF;;AAUD;AACD,SAAOlB,GAAP;AACD,CAlBD;;;AAqBA;;;;AAIAf,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBtC,SAAxB,CAAkCuB,eAAlC,GAAoD,YAAW;AAC7D,MAAIC,MAAM,GAAG,IAAIzC,IAAI,CAAC0C,YAAT,EAAb;AACApC,EAAAA,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBZ,uBAAxB,CAAgD,IAAhD,EAAsDF,MAAtD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;;;AAOA;;;;;;;AAOAtC,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBZ,uBAAxB,GAAkD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC1E,MAAInB,CAAC,GAAGwB,SAAR;AACAxB,EAAAA,CAAC,GAAGuB,OAAO,CAACc,eAAR,EAAJ;AACA,MAAIrC,CAAC,CAAC0B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACqB,oBAAP;AACE,KADF;AAEExC,IAAAA,CAFF;AAGEhB,IAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBmC,uBAHtB;;AAKD;AACF,CAVD;;;AAaA;;;;AAIArC,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBtC,SAAxB,CAAkC0C,eAAlC,GAAoD,YAAW;AAC7D,SAAO;AACL3D,IAAAA,IAAI,CAACU,OAAL,CAAaqD,uBAAb,CAAqC,IAArC,EAA2CzD,KAAK,CAACC,KAAN,CAAYC,OAAvD,EAAgE,CAAhE,CADF;AAED,CAHD;;;AAMA;AACAF,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBtC,SAAxB,CAAkC+C,eAAlC,GAAoD,UAAS5B,KAAT,EAAgB;AAClEpC,EAAAA,IAAI,CAACU,OAAL,CAAauD,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8C7B,KAA9C;AACD,CAFD;;;AAKA;;;;;AAKA9B,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBtC,SAAxB,CAAkC4C,WAAlC,GAAgD,UAASK,SAAT,EAAoBC,SAApB,EAA+B;AAC7E,SAAOnE,IAAI,CAACU,OAAL,CAAa0D,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDF,SAAhD,EAA2D5D,KAAK,CAACC,KAAN,CAAYC,OAAvE,EAAgF2D,SAAhF,CAAP;AACD,CAFD;;;AAKA7D,KAAK,CAACC,KAAN,CAAYgD,WAAZ,CAAwBtC,SAAxB,CAAkCoD,iBAAlC,GAAsD,YAAW;AAC/D,OAAKL,eAAL,CAAqB,EAArB;AACD,CAFD;;;AAKA9D,IAAI,CAACoE,MAAL,CAAYC,MAAZ,CAAmBC,OAAnB,EAA4BlE,KAAK,CAACC,KAAlC","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/types","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.types.Account', null, global);\ngoog.exportSymbol('proto.types.AccountList', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Account = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Account, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Account.displayName = 'proto.types.Account';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Account.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Account.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Account} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Account.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Account}\n */\nproto.types.Account.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Account;\n  return proto.types.Account.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Account} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Account}\n */\nproto.types.Account.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Account.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Account.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Account} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Account.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Account.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.types.Account.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.types.Account.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Account.prototype.setAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.AccountList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.AccountList.repeatedFields_, null);\n};\ngoog.inherits(proto.types.AccountList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.AccountList.displayName = 'proto.types.AccountList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.AccountList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.AccountList.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.AccountList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.AccountList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountsList: jspb.Message.toObjectList(msg.getAccountsList(),\n    proto.types.Account.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.AccountList}\n */\nproto.types.AccountList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.AccountList;\n  return proto.types.AccountList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.AccountList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.AccountList}\n */\nproto.types.AccountList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.Account;\n      reader.readMessage(value,proto.types.Account.deserializeBinaryFromReader);\n      msg.addAccounts(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.AccountList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.AccountList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.AccountList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AccountList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.types.Account.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Account accounts = 1;\n * @return {!Array<!proto.types.Account>}\n */\nproto.types.AccountList.prototype.getAccountsList = function() {\n  return /** @type{!Array<!proto.types.Account>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.Account, 1));\n};\n\n\n/** @param {!Array<!proto.types.Account>} value */\nproto.types.AccountList.prototype.setAccountsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.Account=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Account}\n */\nproto.types.AccountList.prototype.addAccounts = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.Account, opt_index);\n};\n\n\nproto.types.AccountList.prototype.clearAccountsList = function() {\n  this.setAccountsList([]);\n};\n\n\ngoog.object.extend(exports, proto.types);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ea4ef34b4c5590a823b830c829716e2f8c846fe9","contentHash":"370e22281e65ceb26baecd84f0cc0df03284e490abca6bcc157634d8b4471415"},"/Users/paulgrau/projects/aergo/herajs/packages/client/types/node_pb.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/types/node_pb.js","statementMap":{"0":{"start":{"line":10,"column":11},"end":{"line":10,"column":37}},"1":{"start":{"line":11,"column":11},"end":{"line":11,"column":15}},"2":{"start":{"line":12,"column":13},"end":{"line":12,"column":38}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":64}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":59}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":56}},"6":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":96}},"8":{"start":{"line":31,"column":0},"end":{"line":31,"column":53}},"9":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":66}},"11":{"start":{"line":40,"column":0},"end":{"line":40,"column":49}},"12":{"start":{"line":44,"column":0},"end":{"line":85,"column":1}},"13":{"start":{"line":55,"column":2},"end":{"line":57,"column":4}},"14":{"start":{"line":56,"column":4},"end":{"line":56,"column":71}},"15":{"start":{"line":69,"column":2},"end":{"line":84,"column":4}},"16":{"start":{"line":70,"column":16},"end":{"line":77,"column":55}},"17":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"18":{"start":{"line":81,"column":6},"end":{"line":81,"column":37}},"19":{"start":{"line":83,"column":4},"end":{"line":83,"column":15}},"20":{"start":{"line":93,"column":0},"end":{"line":97,"column":2}},"21":{"start":{"line":94,"column":15},"end":{"line":94,"column":43}},"22":{"start":{"line":95,"column":12},"end":{"line":95,"column":41}},"23":{"start":{"line":96,"column":2},"end":{"line":96,"column":74}},"24":{"start":{"line":107,"column":0},"end":{"line":148,"column":2}},"25":{"start":{"line":108,"column":2},"end":{"line":146,"column":3}},"26":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"27":{"start":{"line":110,"column":6},"end":{"line":110,"column":12}},"28":{"start":{"line":112,"column":16},"end":{"line":112,"column":39}},"29":{"start":{"line":113,"column":4},"end":{"line":144,"column":15}},"30":{"start":{"line":115,"column":41},"end":{"line":115,"column":60}},"31":{"start":{"line":116,"column":8},"end":{"line":116,"column":30}},"32":{"start":{"line":117,"column":8},"end":{"line":117,"column":14}},"33":{"start":{"line":119,"column":41},"end":{"line":119,"column":60}},"34":{"start":{"line":120,"column":8},"end":{"line":120,"column":27}},"35":{"start":{"line":121,"column":8},"end":{"line":121,"column":14}},"36":{"start":{"line":123,"column":46},"end":{"line":123,"column":64}},"37":{"start":{"line":124,"column":8},"end":{"line":124,"column":29}},"38":{"start":{"line":125,"column":8},"end":{"line":125,"column":14}},"39":{"start":{"line":127,"column":56},"end":{"line":127,"column":73}},"40":{"start":{"line":128,"column":8},"end":{"line":128,"column":27}},"41":{"start":{"line":129,"column":8},"end":{"line":129,"column":14}},"42":{"start":{"line":131,"column":41},"end":{"line":131,"column":60}},"43":{"start":{"line":132,"column":8},"end":{"line":132,"column":30}},"44":{"start":{"line":133,"column":8},"end":{"line":133,"column":14}},"45":{"start":{"line":135,"column":41},"end":{"line":135,"column":60}},"46":{"start":{"line":136,"column":8},"end":{"line":136,"column":32}},"47":{"start":{"line":137,"column":8},"end":{"line":137,"column":14}},"48":{"start":{"line":139,"column":46},"end":{"line":139,"column":64}},"49":{"start":{"line":140,"column":8},"end":{"line":140,"column":34}},"50":{"start":{"line":141,"column":8},"end":{"line":141,"column":14}},"51":{"start":{"line":143,"column":8},"end":{"line":143,"column":27}},"52":{"start":{"line":144,"column":8},"end":{"line":144,"column":14}},"53":{"start":{"line":147,"column":2},"end":{"line":147,"column":13}},"54":{"start":{"line":155,"column":0},"end":{"line":159,"column":2}},"55":{"start":{"line":156,"column":15},"end":{"line":156,"column":38}},"56":{"start":{"line":157,"column":2},"end":{"line":157,"column":64}},"57":{"start":{"line":158,"column":2},"end":{"line":158,"column":34}},"58":{"start":{"line":169,"column":0},"end":{"line":220,"column":2}},"59":{"start":{"line":170,"column":10},"end":{"line":170,"column":19}},"60":{"start":{"line":171,"column":2},"end":{"line":171,"column":27}},"61":{"start":{"line":172,"column":2},"end":{"line":177,"column":3}},"62":{"start":{"line":173,"column":4},"end":{"line":175,"column":7}},"63":{"start":{"line":178,"column":2},"end":{"line":178,"column":24}},"64":{"start":{"line":179,"column":2},"end":{"line":184,"column":3}},"65":{"start":{"line":180,"column":4},"end":{"line":182,"column":7}},"66":{"start":{"line":185,"column":2},"end":{"line":185,"column":31}},"67":{"start":{"line":186,"column":2},"end":{"line":191,"column":3}},"68":{"start":{"line":187,"column":4},"end":{"line":189,"column":7}},"69":{"start":{"line":192,"column":2},"end":{"line":192,"column":24}},"70":{"start":{"line":193,"column":2},"end":{"line":198,"column":3}},"71":{"start":{"line":194,"column":4},"end":{"line":196,"column":7}},"72":{"start":{"line":199,"column":2},"end":{"line":199,"column":27}},"73":{"start":{"line":200,"column":2},"end":{"line":205,"column":3}},"74":{"start":{"line":201,"column":4},"end":{"line":203,"column":7}},"75":{"start":{"line":206,"column":2},"end":{"line":206,"column":33}},"76":{"start":{"line":207,"column":2},"end":{"line":212,"column":3}},"77":{"start":{"line":208,"column":4},"end":{"line":210,"column":7}},"78":{"start":{"line":213,"column":2},"end":{"line":213,"column":40}},"79":{"start":{"line":214,"column":2},"end":{"line":219,"column":3}},"80":{"start":{"line":215,"column":4},"end":{"line":217,"column":7}},"81":{"start":{"line":227,"column":0},"end":{"line":229,"column":2}},"82":{"start":{"line":228,"column":2},"end":{"line":228,"column":78}},"83":{"start":{"line":233,"column":0},"end":{"line":235,"column":2}},"84":{"start":{"line":234,"column":2},"end":{"line":234,"column":52}},"85":{"start":{"line":242,"column":0},"end":{"line":244,"column":2}},"86":{"start":{"line":243,"column":2},"end":{"line":243,"column":77}},"87":{"start":{"line":248,"column":0},"end":{"line":250,"column":2}},"88":{"start":{"line":249,"column":2},"end":{"line":249,"column":49}},"89":{"start":{"line":257,"column":0},"end":{"line":259,"column":2}},"90":{"start":{"line":258,"column":2},"end":{"line":258,"column":92}},"91":{"start":{"line":267,"column":0},"end":{"line":270,"column":2}},"92":{"start":{"line":268,"column":2},"end":{"line":269,"column":23}},"93":{"start":{"line":280,"column":0},"end":{"line":283,"column":2}},"94":{"start":{"line":281,"column":2},"end":{"line":282,"column":23}},"95":{"start":{"line":287,"column":0},"end":{"line":289,"column":2}},"96":{"start":{"line":288,"column":2},"end":{"line":288,"column":51}},"97":{"start":{"line":296,"column":0},"end":{"line":298,"column":2}},"98":{"start":{"line":297,"column":2},"end":{"line":297,"column":92}},"99":{"start":{"line":302,"column":0},"end":{"line":304,"column":2}},"100":{"start":{"line":303,"column":2},"end":{"line":303,"column":50}},"101":{"start":{"line":311,"column":0},"end":{"line":313,"column":2}},"102":{"start":{"line":312,"column":2},"end":{"line":312,"column":78}},"103":{"start":{"line":317,"column":0},"end":{"line":319,"column":2}},"104":{"start":{"line":318,"column":2},"end":{"line":318,"column":52}},"105":{"start":{"line":326,"column":0},"end":{"line":328,"column":2}},"106":{"start":{"line":327,"column":2},"end":{"line":327,"column":79}},"107":{"start":{"line":332,"column":0},"end":{"line":334,"column":2}},"108":{"start":{"line":333,"column":2},"end":{"line":333,"column":46}},"109":{"start":{"line":341,"column":0},"end":{"line":343,"column":2}},"110":{"start":{"line":342,"column":2},"end":{"line":342,"column":61}},"111":{"start":{"line":346,"column":0},"end":{"line":348,"column":2}},"112":{"start":{"line":347,"column":2},"end":{"line":347,"column":28}},"113":{"start":{"line":355,"column":0},"end":{"line":357,"column":2}},"114":{"start":{"line":356,"column":2},"end":{"line":356,"column":100}},"115":{"start":{"line":365,"column":0},"end":{"line":368,"column":2}},"116":{"start":{"line":366,"column":2},"end":{"line":367,"column":32}},"117":{"start":{"line":378,"column":0},"end":{"line":381,"column":2}},"118":{"start":{"line":379,"column":2},"end":{"line":380,"column":32}},"119":{"start":{"line":385,"column":0},"end":{"line":387,"column":2}},"120":{"start":{"line":386,"column":2},"end":{"line":386,"column":46}},"121":{"start":{"line":394,"column":0},"end":{"line":396,"column":2}},"122":{"start":{"line":395,"column":2},"end":{"line":395,"column":61}},"123":{"start":{"line":399,"column":0},"end":{"line":401,"column":2}},"124":{"start":{"line":400,"column":2},"end":{"line":400,"column":30}},"125":{"start":{"line":415,"column":0},"end":{"line":417,"column":2}},"126":{"start":{"line":416,"column":2},"end":{"line":416,"column":101}},"127":{"start":{"line":418,"column":0},"end":{"line":418,"column":58}},"128":{"start":{"line":419,"column":0},"end":{"line":421,"column":1}},"129":{"start":{"line":420,"column":2},"end":{"line":420,"column":76}},"130":{"start":{"line":427,"column":0},"end":{"line":427,"column":51}},"131":{"start":{"line":431,"column":0},"end":{"line":473,"column":1}},"132":{"start":{"line":442,"column":2},"end":{"line":444,"column":4}},"133":{"start":{"line":443,"column":4},"end":{"line":443,"column":76}},"134":{"start":{"line":456,"column":2},"end":{"line":472,"column":4}},"135":{"start":{"line":457,"column":16},"end":{"line":465,"column":43}},"136":{"start":{"line":468,"column":4},"end":{"line":470,"column":5}},"137":{"start":{"line":469,"column":6},"end":{"line":469,"column":37}},"138":{"start":{"line":471,"column":4},"end":{"line":471,"column":15}},"139":{"start":{"line":481,"column":0},"end":{"line":485,"column":2}},"140":{"start":{"line":482,"column":15},"end":{"line":482,"column":43}},"141":{"start":{"line":483,"column":12},"end":{"line":483,"column":46}},"142":{"start":{"line":484,"column":2},"end":{"line":484,"column":79}},"143":{"start":{"line":495,"column":0},"end":{"line":540,"column":2}},"144":{"start":{"line":496,"column":2},"end":{"line":538,"column":3}},"145":{"start":{"line":497,"column":4},"end":{"line":499,"column":5}},"146":{"start":{"line":498,"column":6},"end":{"line":498,"column":12}},"147":{"start":{"line":500,"column":16},"end":{"line":500,"column":39}},"148":{"start":{"line":501,"column":4},"end":{"line":536,"column":15}},"149":{"start":{"line":503,"column":41},"end":{"line":503,"column":60}},"150":{"start":{"line":504,"column":8},"end":{"line":504,"column":34}},"151":{"start":{"line":505,"column":8},"end":{"line":505,"column":14}},"152":{"start":{"line":507,"column":46},"end":{"line":507,"column":64}},"153":{"start":{"line":508,"column":8},"end":{"line":508,"column":27}},"154":{"start":{"line":509,"column":8},"end":{"line":509,"column":14}},"155":{"start":{"line":511,"column":46},"end":{"line":511,"column":64}},"156":{"start":{"line":512,"column":8},"end":{"line":512,"column":31}},"157":{"start":{"line":513,"column":8},"end":{"line":513,"column":14}},"158":{"start":{"line":515,"column":41},"end":{"line":515,"column":59}},"159":{"start":{"line":516,"column":8},"end":{"line":516,"column":33}},"160":{"start":{"line":517,"column":8},"end":{"line":517,"column":14}},"161":{"start":{"line":519,"column":41},"end":{"line":519,"column":59}},"162":{"start":{"line":520,"column":8},"end":{"line":520,"column":33}},"163":{"start":{"line":521,"column":8},"end":{"line":521,"column":14}},"164":{"start":{"line":523,"column":46},"end":{"line":523,"column":64}},"165":{"start":{"line":524,"column":8},"end":{"line":524,"column":30}},"166":{"start":{"line":525,"column":8},"end":{"line":525,"column":14}},"167":{"start":{"line":527,"column":46},"end":{"line":527,"column":64}},"168":{"start":{"line":528,"column":8},"end":{"line":528,"column":35}},"169":{"start":{"line":529,"column":8},"end":{"line":529,"column":14}},"170":{"start":{"line":531,"column":46},"end":{"line":531,"column":64}},"171":{"start":{"line":532,"column":8},"end":{"line":532,"column":32}},"172":{"start":{"line":533,"column":8},"end":{"line":533,"column":14}},"173":{"start":{"line":535,"column":8},"end":{"line":535,"column":27}},"174":{"start":{"line":536,"column":8},"end":{"line":536,"column":14}},"175":{"start":{"line":539,"column":2},"end":{"line":539,"column":13}},"176":{"start":{"line":547,"column":0},"end":{"line":551,"column":2}},"177":{"start":{"line":548,"column":15},"end":{"line":548,"column":38}},"178":{"start":{"line":549,"column":2},"end":{"line":549,"column":69}},"179":{"start":{"line":550,"column":2},"end":{"line":550,"column":34}},"180":{"start":{"line":561,"column":0},"end":{"line":619,"column":2}},"181":{"start":{"line":562,"column":10},"end":{"line":562,"column":19}},"182":{"start":{"line":563,"column":2},"end":{"line":563,"column":31}},"183":{"start":{"line":564,"column":2},"end":{"line":569,"column":3}},"184":{"start":{"line":565,"column":4},"end":{"line":567,"column":7}},"185":{"start":{"line":570,"column":2},"end":{"line":570,"column":29}},"186":{"start":{"line":571,"column":2},"end":{"line":576,"column":3}},"187":{"start":{"line":572,"column":4},"end":{"line":574,"column":7}},"188":{"start":{"line":577,"column":2},"end":{"line":577,"column":33}},"189":{"start":{"line":578,"column":2},"end":{"line":583,"column":3}},"190":{"start":{"line":579,"column":4},"end":{"line":581,"column":7}},"191":{"start":{"line":584,"column":2},"end":{"line":584,"column":30}},"192":{"start":{"line":585,"column":2},"end":{"line":590,"column":3}},"193":{"start":{"line":586,"column":4},"end":{"line":588,"column":7}},"194":{"start":{"line":591,"column":2},"end":{"line":591,"column":30}},"195":{"start":{"line":592,"column":2},"end":{"line":597,"column":3}},"196":{"start":{"line":593,"column":4},"end":{"line":595,"column":7}},"197":{"start":{"line":598,"column":2},"end":{"line":598,"column":32}},"198":{"start":{"line":599,"column":2},"end":{"line":604,"column":3}},"199":{"start":{"line":600,"column":4},"end":{"line":602,"column":7}},"200":{"start":{"line":605,"column":2},"end":{"line":605,"column":41}},"201":{"start":{"line":606,"column":2},"end":{"line":611,"column":3}},"202":{"start":{"line":607,"column":4},"end":{"line":609,"column":7}},"203":{"start":{"line":612,"column":2},"end":{"line":612,"column":34}},"204":{"start":{"line":613,"column":2},"end":{"line":618,"column":3}},"205":{"start":{"line":614,"column":4},"end":{"line":616,"column":7}},"206":{"start":{"line":626,"column":0},"end":{"line":628,"column":2}},"207":{"start":{"line":627,"column":2},"end":{"line":627,"column":77}},"208":{"start":{"line":632,"column":0},"end":{"line":634,"column":2}},"209":{"start":{"line":633,"column":2},"end":{"line":633,"column":49}},"210":{"start":{"line":641,"column":0},"end":{"line":643,"column":2}},"211":{"start":{"line":642,"column":2},"end":{"line":642,"column":92}},"212":{"start":{"line":651,"column":0},"end":{"line":654,"column":2}},"213":{"start":{"line":652,"column":2},"end":{"line":653,"column":21}},"214":{"start":{"line":664,"column":0},"end":{"line":667,"column":2}},"215":{"start":{"line":665,"column":2},"end":{"line":666,"column":21}},"216":{"start":{"line":671,"column":0},"end":{"line":673,"column":2}},"217":{"start":{"line":672,"column":2},"end":{"line":672,"column":51}},"218":{"start":{"line":680,"column":0},"end":{"line":682,"column":2}},"219":{"start":{"line":681,"column":2},"end":{"line":681,"column":92}},"220":{"start":{"line":690,"column":0},"end":{"line":693,"column":2}},"221":{"start":{"line":691,"column":2},"end":{"line":692,"column":25}},"222":{"start":{"line":703,"column":0},"end":{"line":706,"column":2}},"223":{"start":{"line":704,"column":2},"end":{"line":705,"column":25}},"224":{"start":{"line":710,"column":0},"end":{"line":712,"column":2}},"225":{"start":{"line":711,"column":2},"end":{"line":711,"column":51}},"226":{"start":{"line":719,"column":0},"end":{"line":721,"column":2}},"227":{"start":{"line":720,"column":2},"end":{"line":720,"column":77}},"228":{"start":{"line":725,"column":0},"end":{"line":727,"column":2}},"229":{"start":{"line":726,"column":2},"end":{"line":726,"column":49}},"230":{"start":{"line":734,"column":0},"end":{"line":736,"column":2}},"231":{"start":{"line":735,"column":2},"end":{"line":735,"column":77}},"232":{"start":{"line":740,"column":0},"end":{"line":742,"column":2}},"233":{"start":{"line":741,"column":2},"end":{"line":741,"column":49}},"234":{"start":{"line":749,"column":0},"end":{"line":751,"column":2}},"235":{"start":{"line":750,"column":2},"end":{"line":750,"column":92}},"236":{"start":{"line":759,"column":0},"end":{"line":762,"column":2}},"237":{"start":{"line":760,"column":2},"end":{"line":761,"column":24}},"238":{"start":{"line":772,"column":0},"end":{"line":775,"column":2}},"239":{"start":{"line":773,"column":2},"end":{"line":774,"column":24}},"240":{"start":{"line":779,"column":0},"end":{"line":781,"column":2}},"241":{"start":{"line":780,"column":2},"end":{"line":780,"column":51}},"242":{"start":{"line":788,"column":0},"end":{"line":790,"column":2}},"243":{"start":{"line":789,"column":2},"end":{"line":789,"column":100}},"244":{"start":{"line":798,"column":0},"end":{"line":801,"column":2}},"245":{"start":{"line":799,"column":2},"end":{"line":800,"column":33}},"246":{"start":{"line":811,"column":0},"end":{"line":814,"column":2}},"247":{"start":{"line":812,"column":2},"end":{"line":813,"column":33}},"248":{"start":{"line":818,"column":0},"end":{"line":820,"column":2}},"249":{"start":{"line":819,"column":2},"end":{"line":819,"column":46}},"250":{"start":{"line":827,"column":0},"end":{"line":829,"column":2}},"251":{"start":{"line":828,"column":2},"end":{"line":828,"column":61}},"252":{"start":{"line":832,"column":0},"end":{"line":834,"column":2}},"253":{"start":{"line":833,"column":2},"end":{"line":833,"column":31}},"254":{"start":{"line":841,"column":0},"end":{"line":843,"column":2}},"255":{"start":{"line":842,"column":2},"end":{"line":842,"column":92}},"256":{"start":{"line":851,"column":0},"end":{"line":854,"column":2}},"257":{"start":{"line":852,"column":2},"end":{"line":853,"column":26}},"258":{"start":{"line":864,"column":0},"end":{"line":867,"column":2}},"259":{"start":{"line":865,"column":2},"end":{"line":866,"column":26}},"260":{"start":{"line":871,"column":0},"end":{"line":873,"column":2}},"261":{"start":{"line":872,"column":2},"end":{"line":872,"column":51}},"262":{"start":{"line":879,"column":0},"end":{"line":883,"column":13}},"263":{"start":{"line":886,"column":0},"end":{"line":886,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":28,"column":26},"end":{"line":28,"column":27}},"loc":{"start":{"line":28,"column":46},"end":{"line":30,"column":1}},"line":28},"1":{"name":"(anonymous_1)","decl":{"start":{"line":55,"column":47},"end":{"line":55,"column":48}},"loc":{"start":{"line":55,"column":78},"end":{"line":57,"column":3}},"line":55},"2":{"name":"(anonymous_2)","decl":{"start":{"line":69,"column":37},"end":{"line":69,"column":38}},"loc":{"start":{"line":69,"column":69},"end":{"line":84,"column":3}},"line":69},"3":{"name":"(anonymous_3)","decl":{"start":{"line":93,"column":44},"end":{"line":93,"column":45}},"loc":{"start":{"line":93,"column":61},"end":{"line":97,"column":1}},"line":93},"4":{"name":"(anonymous_4)","decl":{"start":{"line":107,"column":54},"end":{"line":107,"column":55}},"loc":{"start":{"line":107,"column":77},"end":{"line":148,"column":1}},"line":107},"5":{"name":"(anonymous_5)","decl":{"start":{"line":155,"column":52},"end":{"line":155,"column":53}},"loc":{"start":{"line":155,"column":64},"end":{"line":159,"column":1}},"line":155},"6":{"name":"(anonymous_6)","decl":{"start":{"line":169,"column":50},"end":{"line":169,"column":51}},"loc":{"start":{"line":169,"column":77},"end":{"line":220,"column":1}},"line":169},"7":{"name":"(anonymous_7)","decl":{"start":{"line":227,"column":47},"end":{"line":227,"column":48}},"loc":{"start":{"line":227,"column":59},"end":{"line":229,"column":1}},"line":227},"8":{"name":"(anonymous_8)","decl":{"start":{"line":233,"column":47},"end":{"line":233,"column":48}},"loc":{"start":{"line":233,"column":64},"end":{"line":235,"column":1}},"line":233},"9":{"name":"(anonymous_9)","decl":{"start":{"line":242,"column":44},"end":{"line":242,"column":45}},"loc":{"start":{"line":242,"column":56},"end":{"line":244,"column":1}},"line":242},"10":{"name":"(anonymous_10)","decl":{"start":{"line":248,"column":44},"end":{"line":248,"column":45}},"loc":{"start":{"line":248,"column":61},"end":{"line":250,"column":1}},"line":248},"11":{"name":"(anonymous_11)","decl":{"start":{"line":257,"column":46},"end":{"line":257,"column":47}},"loc":{"start":{"line":257,"column":58},"end":{"line":259,"column":1}},"line":257},"12":{"name":"(anonymous_12)","decl":{"start":{"line":267,"column":52},"end":{"line":267,"column":53}},"loc":{"start":{"line":267,"column":64},"end":{"line":270,"column":1}},"line":267},"13":{"name":"(anonymous_13)","decl":{"start":{"line":280,"column":51},"end":{"line":280,"column":52}},"loc":{"start":{"line":280,"column":63},"end":{"line":283,"column":1}},"line":280},"14":{"name":"(anonymous_14)","decl":{"start":{"line":287,"column":46},"end":{"line":287,"column":47}},"loc":{"start":{"line":287,"column":63},"end":{"line":289,"column":1}},"line":287},"15":{"name":"(anonymous_15)","decl":{"start":{"line":296,"column":44},"end":{"line":296,"column":45}},"loc":{"start":{"line":296,"column":56},"end":{"line":298,"column":1}},"line":296},"16":{"name":"(anonymous_16)","decl":{"start":{"line":302,"column":44},"end":{"line":302,"column":45}},"loc":{"start":{"line":302,"column":61},"end":{"line":304,"column":1}},"line":302},"17":{"name":"(anonymous_17)","decl":{"start":{"line":311,"column":47},"end":{"line":311,"column":48}},"loc":{"start":{"line":311,"column":59},"end":{"line":313,"column":1}},"line":311},"18":{"name":"(anonymous_18)","decl":{"start":{"line":317,"column":47},"end":{"line":317,"column":48}},"loc":{"start":{"line":317,"column":64},"end":{"line":319,"column":1}},"line":317},"19":{"name":"(anonymous_19)","decl":{"start":{"line":326,"column":53},"end":{"line":326,"column":54}},"loc":{"start":{"line":326,"column":65},"end":{"line":328,"column":1}},"line":326},"20":{"name":"(anonymous_20)","decl":{"start":{"line":332,"column":53},"end":{"line":332,"column":54}},"loc":{"start":{"line":332,"column":70},"end":{"line":334,"column":1}},"line":332},"21":{"name":"(anonymous_21)","decl":{"start":{"line":341,"column":49},"end":{"line":341,"column":50}},"loc":{"start":{"line":341,"column":77},"end":{"line":343,"column":1}},"line":341},"22":{"name":"(anonymous_22)","decl":{"start":{"line":346,"column":55},"end":{"line":346,"column":56}},"loc":{"start":{"line":346,"column":67},"end":{"line":348,"column":1}},"line":346},"23":{"name":"(anonymous_23)","decl":{"start":{"line":355,"column":55},"end":{"line":355,"column":56}},"loc":{"start":{"line":355,"column":67},"end":{"line":357,"column":1}},"line":355},"24":{"name":"(anonymous_24)","decl":{"start":{"line":365,"column":61},"end":{"line":365,"column":62}},"loc":{"start":{"line":365,"column":73},"end":{"line":368,"column":1}},"line":365},"25":{"name":"(anonymous_25)","decl":{"start":{"line":378,"column":60},"end":{"line":378,"column":61}},"loc":{"start":{"line":378,"column":72},"end":{"line":381,"column":1}},"line":378},"26":{"name":"(anonymous_26)","decl":{"start":{"line":385,"column":55},"end":{"line":385,"column":56}},"loc":{"start":{"line":385,"column":72},"end":{"line":387,"column":1}},"line":385},"27":{"name":"(anonymous_27)","decl":{"start":{"line":394,"column":51},"end":{"line":394,"column":52}},"loc":{"start":{"line":394,"column":79},"end":{"line":396,"column":1}},"line":394},"28":{"name":"(anonymous_28)","decl":{"start":{"line":399,"column":57},"end":{"line":399,"column":58}},"loc":{"start":{"line":399,"column":69},"end":{"line":401,"column":1}},"line":399},"29":{"name":"(anonymous_29)","decl":{"start":{"line":415,"column":31},"end":{"line":415,"column":32}},"loc":{"start":{"line":415,"column":51},"end":{"line":417,"column":1}},"line":415},"30":{"name":"(anonymous_30)","decl":{"start":{"line":442,"column":52},"end":{"line":442,"column":53}},"loc":{"start":{"line":442,"column":83},"end":{"line":444,"column":3}},"line":442},"31":{"name":"(anonymous_31)","decl":{"start":{"line":456,"column":42},"end":{"line":456,"column":43}},"loc":{"start":{"line":456,"column":74},"end":{"line":472,"column":3}},"line":456},"32":{"name":"(anonymous_32)","decl":{"start":{"line":481,"column":49},"end":{"line":481,"column":50}},"loc":{"start":{"line":481,"column":66},"end":{"line":485,"column":1}},"line":481},"33":{"name":"(anonymous_33)","decl":{"start":{"line":495,"column":59},"end":{"line":495,"column":60}},"loc":{"start":{"line":495,"column":82},"end":{"line":540,"column":1}},"line":495},"34":{"name":"(anonymous_34)","decl":{"start":{"line":547,"column":57},"end":{"line":547,"column":58}},"loc":{"start":{"line":547,"column":69},"end":{"line":551,"column":1}},"line":547},"35":{"name":"(anonymous_35)","decl":{"start":{"line":561,"column":55},"end":{"line":561,"column":56}},"loc":{"start":{"line":561,"column":82},"end":{"line":619,"column":1}},"line":561},"36":{"name":"(anonymous_36)","decl":{"start":{"line":626,"column":56},"end":{"line":626,"column":57}},"loc":{"start":{"line":626,"column":68},"end":{"line":628,"column":1}},"line":626},"37":{"name":"(anonymous_37)","decl":{"start":{"line":632,"column":56},"end":{"line":632,"column":57}},"loc":{"start":{"line":632,"column":73},"end":{"line":634,"column":1}},"line":632},"38":{"name":"(anonymous_38)","decl":{"start":{"line":641,"column":49},"end":{"line":641,"column":50}},"loc":{"start":{"line":641,"column":61},"end":{"line":643,"column":1}},"line":641},"39":{"name":"(anonymous_39)","decl":{"start":{"line":651,"column":55},"end":{"line":651,"column":56}},"loc":{"start":{"line":651,"column":67},"end":{"line":654,"column":1}},"line":651},"40":{"name":"(anonymous_40)","decl":{"start":{"line":664,"column":54},"end":{"line":664,"column":55}},"loc":{"start":{"line":664,"column":66},"end":{"line":667,"column":1}},"line":664},"41":{"name":"(anonymous_41)","decl":{"start":{"line":671,"column":49},"end":{"line":671,"column":50}},"loc":{"start":{"line":671,"column":66},"end":{"line":673,"column":1}},"line":671},"42":{"name":"(anonymous_42)","decl":{"start":{"line":680,"column":53},"end":{"line":680,"column":54}},"loc":{"start":{"line":680,"column":65},"end":{"line":682,"column":1}},"line":680},"43":{"name":"(anonymous_43)","decl":{"start":{"line":690,"column":59},"end":{"line":690,"column":60}},"loc":{"start":{"line":690,"column":71},"end":{"line":693,"column":1}},"line":690},"44":{"name":"(anonymous_44)","decl":{"start":{"line":703,"column":58},"end":{"line":703,"column":59}},"loc":{"start":{"line":703,"column":70},"end":{"line":706,"column":1}},"line":703},"45":{"name":"(anonymous_45)","decl":{"start":{"line":710,"column":53},"end":{"line":710,"column":54}},"loc":{"start":{"line":710,"column":70},"end":{"line":712,"column":1}},"line":710},"46":{"name":"(anonymous_46)","decl":{"start":{"line":719,"column":55},"end":{"line":719,"column":56}},"loc":{"start":{"line":719,"column":67},"end":{"line":721,"column":1}},"line":719},"47":{"name":"(anonymous_47)","decl":{"start":{"line":725,"column":55},"end":{"line":725,"column":56}},"loc":{"start":{"line":725,"column":72},"end":{"line":727,"column":1}},"line":725},"48":{"name":"(anonymous_48)","decl":{"start":{"line":734,"column":55},"end":{"line":734,"column":56}},"loc":{"start":{"line":734,"column":67},"end":{"line":736,"column":1}},"line":734},"49":{"name":"(anonymous_49)","decl":{"start":{"line":740,"column":55},"end":{"line":740,"column":56}},"loc":{"start":{"line":740,"column":72},"end":{"line":742,"column":1}},"line":740},"50":{"name":"(anonymous_50)","decl":{"start":{"line":749,"column":52},"end":{"line":749,"column":53}},"loc":{"start":{"line":749,"column":64},"end":{"line":751,"column":1}},"line":749},"51":{"name":"(anonymous_51)","decl":{"start":{"line":759,"column":58},"end":{"line":759,"column":59}},"loc":{"start":{"line":759,"column":70},"end":{"line":762,"column":1}},"line":759},"52":{"name":"(anonymous_52)","decl":{"start":{"line":772,"column":57},"end":{"line":772,"column":58}},"loc":{"start":{"line":772,"column":69},"end":{"line":775,"column":1}},"line":772},"53":{"name":"(anonymous_53)","decl":{"start":{"line":779,"column":52},"end":{"line":779,"column":53}},"loc":{"start":{"line":779,"column":69},"end":{"line":781,"column":1}},"line":779},"54":{"name":"(anonymous_54)","decl":{"start":{"line":788,"column":61},"end":{"line":788,"column":62}},"loc":{"start":{"line":788,"column":73},"end":{"line":790,"column":1}},"line":788},"55":{"name":"(anonymous_55)","decl":{"start":{"line":798,"column":67},"end":{"line":798,"column":68}},"loc":{"start":{"line":798,"column":79},"end":{"line":801,"column":1}},"line":798},"56":{"name":"(anonymous_56)","decl":{"start":{"line":811,"column":66},"end":{"line":811,"column":67}},"loc":{"start":{"line":811,"column":78},"end":{"line":814,"column":1}},"line":811},"57":{"name":"(anonymous_57)","decl":{"start":{"line":818,"column":61},"end":{"line":818,"column":62}},"loc":{"start":{"line":818,"column":78},"end":{"line":820,"column":1}},"line":818},"58":{"name":"(anonymous_58)","decl":{"start":{"line":827,"column":57},"end":{"line":827,"column":58}},"loc":{"start":{"line":827,"column":85},"end":{"line":829,"column":1}},"line":827},"59":{"name":"(anonymous_59)","decl":{"start":{"line":832,"column":63},"end":{"line":832,"column":64}},"loc":{"start":{"line":832,"column":75},"end":{"line":834,"column":1}},"line":832},"60":{"name":"(anonymous_60)","decl":{"start":{"line":841,"column":54},"end":{"line":841,"column":55}},"loc":{"start":{"line":841,"column":66},"end":{"line":843,"column":1}},"line":841},"61":{"name":"(anonymous_61)","decl":{"start":{"line":851,"column":60},"end":{"line":851,"column":61}},"loc":{"start":{"line":851,"column":72},"end":{"line":854,"column":1}},"line":851},"62":{"name":"(anonymous_62)","decl":{"start":{"line":864,"column":59},"end":{"line":864,"column":60}},"loc":{"start":{"line":864,"column":71},"end":{"line":867,"column":1}},"line":864},"63":{"name":"(anonymous_63)","decl":{"start":{"line":871,"column":54},"end":{"line":871,"column":55}},"loc":{"start":{"line":871,"column":71},"end":{"line":873,"column":1}},"line":871}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"type":"if","locations":[{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},{"start":{"line":32,"column":0},"end":{"line":34,"column":1}}],"line":32},"1":{"loc":{"start":{"line":32,"column":4},"end":{"line":32,"column":27}},"type":"binary-expr","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":14}},{"start":{"line":32,"column":18},"end":{"line":32,"column":27}}],"line":32},"2":{"loc":{"start":{"line":44,"column":0},"end":{"line":85,"column":1}},"type":"if","locations":[{"start":{"line":44,"column":0},"end":{"line":85,"column":1}},{"start":{"line":44,"column":0},"end":{"line":85,"column":1}}],"line":44},"3":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{"line":80,"column":4},"end":{"line":82,"column":5}}],"line":80},"4":{"loc":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},{"start":{"line":109,"column":4},"end":{"line":111,"column":5}}],"line":109},"5":{"loc":{"start":{"line":113,"column":4},"end":{"line":144,"column":15}},"type":"switch","locations":[{"start":{"line":114,"column":6},"end":{"line":117,"column":14}},{"start":{"line":118,"column":6},"end":{"line":121,"column":14}},{"start":{"line":122,"column":6},"end":{"line":125,"column":14}},{"start":{"line":126,"column":6},"end":{"line":129,"column":14}},{"start":{"line":130,"column":6},"end":{"line":133,"column":14}},{"start":{"line":134,"column":6},"end":{"line":137,"column":14}},{"start":{"line":138,"column":6},"end":{"line":141,"column":14}},{"start":{"line":142,"column":6},"end":{"line":144,"column":14}}],"line":113},"6":{"loc":{"start":{"line":172,"column":2},"end":{"line":177,"column":3}},"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":177,"column":3}},{"start":{"line":172,"column":2},"end":{"line":177,"column":3}}],"line":172},"7":{"loc":{"start":{"line":179,"column":2},"end":{"line":184,"column":3}},"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":184,"column":3}},{"start":{"line":179,"column":2},"end":{"line":184,"column":3}}],"line":179},"8":{"loc":{"start":{"line":186,"column":2},"end":{"line":191,"column":3}},"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":191,"column":3}},{"start":{"line":186,"column":2},"end":{"line":191,"column":3}}],"line":186},"9":{"loc":{"start":{"line":193,"column":2},"end":{"line":198,"column":3}},"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":198,"column":3}},{"start":{"line":193,"column":2},"end":{"line":198,"column":3}}],"line":193},"10":{"loc":{"start":{"line":200,"column":2},"end":{"line":205,"column":3}},"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":205,"column":3}},{"start":{"line":200,"column":2},"end":{"line":205,"column":3}}],"line":200},"11":{"loc":{"start":{"line":207,"column":2},"end":{"line":212,"column":3}},"type":"if","locations":[{"start":{"line":207,"column":2},"end":{"line":212,"column":3}},{"start":{"line":207,"column":2},"end":{"line":212,"column":3}}],"line":207},"12":{"loc":{"start":{"line":214,"column":2},"end":{"line":219,"column":3}},"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":219,"column":3}},{"start":{"line":214,"column":2},"end":{"line":219,"column":3}}],"line":214},"13":{"loc":{"start":{"line":333,"column":33},"end":{"line":333,"column":44}},"type":"binary-expr","locations":[{"start":{"line":333,"column":33},"end":{"line":333,"column":38}},{"start":{"line":333,"column":42},"end":{"line":333,"column":44}}],"line":333},"14":{"loc":{"start":{"line":386,"column":33},"end":{"line":386,"column":44}},"type":"binary-expr","locations":[{"start":{"line":386,"column":33},"end":{"line":386,"column":38}},{"start":{"line":386,"column":42},"end":{"line":386,"column":44}}],"line":386},"15":{"loc":{"start":{"line":419,"column":0},"end":{"line":421,"column":1}},"type":"if","locations":[{"start":{"line":419,"column":0},"end":{"line":421,"column":1}},{"start":{"line":419,"column":0},"end":{"line":421,"column":1}}],"line":419},"16":{"loc":{"start":{"line":419,"column":4},"end":{"line":419,"column":27}},"type":"binary-expr","locations":[{"start":{"line":419,"column":4},"end":{"line":419,"column":14}},{"start":{"line":419,"column":18},"end":{"line":419,"column":27}}],"line":419},"17":{"loc":{"start":{"line":431,"column":0},"end":{"line":473,"column":1}},"type":"if","locations":[{"start":{"line":431,"column":0},"end":{"line":473,"column":1}},{"start":{"line":431,"column":0},"end":{"line":473,"column":1}}],"line":431},"18":{"loc":{"start":{"line":468,"column":4},"end":{"line":470,"column":5}},"type":"if","locations":[{"start":{"line":468,"column":4},"end":{"line":470,"column":5}},{"start":{"line":468,"column":4},"end":{"line":470,"column":5}}],"line":468},"19":{"loc":{"start":{"line":497,"column":4},"end":{"line":499,"column":5}},"type":"if","locations":[{"start":{"line":497,"column":4},"end":{"line":499,"column":5}},{"start":{"line":497,"column":4},"end":{"line":499,"column":5}}],"line":497},"20":{"loc":{"start":{"line":501,"column":4},"end":{"line":536,"column":15}},"type":"switch","locations":[{"start":{"line":502,"column":6},"end":{"line":505,"column":14}},{"start":{"line":506,"column":6},"end":{"line":509,"column":14}},{"start":{"line":510,"column":6},"end":{"line":513,"column":14}},{"start":{"line":514,"column":6},"end":{"line":517,"column":14}},{"start":{"line":518,"column":6},"end":{"line":521,"column":14}},{"start":{"line":522,"column":6},"end":{"line":525,"column":14}},{"start":{"line":526,"column":6},"end":{"line":529,"column":14}},{"start":{"line":530,"column":6},"end":{"line":533,"column":14}},{"start":{"line":534,"column":6},"end":{"line":536,"column":14}}],"line":501},"21":{"loc":{"start":{"line":564,"column":2},"end":{"line":569,"column":3}},"type":"if","locations":[{"start":{"line":564,"column":2},"end":{"line":569,"column":3}},{"start":{"line":564,"column":2},"end":{"line":569,"column":3}}],"line":564},"22":{"loc":{"start":{"line":571,"column":2},"end":{"line":576,"column":3}},"type":"if","locations":[{"start":{"line":571,"column":2},"end":{"line":576,"column":3}},{"start":{"line":571,"column":2},"end":{"line":576,"column":3}}],"line":571},"23":{"loc":{"start":{"line":578,"column":2},"end":{"line":583,"column":3}},"type":"if","locations":[{"start":{"line":578,"column":2},"end":{"line":583,"column":3}},{"start":{"line":578,"column":2},"end":{"line":583,"column":3}}],"line":578},"24":{"loc":{"start":{"line":585,"column":2},"end":{"line":590,"column":3}},"type":"if","locations":[{"start":{"line":585,"column":2},"end":{"line":590,"column":3}},{"start":{"line":585,"column":2},"end":{"line":590,"column":3}}],"line":585},"25":{"loc":{"start":{"line":592,"column":2},"end":{"line":597,"column":3}},"type":"if","locations":[{"start":{"line":592,"column":2},"end":{"line":597,"column":3}},{"start":{"line":592,"column":2},"end":{"line":597,"column":3}}],"line":592},"26":{"loc":{"start":{"line":599,"column":2},"end":{"line":604,"column":3}},"type":"if","locations":[{"start":{"line":599,"column":2},"end":{"line":604,"column":3}},{"start":{"line":599,"column":2},"end":{"line":604,"column":3}}],"line":599},"27":{"loc":{"start":{"line":606,"column":2},"end":{"line":611,"column":3}},"type":"if","locations":[{"start":{"line":606,"column":2},"end":{"line":611,"column":3}},{"start":{"line":606,"column":2},"end":{"line":611,"column":3}}],"line":606},"28":{"loc":{"start":{"line":613,"column":2},"end":{"line":618,"column":3}},"type":"if","locations":[{"start":{"line":613,"column":2},"end":{"line":618,"column":3}},{"start":{"line":613,"column":2},"end":{"line":618,"column":3}}],"line":613},"29":{"loc":{"start":{"line":819,"column":33},"end":{"line":819,"column":44}},"type":"binary-expr","locations":[{"start":{"line":819,"column":33},"end":{"line":819,"column":38}},{"start":{"line":819,"column":42},"end":{"line":819,"column":44}}],"line":819}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":1,"25":1,"26":7,"27":0,"28":7,"29":7,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":0,"52":0,"53":1,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":1,"84":1,"85":1,"86":0,"87":1,"88":1,"89":1,"90":2,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":0,"99":1,"100":1,"101":1,"102":0,"103":1,"104":1,"105":1,"106":0,"107":1,"108":0,"109":1,"110":1,"111":1,"112":0,"113":1,"114":1,"115":1,"116":1,"117":1,"118":0,"119":1,"120":0,"121":1,"122":1,"123":1,"124":0,"125":1,"126":0,"127":1,"128":1,"129":0,"130":1,"131":1,"132":1,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":1,"209":0,"210":1,"211":0,"212":1,"213":0,"214":1,"215":0,"216":1,"217":0,"218":1,"219":0,"220":1,"221":0,"222":1,"223":0,"224":1,"225":0,"226":1,"227":0,"228":1,"229":0,"230":1,"231":0,"232":1,"233":0,"234":1,"235":0,"236":1,"237":0,"238":1,"239":0,"240":1,"241":0,"242":1,"243":0,"244":1,"245":0,"246":1,"247":0,"248":1,"249":0,"250":1,"251":0,"252":1,"253":0,"254":1,"255":0,"256":1,"257":0,"258":1,"259":0,"260":1,"261":0,"262":1,"263":1},"f":{"0":1,"1":0,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":2,"12":1,"13":1,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":1,"22":0,"23":1,"24":1,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},"b":{"0":[0,1],"1":[1,0],"2":[1,0],"3":[0,1],"4":[0,7],"5":[1,1,1,1,1,1,1,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,1],"16":[1,0],"17":[1,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0,0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"inputSourceMap":{"version":3,"sources":["node_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","types","PeerAddress","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","address","getFieldWithDefault","port","peerid","getPeerid_asB64","role","version","addressesList","getRepeatedField","produceridsList","getProduceridsList_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setAddress","readUint32","setPort","readBytes","setPeerid","readEnum","setRole","setVersion","addAddresses","addProducerids","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getAddress","length","writeString","getPort","writeUint32","getPeerid_asU8","writeBytes","getRole","writeEnum","getVersion","getAddressesList","writeRepeatedString","getProduceridsList_asU8","writeRepeatedBytes","setProto3StringField","setProto3IntField","getPeerid","bytesAsB64","bytesAsU8","setProto3BytesField","setProto3EnumField","setAddressesList","setField","opt_index","addToRepeatedField","clearAddressesList","getProduceridsList","bytesListAsB64","bytesListAsU8","setProduceridsList","clearProduceridsList","AgentCertificate","certversion","bpid","getBpid_asB64","bppubkey","getBppubkey_asB64","createtime","expiretime","agentid","getAgentid_asB64","agentaddressList","getAgentaddressList_asB64","signature","getSignature_asB64","setCertversion","setBpid","setBppubkey","readInt64","setCreatetime","setExpiretime","setAgentid","addAgentaddress","setSignature","getCertversion","getBpid_asU8","getBppubkey_asU8","getCreatetime","writeInt64","getExpiretime","getAgentid_asU8","getAgentaddressList_asU8","getSignature_asU8","getBpid","getBppubkey","getAgentid","getAgentaddressList","setAgentaddressList","clearAgentaddressList","getSignature","PeerRole","LEGACYVERSION","PRODUCER","WATCHER","AGENT","object","extend","exports"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/types","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.types.AgentCertificate', null, global);\ngoog.exportSymbol('proto.types.PeerAddress', null, global);\ngoog.exportSymbol('proto.types.PeerRole', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.PeerAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.PeerAddress.repeatedFields_, null);\n};\ngoog.inherits(proto.types.PeerAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.PeerAddress.displayName = 'proto.types.PeerAddress';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.PeerAddress.repeatedFields_ = [6,7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.PeerAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.PeerAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.PeerAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PeerAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    port: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    peerid: msg.getPeerid_asB64(),\n    role: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    version: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    addressesList: jspb.Message.getRepeatedField(msg, 6),\n    produceridsList: msg.getProduceridsList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.PeerAddress}\n */\nproto.types.PeerAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.PeerAddress;\n  return proto.types.PeerAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.PeerAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.PeerAddress}\n */\nproto.types.PeerAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setPort(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPeerid(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.types.PeerRole} */ (reader.readEnum());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addAddresses(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addProducerids(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.PeerAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.PeerAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.PeerAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PeerAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPort();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getPeerid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getRole();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      6,\n      f\n    );\n  }\n  f = message.getProduceridsList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.types.PeerAddress.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.PeerAddress.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint32 port = 2;\n * @return {number}\n */\nproto.types.PeerAddress.prototype.getPort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.PeerAddress.prototype.setPort = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes peerID = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.types.PeerAddress.prototype.getPeerid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes peerID = 3;\n * This is a type-conversion wrapper around `getPeerid()`\n * @return {string}\n */\nproto.types.PeerAddress.prototype.getPeerid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPeerid()));\n};\n\n\n/**\n * optional bytes peerID = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPeerid()`\n * @return {!Uint8Array}\n */\nproto.types.PeerAddress.prototype.getPeerid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPeerid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.PeerAddress.prototype.setPeerid = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional PeerRole role = 4;\n * @return {!proto.types.PeerRole}\n */\nproto.types.PeerAddress.prototype.getRole = function() {\n  return /** @type {!proto.types.PeerRole} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {!proto.types.PeerRole} value */\nproto.types.PeerAddress.prototype.setRole = function(value) {\n  jspb.Message.setProto3EnumField(this, 4, value);\n};\n\n\n/**\n * optional string version = 5;\n * @return {string}\n */\nproto.types.PeerAddress.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.PeerAddress.prototype.setVersion = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * repeated string addresses = 6;\n * @return {!Array<string>}\n */\nproto.types.PeerAddress.prototype.getAddressesList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/** @param {!Array<string>} value */\nproto.types.PeerAddress.prototype.setAddressesList = function(value) {\n  jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\nproto.types.PeerAddress.prototype.addAddresses = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\nproto.types.PeerAddress.prototype.clearAddressesList = function() {\n  this.setAddressesList([]);\n};\n\n\n/**\n * repeated bytes producerIDs = 7;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.PeerAddress.prototype.getProduceridsList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 7));\n};\n\n\n/**\n * repeated bytes producerIDs = 7;\n * This is a type-conversion wrapper around `getProduceridsList()`\n * @return {!Array<string>}\n */\nproto.types.PeerAddress.prototype.getProduceridsList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getProduceridsList()));\n};\n\n\n/**\n * repeated bytes producerIDs = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProduceridsList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.PeerAddress.prototype.getProduceridsList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getProduceridsList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.PeerAddress.prototype.setProduceridsList = function(value) {\n  jspb.Message.setField(this, 7, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.PeerAddress.prototype.addProducerids = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 7, value, opt_index);\n};\n\n\nproto.types.PeerAddress.prototype.clearProduceridsList = function() {\n  this.setProduceridsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.AgentCertificate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.AgentCertificate.repeatedFields_, null);\n};\ngoog.inherits(proto.types.AgentCertificate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.AgentCertificate.displayName = 'proto.types.AgentCertificate';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.AgentCertificate.repeatedFields_ = [7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.AgentCertificate.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.AgentCertificate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.AgentCertificate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AgentCertificate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    certversion: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    bpid: msg.getBpid_asB64(),\n    bppubkey: msg.getBppubkey_asB64(),\n    createtime: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expiretime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    agentid: msg.getAgentid_asB64(),\n    agentaddressList: msg.getAgentaddressList_asB64(),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.AgentCertificate}\n */\nproto.types.AgentCertificate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.AgentCertificate;\n  return proto.types.AgentCertificate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.AgentCertificate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.AgentCertificate}\n */\nproto.types.AgentCertificate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCertversion(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBpid(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBppubkey(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreatetime(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiretime(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAgentid(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addAgentaddress(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.AgentCertificate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.AgentCertificate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.AgentCertificate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AgentCertificate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCertversion();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getBpid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getBppubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getCreatetime();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpiretime();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getAgentid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getAgentaddressList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      7,\n      f\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 certVersion = 1;\n * @return {number}\n */\nproto.types.AgentCertificate.prototype.getCertversion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.types.AgentCertificate.prototype.setCertversion = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes BPID = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AgentCertificate.prototype.getBpid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes BPID = 2;\n * This is a type-conversion wrapper around `getBpid()`\n * @return {string}\n */\nproto.types.AgentCertificate.prototype.getBpid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBpid()));\n};\n\n\n/**\n * optional bytes BPID = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBpid()`\n * @return {!Uint8Array}\n */\nproto.types.AgentCertificate.prototype.getBpid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBpid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AgentCertificate.prototype.setBpid = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes BPPubKey = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AgentCertificate.prototype.getBppubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes BPPubKey = 3;\n * This is a type-conversion wrapper around `getBppubkey()`\n * @return {string}\n */\nproto.types.AgentCertificate.prototype.getBppubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBppubkey()));\n};\n\n\n/**\n * optional bytes BPPubKey = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBppubkey()`\n * @return {!Uint8Array}\n */\nproto.types.AgentCertificate.prototype.getBppubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBppubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AgentCertificate.prototype.setBppubkey = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 createTime = 4;\n * @return {number}\n */\nproto.types.AgentCertificate.prototype.getCreatetime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.types.AgentCertificate.prototype.setCreatetime = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 expireTime = 5;\n * @return {number}\n */\nproto.types.AgentCertificate.prototype.getExpiretime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.types.AgentCertificate.prototype.setExpiretime = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional bytes agentID = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AgentCertificate.prototype.getAgentid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes agentID = 6;\n * This is a type-conversion wrapper around `getAgentid()`\n * @return {string}\n */\nproto.types.AgentCertificate.prototype.getAgentid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAgentid()));\n};\n\n\n/**\n * optional bytes agentID = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAgentid()`\n * @return {!Uint8Array}\n */\nproto.types.AgentCertificate.prototype.getAgentid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAgentid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AgentCertificate.prototype.setAgentid = function(value) {\n  jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * repeated bytes AgentAddress = 7;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.AgentCertificate.prototype.getAgentaddressList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 7));\n};\n\n\n/**\n * repeated bytes AgentAddress = 7;\n * This is a type-conversion wrapper around `getAgentaddressList()`\n * @return {!Array<string>}\n */\nproto.types.AgentCertificate.prototype.getAgentaddressList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getAgentaddressList()));\n};\n\n\n/**\n * repeated bytes AgentAddress = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAgentaddressList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.AgentCertificate.prototype.getAgentaddressList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getAgentaddressList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.AgentCertificate.prototype.setAgentaddressList = function(value) {\n  jspb.Message.setField(this, 7, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.AgentCertificate.prototype.addAgentaddress = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 7, value, opt_index);\n};\n\n\nproto.types.AgentCertificate.prototype.clearAgentaddressList = function() {\n  this.setAgentaddressList([]);\n};\n\n\n/**\n * optional bytes signature = 8;\n * @return {!(string|Uint8Array)}\n */\nproto.types.AgentCertificate.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * optional bytes signature = 8;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.types.AgentCertificate.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.types.AgentCertificate.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.AgentCertificate.prototype.setSignature = function(value) {\n  jspb.Message.setProto3BytesField(this, 8, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.types.PeerRole = {\n  LEGACYVERSION: 0,\n  PRODUCER: 1,\n  WATCHER: 2,\n  AGENT: 3\n};\n\ngoog.object.extend(exports, proto.types);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"357c67ae3802bbc8409a21b2a10fed2f7c972acb","contentHash":"d06c575f6b2a369ca144e641f52ab9588558dfb8f90366eec032a56001b2c94a"},"/Users/paulgrau/projects/aergo/herajs/packages/client/types/p2p_pb.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/types/p2p_pb.js","statementMap":{"0":{"start":{"line":10,"column":11},"end":{"line":10,"column":37}},"1":{"start":{"line":11,"column":11},"end":{"line":11,"column":15}},"2":{"start":{"line":12,"column":13},"end":{"line":12,"column":38}},"3":{"start":{"line":14,"column":20},"end":{"line":14,"column":49}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"5":{"start":{"line":16,"column":14},"end":{"line":16,"column":37}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":64}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":65}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":67}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":72}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":66}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":67}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":70}},"14":{"start":{"line":25,"column":0},"end":{"line":25,"column":71}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":63}},"16":{"start":{"line":27,"column":0},"end":{"line":27,"column":64}},"17":{"start":{"line":28,"column":0},"end":{"line":28,"column":59}},"18":{"start":{"line":29,"column":0},"end":{"line":29,"column":67}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":64}},"20":{"start":{"line":31,"column":0},"end":{"line":31,"column":65}},"21":{"start":{"line":32,"column":0},"end":{"line":32,"column":65}},"22":{"start":{"line":33,"column":0},"end":{"line":33,"column":70}},"23":{"start":{"line":34,"column":0},"end":{"line":34,"column":71}},"24":{"start":{"line":35,"column":0},"end":{"line":35,"column":60}},"25":{"start":{"line":36,"column":0},"end":{"line":36,"column":71}},"26":{"start":{"line":37,"column":0},"end":{"line":37,"column":72}},"27":{"start":{"line":38,"column":0},"end":{"line":38,"column":57}},"28":{"start":{"line":39,"column":0},"end":{"line":39,"column":62}},"29":{"start":{"line":40,"column":0},"end":{"line":40,"column":69}},"30":{"start":{"line":41,"column":0},"end":{"line":41,"column":58}},"31":{"start":{"line":42,"column":0},"end":{"line":42,"column":52}},"32":{"start":{"line":43,"column":0},"end":{"line":43,"column":52}},"33":{"start":{"line":44,"column":0},"end":{"line":44,"column":60}},"34":{"start":{"line":45,"column":0},"end":{"line":45,"column":54}},"35":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"36":{"start":{"line":58,"column":2},"end":{"line":58,"column":61}},"37":{"start":{"line":60,"column":0},"end":{"line":60,"column":51}},"38":{"start":{"line":61,"column":0},"end":{"line":63,"column":1}},"39":{"start":{"line":62,"column":2},"end":{"line":62,"column":62}},"40":{"start":{"line":66,"column":0},"end":{"line":109,"column":1}},"41":{"start":{"line":77,"column":2},"end":{"line":79,"column":4}},"42":{"start":{"line":78,"column":4},"end":{"line":78,"column":69}},"43":{"start":{"line":91,"column":2},"end":{"line":108,"column":4}},"44":{"start":{"line":92,"column":16},"end":{"line":101,"column":59}},"45":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"46":{"start":{"line":105,"column":6},"end":{"line":105,"column":37}},"47":{"start":{"line":107,"column":4},"end":{"line":107,"column":15}},"48":{"start":{"line":117,"column":0},"end":{"line":121,"column":2}},"49":{"start":{"line":118,"column":15},"end":{"line":118,"column":43}},"50":{"start":{"line":119,"column":12},"end":{"line":119,"column":39}},"51":{"start":{"line":120,"column":2},"end":{"line":120,"column":72}},"52":{"start":{"line":131,"column":0},"end":{"line":180,"column":2}},"53":{"start":{"line":132,"column":2},"end":{"line":178,"column":3}},"54":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"55":{"start":{"line":134,"column":6},"end":{"line":134,"column":12}},"56":{"start":{"line":136,"column":16},"end":{"line":136,"column":39}},"57":{"start":{"line":137,"column":4},"end":{"line":176,"column":15}},"58":{"start":{"line":139,"column":41},"end":{"line":139,"column":60}},"59":{"start":{"line":140,"column":8},"end":{"line":140,"column":36}},"60":{"start":{"line":141,"column":8},"end":{"line":141,"column":14}},"61":{"start":{"line":143,"column":41},"end":{"line":143,"column":59}},"62":{"start":{"line":144,"column":8},"end":{"line":144,"column":32}},"63":{"start":{"line":145,"column":8},"end":{"line":145,"column":14}},"64":{"start":{"line":147,"column":41},"end":{"line":147,"column":60}},"65":{"start":{"line":148,"column":8},"end":{"line":148,"column":25}},"66":{"start":{"line":149,"column":8},"end":{"line":149,"column":14}},"67":{"start":{"line":151,"column":42},"end":{"line":151,"column":59}},"68":{"start":{"line":152,"column":8},"end":{"line":152,"column":29}},"69":{"start":{"line":153,"column":8},"end":{"line":153,"column":14}},"70":{"start":{"line":155,"column":46},"end":{"line":155,"column":64}},"71":{"start":{"line":156,"column":8},"end":{"line":156,"column":29}},"72":{"start":{"line":157,"column":8},"end":{"line":157,"column":14}},"73":{"start":{"line":159,"column":46},"end":{"line":159,"column":64}},"74":{"start":{"line":160,"column":8},"end":{"line":160,"column":33}},"75":{"start":{"line":161,"column":8},"end":{"line":161,"column":14}},"76":{"start":{"line":163,"column":46},"end":{"line":163,"column":64}},"77":{"start":{"line":164,"column":8},"end":{"line":164,"column":27}},"78":{"start":{"line":165,"column":8},"end":{"line":165,"column":14}},"79":{"start":{"line":167,"column":41},"end":{"line":167,"column":60}},"80":{"start":{"line":168,"column":8},"end":{"line":168,"column":34}},"81":{"start":{"line":169,"column":8},"end":{"line":169,"column":14}},"82":{"start":{"line":171,"column":41},"end":{"line":171,"column":60}},"83":{"start":{"line":172,"column":8},"end":{"line":172,"column":29}},"84":{"start":{"line":173,"column":8},"end":{"line":173,"column":14}},"85":{"start":{"line":175,"column":8},"end":{"line":175,"column":27}},"86":{"start":{"line":176,"column":8},"end":{"line":176,"column":14}},"87":{"start":{"line":179,"column":2},"end":{"line":179,"column":13}},"88":{"start":{"line":187,"column":0},"end":{"line":191,"column":2}},"89":{"start":{"line":188,"column":15},"end":{"line":188,"column":38}},"90":{"start":{"line":189,"column":2},"end":{"line":189,"column":62}},"91":{"start":{"line":190,"column":2},"end":{"line":190,"column":34}},"92":{"start":{"line":201,"column":0},"end":{"line":266,"column":2}},"93":{"start":{"line":202,"column":10},"end":{"line":202,"column":19}},"94":{"start":{"line":203,"column":2},"end":{"line":203,"column":33}},"95":{"start":{"line":204,"column":2},"end":{"line":209,"column":3}},"96":{"start":{"line":205,"column":4},"end":{"line":207,"column":7}},"97":{"start":{"line":210,"column":2},"end":{"line":210,"column":29}},"98":{"start":{"line":211,"column":2},"end":{"line":216,"column":3}},"99":{"start":{"line":212,"column":4},"end":{"line":214,"column":7}},"100":{"start":{"line":217,"column":2},"end":{"line":217,"column":22}},"101":{"start":{"line":218,"column":2},"end":{"line":223,"column":3}},"102":{"start":{"line":219,"column":4},"end":{"line":221,"column":7}},"103":{"start":{"line":224,"column":2},"end":{"line":224,"column":26}},"104":{"start":{"line":225,"column":2},"end":{"line":230,"column":3}},"105":{"start":{"line":226,"column":4},"end":{"line":228,"column":7}},"106":{"start":{"line":231,"column":2},"end":{"line":231,"column":31}},"107":{"start":{"line":232,"column":2},"end":{"line":237,"column":3}},"108":{"start":{"line":233,"column":4},"end":{"line":235,"column":7}},"109":{"start":{"line":238,"column":2},"end":{"line":238,"column":35}},"110":{"start":{"line":239,"column":2},"end":{"line":244,"column":3}},"111":{"start":{"line":240,"column":4},"end":{"line":242,"column":7}},"112":{"start":{"line":245,"column":2},"end":{"line":245,"column":29}},"113":{"start":{"line":246,"column":2},"end":{"line":251,"column":3}},"114":{"start":{"line":247,"column":4},"end":{"line":249,"column":7}},"115":{"start":{"line":252,"column":2},"end":{"line":252,"column":31}},"116":{"start":{"line":253,"column":2},"end":{"line":258,"column":3}},"117":{"start":{"line":254,"column":4},"end":{"line":256,"column":7}},"118":{"start":{"line":259,"column":2},"end":{"line":259,"column":26}},"119":{"start":{"line":260,"column":2},"end":{"line":265,"column":3}},"120":{"start":{"line":261,"column":4},"end":{"line":263,"column":7}},"121":{"start":{"line":273,"column":0},"end":{"line":275,"column":2}},"122":{"start":{"line":274,"column":2},"end":{"line":274,"column":78}},"123":{"start":{"line":279,"column":0},"end":{"line":281,"column":2}},"124":{"start":{"line":280,"column":2},"end":{"line":280,"column":52}},"125":{"start":{"line":288,"column":0},"end":{"line":290,"column":2}},"126":{"start":{"line":289,"column":2},"end":{"line":289,"column":77}},"127":{"start":{"line":294,"column":0},"end":{"line":296,"column":2}},"128":{"start":{"line":295,"column":2},"end":{"line":295,"column":49}},"129":{"start":{"line":303,"column":0},"end":{"line":305,"column":2}},"130":{"start":{"line":304,"column":2},"end":{"line":304,"column":78}},"131":{"start":{"line":309,"column":0},"end":{"line":311,"column":2}},"132":{"start":{"line":310,"column":2},"end":{"line":310,"column":52}},"133":{"start":{"line":320,"column":0},"end":{"line":322,"column":2}},"134":{"start":{"line":321,"column":2},"end":{"line":321,"column":82}},"135":{"start":{"line":326,"column":0},"end":{"line":328,"column":2}},"136":{"start":{"line":327,"column":2},"end":{"line":327,"column":53}},"137":{"start":{"line":335,"column":0},"end":{"line":337,"column":2}},"138":{"start":{"line":336,"column":2},"end":{"line":336,"column":92}},"139":{"start":{"line":345,"column":0},"end":{"line":348,"column":2}},"140":{"start":{"line":346,"column":2},"end":{"line":347,"column":23}},"141":{"start":{"line":358,"column":0},"end":{"line":361,"column":2}},"142":{"start":{"line":359,"column":2},"end":{"line":360,"column":23}},"143":{"start":{"line":365,"column":0},"end":{"line":367,"column":2}},"144":{"start":{"line":366,"column":2},"end":{"line":366,"column":51}},"145":{"start":{"line":374,"column":0},"end":{"line":376,"column":2}},"146":{"start":{"line":375,"column":2},"end":{"line":375,"column":92}},"147":{"start":{"line":384,"column":0},"end":{"line":387,"column":2}},"148":{"start":{"line":385,"column":2},"end":{"line":386,"column":27}},"149":{"start":{"line":397,"column":0},"end":{"line":400,"column":2}},"150":{"start":{"line":398,"column":2},"end":{"line":399,"column":27}},"151":{"start":{"line":404,"column":0},"end":{"line":406,"column":2}},"152":{"start":{"line":405,"column":2},"end":{"line":405,"column":51}},"153":{"start":{"line":413,"column":0},"end":{"line":415,"column":2}},"154":{"start":{"line":414,"column":2},"end":{"line":414,"column":92}},"155":{"start":{"line":423,"column":0},"end":{"line":426,"column":2}},"156":{"start":{"line":424,"column":2},"end":{"line":425,"column":21}},"157":{"start":{"line":436,"column":0},"end":{"line":439,"column":2}},"158":{"start":{"line":437,"column":2},"end":{"line":438,"column":21}},"159":{"start":{"line":443,"column":0},"end":{"line":445,"column":2}},"160":{"start":{"line":444,"column":2},"end":{"line":444,"column":51}},"161":{"start":{"line":452,"column":0},"end":{"line":454,"column":2}},"162":{"start":{"line":453,"column":2},"end":{"line":453,"column":77}},"163":{"start":{"line":458,"column":0},"end":{"line":460,"column":2}},"164":{"start":{"line":459,"column":2},"end":{"line":459,"column":49}},"165":{"start":{"line":467,"column":0},"end":{"line":469,"column":2}},"166":{"start":{"line":468,"column":2},"end":{"line":468,"column":77}},"167":{"start":{"line":473,"column":0},"end":{"line":475,"column":2}},"168":{"start":{"line":474,"column":2},"end":{"line":474,"column":49}},"169":{"start":{"line":489,"column":0},"end":{"line":491,"column":2}},"170":{"start":{"line":490,"column":2},"end":{"line":490,"column":61}},"171":{"start":{"line":492,"column":0},"end":{"line":492,"column":52}},"172":{"start":{"line":493,"column":0},"end":{"line":495,"column":1}},"173":{"start":{"line":494,"column":2},"end":{"line":494,"column":64}},"174":{"start":{"line":498,"column":0},"end":{"line":534,"column":1}},"175":{"start":{"line":509,"column":2},"end":{"line":511,"column":4}},"176":{"start":{"line":510,"column":4},"end":{"line":510,"column":70}},"177":{"start":{"line":523,"column":2},"end":{"line":533,"column":4}},"178":{"start":{"line":524,"column":16},"end":{"line":526,"column":33}},"179":{"start":{"line":529,"column":4},"end":{"line":531,"column":5}},"180":{"start":{"line":530,"column":6},"end":{"line":530,"column":37}},"181":{"start":{"line":532,"column":4},"end":{"line":532,"column":15}},"182":{"start":{"line":542,"column":0},"end":{"line":546,"column":2}},"183":{"start":{"line":543,"column":15},"end":{"line":543,"column":43}},"184":{"start":{"line":544,"column":12},"end":{"line":544,"column":40}},"185":{"start":{"line":545,"column":2},"end":{"line":545,"column":73}},"186":{"start":{"line":556,"column":0},"end":{"line":578,"column":2}},"187":{"start":{"line":557,"column":2},"end":{"line":576,"column":3}},"188":{"start":{"line":558,"column":4},"end":{"line":560,"column":5}},"189":{"start":{"line":559,"column":6},"end":{"line":559,"column":12}},"190":{"start":{"line":561,"column":16},"end":{"line":561,"column":39}},"191":{"start":{"line":562,"column":4},"end":{"line":574,"column":15}},"192":{"start":{"line":564,"column":20},"end":{"line":564,"column":47}},"193":{"start":{"line":565,"column":8},"end":{"line":565,"column":85}},"194":{"start":{"line":566,"column":8},"end":{"line":566,"column":29}},"195":{"start":{"line":567,"column":8},"end":{"line":567,"column":14}},"196":{"start":{"line":569,"column":46},"end":{"line":569,"column":64}},"197":{"start":{"line":570,"column":8},"end":{"line":570,"column":27}},"198":{"start":{"line":571,"column":8},"end":{"line":571,"column":14}},"199":{"start":{"line":573,"column":8},"end":{"line":573,"column":27}},"200":{"start":{"line":574,"column":8},"end":{"line":574,"column":14}},"201":{"start":{"line":577,"column":2},"end":{"line":577,"column":13}},"202":{"start":{"line":585,"column":0},"end":{"line":589,"column":2}},"203":{"start":{"line":586,"column":15},"end":{"line":586,"column":38}},"204":{"start":{"line":587,"column":2},"end":{"line":587,"column":63}},"205":{"start":{"line":588,"column":2},"end":{"line":588,"column":34}},"206":{"start":{"line":599,"column":0},"end":{"line":616,"column":2}},"207":{"start":{"line":600,"column":10},"end":{"line":600,"column":19}},"208":{"start":{"line":601,"column":2},"end":{"line":601,"column":26}},"209":{"start":{"line":602,"column":2},"end":{"line":608,"column":3}},"210":{"start":{"line":603,"column":4},"end":{"line":606,"column":51}},"211":{"start":{"line":609,"column":2},"end":{"line":609,"column":29}},"212":{"start":{"line":610,"column":2},"end":{"line":615,"column":3}},"213":{"start":{"line":611,"column":4},"end":{"line":613,"column":7}},"214":{"start":{"line":623,"column":0},"end":{"line":626,"column":2}},"215":{"start":{"line":624,"column":2},"end":{"line":625,"column":66}},"216":{"start":{"line":630,"column":0},"end":{"line":632,"column":2}},"217":{"start":{"line":631,"column":2},"end":{"line":631,"column":47}},"218":{"start":{"line":635,"column":0},"end":{"line":637,"column":2}},"219":{"start":{"line":636,"column":2},"end":{"line":636,"column":28}},"220":{"start":{"line":644,"column":0},"end":{"line":646,"column":2}},"221":{"start":{"line":645,"column":2},"end":{"line":645,"column":48}},"222":{"start":{"line":653,"column":0},"end":{"line":655,"column":2}},"223":{"start":{"line":654,"column":2},"end":{"line":654,"column":92}},"224":{"start":{"line":663,"column":0},"end":{"line":666,"column":2}},"225":{"start":{"line":664,"column":2},"end":{"line":665,"column":21}},"226":{"start":{"line":676,"column":0},"end":{"line":679,"column":2}},"227":{"start":{"line":677,"column":2},"end":{"line":678,"column":21}},"228":{"start":{"line":683,"column":0},"end":{"line":685,"column":2}},"229":{"start":{"line":684,"column":2},"end":{"line":684,"column":51}},"230":{"start":{"line":699,"column":0},"end":{"line":701,"column":2}},"231":{"start":{"line":700,"column":2},"end":{"line":700,"column":61}},"232":{"start":{"line":702,"column":0},"end":{"line":702,"column":46}},"233":{"start":{"line":703,"column":0},"end":{"line":705,"column":1}},"234":{"start":{"line":704,"column":2},"end":{"line":704,"column":52}},"235":{"start":{"line":708,"column":0},"end":{"line":744,"column":1}},"236":{"start":{"line":719,"column":2},"end":{"line":721,"column":4}},"237":{"start":{"line":720,"column":4},"end":{"line":720,"column":64}},"238":{"start":{"line":733,"column":2},"end":{"line":743,"column":4}},"239":{"start":{"line":734,"column":16},"end":{"line":736,"column":63}},"240":{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},"241":{"start":{"line":740,"column":6},"end":{"line":740,"column":37}},"242":{"start":{"line":742,"column":4},"end":{"line":742,"column":15}},"243":{"start":{"line":752,"column":0},"end":{"line":756,"column":2}},"244":{"start":{"line":753,"column":15},"end":{"line":753,"column":43}},"245":{"start":{"line":754,"column":12},"end":{"line":754,"column":34}},"246":{"start":{"line":755,"column":2},"end":{"line":755,"column":67}},"247":{"start":{"line":766,"column":0},"end":{"line":787,"column":2}},"248":{"start":{"line":767,"column":2},"end":{"line":785,"column":3}},"249":{"start":{"line":768,"column":4},"end":{"line":770,"column":5}},"250":{"start":{"line":769,"column":6},"end":{"line":769,"column":12}},"251":{"start":{"line":771,"column":16},"end":{"line":771,"column":39}},"252":{"start":{"line":772,"column":4},"end":{"line":783,"column":15}},"253":{"start":{"line":774,"column":46},"end":{"line":774,"column":64}},"254":{"start":{"line":775,"column":8},"end":{"line":775,"column":36}},"255":{"start":{"line":776,"column":8},"end":{"line":776,"column":14}},"256":{"start":{"line":778,"column":41},"end":{"line":778,"column":60}},"257":{"start":{"line":779,"column":8},"end":{"line":779,"column":33}},"258":{"start":{"line":780,"column":8},"end":{"line":780,"column":14}},"259":{"start":{"line":782,"column":8},"end":{"line":782,"column":27}},"260":{"start":{"line":783,"column":8},"end":{"line":783,"column":14}},"261":{"start":{"line":786,"column":2},"end":{"line":786,"column":13}},"262":{"start":{"line":794,"column":0},"end":{"line":798,"column":2}},"263":{"start":{"line":795,"column":15},"end":{"line":795,"column":38}},"264":{"start":{"line":796,"column":2},"end":{"line":796,"column":57}},"265":{"start":{"line":797,"column":2},"end":{"line":797,"column":34}},"266":{"start":{"line":808,"column":0},"end":{"line":824,"column":2}},"267":{"start":{"line":809,"column":10},"end":{"line":809,"column":19}},"268":{"start":{"line":810,"column":2},"end":{"line":810,"column":38}},"269":{"start":{"line":811,"column":2},"end":{"line":816,"column":3}},"270":{"start":{"line":812,"column":4},"end":{"line":814,"column":7}},"271":{"start":{"line":817,"column":2},"end":{"line":817,"column":30}},"272":{"start":{"line":818,"column":2},"end":{"line":823,"column":3}},"273":{"start":{"line":819,"column":4},"end":{"line":821,"column":7}},"274":{"start":{"line":831,"column":0},"end":{"line":833,"column":2}},"275":{"start":{"line":832,"column":2},"end":{"line":832,"column":92}},"276":{"start":{"line":841,"column":0},"end":{"line":844,"column":2}},"277":{"start":{"line":842,"column":2},"end":{"line":843,"column":30}},"278":{"start":{"line":854,"column":0},"end":{"line":857,"column":2}},"279":{"start":{"line":855,"column":2},"end":{"line":856,"column":30}},"280":{"start":{"line":861,"column":0},"end":{"line":863,"column":2}},"281":{"start":{"line":862,"column":2},"end":{"line":862,"column":51}},"282":{"start":{"line":870,"column":0},"end":{"line":872,"column":2}},"283":{"start":{"line":871,"column":2},"end":{"line":871,"column":77}},"284":{"start":{"line":876,"column":0},"end":{"line":878,"column":2}},"285":{"start":{"line":877,"column":2},"end":{"line":877,"column":49}},"286":{"start":{"line":892,"column":0},"end":{"line":894,"column":2}},"287":{"start":{"line":893,"column":2},"end":{"line":893,"column":61}},"288":{"start":{"line":895,"column":0},"end":{"line":895,"column":46}},"289":{"start":{"line":896,"column":0},"end":{"line":898,"column":1}},"290":{"start":{"line":897,"column":2},"end":{"line":897,"column":52}},"291":{"start":{"line":901,"column":0},"end":{"line":937,"column":1}},"292":{"start":{"line":912,"column":2},"end":{"line":914,"column":4}},"293":{"start":{"line":913,"column":4},"end":{"line":913,"column":64}},"294":{"start":{"line":926,"column":2},"end":{"line":936,"column":4}},"295":{"start":{"line":927,"column":16},"end":{"line":929,"column":63}},"296":{"start":{"line":932,"column":4},"end":{"line":934,"column":5}},"297":{"start":{"line":933,"column":6},"end":{"line":933,"column":37}},"298":{"start":{"line":935,"column":4},"end":{"line":935,"column":15}},"299":{"start":{"line":945,"column":0},"end":{"line":949,"column":2}},"300":{"start":{"line":946,"column":15},"end":{"line":946,"column":43}},"301":{"start":{"line":947,"column":12},"end":{"line":947,"column":34}},"302":{"start":{"line":948,"column":2},"end":{"line":948,"column":67}},"303":{"start":{"line":959,"column":0},"end":{"line":980,"column":2}},"304":{"start":{"line":960,"column":2},"end":{"line":978,"column":3}},"305":{"start":{"line":961,"column":4},"end":{"line":963,"column":5}},"306":{"start":{"line":962,"column":6},"end":{"line":962,"column":12}},"307":{"start":{"line":964,"column":16},"end":{"line":964,"column":39}},"308":{"start":{"line":965,"column":4},"end":{"line":976,"column":15}},"309":{"start":{"line":967,"column":46},"end":{"line":967,"column":64}},"310":{"start":{"line":968,"column":8},"end":{"line":968,"column":36}},"311":{"start":{"line":969,"column":8},"end":{"line":969,"column":14}},"312":{"start":{"line":971,"column":41},"end":{"line":971,"column":60}},"313":{"start":{"line":972,"column":8},"end":{"line":972,"column":33}},"314":{"start":{"line":973,"column":8},"end":{"line":973,"column":14}},"315":{"start":{"line":975,"column":8},"end":{"line":975,"column":27}},"316":{"start":{"line":976,"column":8},"end":{"line":976,"column":14}},"317":{"start":{"line":979,"column":2},"end":{"line":979,"column":13}},"318":{"start":{"line":987,"column":0},"end":{"line":991,"column":2}},"319":{"start":{"line":988,"column":15},"end":{"line":988,"column":38}},"320":{"start":{"line":989,"column":2},"end":{"line":989,"column":57}},"321":{"start":{"line":990,"column":2},"end":{"line":990,"column":34}},"322":{"start":{"line":1001,"column":0},"end":{"line":1017,"column":2}},"323":{"start":{"line":1002,"column":10},"end":{"line":1002,"column":19}},"324":{"start":{"line":1003,"column":2},"end":{"line":1003,"column":38}},"325":{"start":{"line":1004,"column":2},"end":{"line":1009,"column":3}},"326":{"start":{"line":1005,"column":4},"end":{"line":1007,"column":7}},"327":{"start":{"line":1010,"column":2},"end":{"line":1010,"column":30}},"328":{"start":{"line":1011,"column":2},"end":{"line":1016,"column":3}},"329":{"start":{"line":1012,"column":4},"end":{"line":1014,"column":7}},"330":{"start":{"line":1024,"column":0},"end":{"line":1026,"column":2}},"331":{"start":{"line":1025,"column":2},"end":{"line":1025,"column":92}},"332":{"start":{"line":1034,"column":0},"end":{"line":1037,"column":2}},"333":{"start":{"line":1035,"column":2},"end":{"line":1036,"column":30}},"334":{"start":{"line":1047,"column":0},"end":{"line":1050,"column":2}},"335":{"start":{"line":1048,"column":2},"end":{"line":1049,"column":30}},"336":{"start":{"line":1054,"column":0},"end":{"line":1056,"column":2}},"337":{"start":{"line":1055,"column":2},"end":{"line":1055,"column":51}},"338":{"start":{"line":1063,"column":0},"end":{"line":1065,"column":2}},"339":{"start":{"line":1064,"column":2},"end":{"line":1064,"column":77}},"340":{"start":{"line":1069,"column":0},"end":{"line":1071,"column":2}},"341":{"start":{"line":1070,"column":2},"end":{"line":1070,"column":49}},"342":{"start":{"line":1085,"column":0},"end":{"line":1087,"column":2}},"343":{"start":{"line":1086,"column":2},"end":{"line":1086,"column":91}},"344":{"start":{"line":1088,"column":0},"end":{"line":1088,"column":48}},"345":{"start":{"line":1089,"column":0},"end":{"line":1091,"column":1}},"346":{"start":{"line":1090,"column":2},"end":{"line":1090,"column":56}},"347":{"start":{"line":1097,"column":0},"end":{"line":1097,"column":41}},"348":{"start":{"line":1101,"column":0},"end":{"line":1145,"column":1}},"349":{"start":{"line":1112,"column":2},"end":{"line":1114,"column":4}},"350":{"start":{"line":1113,"column":4},"end":{"line":1113,"column":66}},"351":{"start":{"line":1126,"column":2},"end":{"line":1144,"column":4}},"352":{"start":{"line":1127,"column":16},"end":{"line":1137,"column":73}},"353":{"start":{"line":1140,"column":4},"end":{"line":1142,"column":5}},"354":{"start":{"line":1141,"column":6},"end":{"line":1141,"column":37}},"355":{"start":{"line":1143,"column":4},"end":{"line":1143,"column":15}},"356":{"start":{"line":1153,"column":0},"end":{"line":1157,"column":2}},"357":{"start":{"line":1154,"column":15},"end":{"line":1154,"column":43}},"358":{"start":{"line":1155,"column":12},"end":{"line":1155,"column":36}},"359":{"start":{"line":1156,"column":2},"end":{"line":1156,"column":69}},"360":{"start":{"line":1167,"column":0},"end":{"line":1218,"column":2}},"361":{"start":{"line":1168,"column":2},"end":{"line":1216,"column":3}},"362":{"start":{"line":1169,"column":4},"end":{"line":1171,"column":5}},"363":{"start":{"line":1170,"column":6},"end":{"line":1170,"column":12}},"364":{"start":{"line":1172,"column":16},"end":{"line":1172,"column":39}},"365":{"start":{"line":1173,"column":4},"end":{"line":1214,"column":15}},"366":{"start":{"line":1175,"column":20},"end":{"line":1175,"column":45}},"367":{"start":{"line":1176,"column":8},"end":{"line":1176,"column":83}},"368":{"start":{"line":1177,"column":8},"end":{"line":1177,"column":29}},"369":{"start":{"line":1178,"column":8},"end":{"line":1178,"column":14}},"370":{"start":{"line":1180,"column":46},"end":{"line":1180,"column":64}},"371":{"start":{"line":1181,"column":8},"end":{"line":1181,"column":36}},"372":{"start":{"line":1182,"column":8},"end":{"line":1182,"column":14}},"373":{"start":{"line":1184,"column":41},"end":{"line":1184,"column":60}},"374":{"start":{"line":1185,"column":8},"end":{"line":1185,"column":33}},"375":{"start":{"line":1186,"column":8},"end":{"line":1186,"column":14}},"376":{"start":{"line":1188,"column":46},"end":{"line":1188,"column":64}},"377":{"start":{"line":1189,"column":8},"end":{"line":1189,"column":30}},"378":{"start":{"line":1190,"column":8},"end":{"line":1190,"column":14}},"379":{"start":{"line":1192,"column":42},"end":{"line":1192,"column":59}},"380":{"start":{"line":1193,"column":8},"end":{"line":1193,"column":31}},"381":{"start":{"line":1194,"column":8},"end":{"line":1194,"column":14}},"382":{"start":{"line":1196,"column":41},"end":{"line":1196,"column":60}},"383":{"start":{"line":1197,"column":8},"end":{"line":1197,"column":30}},"384":{"start":{"line":1198,"column":8},"end":{"line":1198,"column":14}},"385":{"start":{"line":1200,"column":46},"end":{"line":1200,"column":64}},"386":{"start":{"line":1201,"column":8},"end":{"line":1201,"column":30}},"387":{"start":{"line":1202,"column":8},"end":{"line":1202,"column":14}},"388":{"start":{"line":1204,"column":20},"end":{"line":1204,"column":50}},"389":{"start":{"line":1205,"column":8},"end":{"line":1205,"column":88}},"390":{"start":{"line":1206,"column":8},"end":{"line":1206,"column":35}},"391":{"start":{"line":1207,"column":8},"end":{"line":1207,"column":14}},"392":{"start":{"line":1209,"column":42},"end":{"line":1209,"column":59}},"393":{"start":{"line":1210,"column":8},"end":{"line":1210,"column":39}},"394":{"start":{"line":1211,"column":8},"end":{"line":1211,"column":14}},"395":{"start":{"line":1213,"column":8},"end":{"line":1213,"column":27}},"396":{"start":{"line":1214,"column":8},"end":{"line":1214,"column":14}},"397":{"start":{"line":1217,"column":2},"end":{"line":1217,"column":13}},"398":{"start":{"line":1225,"column":0},"end":{"line":1229,"column":2}},"399":{"start":{"line":1226,"column":15},"end":{"line":1226,"column":38}},"400":{"start":{"line":1227,"column":2},"end":{"line":1227,"column":59}},"401":{"start":{"line":1228,"column":2},"end":{"line":1228,"column":34}},"402":{"start":{"line":1239,"column":0},"end":{"line":1306,"column":2}},"403":{"start":{"line":1240,"column":10},"end":{"line":1240,"column":19}},"404":{"start":{"line":1241,"column":2},"end":{"line":1241,"column":26}},"405":{"start":{"line":1242,"column":2},"end":{"line":1248,"column":3}},"406":{"start":{"line":1243,"column":4},"end":{"line":1246,"column":49}},"407":{"start":{"line":1249,"column":2},"end":{"line":1249,"column":38}},"408":{"start":{"line":1250,"column":2},"end":{"line":1255,"column":3}},"409":{"start":{"line":1251,"column":4},"end":{"line":1253,"column":7}},"410":{"start":{"line":1256,"column":2},"end":{"line":1256,"column":30}},"411":{"start":{"line":1257,"column":2},"end":{"line":1262,"column":3}},"412":{"start":{"line":1258,"column":4},"end":{"line":1260,"column":7}},"413":{"start":{"line":1263,"column":2},"end":{"line":1263,"column":32}},"414":{"start":{"line":1264,"column":2},"end":{"line":1269,"column":3}},"415":{"start":{"line":1265,"column":4},"end":{"line":1267,"column":7}},"416":{"start":{"line":1270,"column":2},"end":{"line":1270,"column":28}},"417":{"start":{"line":1271,"column":2},"end":{"line":1276,"column":3}},"418":{"start":{"line":1272,"column":4},"end":{"line":1274,"column":7}},"419":{"start":{"line":1277,"column":2},"end":{"line":1277,"column":27}},"420":{"start":{"line":1278,"column":2},"end":{"line":1283,"column":3}},"421":{"start":{"line":1279,"column":4},"end":{"line":1281,"column":7}},"422":{"start":{"line":1284,"column":2},"end":{"line":1284,"column":32}},"423":{"start":{"line":1285,"column":2},"end":{"line":1290,"column":3}},"424":{"start":{"line":1286,"column":4},"end":{"line":1288,"column":7}},"425":{"start":{"line":1291,"column":2},"end":{"line":1291,"column":36}},"426":{"start":{"line":1292,"column":2},"end":{"line":1298,"column":3}},"427":{"start":{"line":1293,"column":4},"end":{"line":1296,"column":54}},"428":{"start":{"line":1299,"column":2},"end":{"line":1299,"column":36}},"429":{"start":{"line":1300,"column":2},"end":{"line":1305,"column":3}},"430":{"start":{"line":1301,"column":4},"end":{"line":1303,"column":7}},"431":{"start":{"line":1313,"column":0},"end":{"line":1316,"column":2}},"432":{"start":{"line":1314,"column":2},"end":{"line":1315,"column":64}},"433":{"start":{"line":1320,"column":0},"end":{"line":1322,"column":2}},"434":{"start":{"line":1321,"column":2},"end":{"line":1321,"column":47}},"435":{"start":{"line":1325,"column":0},"end":{"line":1327,"column":2}},"436":{"start":{"line":1326,"column":2},"end":{"line":1326,"column":28}},"437":{"start":{"line":1334,"column":0},"end":{"line":1336,"column":2}},"438":{"start":{"line":1335,"column":2},"end":{"line":1335,"column":48}},"439":{"start":{"line":1343,"column":0},"end":{"line":1345,"column":2}},"440":{"start":{"line":1344,"column":2},"end":{"line":1344,"column":92}},"441":{"start":{"line":1353,"column":0},"end":{"line":1356,"column":2}},"442":{"start":{"line":1354,"column":2},"end":{"line":1355,"column":30}},"443":{"start":{"line":1366,"column":0},"end":{"line":1369,"column":2}},"444":{"start":{"line":1367,"column":2},"end":{"line":1368,"column":30}},"445":{"start":{"line":1373,"column":0},"end":{"line":1375,"column":2}},"446":{"start":{"line":1374,"column":2},"end":{"line":1374,"column":51}},"447":{"start":{"line":1382,"column":0},"end":{"line":1384,"column":2}},"448":{"start":{"line":1383,"column":2},"end":{"line":1383,"column":77}},"449":{"start":{"line":1388,"column":0},"end":{"line":1390,"column":2}},"450":{"start":{"line":1389,"column":2},"end":{"line":1389,"column":49}},"451":{"start":{"line":1397,"column":0},"end":{"line":1399,"column":2}},"452":{"start":{"line":1398,"column":2},"end":{"line":1398,"column":92}},"453":{"start":{"line":1407,"column":0},"end":{"line":1410,"column":2}},"454":{"start":{"line":1408,"column":2},"end":{"line":1409,"column":24}},"455":{"start":{"line":1420,"column":0},"end":{"line":1423,"column":2}},"456":{"start":{"line":1421,"column":2},"end":{"line":1422,"column":24}},"457":{"start":{"line":1427,"column":0},"end":{"line":1429,"column":2}},"458":{"start":{"line":1428,"column":2},"end":{"line":1428,"column":51}},"459":{"start":{"line":1438,"column":0},"end":{"line":1440,"column":2}},"460":{"start":{"line":1439,"column":2},"end":{"line":1439,"column":82}},"461":{"start":{"line":1444,"column":0},"end":{"line":1446,"column":2}},"462":{"start":{"line":1445,"column":2},"end":{"line":1445,"column":53}},"463":{"start":{"line":1453,"column":0},"end":{"line":1455,"column":2}},"464":{"start":{"line":1454,"column":2},"end":{"line":1454,"column":78}},"465":{"start":{"line":1459,"column":0},"end":{"line":1461,"column":2}},"466":{"start":{"line":1460,"column":2},"end":{"line":1460,"column":52}},"467":{"start":{"line":1468,"column":0},"end":{"line":1470,"column":2}},"468":{"start":{"line":1469,"column":2},"end":{"line":1469,"column":92}},"469":{"start":{"line":1478,"column":0},"end":{"line":1481,"column":2}},"470":{"start":{"line":1479,"column":2},"end":{"line":1480,"column":24}},"471":{"start":{"line":1491,"column":0},"end":{"line":1494,"column":2}},"472":{"start":{"line":1492,"column":2},"end":{"line":1493,"column":24}},"473":{"start":{"line":1498,"column":0},"end":{"line":1500,"column":2}},"474":{"start":{"line":1499,"column":2},"end":{"line":1499,"column":51}},"475":{"start":{"line":1507,"column":0},"end":{"line":1510,"column":2}},"476":{"start":{"line":1508,"column":2},"end":{"line":1509,"column":77}},"477":{"start":{"line":1514,"column":0},"end":{"line":1516,"column":2}},"478":{"start":{"line":1515,"column":2},"end":{"line":1515,"column":55}},"479":{"start":{"line":1524,"column":0},"end":{"line":1526,"column":2}},"480":{"start":{"line":1525,"column":2},"end":{"line":1525,"column":109}},"481":{"start":{"line":1529,"column":0},"end":{"line":1531,"column":2}},"482":{"start":{"line":1530,"column":2},"end":{"line":1530,"column":31}},"483":{"start":{"line":1540,"column":0},"end":{"line":1542,"column":2}},"484":{"start":{"line":1541,"column":2},"end":{"line":1541,"column":82}},"485":{"start":{"line":1546,"column":0},"end":{"line":1548,"column":2}},"486":{"start":{"line":1547,"column":2},"end":{"line":1547,"column":53}},"487":{"start":{"line":1562,"column":0},"end":{"line":1564,"column":2}},"488":{"start":{"line":1563,"column":2},"end":{"line":1563,"column":61}},"489":{"start":{"line":1565,"column":0},"end":{"line":1565,"column":54}},"490":{"start":{"line":1566,"column":0},"end":{"line":1568,"column":1}},"491":{"start":{"line":1567,"column":2},"end":{"line":1567,"column":68}},"492":{"start":{"line":1571,"column":0},"end":{"line":1606,"column":1}},"493":{"start":{"line":1582,"column":2},"end":{"line":1584,"column":4}},"494":{"start":{"line":1583,"column":4},"end":{"line":1583,"column":72}},"495":{"start":{"line":1596,"column":2},"end":{"line":1605,"column":4}},"496":{"start":{"line":1597,"column":16},"end":{"line":1598,"column":61}},"497":{"start":{"line":1601,"column":4},"end":{"line":1603,"column":5}},"498":{"start":{"line":1602,"column":6},"end":{"line":1602,"column":37}},"499":{"start":{"line":1604,"column":4},"end":{"line":1604,"column":15}},"500":{"start":{"line":1614,"column":0},"end":{"line":1618,"column":2}},"501":{"start":{"line":1615,"column":15},"end":{"line":1615,"column":43}},"502":{"start":{"line":1616,"column":12},"end":{"line":1616,"column":42}},"503":{"start":{"line":1617,"column":2},"end":{"line":1617,"column":75}},"504":{"start":{"line":1628,"column":0},"end":{"line":1645,"column":2}},"505":{"start":{"line":1629,"column":2},"end":{"line":1643,"column":3}},"506":{"start":{"line":1630,"column":4},"end":{"line":1632,"column":5}},"507":{"start":{"line":1631,"column":6},"end":{"line":1631,"column":12}},"508":{"start":{"line":1633,"column":16},"end":{"line":1633,"column":39}},"509":{"start":{"line":1634,"column":4},"end":{"line":1641,"column":15}},"510":{"start":{"line":1636,"column":41},"end":{"line":1636,"column":60}},"511":{"start":{"line":1637,"column":8},"end":{"line":1637,"column":30}},"512":{"start":{"line":1638,"column":8},"end":{"line":1638,"column":14}},"513":{"start":{"line":1640,"column":8},"end":{"line":1640,"column":27}},"514":{"start":{"line":1641,"column":8},"end":{"line":1641,"column":14}},"515":{"start":{"line":1644,"column":2},"end":{"line":1644,"column":13}},"516":{"start":{"line":1652,"column":0},"end":{"line":1656,"column":2}},"517":{"start":{"line":1653,"column":15},"end":{"line":1653,"column":38}},"518":{"start":{"line":1654,"column":2},"end":{"line":1654,"column":65}},"519":{"start":{"line":1655,"column":2},"end":{"line":1655,"column":34}},"520":{"start":{"line":1666,"column":0},"end":{"line":1675,"column":2}},"521":{"start":{"line":1667,"column":10},"end":{"line":1667,"column":19}},"522":{"start":{"line":1668,"column":2},"end":{"line":1668,"column":27}},"523":{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}},"524":{"start":{"line":1670,"column":4},"end":{"line":1672,"column":7}},"525":{"start":{"line":1682,"column":0},"end":{"line":1684,"column":2}},"526":{"start":{"line":1683,"column":2},"end":{"line":1683,"column":78}},"527":{"start":{"line":1688,"column":0},"end":{"line":1690,"column":2}},"528":{"start":{"line":1689,"column":2},"end":{"line":1689,"column":52}},"529":{"start":{"line":1704,"column":0},"end":{"line":1706,"column":2}},"530":{"start":{"line":1705,"column":2},"end":{"line":1705,"column":61}},"531":{"start":{"line":1707,"column":0},"end":{"line":1707,"column":58}},"532":{"start":{"line":1708,"column":0},"end":{"line":1710,"column":1}},"533":{"start":{"line":1709,"column":2},"end":{"line":1709,"column":76}},"534":{"start":{"line":1713,"column":0},"end":{"line":1749,"column":1}},"535":{"start":{"line":1724,"column":2},"end":{"line":1726,"column":4}},"536":{"start":{"line":1725,"column":4},"end":{"line":1725,"column":76}},"537":{"start":{"line":1738,"column":2},"end":{"line":1748,"column":4}},"538":{"start":{"line":1739,"column":16},"end":{"line":1741,"column":60}},"539":{"start":{"line":1744,"column":4},"end":{"line":1746,"column":5}},"540":{"start":{"line":1745,"column":6},"end":{"line":1745,"column":37}},"541":{"start":{"line":1747,"column":4},"end":{"line":1747,"column":15}},"542":{"start":{"line":1757,"column":0},"end":{"line":1761,"column":2}},"543":{"start":{"line":1758,"column":15},"end":{"line":1758,"column":43}},"544":{"start":{"line":1759,"column":12},"end":{"line":1759,"column":46}},"545":{"start":{"line":1760,"column":2},"end":{"line":1760,"column":79}},"546":{"start":{"line":1771,"column":0},"end":{"line":1793,"column":2}},"547":{"start":{"line":1772,"column":2},"end":{"line":1791,"column":3}},"548":{"start":{"line":1773,"column":4},"end":{"line":1775,"column":5}},"549":{"start":{"line":1774,"column":6},"end":{"line":1774,"column":12}},"550":{"start":{"line":1776,"column":16},"end":{"line":1776,"column":39}},"551":{"start":{"line":1777,"column":4},"end":{"line":1789,"column":15}},"552":{"start":{"line":1779,"column":20},"end":{"line":1779,"column":45}},"553":{"start":{"line":1780,"column":8},"end":{"line":1780,"column":83}},"554":{"start":{"line":1781,"column":8},"end":{"line":1781,"column":29}},"555":{"start":{"line":1782,"column":8},"end":{"line":1782,"column":14}},"556":{"start":{"line":1784,"column":41},"end":{"line":1784,"column":60}},"557":{"start":{"line":1785,"column":8},"end":{"line":1785,"column":30}},"558":{"start":{"line":1786,"column":8},"end":{"line":1786,"column":14}},"559":{"start":{"line":1788,"column":8},"end":{"line":1788,"column":27}},"560":{"start":{"line":1789,"column":8},"end":{"line":1789,"column":14}},"561":{"start":{"line":1792,"column":2},"end":{"line":1792,"column":13}},"562":{"start":{"line":1800,"column":0},"end":{"line":1804,"column":2}},"563":{"start":{"line":1801,"column":15},"end":{"line":1801,"column":38}},"564":{"start":{"line":1802,"column":2},"end":{"line":1802,"column":69}},"565":{"start":{"line":1803,"column":2},"end":{"line":1803,"column":34}},"566":{"start":{"line":1814,"column":0},"end":{"line":1831,"column":2}},"567":{"start":{"line":1815,"column":10},"end":{"line":1815,"column":19}},"568":{"start":{"line":1816,"column":2},"end":{"line":1816,"column":26}},"569":{"start":{"line":1817,"column":2},"end":{"line":1823,"column":3}},"570":{"start":{"line":1818,"column":4},"end":{"line":1821,"column":49}},"571":{"start":{"line":1824,"column":2},"end":{"line":1824,"column":27}},"572":{"start":{"line":1825,"column":2},"end":{"line":1830,"column":3}},"573":{"start":{"line":1826,"column":4},"end":{"line":1828,"column":7}},"574":{"start":{"line":1838,"column":0},"end":{"line":1841,"column":2}},"575":{"start":{"line":1839,"column":2},"end":{"line":1840,"column":64}},"576":{"start":{"line":1845,"column":0},"end":{"line":1847,"column":2}},"577":{"start":{"line":1846,"column":2},"end":{"line":1846,"column":47}},"578":{"start":{"line":1850,"column":0},"end":{"line":1852,"column":2}},"579":{"start":{"line":1851,"column":2},"end":{"line":1851,"column":28}},"580":{"start":{"line":1859,"column":0},"end":{"line":1861,"column":2}},"581":{"start":{"line":1860,"column":2},"end":{"line":1860,"column":48}},"582":{"start":{"line":1868,"column":0},"end":{"line":1870,"column":2}},"583":{"start":{"line":1869,"column":2},"end":{"line":1869,"column":77}},"584":{"start":{"line":1874,"column":0},"end":{"line":1876,"column":2}},"585":{"start":{"line":1875,"column":2},"end":{"line":1875,"column":49}},"586":{"start":{"line":1890,"column":0},"end":{"line":1892,"column":2}},"587":{"start":{"line":1891,"column":2},"end":{"line":1891,"column":102}},"588":{"start":{"line":1893,"column":0},"end":{"line":1893,"column":59}},"589":{"start":{"line":1894,"column":0},"end":{"line":1896,"column":1}},"590":{"start":{"line":1895,"column":2},"end":{"line":1895,"column":78}},"591":{"start":{"line":1902,"column":0},"end":{"line":1902,"column":52}},"592":{"start":{"line":1906,"column":0},"end":{"line":1943,"column":1}},"593":{"start":{"line":1917,"column":2},"end":{"line":1919,"column":4}},"594":{"start":{"line":1918,"column":4},"end":{"line":1918,"column":77}},"595":{"start":{"line":1931,"column":2},"end":{"line":1942,"column":4}},"596":{"start":{"line":1932,"column":16},"end":{"line":1935,"column":54}},"597":{"start":{"line":1938,"column":4},"end":{"line":1940,"column":5}},"598":{"start":{"line":1939,"column":6},"end":{"line":1939,"column":37}},"599":{"start":{"line":1941,"column":4},"end":{"line":1941,"column":15}},"600":{"start":{"line":1951,"column":0},"end":{"line":1955,"column":2}},"601":{"start":{"line":1952,"column":15},"end":{"line":1952,"column":43}},"602":{"start":{"line":1953,"column":12},"end":{"line":1953,"column":47}},"603":{"start":{"line":1954,"column":2},"end":{"line":1954,"column":80}},"604":{"start":{"line":1965,"column":0},"end":{"line":1987,"column":2}},"605":{"start":{"line":1966,"column":2},"end":{"line":1985,"column":3}},"606":{"start":{"line":1967,"column":4},"end":{"line":1969,"column":5}},"607":{"start":{"line":1968,"column":6},"end":{"line":1968,"column":12}},"608":{"start":{"line":1970,"column":16},"end":{"line":1970,"column":39}},"609":{"start":{"line":1971,"column":4},"end":{"line":1983,"column":15}},"610":{"start":{"line":1973,"column":60},"end":{"line":1973,"column":77}},"611":{"start":{"line":1974,"column":8},"end":{"line":1974,"column":29}},"612":{"start":{"line":1975,"column":8},"end":{"line":1975,"column":14}},"613":{"start":{"line":1977,"column":20},"end":{"line":1977,"column":45}},"614":{"start":{"line":1978,"column":8},"end":{"line":1978,"column":83}},"615":{"start":{"line":1979,"column":8},"end":{"line":1979,"column":28}},"616":{"start":{"line":1980,"column":8},"end":{"line":1980,"column":14}},"617":{"start":{"line":1982,"column":8},"end":{"line":1982,"column":27}},"618":{"start":{"line":1983,"column":8},"end":{"line":1983,"column":14}},"619":{"start":{"line":1986,"column":2},"end":{"line":1986,"column":13}},"620":{"start":{"line":1994,"column":0},"end":{"line":1998,"column":2}},"621":{"start":{"line":1995,"column":15},"end":{"line":1995,"column":38}},"622":{"start":{"line":1996,"column":2},"end":{"line":1996,"column":70}},"623":{"start":{"line":1997,"column":2},"end":{"line":1997,"column":34}},"624":{"start":{"line":2008,"column":0},"end":{"line":2025,"column":2}},"625":{"start":{"line":2009,"column":10},"end":{"line":2009,"column":19}},"626":{"start":{"line":2010,"column":2},"end":{"line":2010,"column":26}},"627":{"start":{"line":2011,"column":2},"end":{"line":2016,"column":3}},"628":{"start":{"line":2012,"column":4},"end":{"line":2014,"column":7}},"629":{"start":{"line":2017,"column":2},"end":{"line":2017,"column":29}},"630":{"start":{"line":2018,"column":2},"end":{"line":2024,"column":3}},"631":{"start":{"line":2019,"column":4},"end":{"line":2022,"column":49}},"632":{"start":{"line":2032,"column":0},"end":{"line":2034,"column":2}},"633":{"start":{"line":2033,"column":2},"end":{"line":2033,"column":96}},"634":{"start":{"line":2038,"column":0},"end":{"line":2040,"column":2}},"635":{"start":{"line":2039,"column":2},"end":{"line":2039,"column":50}},"636":{"start":{"line":2047,"column":0},"end":{"line":2050,"column":2}},"637":{"start":{"line":2048,"column":2},"end":{"line":2049,"column":72}},"638":{"start":{"line":2054,"column":0},"end":{"line":2056,"column":2}},"639":{"start":{"line":2055,"column":2},"end":{"line":2055,"column":55}},"640":{"start":{"line":2064,"column":0},"end":{"line":2066,"column":2}},"641":{"start":{"line":2065,"column":2},"end":{"line":2065,"column":104}},"642":{"start":{"line":2069,"column":0},"end":{"line":2071,"column":2}},"643":{"start":{"line":2070,"column":2},"end":{"line":2070,"column":24}},"644":{"start":{"line":2085,"column":0},"end":{"line":2087,"column":2}},"645":{"start":{"line":2086,"column":2},"end":{"line":2086,"column":61}},"646":{"start":{"line":2088,"column":0},"end":{"line":2088,"column":56}},"647":{"start":{"line":2089,"column":0},"end":{"line":2091,"column":1}},"648":{"start":{"line":2090,"column":2},"end":{"line":2090,"column":72}},"649":{"start":{"line":2094,"column":0},"end":{"line":2130,"column":1}},"650":{"start":{"line":2105,"column":2},"end":{"line":2107,"column":4}},"651":{"start":{"line":2106,"column":4},"end":{"line":2106,"column":74}},"652":{"start":{"line":2119,"column":2},"end":{"line":2129,"column":4}},"653":{"start":{"line":2120,"column":16},"end":{"line":2122,"column":60}},"654":{"start":{"line":2125,"column":4},"end":{"line":2127,"column":5}},"655":{"start":{"line":2126,"column":6},"end":{"line":2126,"column":37}},"656":{"start":{"line":2128,"column":4},"end":{"line":2128,"column":15}},"657":{"start":{"line":2138,"column":0},"end":{"line":2142,"column":2}},"658":{"start":{"line":2139,"column":15},"end":{"line":2139,"column":43}},"659":{"start":{"line":2140,"column":12},"end":{"line":2140,"column":44}},"660":{"start":{"line":2141,"column":2},"end":{"line":2141,"column":77}},"661":{"start":{"line":2152,"column":0},"end":{"line":2173,"column":2}},"662":{"start":{"line":2153,"column":2},"end":{"line":2171,"column":3}},"663":{"start":{"line":2154,"column":4},"end":{"line":2156,"column":5}},"664":{"start":{"line":2155,"column":6},"end":{"line":2155,"column":12}},"665":{"start":{"line":2157,"column":16},"end":{"line":2157,"column":39}},"666":{"start":{"line":2158,"column":4},"end":{"line":2169,"column":15}},"667":{"start":{"line":2160,"column":46},"end":{"line":2160,"column":64}},"668":{"start":{"line":2161,"column":8},"end":{"line":2161,"column":32}},"669":{"start":{"line":2162,"column":8},"end":{"line":2162,"column":14}},"670":{"start":{"line":2164,"column":41},"end":{"line":2164,"column":60}},"671":{"start":{"line":2165,"column":8},"end":{"line":2165,"column":30}},"672":{"start":{"line":2166,"column":8},"end":{"line":2166,"column":14}},"673":{"start":{"line":2168,"column":8},"end":{"line":2168,"column":27}},"674":{"start":{"line":2169,"column":8},"end":{"line":2169,"column":14}},"675":{"start":{"line":2172,"column":2},"end":{"line":2172,"column":13}},"676":{"start":{"line":2180,"column":0},"end":{"line":2184,"column":2}},"677":{"start":{"line":2181,"column":15},"end":{"line":2181,"column":38}},"678":{"start":{"line":2182,"column":2},"end":{"line":2182,"column":67}},"679":{"start":{"line":2183,"column":2},"end":{"line":2183,"column":34}},"680":{"start":{"line":2194,"column":0},"end":{"line":2210,"column":2}},"681":{"start":{"line":2195,"column":10},"end":{"line":2195,"column":19}},"682":{"start":{"line":2196,"column":2},"end":{"line":2196,"column":34}},"683":{"start":{"line":2197,"column":2},"end":{"line":2202,"column":3}},"684":{"start":{"line":2198,"column":4},"end":{"line":2200,"column":7}},"685":{"start":{"line":2203,"column":2},"end":{"line":2203,"column":27}},"686":{"start":{"line":2204,"column":2},"end":{"line":2209,"column":3}},"687":{"start":{"line":2205,"column":4},"end":{"line":2207,"column":7}},"688":{"start":{"line":2217,"column":0},"end":{"line":2219,"column":2}},"689":{"start":{"line":2218,"column":2},"end":{"line":2218,"column":92}},"690":{"start":{"line":2227,"column":0},"end":{"line":2230,"column":2}},"691":{"start":{"line":2228,"column":2},"end":{"line":2229,"column":26}},"692":{"start":{"line":2240,"column":0},"end":{"line":2243,"column":2}},"693":{"start":{"line":2241,"column":2},"end":{"line":2242,"column":26}},"694":{"start":{"line":2247,"column":0},"end":{"line":2249,"column":2}},"695":{"start":{"line":2248,"column":2},"end":{"line":2248,"column":51}},"696":{"start":{"line":2256,"column":0},"end":{"line":2258,"column":2}},"697":{"start":{"line":2257,"column":2},"end":{"line":2257,"column":77}},"698":{"start":{"line":2262,"column":0},"end":{"line":2264,"column":2}},"699":{"start":{"line":2263,"column":2},"end":{"line":2263,"column":49}},"700":{"start":{"line":2278,"column":0},"end":{"line":2280,"column":2}},"701":{"start":{"line":2279,"column":2},"end":{"line":2279,"column":61}},"702":{"start":{"line":2281,"column":0},"end":{"line":2281,"column":61}},"703":{"start":{"line":2282,"column":0},"end":{"line":2284,"column":1}},"704":{"start":{"line":2283,"column":2},"end":{"line":2283,"column":82}},"705":{"start":{"line":2287,"column":0},"end":{"line":2324,"column":1}},"706":{"start":{"line":2298,"column":2},"end":{"line":2300,"column":4}},"707":{"start":{"line":2299,"column":4},"end":{"line":2299,"column":79}},"708":{"start":{"line":2312,"column":2},"end":{"line":2323,"column":4}},"709":{"start":{"line":2313,"column":16},"end":{"line":2316,"column":87}},"710":{"start":{"line":2319,"column":4},"end":{"line":2321,"column":5}},"711":{"start":{"line":2320,"column":6},"end":{"line":2320,"column":37}},"712":{"start":{"line":2322,"column":4},"end":{"line":2322,"column":15}},"713":{"start":{"line":2332,"column":0},"end":{"line":2336,"column":2}},"714":{"start":{"line":2333,"column":15},"end":{"line":2333,"column":43}},"715":{"start":{"line":2334,"column":12},"end":{"line":2334,"column":49}},"716":{"start":{"line":2335,"column":2},"end":{"line":2335,"column":82}},"717":{"start":{"line":2346,"column":0},"end":{"line":2372,"column":2}},"718":{"start":{"line":2347,"column":2},"end":{"line":2370,"column":3}},"719":{"start":{"line":2348,"column":4},"end":{"line":2350,"column":5}},"720":{"start":{"line":2349,"column":6},"end":{"line":2349,"column":12}},"721":{"start":{"line":2351,"column":16},"end":{"line":2351,"column":39}},"722":{"start":{"line":2352,"column":4},"end":{"line":2368,"column":15}},"723":{"start":{"line":2354,"column":46},"end":{"line":2354,"column":64}},"724":{"start":{"line":2355,"column":8},"end":{"line":2355,"column":33}},"725":{"start":{"line":2356,"column":8},"end":{"line":2356,"column":14}},"726":{"start":{"line":2358,"column":41},"end":{"line":2358,"column":60}},"727":{"start":{"line":2359,"column":8},"end":{"line":2359,"column":30}},"728":{"start":{"line":2360,"column":8},"end":{"line":2360,"column":14}},"729":{"start":{"line":2362,"column":20},"end":{"line":2362,"column":45}},"730":{"start":{"line":2363,"column":8},"end":{"line":2363,"column":83}},"731":{"start":{"line":2364,"column":8},"end":{"line":2364,"column":28}},"732":{"start":{"line":2365,"column":8},"end":{"line":2365,"column":14}},"733":{"start":{"line":2367,"column":8},"end":{"line":2367,"column":27}},"734":{"start":{"line":2368,"column":8},"end":{"line":2368,"column":14}},"735":{"start":{"line":2371,"column":2},"end":{"line":2371,"column":13}},"736":{"start":{"line":2379,"column":0},"end":{"line":2383,"column":2}},"737":{"start":{"line":2380,"column":15},"end":{"line":2380,"column":38}},"738":{"start":{"line":2381,"column":2},"end":{"line":2381,"column":72}},"739":{"start":{"line":2382,"column":2},"end":{"line":2382,"column":34}},"740":{"start":{"line":2393,"column":0},"end":{"line":2417,"column":2}},"741":{"start":{"line":2394,"column":10},"end":{"line":2394,"column":19}},"742":{"start":{"line":2395,"column":2},"end":{"line":2395,"column":35}},"743":{"start":{"line":2396,"column":2},"end":{"line":2401,"column":3}},"744":{"start":{"line":2397,"column":4},"end":{"line":2399,"column":7}},"745":{"start":{"line":2402,"column":2},"end":{"line":2402,"column":27}},"746":{"start":{"line":2403,"column":2},"end":{"line":2408,"column":3}},"747":{"start":{"line":2404,"column":4},"end":{"line":2406,"column":7}},"748":{"start":{"line":2409,"column":2},"end":{"line":2409,"column":25}},"749":{"start":{"line":2410,"column":2},"end":{"line":2416,"column":3}},"750":{"start":{"line":2411,"column":4},"end":{"line":2414,"column":49}},"751":{"start":{"line":2424,"column":0},"end":{"line":2426,"column":2}},"752":{"start":{"line":2425,"column":2},"end":{"line":2425,"column":92}},"753":{"start":{"line":2434,"column":0},"end":{"line":2437,"column":2}},"754":{"start":{"line":2435,"column":2},"end":{"line":2436,"column":27}},"755":{"start":{"line":2447,"column":0},"end":{"line":2450,"column":2}},"756":{"start":{"line":2448,"column":2},"end":{"line":2449,"column":27}},"757":{"start":{"line":2454,"column":0},"end":{"line":2456,"column":2}},"758":{"start":{"line":2455,"column":2},"end":{"line":2455,"column":51}},"759":{"start":{"line":2463,"column":0},"end":{"line":2465,"column":2}},"760":{"start":{"line":2464,"column":2},"end":{"line":2464,"column":77}},"761":{"start":{"line":2469,"column":0},"end":{"line":2471,"column":2}},"762":{"start":{"line":2470,"column":2},"end":{"line":2470,"column":49}},"763":{"start":{"line":2478,"column":0},"end":{"line":2481,"column":2}},"764":{"start":{"line":2479,"column":2},"end":{"line":2480,"column":64}},"765":{"start":{"line":2485,"column":0},"end":{"line":2487,"column":2}},"766":{"start":{"line":2486,"column":2},"end":{"line":2486,"column":47}},"767":{"start":{"line":2490,"column":0},"end":{"line":2492,"column":2}},"768":{"start":{"line":2491,"column":2},"end":{"line":2491,"column":27}},"769":{"start":{"line":2499,"column":0},"end":{"line":2501,"column":2}},"770":{"start":{"line":2500,"column":2},"end":{"line":2500,"column":48}},"771":{"start":{"line":2515,"column":0},"end":{"line":2517,"column":2}},"772":{"start":{"line":2516,"column":2},"end":{"line":2516,"column":61}},"773":{"start":{"line":2518,"column":0},"end":{"line":2518,"column":64}},"774":{"start":{"line":2519,"column":0},"end":{"line":2521,"column":1}},"775":{"start":{"line":2520,"column":2},"end":{"line":2520,"column":88}},"776":{"start":{"line":2524,"column":0},"end":{"line":2563,"column":1}},"777":{"start":{"line":2535,"column":2},"end":{"line":2537,"column":4}},"778":{"start":{"line":2536,"column":4},"end":{"line":2536,"column":82}},"779":{"start":{"line":2549,"column":2},"end":{"line":2562,"column":4}},"780":{"start":{"line":2550,"column":16},"end":{"line":2555,"column":60}},"781":{"start":{"line":2558,"column":4},"end":{"line":2560,"column":5}},"782":{"start":{"line":2559,"column":6},"end":{"line":2559,"column":37}},"783":{"start":{"line":2561,"column":4},"end":{"line":2561,"column":15}},"784":{"start":{"line":2571,"column":0},"end":{"line":2575,"column":2}},"785":{"start":{"line":2572,"column":15},"end":{"line":2572,"column":43}},"786":{"start":{"line":2573,"column":12},"end":{"line":2573,"column":52}},"787":{"start":{"line":2574,"column":2},"end":{"line":2574,"column":85}},"788":{"start":{"line":2585,"column":0},"end":{"line":2618,"column":2}},"789":{"start":{"line":2586,"column":2},"end":{"line":2616,"column":3}},"790":{"start":{"line":2587,"column":4},"end":{"line":2589,"column":5}},"791":{"start":{"line":2588,"column":6},"end":{"line":2588,"column":12}},"792":{"start":{"line":2590,"column":16},"end":{"line":2590,"column":39}},"793":{"start":{"line":2591,"column":4},"end":{"line":2614,"column":15}},"794":{"start":{"line":2593,"column":46},"end":{"line":2593,"column":64}},"795":{"start":{"line":2594,"column":8},"end":{"line":2594,"column":27}},"796":{"start":{"line":2595,"column":8},"end":{"line":2595,"column":14}},"797":{"start":{"line":2597,"column":41},"end":{"line":2597,"column":60}},"798":{"start":{"line":2598,"column":8},"end":{"line":2598,"column":29}},"799":{"start":{"line":2599,"column":8},"end":{"line":2599,"column":14}},"800":{"start":{"line":2601,"column":41},"end":{"line":2601,"column":60}},"801":{"start":{"line":2602,"column":8},"end":{"line":2602,"column":29}},"802":{"start":{"line":2603,"column":8},"end":{"line":2603,"column":14}},"803":{"start":{"line":2605,"column":41},"end":{"line":2605,"column":60}},"804":{"start":{"line":2606,"column":8},"end":{"line":2606,"column":27}},"805":{"start":{"line":2607,"column":8},"end":{"line":2607,"column":14}},"806":{"start":{"line":2609,"column":42},"end":{"line":2609,"column":59}},"807":{"start":{"line":2610,"column":8},"end":{"line":2610,"column":26}},"808":{"start":{"line":2611,"column":8},"end":{"line":2611,"column":14}},"809":{"start":{"line":2613,"column":8},"end":{"line":2613,"column":27}},"810":{"start":{"line":2614,"column":8},"end":{"line":2614,"column":14}},"811":{"start":{"line":2617,"column":2},"end":{"line":2617,"column":13}},"812":{"start":{"line":2625,"column":0},"end":{"line":2629,"column":2}},"813":{"start":{"line":2626,"column":15},"end":{"line":2626,"column":38}},"814":{"start":{"line":2627,"column":2},"end":{"line":2627,"column":75}},"815":{"start":{"line":2628,"column":2},"end":{"line":2628,"column":34}},"816":{"start":{"line":2639,"column":0},"end":{"line":2676,"column":2}},"817":{"start":{"line":2640,"column":10},"end":{"line":2640,"column":19}},"818":{"start":{"line":2641,"column":2},"end":{"line":2641,"column":29}},"819":{"start":{"line":2642,"column":2},"end":{"line":2647,"column":3}},"820":{"start":{"line":2643,"column":4},"end":{"line":2645,"column":7}},"821":{"start":{"line":2648,"column":2},"end":{"line":2648,"column":26}},"822":{"start":{"line":2649,"column":2},"end":{"line":2654,"column":3}},"823":{"start":{"line":2650,"column":4},"end":{"line":2652,"column":7}},"824":{"start":{"line":2655,"column":2},"end":{"line":2655,"column":26}},"825":{"start":{"line":2656,"column":2},"end":{"line":2661,"column":3}},"826":{"start":{"line":2657,"column":4},"end":{"line":2659,"column":7}},"827":{"start":{"line":2662,"column":2},"end":{"line":2662,"column":24}},"828":{"start":{"line":2663,"column":2},"end":{"line":2668,"column":3}},"829":{"start":{"line":2664,"column":4},"end":{"line":2666,"column":7}},"830":{"start":{"line":2669,"column":2},"end":{"line":2669,"column":23}},"831":{"start":{"line":2670,"column":2},"end":{"line":2675,"column":3}},"832":{"start":{"line":2671,"column":4},"end":{"line":2673,"column":7}},"833":{"start":{"line":2683,"column":0},"end":{"line":2685,"column":2}},"834":{"start":{"line":2684,"column":2},"end":{"line":2684,"column":92}},"835":{"start":{"line":2693,"column":0},"end":{"line":2696,"column":2}},"836":{"start":{"line":2694,"column":2},"end":{"line":2695,"column":21}},"837":{"start":{"line":2706,"column":0},"end":{"line":2709,"column":2}},"838":{"start":{"line":2707,"column":2},"end":{"line":2708,"column":21}},"839":{"start":{"line":2713,"column":0},"end":{"line":2715,"column":2}},"840":{"start":{"line":2714,"column":2},"end":{"line":2714,"column":51}},"841":{"start":{"line":2722,"column":0},"end":{"line":2724,"column":2}},"842":{"start":{"line":2723,"column":2},"end":{"line":2723,"column":77}},"843":{"start":{"line":2728,"column":0},"end":{"line":2730,"column":2}},"844":{"start":{"line":2729,"column":2},"end":{"line":2729,"column":49}},"845":{"start":{"line":2737,"column":0},"end":{"line":2739,"column":2}},"846":{"start":{"line":2738,"column":2},"end":{"line":2738,"column":77}},"847":{"start":{"line":2743,"column":0},"end":{"line":2745,"column":2}},"848":{"start":{"line":2744,"column":2},"end":{"line":2744,"column":49}},"849":{"start":{"line":2752,"column":0},"end":{"line":2754,"column":2}},"850":{"start":{"line":2753,"column":2},"end":{"line":2753,"column":77}},"851":{"start":{"line":2758,"column":0},"end":{"line":2760,"column":2}},"852":{"start":{"line":2759,"column":2},"end":{"line":2759,"column":49}},"853":{"start":{"line":2769,"column":0},"end":{"line":2771,"column":2}},"854":{"start":{"line":2770,"column":2},"end":{"line":2770,"column":82}},"855":{"start":{"line":2775,"column":0},"end":{"line":2777,"column":2}},"856":{"start":{"line":2776,"column":2},"end":{"line":2776,"column":53}},"857":{"start":{"line":2791,"column":0},"end":{"line":2793,"column":2}},"858":{"start":{"line":2792,"column":2},"end":{"line":2792,"column":108}},"859":{"start":{"line":2794,"column":0},"end":{"line":2794,"column":65}},"860":{"start":{"line":2795,"column":0},"end":{"line":2797,"column":1}},"861":{"start":{"line":2796,"column":2},"end":{"line":2796,"column":90}},"862":{"start":{"line":2803,"column":0},"end":{"line":2803,"column":61}},"863":{"start":{"line":2807,"column":0},"end":{"line":2846,"column":1}},"864":{"start":{"line":2818,"column":2},"end":{"line":2820,"column":4}},"865":{"start":{"line":2819,"column":4},"end":{"line":2819,"column":83}},"866":{"start":{"line":2832,"column":2},"end":{"line":2845,"column":4}},"867":{"start":{"line":2833,"column":16},"end":{"line":2838,"column":64}},"868":{"start":{"line":2841,"column":4},"end":{"line":2843,"column":5}},"869":{"start":{"line":2842,"column":6},"end":{"line":2842,"column":37}},"870":{"start":{"line":2844,"column":4},"end":{"line":2844,"column":15}},"871":{"start":{"line":2854,"column":0},"end":{"line":2858,"column":2}},"872":{"start":{"line":2855,"column":15},"end":{"line":2855,"column":43}},"873":{"start":{"line":2856,"column":12},"end":{"line":2856,"column":53}},"874":{"start":{"line":2857,"column":2},"end":{"line":2857,"column":86}},"875":{"start":{"line":2868,"column":0},"end":{"line":2898,"column":2}},"876":{"start":{"line":2869,"column":2},"end":{"line":2896,"column":3}},"877":{"start":{"line":2870,"column":4},"end":{"line":2872,"column":5}},"878":{"start":{"line":2871,"column":6},"end":{"line":2871,"column":12}},"879":{"start":{"line":2873,"column":16},"end":{"line":2873,"column":39}},"880":{"start":{"line":2874,"column":4},"end":{"line":2894,"column":15}},"881":{"start":{"line":2876,"column":60},"end":{"line":2876,"column":77}},"882":{"start":{"line":2877,"column":8},"end":{"line":2877,"column":29}},"883":{"start":{"line":2878,"column":8},"end":{"line":2878,"column":14}},"884":{"start":{"line":2880,"column":46},"end":{"line":2880,"column":64}},"885":{"start":{"line":2881,"column":8},"end":{"line":2881,"column":29}},"886":{"start":{"line":2882,"column":8},"end":{"line":2882,"column":14}},"887":{"start":{"line":2884,"column":20},"end":{"line":2884,"column":51}},"888":{"start":{"line":2885,"column":8},"end":{"line":2885,"column":89}},"889":{"start":{"line":2886,"column":8},"end":{"line":2886,"column":30}},"890":{"start":{"line":2887,"column":8},"end":{"line":2887,"column":14}},"891":{"start":{"line":2889,"column":42},"end":{"line":2889,"column":59}},"892":{"start":{"line":2890,"column":8},"end":{"line":2890,"column":30}},"893":{"start":{"line":2891,"column":8},"end":{"line":2891,"column":14}},"894":{"start":{"line":2893,"column":8},"end":{"line":2893,"column":27}},"895":{"start":{"line":2894,"column":8},"end":{"line":2894,"column":14}},"896":{"start":{"line":2897,"column":2},"end":{"line":2897,"column":13}},"897":{"start":{"line":2905,"column":0},"end":{"line":2909,"column":2}},"898":{"start":{"line":2906,"column":15},"end":{"line":2906,"column":38}},"899":{"start":{"line":2907,"column":2},"end":{"line":2907,"column":76}},"900":{"start":{"line":2908,"column":2},"end":{"line":2908,"column":34}},"901":{"start":{"line":2919,"column":0},"end":{"line":2950,"column":2}},"902":{"start":{"line":2920,"column":10},"end":{"line":2920,"column":19}},"903":{"start":{"line":2921,"column":2},"end":{"line":2921,"column":26}},"904":{"start":{"line":2922,"column":2},"end":{"line":2927,"column":3}},"905":{"start":{"line":2923,"column":4},"end":{"line":2925,"column":7}},"906":{"start":{"line":2928,"column":2},"end":{"line":2928,"column":35}},"907":{"start":{"line":2929,"column":2},"end":{"line":2934,"column":3}},"908":{"start":{"line":2930,"column":4},"end":{"line":2932,"column":7}},"909":{"start":{"line":2935,"column":2},"end":{"line":2935,"column":31}},"910":{"start":{"line":2936,"column":2},"end":{"line":2942,"column":3}},"911":{"start":{"line":2937,"column":4},"end":{"line":2940,"column":55}},"912":{"start":{"line":2943,"column":2},"end":{"line":2943,"column":27}},"913":{"start":{"line":2944,"column":2},"end":{"line":2949,"column":3}},"914":{"start":{"line":2945,"column":4},"end":{"line":2947,"column":7}},"915":{"start":{"line":2957,"column":0},"end":{"line":2959,"column":2}},"916":{"start":{"line":2958,"column":2},"end":{"line":2958,"column":96}},"917":{"start":{"line":2963,"column":0},"end":{"line":2965,"column":2}},"918":{"start":{"line":2964,"column":2},"end":{"line":2964,"column":50}},"919":{"start":{"line":2972,"column":0},"end":{"line":2974,"column":2}},"920":{"start":{"line":2973,"column":2},"end":{"line":2973,"column":100}},"921":{"start":{"line":2982,"column":0},"end":{"line":2985,"column":2}},"922":{"start":{"line":2983,"column":2},"end":{"line":2984,"column":27}},"923":{"start":{"line":2995,"column":0},"end":{"line":2998,"column":2}},"924":{"start":{"line":2996,"column":2},"end":{"line":2997,"column":27}},"925":{"start":{"line":3002,"column":0},"end":{"line":3004,"column":2}},"926":{"start":{"line":3003,"column":2},"end":{"line":3003,"column":46}},"927":{"start":{"line":3011,"column":0},"end":{"line":3013,"column":2}},"928":{"start":{"line":3012,"column":2},"end":{"line":3012,"column":61}},"929":{"start":{"line":3016,"column":0},"end":{"line":3018,"column":2}},"930":{"start":{"line":3017,"column":2},"end":{"line":3017,"column":25}},"931":{"start":{"line":3025,"column":0},"end":{"line":3028,"column":2}},"932":{"start":{"line":3026,"column":2},"end":{"line":3027,"column":78}},"933":{"start":{"line":3032,"column":0},"end":{"line":3034,"column":2}},"934":{"start":{"line":3033,"column":2},"end":{"line":3033,"column":55}},"935":{"start":{"line":3042,"column":0},"end":{"line":3044,"column":2}},"936":{"start":{"line":3043,"column":2},"end":{"line":3043,"column":104}},"937":{"start":{"line":3047,"column":0},"end":{"line":3049,"column":2}},"938":{"start":{"line":3048,"column":2},"end":{"line":3048,"column":26}},"939":{"start":{"line":3058,"column":0},"end":{"line":3060,"column":2}},"940":{"start":{"line":3059,"column":2},"end":{"line":3059,"column":82}},"941":{"start":{"line":3064,"column":0},"end":{"line":3066,"column":2}},"942":{"start":{"line":3065,"column":2},"end":{"line":3065,"column":53}},"943":{"start":{"line":3080,"column":0},"end":{"line":3082,"column":2}},"944":{"start":{"line":3081,"column":2},"end":{"line":3081,"column":100}},"945":{"start":{"line":3083,"column":0},"end":{"line":3083,"column":57}},"946":{"start":{"line":3084,"column":0},"end":{"line":3086,"column":1}},"947":{"start":{"line":3085,"column":2},"end":{"line":3085,"column":74}},"948":{"start":{"line":3092,"column":0},"end":{"line":3092,"column":50}},"949":{"start":{"line":3096,"column":0},"end":{"line":3131,"column":1}},"950":{"start":{"line":3107,"column":2},"end":{"line":3109,"column":4}},"951":{"start":{"line":3108,"column":4},"end":{"line":3108,"column":75}},"952":{"start":{"line":3121,"column":2},"end":{"line":3130,"column":4}},"953":{"start":{"line":3122,"column":16},"end":{"line":3123,"column":45}},"954":{"start":{"line":3126,"column":4},"end":{"line":3128,"column":5}},"955":{"start":{"line":3127,"column":6},"end":{"line":3127,"column":37}},"956":{"start":{"line":3129,"column":4},"end":{"line":3129,"column":15}},"957":{"start":{"line":3139,"column":0},"end":{"line":3143,"column":2}},"958":{"start":{"line":3140,"column":15},"end":{"line":3140,"column":43}},"959":{"start":{"line":3141,"column":12},"end":{"line":3141,"column":45}},"960":{"start":{"line":3142,"column":2},"end":{"line":3142,"column":78}},"961":{"start":{"line":3153,"column":0},"end":{"line":3170,"column":2}},"962":{"start":{"line":3154,"column":2},"end":{"line":3168,"column":3}},"963":{"start":{"line":3155,"column":4},"end":{"line":3157,"column":5}},"964":{"start":{"line":3156,"column":6},"end":{"line":3156,"column":12}},"965":{"start":{"line":3158,"column":16},"end":{"line":3158,"column":39}},"966":{"start":{"line":3159,"column":4},"end":{"line":3166,"column":15}},"967":{"start":{"line":3161,"column":46},"end":{"line":3161,"column":64}},"968":{"start":{"line":3162,"column":8},"end":{"line":3162,"column":29}},"969":{"start":{"line":3163,"column":8},"end":{"line":3163,"column":14}},"970":{"start":{"line":3165,"column":8},"end":{"line":3165,"column":27}},"971":{"start":{"line":3166,"column":8},"end":{"line":3166,"column":14}},"972":{"start":{"line":3169,"column":2},"end":{"line":3169,"column":13}},"973":{"start":{"line":3177,"column":0},"end":{"line":3181,"column":2}},"974":{"start":{"line":3178,"column":15},"end":{"line":3178,"column":38}},"975":{"start":{"line":3179,"column":2},"end":{"line":3179,"column":68}},"976":{"start":{"line":3180,"column":2},"end":{"line":3180,"column":34}},"977":{"start":{"line":3191,"column":0},"end":{"line":3200,"column":2}},"978":{"start":{"line":3192,"column":10},"end":{"line":3192,"column":19}},"979":{"start":{"line":3193,"column":2},"end":{"line":3193,"column":35}},"980":{"start":{"line":3194,"column":2},"end":{"line":3199,"column":3}},"981":{"start":{"line":3195,"column":4},"end":{"line":3197,"column":7}},"982":{"start":{"line":3207,"column":0},"end":{"line":3209,"column":2}},"983":{"start":{"line":3208,"column":2},"end":{"line":3208,"column":100}},"984":{"start":{"line":3217,"column":0},"end":{"line":3220,"column":2}},"985":{"start":{"line":3218,"column":2},"end":{"line":3219,"column":27}},"986":{"start":{"line":3230,"column":0},"end":{"line":3233,"column":2}},"987":{"start":{"line":3231,"column":2},"end":{"line":3232,"column":27}},"988":{"start":{"line":3237,"column":0},"end":{"line":3239,"column":2}},"989":{"start":{"line":3238,"column":2},"end":{"line":3238,"column":46}},"990":{"start":{"line":3246,"column":0},"end":{"line":3248,"column":2}},"991":{"start":{"line":3247,"column":2},"end":{"line":3247,"column":61}},"992":{"start":{"line":3251,"column":0},"end":{"line":3253,"column":2}},"993":{"start":{"line":3252,"column":2},"end":{"line":3252,"column":25}},"994":{"start":{"line":3267,"column":0},"end":{"line":3269,"column":2}},"995":{"start":{"line":3268,"column":2},"end":{"line":3268,"column":101}},"996":{"start":{"line":3270,"column":0},"end":{"line":3270,"column":58}},"997":{"start":{"line":3271,"column":0},"end":{"line":3273,"column":1}},"998":{"start":{"line":3272,"column":2},"end":{"line":3272,"column":76}},"999":{"start":{"line":3279,"column":0},"end":{"line":3279,"column":51}},"1000":{"start":{"line":3283,"column":0},"end":{"line":3321,"column":1}},"1001":{"start":{"line":3294,"column":2},"end":{"line":3296,"column":4}},"1002":{"start":{"line":3295,"column":4},"end":{"line":3295,"column":76}},"1003":{"start":{"line":3308,"column":2},"end":{"line":3320,"column":4}},"1004":{"start":{"line":3309,"column":16},"end":{"line":3313,"column":64}},"1005":{"start":{"line":3316,"column":4},"end":{"line":3318,"column":5}},"1006":{"start":{"line":3317,"column":6},"end":{"line":3317,"column":37}},"1007":{"start":{"line":3319,"column":4},"end":{"line":3319,"column":15}},"1008":{"start":{"line":3329,"column":0},"end":{"line":3333,"column":2}},"1009":{"start":{"line":3330,"column":15},"end":{"line":3330,"column":43}},"1010":{"start":{"line":3331,"column":12},"end":{"line":3331,"column":46}},"1011":{"start":{"line":3332,"column":2},"end":{"line":3332,"column":79}},"1012":{"start":{"line":3343,"column":0},"end":{"line":3369,"column":2}},"1013":{"start":{"line":3344,"column":2},"end":{"line":3367,"column":3}},"1014":{"start":{"line":3345,"column":4},"end":{"line":3347,"column":5}},"1015":{"start":{"line":3346,"column":6},"end":{"line":3346,"column":12}},"1016":{"start":{"line":3348,"column":16},"end":{"line":3348,"column":39}},"1017":{"start":{"line":3349,"column":4},"end":{"line":3365,"column":15}},"1018":{"start":{"line":3351,"column":60},"end":{"line":3351,"column":77}},"1019":{"start":{"line":3352,"column":8},"end":{"line":3352,"column":29}},"1020":{"start":{"line":3353,"column":8},"end":{"line":3353,"column":14}},"1021":{"start":{"line":3355,"column":20},"end":{"line":3355,"column":45}},"1022":{"start":{"line":3356,"column":8},"end":{"line":3356,"column":83}},"1023":{"start":{"line":3357,"column":8},"end":{"line":3357,"column":29}},"1024":{"start":{"line":3358,"column":8},"end":{"line":3358,"column":14}},"1025":{"start":{"line":3360,"column":42},"end":{"line":3360,"column":59}},"1026":{"start":{"line":3361,"column":8},"end":{"line":3361,"column":30}},"1027":{"start":{"line":3362,"column":8},"end":{"line":3362,"column":14}},"1028":{"start":{"line":3364,"column":8},"end":{"line":3364,"column":27}},"1029":{"start":{"line":3365,"column":8},"end":{"line":3365,"column":14}},"1030":{"start":{"line":3368,"column":2},"end":{"line":3368,"column":13}},"1031":{"start":{"line":3376,"column":0},"end":{"line":3380,"column":2}},"1032":{"start":{"line":3377,"column":15},"end":{"line":3377,"column":38}},"1033":{"start":{"line":3378,"column":2},"end":{"line":3378,"column":69}},"1034":{"start":{"line":3379,"column":2},"end":{"line":3379,"column":34}},"1035":{"start":{"line":3390,"column":0},"end":{"line":3414,"column":2}},"1036":{"start":{"line":3391,"column":10},"end":{"line":3391,"column":19}},"1037":{"start":{"line":3392,"column":2},"end":{"line":3392,"column":26}},"1038":{"start":{"line":3393,"column":2},"end":{"line":3398,"column":3}},"1039":{"start":{"line":3394,"column":4},"end":{"line":3396,"column":7}},"1040":{"start":{"line":3399,"column":2},"end":{"line":3399,"column":30}},"1041":{"start":{"line":3400,"column":2},"end":{"line":3406,"column":3}},"1042":{"start":{"line":3401,"column":4},"end":{"line":3404,"column":49}},"1043":{"start":{"line":3407,"column":2},"end":{"line":3407,"column":27}},"1044":{"start":{"line":3408,"column":2},"end":{"line":3413,"column":3}},"1045":{"start":{"line":3409,"column":4},"end":{"line":3411,"column":7}},"1046":{"start":{"line":3421,"column":0},"end":{"line":3423,"column":2}},"1047":{"start":{"line":3422,"column":2},"end":{"line":3422,"column":96}},"1048":{"start":{"line":3427,"column":0},"end":{"line":3429,"column":2}},"1049":{"start":{"line":3428,"column":2},"end":{"line":3428,"column":50}},"1050":{"start":{"line":3436,"column":0},"end":{"line":3439,"column":2}},"1051":{"start":{"line":3437,"column":2},"end":{"line":3438,"column":72}},"1052":{"start":{"line":3443,"column":0},"end":{"line":3445,"column":2}},"1053":{"start":{"line":3444,"column":2},"end":{"line":3444,"column":55}},"1054":{"start":{"line":3453,"column":0},"end":{"line":3455,"column":2}},"1055":{"start":{"line":3454,"column":2},"end":{"line":3454,"column":98}},"1056":{"start":{"line":3458,"column":0},"end":{"line":3460,"column":2}},"1057":{"start":{"line":3459,"column":2},"end":{"line":3459,"column":25}},"1058":{"start":{"line":3469,"column":0},"end":{"line":3471,"column":2}},"1059":{"start":{"line":3470,"column":2},"end":{"line":3470,"column":82}},"1060":{"start":{"line":3475,"column":0},"end":{"line":3477,"column":2}},"1061":{"start":{"line":3476,"column":2},"end":{"line":3476,"column":53}},"1062":{"start":{"line":3491,"column":0},"end":{"line":3493,"column":2}},"1063":{"start":{"line":3492,"column":2},"end":{"line":3492,"column":106}},"1064":{"start":{"line":3494,"column":0},"end":{"line":3494,"column":63}},"1065":{"start":{"line":3495,"column":0},"end":{"line":3497,"column":1}},"1066":{"start":{"line":3496,"column":2},"end":{"line":3496,"column":86}},"1067":{"start":{"line":3503,"column":0},"end":{"line":3503,"column":56}},"1068":{"start":{"line":3507,"column":0},"end":{"line":3542,"column":1}},"1069":{"start":{"line":3518,"column":2},"end":{"line":3520,"column":4}},"1070":{"start":{"line":3519,"column":4},"end":{"line":3519,"column":81}},"1071":{"start":{"line":3532,"column":2},"end":{"line":3541,"column":4}},"1072":{"start":{"line":3533,"column":16},"end":{"line":3534,"column":49}},"1073":{"start":{"line":3537,"column":4},"end":{"line":3539,"column":5}},"1074":{"start":{"line":3538,"column":6},"end":{"line":3538,"column":37}},"1075":{"start":{"line":3540,"column":4},"end":{"line":3540,"column":15}},"1076":{"start":{"line":3550,"column":0},"end":{"line":3554,"column":2}},"1077":{"start":{"line":3551,"column":15},"end":{"line":3551,"column":43}},"1078":{"start":{"line":3552,"column":12},"end":{"line":3552,"column":51}},"1079":{"start":{"line":3553,"column":2},"end":{"line":3553,"column":84}},"1080":{"start":{"line":3564,"column":0},"end":{"line":3581,"column":2}},"1081":{"start":{"line":3565,"column":2},"end":{"line":3579,"column":3}},"1082":{"start":{"line":3566,"column":4},"end":{"line":3568,"column":5}},"1083":{"start":{"line":3567,"column":6},"end":{"line":3567,"column":12}},"1084":{"start":{"line":3569,"column":16},"end":{"line":3569,"column":39}},"1085":{"start":{"line":3570,"column":4},"end":{"line":3577,"column":15}},"1086":{"start":{"line":3572,"column":46},"end":{"line":3572,"column":64}},"1087":{"start":{"line":3573,"column":8},"end":{"line":3573,"column":31}},"1088":{"start":{"line":3574,"column":8},"end":{"line":3574,"column":14}},"1089":{"start":{"line":3576,"column":8},"end":{"line":3576,"column":27}},"1090":{"start":{"line":3577,"column":8},"end":{"line":3577,"column":14}},"1091":{"start":{"line":3580,"column":2},"end":{"line":3580,"column":13}},"1092":{"start":{"line":3588,"column":0},"end":{"line":3592,"column":2}},"1093":{"start":{"line":3589,"column":15},"end":{"line":3589,"column":38}},"1094":{"start":{"line":3590,"column":2},"end":{"line":3590,"column":74}},"1095":{"start":{"line":3591,"column":2},"end":{"line":3591,"column":34}},"1096":{"start":{"line":3602,"column":0},"end":{"line":3611,"column":2}},"1097":{"start":{"line":3603,"column":10},"end":{"line":3603,"column":19}},"1098":{"start":{"line":3604,"column":2},"end":{"line":3604,"column":37}},"1099":{"start":{"line":3605,"column":2},"end":{"line":3610,"column":3}},"1100":{"start":{"line":3606,"column":4},"end":{"line":3608,"column":7}},"1101":{"start":{"line":3618,"column":0},"end":{"line":3620,"column":2}},"1102":{"start":{"line":3619,"column":2},"end":{"line":3619,"column":100}},"1103":{"start":{"line":3628,"column":0},"end":{"line":3631,"column":2}},"1104":{"start":{"line":3629,"column":2},"end":{"line":3630,"column":29}},"1105":{"start":{"line":3641,"column":0},"end":{"line":3644,"column":2}},"1106":{"start":{"line":3642,"column":2},"end":{"line":3643,"column":29}},"1107":{"start":{"line":3648,"column":0},"end":{"line":3650,"column":2}},"1108":{"start":{"line":3649,"column":2},"end":{"line":3649,"column":46}},"1109":{"start":{"line":3657,"column":0},"end":{"line":3659,"column":2}},"1110":{"start":{"line":3658,"column":2},"end":{"line":3658,"column":61}},"1111":{"start":{"line":3662,"column":0},"end":{"line":3664,"column":2}},"1112":{"start":{"line":3663,"column":2},"end":{"line":3663,"column":27}},"1113":{"start":{"line":3678,"column":0},"end":{"line":3680,"column":2}},"1114":{"start":{"line":3679,"column":2},"end":{"line":3679,"column":107}},"1115":{"start":{"line":3681,"column":0},"end":{"line":3681,"column":64}},"1116":{"start":{"line":3682,"column":0},"end":{"line":3684,"column":1}},"1117":{"start":{"line":3683,"column":2},"end":{"line":3683,"column":88}},"1118":{"start":{"line":3690,"column":0},"end":{"line":3690,"column":57}},"1119":{"start":{"line":3694,"column":0},"end":{"line":3729,"column":1}},"1120":{"start":{"line":3705,"column":2},"end":{"line":3707,"column":4}},"1121":{"start":{"line":3706,"column":4},"end":{"line":3706,"column":82}},"1122":{"start":{"line":3719,"column":2},"end":{"line":3728,"column":4}},"1123":{"start":{"line":3720,"column":16},"end":{"line":3721,"column":45}},"1124":{"start":{"line":3724,"column":4},"end":{"line":3726,"column":5}},"1125":{"start":{"line":3725,"column":6},"end":{"line":3725,"column":37}},"1126":{"start":{"line":3727,"column":4},"end":{"line":3727,"column":15}},"1127":{"start":{"line":3737,"column":0},"end":{"line":3741,"column":2}},"1128":{"start":{"line":3738,"column":15},"end":{"line":3738,"column":43}},"1129":{"start":{"line":3739,"column":12},"end":{"line":3739,"column":52}},"1130":{"start":{"line":3740,"column":2},"end":{"line":3740,"column":85}},"1131":{"start":{"line":3751,"column":0},"end":{"line":3768,"column":2}},"1132":{"start":{"line":3752,"column":2},"end":{"line":3766,"column":3}},"1133":{"start":{"line":3753,"column":4},"end":{"line":3755,"column":5}},"1134":{"start":{"line":3754,"column":6},"end":{"line":3754,"column":12}},"1135":{"start":{"line":3756,"column":16},"end":{"line":3756,"column":39}},"1136":{"start":{"line":3757,"column":4},"end":{"line":3764,"column":15}},"1137":{"start":{"line":3759,"column":46},"end":{"line":3759,"column":64}},"1138":{"start":{"line":3760,"column":8},"end":{"line":3760,"column":29}},"1139":{"start":{"line":3761,"column":8},"end":{"line":3761,"column":14}},"1140":{"start":{"line":3763,"column":8},"end":{"line":3763,"column":27}},"1141":{"start":{"line":3764,"column":8},"end":{"line":3764,"column":14}},"1142":{"start":{"line":3767,"column":2},"end":{"line":3767,"column":13}},"1143":{"start":{"line":3775,"column":0},"end":{"line":3779,"column":2}},"1144":{"start":{"line":3776,"column":15},"end":{"line":3776,"column":38}},"1145":{"start":{"line":3777,"column":2},"end":{"line":3777,"column":75}},"1146":{"start":{"line":3778,"column":2},"end":{"line":3778,"column":34}},"1147":{"start":{"line":3789,"column":0},"end":{"line":3798,"column":2}},"1148":{"start":{"line":3790,"column":10},"end":{"line":3790,"column":19}},"1149":{"start":{"line":3791,"column":2},"end":{"line":3791,"column":35}},"1150":{"start":{"line":3792,"column":2},"end":{"line":3797,"column":3}},"1151":{"start":{"line":3793,"column":4},"end":{"line":3795,"column":7}},"1152":{"start":{"line":3805,"column":0},"end":{"line":3807,"column":2}},"1153":{"start":{"line":3806,"column":2},"end":{"line":3806,"column":100}},"1154":{"start":{"line":3815,"column":0},"end":{"line":3818,"column":2}},"1155":{"start":{"line":3816,"column":2},"end":{"line":3817,"column":27}},"1156":{"start":{"line":3828,"column":0},"end":{"line":3831,"column":2}},"1157":{"start":{"line":3829,"column":2},"end":{"line":3830,"column":27}},"1158":{"start":{"line":3835,"column":0},"end":{"line":3837,"column":2}},"1159":{"start":{"line":3836,"column":2},"end":{"line":3836,"column":46}},"1160":{"start":{"line":3844,"column":0},"end":{"line":3846,"column":2}},"1161":{"start":{"line":3845,"column":2},"end":{"line":3845,"column":61}},"1162":{"start":{"line":3849,"column":0},"end":{"line":3851,"column":2}},"1163":{"start":{"line":3850,"column":2},"end":{"line":3850,"column":25}},"1164":{"start":{"line":3865,"column":0},"end":{"line":3867,"column":2}},"1165":{"start":{"line":3866,"column":2},"end":{"line":3866,"column":108}},"1166":{"start":{"line":3868,"column":0},"end":{"line":3868,"column":65}},"1167":{"start":{"line":3869,"column":0},"end":{"line":3871,"column":1}},"1168":{"start":{"line":3870,"column":2},"end":{"line":3870,"column":90}},"1169":{"start":{"line":3877,"column":0},"end":{"line":3877,"column":61}},"1170":{"start":{"line":3881,"column":0},"end":{"line":3920,"column":1}},"1171":{"start":{"line":3892,"column":2},"end":{"line":3894,"column":4}},"1172":{"start":{"line":3893,"column":4},"end":{"line":3893,"column":83}},"1173":{"start":{"line":3906,"column":2},"end":{"line":3919,"column":4}},"1174":{"start":{"line":3907,"column":16},"end":{"line":3912,"column":64}},"1175":{"start":{"line":3915,"column":4},"end":{"line":3917,"column":5}},"1176":{"start":{"line":3916,"column":6},"end":{"line":3916,"column":37}},"1177":{"start":{"line":3918,"column":4},"end":{"line":3918,"column":15}},"1178":{"start":{"line":3928,"column":0},"end":{"line":3932,"column":2}},"1179":{"start":{"line":3929,"column":15},"end":{"line":3929,"column":43}},"1180":{"start":{"line":3930,"column":12},"end":{"line":3930,"column":53}},"1181":{"start":{"line":3931,"column":2},"end":{"line":3931,"column":86}},"1182":{"start":{"line":3942,"column":0},"end":{"line":3972,"column":2}},"1183":{"start":{"line":3943,"column":2},"end":{"line":3970,"column":3}},"1184":{"start":{"line":3944,"column":4},"end":{"line":3946,"column":5}},"1185":{"start":{"line":3945,"column":6},"end":{"line":3945,"column":12}},"1186":{"start":{"line":3947,"column":16},"end":{"line":3947,"column":39}},"1187":{"start":{"line":3948,"column":4},"end":{"line":3968,"column":15}},"1188":{"start":{"line":3950,"column":60},"end":{"line":3950,"column":77}},"1189":{"start":{"line":3951,"column":8},"end":{"line":3951,"column":29}},"1190":{"start":{"line":3952,"column":8},"end":{"line":3952,"column":14}},"1191":{"start":{"line":3954,"column":46},"end":{"line":3954,"column":64}},"1192":{"start":{"line":3955,"column":8},"end":{"line":3955,"column":29}},"1193":{"start":{"line":3956,"column":8},"end":{"line":3956,"column":14}},"1194":{"start":{"line":3958,"column":20},"end":{"line":3958,"column":42}},"1195":{"start":{"line":3959,"column":8},"end":{"line":3959,"column":80}},"1196":{"start":{"line":3960,"column":8},"end":{"line":3960,"column":26}},"1197":{"start":{"line":3961,"column":8},"end":{"line":3961,"column":14}},"1198":{"start":{"line":3963,"column":42},"end":{"line":3963,"column":59}},"1199":{"start":{"line":3964,"column":8},"end":{"line":3964,"column":30}},"1200":{"start":{"line":3965,"column":8},"end":{"line":3965,"column":14}},"1201":{"start":{"line":3967,"column":8},"end":{"line":3967,"column":27}},"1202":{"start":{"line":3968,"column":8},"end":{"line":3968,"column":14}},"1203":{"start":{"line":3971,"column":2},"end":{"line":3971,"column":13}},"1204":{"start":{"line":3979,"column":0},"end":{"line":3983,"column":2}},"1205":{"start":{"line":3980,"column":15},"end":{"line":3980,"column":38}},"1206":{"start":{"line":3981,"column":2},"end":{"line":3981,"column":76}},"1207":{"start":{"line":3982,"column":2},"end":{"line":3982,"column":34}},"1208":{"start":{"line":3993,"column":0},"end":{"line":4024,"column":2}},"1209":{"start":{"line":3994,"column":10},"end":{"line":3994,"column":19}},"1210":{"start":{"line":3995,"column":2},"end":{"line":3995,"column":26}},"1211":{"start":{"line":3996,"column":2},"end":{"line":4001,"column":3}},"1212":{"start":{"line":3997,"column":4},"end":{"line":3999,"column":7}},"1213":{"start":{"line":4002,"column":2},"end":{"line":4002,"column":35}},"1214":{"start":{"line":4003,"column":2},"end":{"line":4008,"column":3}},"1215":{"start":{"line":4004,"column":4},"end":{"line":4006,"column":7}},"1216":{"start":{"line":4009,"column":2},"end":{"line":4009,"column":27}},"1217":{"start":{"line":4010,"column":2},"end":{"line":4016,"column":3}},"1218":{"start":{"line":4011,"column":4},"end":{"line":4014,"column":46}},"1219":{"start":{"line":4017,"column":2},"end":{"line":4017,"column":27}},"1220":{"start":{"line":4018,"column":2},"end":{"line":4023,"column":3}},"1221":{"start":{"line":4019,"column":4},"end":{"line":4021,"column":7}},"1222":{"start":{"line":4031,"column":0},"end":{"line":4033,"column":2}},"1223":{"start":{"line":4032,"column":2},"end":{"line":4032,"column":96}},"1224":{"start":{"line":4037,"column":0},"end":{"line":4039,"column":2}},"1225":{"start":{"line":4038,"column":2},"end":{"line":4038,"column":50}},"1226":{"start":{"line":4046,"column":0},"end":{"line":4048,"column":2}},"1227":{"start":{"line":4047,"column":2},"end":{"line":4047,"column":100}},"1228":{"start":{"line":4056,"column":0},"end":{"line":4059,"column":2}},"1229":{"start":{"line":4057,"column":2},"end":{"line":4058,"column":27}},"1230":{"start":{"line":4069,"column":0},"end":{"line":4072,"column":2}},"1231":{"start":{"line":4070,"column":2},"end":{"line":4071,"column":27}},"1232":{"start":{"line":4076,"column":0},"end":{"line":4078,"column":2}},"1233":{"start":{"line":4077,"column":2},"end":{"line":4077,"column":46}},"1234":{"start":{"line":4085,"column":0},"end":{"line":4087,"column":2}},"1235":{"start":{"line":4086,"column":2},"end":{"line":4086,"column":61}},"1236":{"start":{"line":4090,"column":0},"end":{"line":4092,"column":2}},"1237":{"start":{"line":4091,"column":2},"end":{"line":4091,"column":25}},"1238":{"start":{"line":4099,"column":0},"end":{"line":4102,"column":2}},"1239":{"start":{"line":4100,"column":2},"end":{"line":4101,"column":69}},"1240":{"start":{"line":4106,"column":0},"end":{"line":4108,"column":2}},"1241":{"start":{"line":4107,"column":2},"end":{"line":4107,"column":55}},"1242":{"start":{"line":4116,"column":0},"end":{"line":4118,"column":2}},"1243":{"start":{"line":4117,"column":2},"end":{"line":4117,"column":95}},"1244":{"start":{"line":4121,"column":0},"end":{"line":4123,"column":2}},"1245":{"start":{"line":4122,"column":2},"end":{"line":4122,"column":22}},"1246":{"start":{"line":4132,"column":0},"end":{"line":4134,"column":2}},"1247":{"start":{"line":4133,"column":2},"end":{"line":4133,"column":82}},"1248":{"start":{"line":4138,"column":0},"end":{"line":4140,"column":2}},"1249":{"start":{"line":4139,"column":2},"end":{"line":4139,"column":53}},"1250":{"start":{"line":4154,"column":0},"end":{"line":4156,"column":2}},"1251":{"start":{"line":4155,"column":2},"end":{"line":4155,"column":102}},"1252":{"start":{"line":4157,"column":0},"end":{"line":4157,"column":59}},"1253":{"start":{"line":4158,"column":0},"end":{"line":4160,"column":1}},"1254":{"start":{"line":4159,"column":2},"end":{"line":4159,"column":78}},"1255":{"start":{"line":4166,"column":0},"end":{"line":4166,"column":52}},"1256":{"start":{"line":4170,"column":0},"end":{"line":4206,"column":1}},"1257":{"start":{"line":4181,"column":2},"end":{"line":4183,"column":4}},"1258":{"start":{"line":4182,"column":4},"end":{"line":4182,"column":77}},"1259":{"start":{"line":4195,"column":2},"end":{"line":4205,"column":4}},"1260":{"start":{"line":4196,"column":16},"end":{"line":4198,"column":41}},"1261":{"start":{"line":4201,"column":4},"end":{"line":4203,"column":5}},"1262":{"start":{"line":4202,"column":6},"end":{"line":4202,"column":37}},"1263":{"start":{"line":4204,"column":4},"end":{"line":4204,"column":15}},"1264":{"start":{"line":4214,"column":0},"end":{"line":4218,"column":2}},"1265":{"start":{"line":4215,"column":15},"end":{"line":4215,"column":43}},"1266":{"start":{"line":4216,"column":12},"end":{"line":4216,"column":47}},"1267":{"start":{"line":4217,"column":2},"end":{"line":4217,"column":80}},"1268":{"start":{"line":4228,"column":0},"end":{"line":4249,"column":2}},"1269":{"start":{"line":4229,"column":2},"end":{"line":4247,"column":3}},"1270":{"start":{"line":4230,"column":4},"end":{"line":4232,"column":5}},"1271":{"start":{"line":4231,"column":6},"end":{"line":4231,"column":12}},"1272":{"start":{"line":4233,"column":16},"end":{"line":4233,"column":39}},"1273":{"start":{"line":4234,"column":4},"end":{"line":4245,"column":15}},"1274":{"start":{"line":4236,"column":46},"end":{"line":4236,"column":64}},"1275":{"start":{"line":4237,"column":8},"end":{"line":4237,"column":29}},"1276":{"start":{"line":4238,"column":8},"end":{"line":4238,"column":14}},"1277":{"start":{"line":4240,"column":46},"end":{"line":4240,"column":64}},"1278":{"start":{"line":4241,"column":8},"end":{"line":4241,"column":31}},"1279":{"start":{"line":4242,"column":8},"end":{"line":4242,"column":14}},"1280":{"start":{"line":4244,"column":8},"end":{"line":4244,"column":27}},"1281":{"start":{"line":4245,"column":8},"end":{"line":4245,"column":14}},"1282":{"start":{"line":4248,"column":2},"end":{"line":4248,"column":13}},"1283":{"start":{"line":4256,"column":0},"end":{"line":4260,"column":2}},"1284":{"start":{"line":4257,"column":15},"end":{"line":4257,"column":38}},"1285":{"start":{"line":4258,"column":2},"end":{"line":4258,"column":70}},"1286":{"start":{"line":4259,"column":2},"end":{"line":4259,"column":34}},"1287":{"start":{"line":4270,"column":0},"end":{"line":4286,"column":2}},"1288":{"start":{"line":4271,"column":10},"end":{"line":4271,"column":19}},"1289":{"start":{"line":4272,"column":2},"end":{"line":4272,"column":35}},"1290":{"start":{"line":4273,"column":2},"end":{"line":4278,"column":3}},"1291":{"start":{"line":4274,"column":4},"end":{"line":4276,"column":7}},"1292":{"start":{"line":4279,"column":2},"end":{"line":4279,"column":33}},"1293":{"start":{"line":4280,"column":2},"end":{"line":4285,"column":3}},"1294":{"start":{"line":4281,"column":4},"end":{"line":4283,"column":7}},"1295":{"start":{"line":4293,"column":0},"end":{"line":4295,"column":2}},"1296":{"start":{"line":4294,"column":2},"end":{"line":4294,"column":100}},"1297":{"start":{"line":4303,"column":0},"end":{"line":4306,"column":2}},"1298":{"start":{"line":4304,"column":2},"end":{"line":4305,"column":27}},"1299":{"start":{"line":4316,"column":0},"end":{"line":4319,"column":2}},"1300":{"start":{"line":4317,"column":2},"end":{"line":4318,"column":27}},"1301":{"start":{"line":4323,"column":0},"end":{"line":4325,"column":2}},"1302":{"start":{"line":4324,"column":2},"end":{"line":4324,"column":46}},"1303":{"start":{"line":4332,"column":0},"end":{"line":4334,"column":2}},"1304":{"start":{"line":4333,"column":2},"end":{"line":4333,"column":61}},"1305":{"start":{"line":4337,"column":0},"end":{"line":4339,"column":2}},"1306":{"start":{"line":4338,"column":2},"end":{"line":4338,"column":25}},"1307":{"start":{"line":4346,"column":0},"end":{"line":4348,"column":2}},"1308":{"start":{"line":4347,"column":2},"end":{"line":4347,"column":92}},"1309":{"start":{"line":4356,"column":0},"end":{"line":4359,"column":2}},"1310":{"start":{"line":4357,"column":2},"end":{"line":4358,"column":25}},"1311":{"start":{"line":4369,"column":0},"end":{"line":4372,"column":2}},"1312":{"start":{"line":4370,"column":2},"end":{"line":4371,"column":25}},"1313":{"start":{"line":4376,"column":0},"end":{"line":4378,"column":2}},"1314":{"start":{"line":4377,"column":2},"end":{"line":4377,"column":51}},"1315":{"start":{"line":4392,"column":0},"end":{"line":4394,"column":2}},"1316":{"start":{"line":4393,"column":2},"end":{"line":4393,"column":103}},"1317":{"start":{"line":4395,"column":0},"end":{"line":4395,"column":60}},"1318":{"start":{"line":4396,"column":0},"end":{"line":4398,"column":1}},"1319":{"start":{"line":4397,"column":2},"end":{"line":4397,"column":80}},"1320":{"start":{"line":4404,"column":0},"end":{"line":4404,"column":53}},"1321":{"start":{"line":4408,"column":0},"end":{"line":4443,"column":1}},"1322":{"start":{"line":4419,"column":2},"end":{"line":4421,"column":4}},"1323":{"start":{"line":4420,"column":4},"end":{"line":4420,"column":78}},"1324":{"start":{"line":4433,"column":2},"end":{"line":4442,"column":4}},"1325":{"start":{"line":4434,"column":16},"end":{"line":4435,"column":45}},"1326":{"start":{"line":4438,"column":4},"end":{"line":4440,"column":5}},"1327":{"start":{"line":4439,"column":6},"end":{"line":4439,"column":37}},"1328":{"start":{"line":4441,"column":4},"end":{"line":4441,"column":15}},"1329":{"start":{"line":4451,"column":0},"end":{"line":4455,"column":2}},"1330":{"start":{"line":4452,"column":15},"end":{"line":4452,"column":43}},"1331":{"start":{"line":4453,"column":12},"end":{"line":4453,"column":48}},"1332":{"start":{"line":4454,"column":2},"end":{"line":4454,"column":81}},"1333":{"start":{"line":4465,"column":0},"end":{"line":4482,"column":2}},"1334":{"start":{"line":4466,"column":2},"end":{"line":4480,"column":3}},"1335":{"start":{"line":4467,"column":4},"end":{"line":4469,"column":5}},"1336":{"start":{"line":4468,"column":6},"end":{"line":4468,"column":12}},"1337":{"start":{"line":4470,"column":16},"end":{"line":4470,"column":39}},"1338":{"start":{"line":4471,"column":4},"end":{"line":4478,"column":15}},"1339":{"start":{"line":4473,"column":46},"end":{"line":4473,"column":64}},"1340":{"start":{"line":4474,"column":8},"end":{"line":4474,"column":29}},"1341":{"start":{"line":4475,"column":8},"end":{"line":4475,"column":14}},"1342":{"start":{"line":4477,"column":8},"end":{"line":4477,"column":27}},"1343":{"start":{"line":4478,"column":8},"end":{"line":4478,"column":14}},"1344":{"start":{"line":4481,"column":2},"end":{"line":4481,"column":13}},"1345":{"start":{"line":4489,"column":0},"end":{"line":4493,"column":2}},"1346":{"start":{"line":4490,"column":15},"end":{"line":4490,"column":38}},"1347":{"start":{"line":4491,"column":2},"end":{"line":4491,"column":71}},"1348":{"start":{"line":4492,"column":2},"end":{"line":4492,"column":34}},"1349":{"start":{"line":4503,"column":0},"end":{"line":4512,"column":2}},"1350":{"start":{"line":4504,"column":10},"end":{"line":4504,"column":19}},"1351":{"start":{"line":4505,"column":2},"end":{"line":4505,"column":35}},"1352":{"start":{"line":4506,"column":2},"end":{"line":4511,"column":3}},"1353":{"start":{"line":4507,"column":4},"end":{"line":4509,"column":7}},"1354":{"start":{"line":4519,"column":0},"end":{"line":4521,"column":2}},"1355":{"start":{"line":4520,"column":2},"end":{"line":4520,"column":100}},"1356":{"start":{"line":4529,"column":0},"end":{"line":4532,"column":2}},"1357":{"start":{"line":4530,"column":2},"end":{"line":4531,"column":27}},"1358":{"start":{"line":4542,"column":0},"end":{"line":4545,"column":2}},"1359":{"start":{"line":4543,"column":2},"end":{"line":4544,"column":27}},"1360":{"start":{"line":4549,"column":0},"end":{"line":4551,"column":2}},"1361":{"start":{"line":4550,"column":2},"end":{"line":4550,"column":46}},"1362":{"start":{"line":4558,"column":0},"end":{"line":4560,"column":2}},"1363":{"start":{"line":4559,"column":2},"end":{"line":4559,"column":61}},"1364":{"start":{"line":4563,"column":0},"end":{"line":4565,"column":2}},"1365":{"start":{"line":4564,"column":2},"end":{"line":4564,"column":25}},"1366":{"start":{"line":4579,"column":0},"end":{"line":4581,"column":2}},"1367":{"start":{"line":4580,"column":2},"end":{"line":4580,"column":61}},"1368":{"start":{"line":4582,"column":0},"end":{"line":4582,"column":61}},"1369":{"start":{"line":4583,"column":0},"end":{"line":4585,"column":1}},"1370":{"start":{"line":4584,"column":2},"end":{"line":4584,"column":82}},"1371":{"start":{"line":4588,"column":0},"end":{"line":4625,"column":1}},"1372":{"start":{"line":4599,"column":2},"end":{"line":4601,"column":4}},"1373":{"start":{"line":4600,"column":4},"end":{"line":4600,"column":79}},"1374":{"start":{"line":4613,"column":2},"end":{"line":4624,"column":4}},"1375":{"start":{"line":4614,"column":16},"end":{"line":4617,"column":63}},"1376":{"start":{"line":4620,"column":4},"end":{"line":4622,"column":5}},"1377":{"start":{"line":4621,"column":6},"end":{"line":4621,"column":37}},"1378":{"start":{"line":4623,"column":4},"end":{"line":4623,"column":15}},"1379":{"start":{"line":4633,"column":0},"end":{"line":4637,"column":2}},"1380":{"start":{"line":4634,"column":15},"end":{"line":4634,"column":43}},"1381":{"start":{"line":4635,"column":12},"end":{"line":4635,"column":49}},"1382":{"start":{"line":4636,"column":2},"end":{"line":4636,"column":82}},"1383":{"start":{"line":4647,"column":0},"end":{"line":4672,"column":2}},"1384":{"start":{"line":4648,"column":2},"end":{"line":4670,"column":3}},"1385":{"start":{"line":4649,"column":4},"end":{"line":4651,"column":5}},"1386":{"start":{"line":4650,"column":6},"end":{"line":4650,"column":12}},"1387":{"start":{"line":4652,"column":16},"end":{"line":4652,"column":39}},"1388":{"start":{"line":4653,"column":4},"end":{"line":4668,"column":15}},"1389":{"start":{"line":4655,"column":60},"end":{"line":4655,"column":77}},"1390":{"start":{"line":4656,"column":8},"end":{"line":4656,"column":29}},"1391":{"start":{"line":4657,"column":8},"end":{"line":4657,"column":14}},"1392":{"start":{"line":4659,"column":46},"end":{"line":4659,"column":64}},"1393":{"start":{"line":4660,"column":8},"end":{"line":4660,"column":35}},"1394":{"start":{"line":4661,"column":8},"end":{"line":4661,"column":14}},"1395":{"start":{"line":4663,"column":41},"end":{"line":4663,"column":60}},"1396":{"start":{"line":4664,"column":8},"end":{"line":4664,"column":33}},"1397":{"start":{"line":4665,"column":8},"end":{"line":4665,"column":14}},"1398":{"start":{"line":4667,"column":8},"end":{"line":4667,"column":27}},"1399":{"start":{"line":4668,"column":8},"end":{"line":4668,"column":14}},"1400":{"start":{"line":4671,"column":2},"end":{"line":4671,"column":13}},"1401":{"start":{"line":4679,"column":0},"end":{"line":4683,"column":2}},"1402":{"start":{"line":4680,"column":15},"end":{"line":4680,"column":38}},"1403":{"start":{"line":4681,"column":2},"end":{"line":4681,"column":72}},"1404":{"start":{"line":4682,"column":2},"end":{"line":4682,"column":34}},"1405":{"start":{"line":4693,"column":0},"end":{"line":4716,"column":2}},"1406":{"start":{"line":4694,"column":10},"end":{"line":4694,"column":19}},"1407":{"start":{"line":4695,"column":2},"end":{"line":4695,"column":26}},"1408":{"start":{"line":4696,"column":2},"end":{"line":4701,"column":3}},"1409":{"start":{"line":4697,"column":4},"end":{"line":4699,"column":7}},"1410":{"start":{"line":4702,"column":2},"end":{"line":4702,"column":37}},"1411":{"start":{"line":4703,"column":2},"end":{"line":4708,"column":3}},"1412":{"start":{"line":4704,"column":4},"end":{"line":4706,"column":7}},"1413":{"start":{"line":4709,"column":2},"end":{"line":4709,"column":30}},"1414":{"start":{"line":4710,"column":2},"end":{"line":4715,"column":3}},"1415":{"start":{"line":4711,"column":4},"end":{"line":4713,"column":7}},"1416":{"start":{"line":4723,"column":0},"end":{"line":4725,"column":2}},"1417":{"start":{"line":4724,"column":2},"end":{"line":4724,"column":96}},"1418":{"start":{"line":4729,"column":0},"end":{"line":4731,"column":2}},"1419":{"start":{"line":4730,"column":2},"end":{"line":4730,"column":50}},"1420":{"start":{"line":4738,"column":0},"end":{"line":4740,"column":2}},"1421":{"start":{"line":4739,"column":2},"end":{"line":4739,"column":92}},"1422":{"start":{"line":4748,"column":0},"end":{"line":4751,"column":2}},"1423":{"start":{"line":4749,"column":2},"end":{"line":4750,"column":29}},"1424":{"start":{"line":4761,"column":0},"end":{"line":4764,"column":2}},"1425":{"start":{"line":4762,"column":2},"end":{"line":4763,"column":29}},"1426":{"start":{"line":4768,"column":0},"end":{"line":4770,"column":2}},"1427":{"start":{"line":4769,"column":2},"end":{"line":4769,"column":51}},"1428":{"start":{"line":4777,"column":0},"end":{"line":4779,"column":2}},"1429":{"start":{"line":4778,"column":2},"end":{"line":4778,"column":77}},"1430":{"start":{"line":4783,"column":0},"end":{"line":4785,"column":2}},"1431":{"start":{"line":4784,"column":2},"end":{"line":4784,"column":49}},"1432":{"start":{"line":4799,"column":0},"end":{"line":4801,"column":2}},"1433":{"start":{"line":4800,"column":2},"end":{"line":4800,"column":61}},"1434":{"start":{"line":4802,"column":0},"end":{"line":4802,"column":53}},"1435":{"start":{"line":4803,"column":0},"end":{"line":4805,"column":1}},"1436":{"start":{"line":4804,"column":2},"end":{"line":4804,"column":66}},"1437":{"start":{"line":4808,"column":0},"end":{"line":4843,"column":1}},"1438":{"start":{"line":4819,"column":2},"end":{"line":4821,"column":4}},"1439":{"start":{"line":4820,"column":4},"end":{"line":4820,"column":71}},"1440":{"start":{"line":4833,"column":2},"end":{"line":4842,"column":4}},"1441":{"start":{"line":4834,"column":16},"end":{"line":4835,"column":60}},"1442":{"start":{"line":4838,"column":4},"end":{"line":4840,"column":5}},"1443":{"start":{"line":4839,"column":6},"end":{"line":4839,"column":37}},"1444":{"start":{"line":4841,"column":4},"end":{"line":4841,"column":15}},"1445":{"start":{"line":4851,"column":0},"end":{"line":4855,"column":2}},"1446":{"start":{"line":4852,"column":15},"end":{"line":4852,"column":43}},"1447":{"start":{"line":4853,"column":12},"end":{"line":4853,"column":41}},"1448":{"start":{"line":4854,"column":2},"end":{"line":4854,"column":74}},"1449":{"start":{"line":4865,"column":0},"end":{"line":4882,"column":2}},"1450":{"start":{"line":4866,"column":2},"end":{"line":4880,"column":3}},"1451":{"start":{"line":4867,"column":4},"end":{"line":4869,"column":5}},"1452":{"start":{"line":4868,"column":6},"end":{"line":4868,"column":12}},"1453":{"start":{"line":4870,"column":16},"end":{"line":4870,"column":39}},"1454":{"start":{"line":4871,"column":4},"end":{"line":4878,"column":15}},"1455":{"start":{"line":4873,"column":41},"end":{"line":4873,"column":60}},"1456":{"start":{"line":4874,"column":8},"end":{"line":4874,"column":30}},"1457":{"start":{"line":4875,"column":8},"end":{"line":4875,"column":14}},"1458":{"start":{"line":4877,"column":8},"end":{"line":4877,"column":27}},"1459":{"start":{"line":4878,"column":8},"end":{"line":4878,"column":14}},"1460":{"start":{"line":4881,"column":2},"end":{"line":4881,"column":13}},"1461":{"start":{"line":4889,"column":0},"end":{"line":4893,"column":2}},"1462":{"start":{"line":4890,"column":15},"end":{"line":4890,"column":38}},"1463":{"start":{"line":4891,"column":2},"end":{"line":4891,"column":64}},"1464":{"start":{"line":4892,"column":2},"end":{"line":4892,"column":34}},"1465":{"start":{"line":4903,"column":0},"end":{"line":4912,"column":2}},"1466":{"start":{"line":4904,"column":10},"end":{"line":4904,"column":19}},"1467":{"start":{"line":4905,"column":2},"end":{"line":4905,"column":27}},"1468":{"start":{"line":4906,"column":2},"end":{"line":4911,"column":3}},"1469":{"start":{"line":4907,"column":4},"end":{"line":4909,"column":7}},"1470":{"start":{"line":4919,"column":0},"end":{"line":4921,"column":2}},"1471":{"start":{"line":4920,"column":2},"end":{"line":4920,"column":77}},"1472":{"start":{"line":4925,"column":0},"end":{"line":4927,"column":2}},"1473":{"start":{"line":4926,"column":2},"end":{"line":4926,"column":49}},"1474":{"start":{"line":4941,"column":0},"end":{"line":4943,"column":2}},"1475":{"start":{"line":4942,"column":2},"end":{"line":4942,"column":61}},"1476":{"start":{"line":4944,"column":0},"end":{"line":4944,"column":61}},"1477":{"start":{"line":4945,"column":0},"end":{"line":4947,"column":1}},"1478":{"start":{"line":4946,"column":2},"end":{"line":4946,"column":82}},"1479":{"start":{"line":4950,"column":0},"end":{"line":4986,"column":1}},"1480":{"start":{"line":4961,"column":2},"end":{"line":4963,"column":4}},"1481":{"start":{"line":4962,"column":4},"end":{"line":4962,"column":79}},"1482":{"start":{"line":4975,"column":2},"end":{"line":4985,"column":4}},"1483":{"start":{"line":4976,"column":16},"end":{"line":4978,"column":43}},"1484":{"start":{"line":4981,"column":4},"end":{"line":4983,"column":5}},"1485":{"start":{"line":4982,"column":6},"end":{"line":4982,"column":37}},"1486":{"start":{"line":4984,"column":4},"end":{"line":4984,"column":15}},"1487":{"start":{"line":4994,"column":0},"end":{"line":4998,"column":2}},"1488":{"start":{"line":4995,"column":15},"end":{"line":4995,"column":43}},"1489":{"start":{"line":4996,"column":12},"end":{"line":4996,"column":49}},"1490":{"start":{"line":4997,"column":2},"end":{"line":4997,"column":82}},"1491":{"start":{"line":5008,"column":0},"end":{"line":5029,"column":2}},"1492":{"start":{"line":5009,"column":2},"end":{"line":5027,"column":3}},"1493":{"start":{"line":5010,"column":4},"end":{"line":5012,"column":5}},"1494":{"start":{"line":5011,"column":6},"end":{"line":5011,"column":12}},"1495":{"start":{"line":5013,"column":16},"end":{"line":5013,"column":39}},"1496":{"start":{"line":5014,"column":4},"end":{"line":5025,"column":15}},"1497":{"start":{"line":5016,"column":60},"end":{"line":5016,"column":77}},"1498":{"start":{"line":5017,"column":8},"end":{"line":5017,"column":29}},"1499":{"start":{"line":5018,"column":8},"end":{"line":5018,"column":14}},"1500":{"start":{"line":5020,"column":46},"end":{"line":5020,"column":64}},"1501":{"start":{"line":5021,"column":8},"end":{"line":5021,"column":32}},"1502":{"start":{"line":5022,"column":8},"end":{"line":5022,"column":14}},"1503":{"start":{"line":5024,"column":8},"end":{"line":5024,"column":27}},"1504":{"start":{"line":5025,"column":8},"end":{"line":5025,"column":14}},"1505":{"start":{"line":5028,"column":2},"end":{"line":5028,"column":13}},"1506":{"start":{"line":5036,"column":0},"end":{"line":5040,"column":2}},"1507":{"start":{"line":5037,"column":15},"end":{"line":5037,"column":38}},"1508":{"start":{"line":5038,"column":2},"end":{"line":5038,"column":72}},"1509":{"start":{"line":5039,"column":2},"end":{"line":5039,"column":34}},"1510":{"start":{"line":5050,"column":0},"end":{"line":5066,"column":2}},"1511":{"start":{"line":5051,"column":10},"end":{"line":5051,"column":19}},"1512":{"start":{"line":5052,"column":2},"end":{"line":5052,"column":26}},"1513":{"start":{"line":5053,"column":2},"end":{"line":5058,"column":3}},"1514":{"start":{"line":5054,"column":4},"end":{"line":5056,"column":7}},"1515":{"start":{"line":5059,"column":2},"end":{"line":5059,"column":34}},"1516":{"start":{"line":5060,"column":2},"end":{"line":5065,"column":3}},"1517":{"start":{"line":5061,"column":4},"end":{"line":5063,"column":7}},"1518":{"start":{"line":5073,"column":0},"end":{"line":5075,"column":2}},"1519":{"start":{"line":5074,"column":2},"end":{"line":5074,"column":96}},"1520":{"start":{"line":5079,"column":0},"end":{"line":5081,"column":2}},"1521":{"start":{"line":5080,"column":2},"end":{"line":5080,"column":50}},"1522":{"start":{"line":5088,"column":0},"end":{"line":5090,"column":2}},"1523":{"start":{"line":5089,"column":2},"end":{"line":5089,"column":92}},"1524":{"start":{"line":5098,"column":0},"end":{"line":5101,"column":2}},"1525":{"start":{"line":5099,"column":2},"end":{"line":5100,"column":26}},"1526":{"start":{"line":5111,"column":0},"end":{"line":5114,"column":2}},"1527":{"start":{"line":5112,"column":2},"end":{"line":5113,"column":26}},"1528":{"start":{"line":5118,"column":0},"end":{"line":5120,"column":2}},"1529":{"start":{"line":5119,"column":2},"end":{"line":5119,"column":51}},"1530":{"start":{"line":5134,"column":0},"end":{"line":5136,"column":2}},"1531":{"start":{"line":5135,"column":2},"end":{"line":5135,"column":61}},"1532":{"start":{"line":5137,"column":0},"end":{"line":5137,"column":58}},"1533":{"start":{"line":5138,"column":0},"end":{"line":5140,"column":1}},"1534":{"start":{"line":5139,"column":2},"end":{"line":5139,"column":76}},"1535":{"start":{"line":5143,"column":0},"end":{"line":5180,"column":1}},"1536":{"start":{"line":5154,"column":2},"end":{"line":5156,"column":4}},"1537":{"start":{"line":5155,"column":4},"end":{"line":5155,"column":76}},"1538":{"start":{"line":5168,"column":2},"end":{"line":5179,"column":4}},"1539":{"start":{"line":5169,"column":16},"end":{"line":5172,"column":57}},"1540":{"start":{"line":5175,"column":4},"end":{"line":5177,"column":5}},"1541":{"start":{"line":5176,"column":6},"end":{"line":5176,"column":37}},"1542":{"start":{"line":5178,"column":4},"end":{"line":5178,"column":15}},"1543":{"start":{"line":5188,"column":0},"end":{"line":5192,"column":2}},"1544":{"start":{"line":5189,"column":15},"end":{"line":5189,"column":43}},"1545":{"start":{"line":5190,"column":12},"end":{"line":5190,"column":46}},"1546":{"start":{"line":5191,"column":2},"end":{"line":5191,"column":79}},"1547":{"start":{"line":5202,"column":0},"end":{"line":5227,"column":2}},"1548":{"start":{"line":5203,"column":2},"end":{"line":5225,"column":3}},"1549":{"start":{"line":5204,"column":4},"end":{"line":5206,"column":5}},"1550":{"start":{"line":5205,"column":6},"end":{"line":5205,"column":12}},"1551":{"start":{"line":5207,"column":16},"end":{"line":5207,"column":39}},"1552":{"start":{"line":5208,"column":4},"end":{"line":5223,"column":15}},"1553":{"start":{"line":5210,"column":46},"end":{"line":5210,"column":64}},"1554":{"start":{"line":5211,"column":8},"end":{"line":5211,"column":31}},"1555":{"start":{"line":5212,"column":8},"end":{"line":5212,"column":14}},"1556":{"start":{"line":5214,"column":41},"end":{"line":5214,"column":60}},"1557":{"start":{"line":5215,"column":8},"end":{"line":5215,"column":33}},"1558":{"start":{"line":5216,"column":8},"end":{"line":5216,"column":14}},"1559":{"start":{"line":5218,"column":41},"end":{"line":5218,"column":60}},"1560":{"start":{"line":5219,"column":8},"end":{"line":5219,"column":27}},"1561":{"start":{"line":5220,"column":8},"end":{"line":5220,"column":14}},"1562":{"start":{"line":5222,"column":8},"end":{"line":5222,"column":27}},"1563":{"start":{"line":5223,"column":8},"end":{"line":5223,"column":14}},"1564":{"start":{"line":5226,"column":2},"end":{"line":5226,"column":13}},"1565":{"start":{"line":5234,"column":0},"end":{"line":5238,"column":2}},"1566":{"start":{"line":5235,"column":15},"end":{"line":5235,"column":38}},"1567":{"start":{"line":5236,"column":2},"end":{"line":5236,"column":69}},"1568":{"start":{"line":5237,"column":2},"end":{"line":5237,"column":34}},"1569":{"start":{"line":5248,"column":0},"end":{"line":5271,"column":2}},"1570":{"start":{"line":5249,"column":10},"end":{"line":5249,"column":19}},"1571":{"start":{"line":5250,"column":2},"end":{"line":5250,"column":33}},"1572":{"start":{"line":5251,"column":2},"end":{"line":5256,"column":3}},"1573":{"start":{"line":5252,"column":4},"end":{"line":5254,"column":7}},"1574":{"start":{"line":5257,"column":2},"end":{"line":5257,"column":30}},"1575":{"start":{"line":5258,"column":2},"end":{"line":5263,"column":3}},"1576":{"start":{"line":5259,"column":4},"end":{"line":5261,"column":7}},"1577":{"start":{"line":5264,"column":2},"end":{"line":5264,"column":24}},"1578":{"start":{"line":5265,"column":2},"end":{"line":5270,"column":3}},"1579":{"start":{"line":5266,"column":4},"end":{"line":5268,"column":7}},"1580":{"start":{"line":5278,"column":0},"end":{"line":5280,"column":2}},"1581":{"start":{"line":5279,"column":2},"end":{"line":5279,"column":92}},"1582":{"start":{"line":5288,"column":0},"end":{"line":5291,"column":2}},"1583":{"start":{"line":5289,"column":2},"end":{"line":5290,"column":25}},"1584":{"start":{"line":5301,"column":0},"end":{"line":5304,"column":2}},"1585":{"start":{"line":5302,"column":2},"end":{"line":5303,"column":25}},"1586":{"start":{"line":5308,"column":0},"end":{"line":5310,"column":2}},"1587":{"start":{"line":5309,"column":2},"end":{"line":5309,"column":51}},"1588":{"start":{"line":5317,"column":0},"end":{"line":5319,"column":2}},"1589":{"start":{"line":5318,"column":2},"end":{"line":5318,"column":77}},"1590":{"start":{"line":5323,"column":0},"end":{"line":5325,"column":2}},"1591":{"start":{"line":5324,"column":2},"end":{"line":5324,"column":49}},"1592":{"start":{"line":5332,"column":0},"end":{"line":5334,"column":2}},"1593":{"start":{"line":5333,"column":2},"end":{"line":5333,"column":77}},"1594":{"start":{"line":5338,"column":0},"end":{"line":5340,"column":2}},"1595":{"start":{"line":5339,"column":2},"end":{"line":5339,"column":49}},"1596":{"start":{"line":5354,"column":0},"end":{"line":5356,"column":2}},"1597":{"start":{"line":5355,"column":2},"end":{"line":5355,"column":102}},"1598":{"start":{"line":5357,"column":0},"end":{"line":5357,"column":59}},"1599":{"start":{"line":5358,"column":0},"end":{"line":5360,"column":1}},"1600":{"start":{"line":5359,"column":2},"end":{"line":5359,"column":78}},"1601":{"start":{"line":5366,"column":0},"end":{"line":5366,"column":52}},"1602":{"start":{"line":5370,"column":0},"end":{"line":5407,"column":1}},"1603":{"start":{"line":5381,"column":2},"end":{"line":5383,"column":4}},"1604":{"start":{"line":5382,"column":4},"end":{"line":5382,"column":77}},"1605":{"start":{"line":5395,"column":2},"end":{"line":5406,"column":4}},"1606":{"start":{"line":5396,"column":16},"end":{"line":5399,"column":64}},"1607":{"start":{"line":5402,"column":4},"end":{"line":5404,"column":5}},"1608":{"start":{"line":5403,"column":6},"end":{"line":5403,"column":37}},"1609":{"start":{"line":5405,"column":4},"end":{"line":5405,"column":15}},"1610":{"start":{"line":5415,"column":0},"end":{"line":5419,"column":2}},"1611":{"start":{"line":5416,"column":15},"end":{"line":5416,"column":43}},"1612":{"start":{"line":5417,"column":12},"end":{"line":5417,"column":47}},"1613":{"start":{"line":5418,"column":2},"end":{"line":5418,"column":80}},"1614":{"start":{"line":5429,"column":0},"end":{"line":5454,"column":2}},"1615":{"start":{"line":5430,"column":2},"end":{"line":5452,"column":3}},"1616":{"start":{"line":5431,"column":4},"end":{"line":5433,"column":5}},"1617":{"start":{"line":5432,"column":6},"end":{"line":5432,"column":12}},"1618":{"start":{"line":5434,"column":16},"end":{"line":5434,"column":39}},"1619":{"start":{"line":5435,"column":4},"end":{"line":5450,"column":15}},"1620":{"start":{"line":5437,"column":60},"end":{"line":5437,"column":77}},"1621":{"start":{"line":5438,"column":8},"end":{"line":5438,"column":29}},"1622":{"start":{"line":5439,"column":8},"end":{"line":5439,"column":14}},"1623":{"start":{"line":5441,"column":46},"end":{"line":5441,"column":64}},"1624":{"start":{"line":5442,"column":8},"end":{"line":5442,"column":29}},"1625":{"start":{"line":5443,"column":8},"end":{"line":5443,"column":14}},"1626":{"start":{"line":5445,"column":42},"end":{"line":5445,"column":59}},"1627":{"start":{"line":5446,"column":8},"end":{"line":5446,"column":30}},"1628":{"start":{"line":5447,"column":8},"end":{"line":5447,"column":14}},"1629":{"start":{"line":5449,"column":8},"end":{"line":5449,"column":27}},"1630":{"start":{"line":5450,"column":8},"end":{"line":5450,"column":14}},"1631":{"start":{"line":5453,"column":2},"end":{"line":5453,"column":13}},"1632":{"start":{"line":5461,"column":0},"end":{"line":5465,"column":2}},"1633":{"start":{"line":5462,"column":15},"end":{"line":5462,"column":38}},"1634":{"start":{"line":5463,"column":2},"end":{"line":5463,"column":70}},"1635":{"start":{"line":5464,"column":2},"end":{"line":5464,"column":34}},"1636":{"start":{"line":5475,"column":0},"end":{"line":5498,"column":2}},"1637":{"start":{"line":5476,"column":10},"end":{"line":5476,"column":19}},"1638":{"start":{"line":5477,"column":2},"end":{"line":5477,"column":26}},"1639":{"start":{"line":5478,"column":2},"end":{"line":5483,"column":3}},"1640":{"start":{"line":5479,"column":4},"end":{"line":5481,"column":7}},"1641":{"start":{"line":5484,"column":2},"end":{"line":5484,"column":35}},"1642":{"start":{"line":5485,"column":2},"end":{"line":5490,"column":3}},"1643":{"start":{"line":5486,"column":4},"end":{"line":5488,"column":7}},"1644":{"start":{"line":5491,"column":2},"end":{"line":5491,"column":27}},"1645":{"start":{"line":5492,"column":2},"end":{"line":5497,"column":3}},"1646":{"start":{"line":5493,"column":4},"end":{"line":5495,"column":7}},"1647":{"start":{"line":5505,"column":0},"end":{"line":5507,"column":2}},"1648":{"start":{"line":5506,"column":2},"end":{"line":5506,"column":96}},"1649":{"start":{"line":5511,"column":0},"end":{"line":5513,"column":2}},"1650":{"start":{"line":5512,"column":2},"end":{"line":5512,"column":50}},"1651":{"start":{"line":5520,"column":0},"end":{"line":5522,"column":2}},"1652":{"start":{"line":5521,"column":2},"end":{"line":5521,"column":100}},"1653":{"start":{"line":5530,"column":0},"end":{"line":5533,"column":2}},"1654":{"start":{"line":5531,"column":2},"end":{"line":5532,"column":27}},"1655":{"start":{"line":5543,"column":0},"end":{"line":5546,"column":2}},"1656":{"start":{"line":5544,"column":2},"end":{"line":5545,"column":27}},"1657":{"start":{"line":5550,"column":0},"end":{"line":5552,"column":2}},"1658":{"start":{"line":5551,"column":2},"end":{"line":5551,"column":46}},"1659":{"start":{"line":5559,"column":0},"end":{"line":5561,"column":2}},"1660":{"start":{"line":5560,"column":2},"end":{"line":5560,"column":61}},"1661":{"start":{"line":5564,"column":0},"end":{"line":5566,"column":2}},"1662":{"start":{"line":5565,"column":2},"end":{"line":5565,"column":25}},"1663":{"start":{"line":5575,"column":0},"end":{"line":5577,"column":2}},"1664":{"start":{"line":5576,"column":2},"end":{"line":5576,"column":82}},"1665":{"start":{"line":5581,"column":0},"end":{"line":5583,"column":2}},"1666":{"start":{"line":5582,"column":2},"end":{"line":5582,"column":53}},"1667":{"start":{"line":5597,"column":0},"end":{"line":5599,"column":2}},"1668":{"start":{"line":5598,"column":2},"end":{"line":5598,"column":61}},"1669":{"start":{"line":5600,"column":0},"end":{"line":5600,"column":65}},"1670":{"start":{"line":5601,"column":0},"end":{"line":5603,"column":1}},"1671":{"start":{"line":5602,"column":2},"end":{"line":5602,"column":90}},"1672":{"start":{"line":5606,"column":0},"end":{"line":5641,"column":1}},"1673":{"start":{"line":5617,"column":2},"end":{"line":5619,"column":4}},"1674":{"start":{"line":5618,"column":4},"end":{"line":5618,"column":83}},"1675":{"start":{"line":5631,"column":2},"end":{"line":5640,"column":4}},"1676":{"start":{"line":5632,"column":16},"end":{"line":5632,"column":18}},"1677":{"start":{"line":5636,"column":4},"end":{"line":5638,"column":5}},"1678":{"start":{"line":5637,"column":6},"end":{"line":5637,"column":37}},"1679":{"start":{"line":5639,"column":4},"end":{"line":5639,"column":15}},"1680":{"start":{"line":5649,"column":0},"end":{"line":5653,"column":2}},"1681":{"start":{"line":5650,"column":15},"end":{"line":5650,"column":43}},"1682":{"start":{"line":5651,"column":12},"end":{"line":5651,"column":53}},"1683":{"start":{"line":5652,"column":2},"end":{"line":5652,"column":86}},"1684":{"start":{"line":5663,"column":0},"end":{"line":5676,"column":2}},"1685":{"start":{"line":5664,"column":2},"end":{"line":5674,"column":3}},"1686":{"start":{"line":5665,"column":4},"end":{"line":5667,"column":5}},"1687":{"start":{"line":5666,"column":6},"end":{"line":5666,"column":12}},"1688":{"start":{"line":5668,"column":16},"end":{"line":5668,"column":39}},"1689":{"start":{"line":5669,"column":4},"end":{"line":5672,"column":15}},"1690":{"start":{"line":5671,"column":8},"end":{"line":5671,"column":27}},"1691":{"start":{"line":5672,"column":8},"end":{"line":5672,"column":14}},"1692":{"start":{"line":5675,"column":2},"end":{"line":5675,"column":13}},"1693":{"start":{"line":5683,"column":0},"end":{"line":5687,"column":2}},"1694":{"start":{"line":5684,"column":15},"end":{"line":5684,"column":38}},"1695":{"start":{"line":5685,"column":2},"end":{"line":5685,"column":76}},"1696":{"start":{"line":5686,"column":2},"end":{"line":5686,"column":34}},"1697":{"start":{"line":5697,"column":0},"end":{"line":5699,"column":2}},"1698":{"start":{"line":5698,"column":10},"end":{"line":5698,"column":19}},"1699":{"start":{"line":5713,"column":0},"end":{"line":5715,"column":2}},"1700":{"start":{"line":5714,"column":2},"end":{"line":5714,"column":61}},"1701":{"start":{"line":5716,"column":0},"end":{"line":5716,"column":66}},"1702":{"start":{"line":5717,"column":0},"end":{"line":5719,"column":1}},"1703":{"start":{"line":5718,"column":2},"end":{"line":5718,"column":92}},"1704":{"start":{"line":5722,"column":0},"end":{"line":5758,"column":1}},"1705":{"start":{"line":5733,"column":2},"end":{"line":5735,"column":4}},"1706":{"start":{"line":5734,"column":4},"end":{"line":5734,"column":84}},"1707":{"start":{"line":5747,"column":2},"end":{"line":5757,"column":4}},"1708":{"start":{"line":5748,"column":16},"end":{"line":5750,"column":104}},"1709":{"start":{"line":5753,"column":4},"end":{"line":5755,"column":5}},"1710":{"start":{"line":5754,"column":6},"end":{"line":5754,"column":37}},"1711":{"start":{"line":5756,"column":4},"end":{"line":5756,"column":15}},"1712":{"start":{"line":5766,"column":0},"end":{"line":5770,"column":2}},"1713":{"start":{"line":5767,"column":15},"end":{"line":5767,"column":43}},"1714":{"start":{"line":5768,"column":12},"end":{"line":5768,"column":54}},"1715":{"start":{"line":5769,"column":2},"end":{"line":5769,"column":87}},"1716":{"start":{"line":5780,"column":0},"end":{"line":5802,"column":2}},"1717":{"start":{"line":5781,"column":2},"end":{"line":5800,"column":3}},"1718":{"start":{"line":5782,"column":4},"end":{"line":5784,"column":5}},"1719":{"start":{"line":5783,"column":6},"end":{"line":5783,"column":12}},"1720":{"start":{"line":5785,"column":16},"end":{"line":5785,"column":39}},"1721":{"start":{"line":5786,"column":4},"end":{"line":5798,"column":15}},"1722":{"start":{"line":5788,"column":60},"end":{"line":5788,"column":77}},"1723":{"start":{"line":5789,"column":8},"end":{"line":5789,"column":29}},"1724":{"start":{"line":5790,"column":8},"end":{"line":5790,"column":14}},"1725":{"start":{"line":5792,"column":20},"end":{"line":5792,"column":50}},"1726":{"start":{"line":5793,"column":8},"end":{"line":5793,"column":88}},"1727":{"start":{"line":5794,"column":8},"end":{"line":5794,"column":34}},"1728":{"start":{"line":5795,"column":8},"end":{"line":5795,"column":14}},"1729":{"start":{"line":5797,"column":8},"end":{"line":5797,"column":27}},"1730":{"start":{"line":5798,"column":8},"end":{"line":5798,"column":14}},"1731":{"start":{"line":5801,"column":2},"end":{"line":5801,"column":13}},"1732":{"start":{"line":5809,"column":0},"end":{"line":5813,"column":2}},"1733":{"start":{"line":5810,"column":15},"end":{"line":5810,"column":38}},"1734":{"start":{"line":5811,"column":2},"end":{"line":5811,"column":77}},"1735":{"start":{"line":5812,"column":2},"end":{"line":5812,"column":34}},"1736":{"start":{"line":5823,"column":0},"end":{"line":5840,"column":2}},"1737":{"start":{"line":5824,"column":10},"end":{"line":5824,"column":19}},"1738":{"start":{"line":5825,"column":2},"end":{"line":5825,"column":26}},"1739":{"start":{"line":5826,"column":2},"end":{"line":5831,"column":3}},"1740":{"start":{"line":5827,"column":4},"end":{"line":5829,"column":7}},"1741":{"start":{"line":5832,"column":2},"end":{"line":5832,"column":31}},"1742":{"start":{"line":5833,"column":2},"end":{"line":5839,"column":3}},"1743":{"start":{"line":5834,"column":4},"end":{"line":5837,"column":54}},"1744":{"start":{"line":5847,"column":0},"end":{"line":5849,"column":2}},"1745":{"start":{"line":5848,"column":2},"end":{"line":5848,"column":96}},"1746":{"start":{"line":5853,"column":0},"end":{"line":5855,"column":2}},"1747":{"start":{"line":5854,"column":2},"end":{"line":5854,"column":50}},"1748":{"start":{"line":5862,"column":0},"end":{"line":5865,"column":2}},"1749":{"start":{"line":5863,"column":2},"end":{"line":5864,"column":69}},"1750":{"start":{"line":5869,"column":0},"end":{"line":5871,"column":2}},"1751":{"start":{"line":5870,"column":2},"end":{"line":5870,"column":47}},"1752":{"start":{"line":5874,"column":0},"end":{"line":5876,"column":2}},"1753":{"start":{"line":5875,"column":2},"end":{"line":5875,"column":33}},"1754":{"start":{"line":5883,"column":0},"end":{"line":5885,"column":2}},"1755":{"start":{"line":5884,"column":2},"end":{"line":5884,"column":48}},"1756":{"start":{"line":5899,"column":0},"end":{"line":5901,"column":2}},"1757":{"start":{"line":5900,"column":2},"end":{"line":5900,"column":61}},"1758":{"start":{"line":5902,"column":0},"end":{"line":5902,"column":66}},"1759":{"start":{"line":5903,"column":0},"end":{"line":5905,"column":1}},"1760":{"start":{"line":5904,"column":2},"end":{"line":5904,"column":92}},"1761":{"start":{"line":5908,"column":0},"end":{"line":5943,"column":1}},"1762":{"start":{"line":5919,"column":2},"end":{"line":5921,"column":4}},"1763":{"start":{"line":5920,"column":4},"end":{"line":5920,"column":84}},"1764":{"start":{"line":5933,"column":2},"end":{"line":5942,"column":4}},"1765":{"start":{"line":5934,"column":16},"end":{"line":5935,"column":104}},"1766":{"start":{"line":5938,"column":4},"end":{"line":5940,"column":5}},"1767":{"start":{"line":5939,"column":6},"end":{"line":5939,"column":37}},"1768":{"start":{"line":5941,"column":4},"end":{"line":5941,"column":15}},"1769":{"start":{"line":5951,"column":0},"end":{"line":5955,"column":2}},"1770":{"start":{"line":5952,"column":15},"end":{"line":5952,"column":43}},"1771":{"start":{"line":5953,"column":12},"end":{"line":5953,"column":54}},"1772":{"start":{"line":5954,"column":2},"end":{"line":5954,"column":87}},"1773":{"start":{"line":5965,"column":0},"end":{"line":5983,"column":2}},"1774":{"start":{"line":5966,"column":2},"end":{"line":5981,"column":3}},"1775":{"start":{"line":5967,"column":4},"end":{"line":5969,"column":5}},"1776":{"start":{"line":5968,"column":6},"end":{"line":5968,"column":12}},"1777":{"start":{"line":5970,"column":16},"end":{"line":5970,"column":39}},"1778":{"start":{"line":5971,"column":4},"end":{"line":5979,"column":15}},"1779":{"start":{"line":5973,"column":20},"end":{"line":5973,"column":50}},"1780":{"start":{"line":5974,"column":8},"end":{"line":5974,"column":88}},"1781":{"start":{"line":5975,"column":8},"end":{"line":5975,"column":34}},"1782":{"start":{"line":5976,"column":8},"end":{"line":5976,"column":14}},"1783":{"start":{"line":5978,"column":8},"end":{"line":5978,"column":27}},"1784":{"start":{"line":5979,"column":8},"end":{"line":5979,"column":14}},"1785":{"start":{"line":5982,"column":2},"end":{"line":5982,"column":13}},"1786":{"start":{"line":5990,"column":0},"end":{"line":5994,"column":2}},"1787":{"start":{"line":5991,"column":15},"end":{"line":5991,"column":38}},"1788":{"start":{"line":5992,"column":2},"end":{"line":5992,"column":77}},"1789":{"start":{"line":5993,"column":2},"end":{"line":5993,"column":34}},"1790":{"start":{"line":6004,"column":0},"end":{"line":6014,"column":2}},"1791":{"start":{"line":6005,"column":10},"end":{"line":6005,"column":19}},"1792":{"start":{"line":6006,"column":2},"end":{"line":6006,"column":31}},"1793":{"start":{"line":6007,"column":2},"end":{"line":6013,"column":3}},"1794":{"start":{"line":6008,"column":4},"end":{"line":6011,"column":54}},"1795":{"start":{"line":6021,"column":0},"end":{"line":6024,"column":2}},"1796":{"start":{"line":6022,"column":2},"end":{"line":6023,"column":69}},"1797":{"start":{"line":6028,"column":0},"end":{"line":6030,"column":2}},"1798":{"start":{"line":6029,"column":2},"end":{"line":6029,"column":47}},"1799":{"start":{"line":6033,"column":0},"end":{"line":6035,"column":2}},"1800":{"start":{"line":6034,"column":2},"end":{"line":6034,"column":33}},"1801":{"start":{"line":6042,"column":0},"end":{"line":6044,"column":2}},"1802":{"start":{"line":6043,"column":2},"end":{"line":6043,"column":48}},"1803":{"start":{"line":6050,"column":0},"end":{"line":6067,"column":24}},"1804":{"start":{"line":6070,"column":0},"end":{"line":6070,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":57,"column":24},"end":{"line":57,"column":25}},"loc":{"start":{"line":57,"column":44},"end":{"line":59,"column":1}},"line":57},"1":{"name":"(anonymous_1)","decl":{"start":{"line":77,"column":45},"end":{"line":77,"column":46}},"loc":{"start":{"line":77,"column":76},"end":{"line":79,"column":3}},"line":77},"2":{"name":"(anonymous_2)","decl":{"start":{"line":91,"column":35},"end":{"line":91,"column":36}},"loc":{"start":{"line":91,"column":67},"end":{"line":108,"column":3}},"line":91},"3":{"name":"(anonymous_3)","decl":{"start":{"line":117,"column":42},"end":{"line":117,"column":43}},"loc":{"start":{"line":117,"column":59},"end":{"line":121,"column":1}},"line":117},"4":{"name":"(anonymous_4)","decl":{"start":{"line":131,"column":52},"end":{"line":131,"column":53}},"loc":{"start":{"line":131,"column":75},"end":{"line":180,"column":1}},"line":131},"5":{"name":"(anonymous_5)","decl":{"start":{"line":187,"column":50},"end":{"line":187,"column":51}},"loc":{"start":{"line":187,"column":62},"end":{"line":191,"column":1}},"line":187},"6":{"name":"(anonymous_6)","decl":{"start":{"line":201,"column":48},"end":{"line":201,"column":49}},"loc":{"start":{"line":201,"column":75},"end":{"line":266,"column":1}},"line":201},"7":{"name":"(anonymous_7)","decl":{"start":{"line":273,"column":51},"end":{"line":273,"column":52}},"loc":{"start":{"line":273,"column":63},"end":{"line":275,"column":1}},"line":273},"8":{"name":"(anonymous_8)","decl":{"start":{"line":279,"column":51},"end":{"line":279,"column":52}},"loc":{"start":{"line":279,"column":68},"end":{"line":281,"column":1}},"line":279},"9":{"name":"(anonymous_9)","decl":{"start":{"line":288,"column":47},"end":{"line":288,"column":48}},"loc":{"start":{"line":288,"column":59},"end":{"line":290,"column":1}},"line":288},"10":{"name":"(anonymous_10)","decl":{"start":{"line":294,"column":47},"end":{"line":294,"column":48}},"loc":{"start":{"line":294,"column":64},"end":{"line":296,"column":1}},"line":294},"11":{"name":"(anonymous_11)","decl":{"start":{"line":303,"column":40},"end":{"line":303,"column":41}},"loc":{"start":{"line":303,"column":52},"end":{"line":305,"column":1}},"line":303},"12":{"name":"(anonymous_12)","decl":{"start":{"line":309,"column":40},"end":{"line":309,"column":41}},"loc":{"start":{"line":309,"column":57},"end":{"line":311,"column":1}},"line":309},"13":{"name":"(anonymous_13)","decl":{"start":{"line":320,"column":44},"end":{"line":320,"column":45}},"loc":{"start":{"line":320,"column":56},"end":{"line":322,"column":1}},"line":320},"14":{"name":"(anonymous_14)","decl":{"start":{"line":326,"column":44},"end":{"line":326,"column":45}},"loc":{"start":{"line":326,"column":61},"end":{"line":328,"column":1}},"line":326},"15":{"name":"(anonymous_15)","decl":{"start":{"line":335,"column":44},"end":{"line":335,"column":45}},"loc":{"start":{"line":335,"column":56},"end":{"line":337,"column":1}},"line":335},"16":{"name":"(anonymous_16)","decl":{"start":{"line":345,"column":50},"end":{"line":345,"column":51}},"loc":{"start":{"line":345,"column":62},"end":{"line":348,"column":1}},"line":345},"17":{"name":"(anonymous_17)","decl":{"start":{"line":358,"column":49},"end":{"line":358,"column":50}},"loc":{"start":{"line":358,"column":61},"end":{"line":361,"column":1}},"line":358},"18":{"name":"(anonymous_18)","decl":{"start":{"line":365,"column":44},"end":{"line":365,"column":45}},"loc":{"start":{"line":365,"column":61},"end":{"line":367,"column":1}},"line":365},"19":{"name":"(anonymous_19)","decl":{"start":{"line":374,"column":48},"end":{"line":374,"column":49}},"loc":{"start":{"line":374,"column":60},"end":{"line":376,"column":1}},"line":374},"20":{"name":"(anonymous_20)","decl":{"start":{"line":384,"column":54},"end":{"line":384,"column":55}},"loc":{"start":{"line":384,"column":66},"end":{"line":387,"column":1}},"line":384},"21":{"name":"(anonymous_21)","decl":{"start":{"line":397,"column":53},"end":{"line":397,"column":54}},"loc":{"start":{"line":397,"column":65},"end":{"line":400,"column":1}},"line":397},"22":{"name":"(anonymous_22)","decl":{"start":{"line":404,"column":48},"end":{"line":404,"column":49}},"loc":{"start":{"line":404,"column":65},"end":{"line":406,"column":1}},"line":404},"23":{"name":"(anonymous_23)","decl":{"start":{"line":413,"column":42},"end":{"line":413,"column":43}},"loc":{"start":{"line":413,"column":54},"end":{"line":415,"column":1}},"line":413},"24":{"name":"(anonymous_24)","decl":{"start":{"line":423,"column":48},"end":{"line":423,"column":49}},"loc":{"start":{"line":423,"column":60},"end":{"line":426,"column":1}},"line":423},"25":{"name":"(anonymous_25)","decl":{"start":{"line":436,"column":47},"end":{"line":436,"column":48}},"loc":{"start":{"line":436,"column":59},"end":{"line":439,"column":1}},"line":436},"26":{"name":"(anonymous_26)","decl":{"start":{"line":443,"column":42},"end":{"line":443,"column":43}},"loc":{"start":{"line":443,"column":59},"end":{"line":445,"column":1}},"line":443},"27":{"name":"(anonymous_27)","decl":{"start":{"line":452,"column":49},"end":{"line":452,"column":50}},"loc":{"start":{"line":452,"column":61},"end":{"line":454,"column":1}},"line":452},"28":{"name":"(anonymous_28)","decl":{"start":{"line":458,"column":49},"end":{"line":458,"column":50}},"loc":{"start":{"line":458,"column":66},"end":{"line":460,"column":1}},"line":458},"29":{"name":"(anonymous_29)","decl":{"start":{"line":467,"column":44},"end":{"line":467,"column":45}},"loc":{"start":{"line":467,"column":56},"end":{"line":469,"column":1}},"line":467},"30":{"name":"(anonymous_30)","decl":{"start":{"line":473,"column":44},"end":{"line":473,"column":45}},"loc":{"start":{"line":473,"column":61},"end":{"line":475,"column":1}},"line":473},"31":{"name":"(anonymous_31)","decl":{"start":{"line":489,"column":25},"end":{"line":489,"column":26}},"loc":{"start":{"line":489,"column":45},"end":{"line":491,"column":1}},"line":489},"32":{"name":"(anonymous_32)","decl":{"start":{"line":509,"column":46},"end":{"line":509,"column":47}},"loc":{"start":{"line":509,"column":77},"end":{"line":511,"column":3}},"line":509},"33":{"name":"(anonymous_33)","decl":{"start":{"line":523,"column":36},"end":{"line":523,"column":37}},"loc":{"start":{"line":523,"column":68},"end":{"line":533,"column":3}},"line":523},"34":{"name":"(anonymous_34)","decl":{"start":{"line":542,"column":43},"end":{"line":542,"column":44}},"loc":{"start":{"line":542,"column":60},"end":{"line":546,"column":1}},"line":542},"35":{"name":"(anonymous_35)","decl":{"start":{"line":556,"column":53},"end":{"line":556,"column":54}},"loc":{"start":{"line":556,"column":76},"end":{"line":578,"column":1}},"line":556},"36":{"name":"(anonymous_36)","decl":{"start":{"line":585,"column":51},"end":{"line":585,"column":52}},"loc":{"start":{"line":585,"column":63},"end":{"line":589,"column":1}},"line":585},"37":{"name":"(anonymous_37)","decl":{"start":{"line":599,"column":49},"end":{"line":599,"column":50}},"loc":{"start":{"line":599,"column":76},"end":{"line":616,"column":1}},"line":599},"38":{"name":"(anonymous_38)","decl":{"start":{"line":623,"column":45},"end":{"line":623,"column":46}},"loc":{"start":{"line":623,"column":57},"end":{"line":626,"column":1}},"line":623},"39":{"name":"(anonymous_39)","decl":{"start":{"line":630,"column":45},"end":{"line":630,"column":46}},"loc":{"start":{"line":630,"column":62},"end":{"line":632,"column":1}},"line":630},"40":{"name":"(anonymous_40)","decl":{"start":{"line":635,"column":47},"end":{"line":635,"column":48}},"loc":{"start":{"line":635,"column":59},"end":{"line":637,"column":1}},"line":635},"41":{"name":"(anonymous_41)","decl":{"start":{"line":644,"column":45},"end":{"line":644,"column":46}},"loc":{"start":{"line":644,"column":57},"end":{"line":646,"column":1}},"line":644},"42":{"name":"(anonymous_42)","decl":{"start":{"line":653,"column":43},"end":{"line":653,"column":44}},"loc":{"start":{"line":653,"column":55},"end":{"line":655,"column":1}},"line":653},"43":{"name":"(anonymous_43)","decl":{"start":{"line":663,"column":49},"end":{"line":663,"column":50}},"loc":{"start":{"line":663,"column":61},"end":{"line":666,"column":1}},"line":663},"44":{"name":"(anonymous_44)","decl":{"start":{"line":676,"column":48},"end":{"line":676,"column":49}},"loc":{"start":{"line":676,"column":60},"end":{"line":679,"column":1}},"line":676},"45":{"name":"(anonymous_45)","decl":{"start":{"line":683,"column":43},"end":{"line":683,"column":44}},"loc":{"start":{"line":683,"column":60},"end":{"line":685,"column":1}},"line":683},"46":{"name":"(anonymous_46)","decl":{"start":{"line":699,"column":19},"end":{"line":699,"column":20}},"loc":{"start":{"line":699,"column":39},"end":{"line":701,"column":1}},"line":699},"47":{"name":"(anonymous_47)","decl":{"start":{"line":719,"column":40},"end":{"line":719,"column":41}},"loc":{"start":{"line":719,"column":71},"end":{"line":721,"column":3}},"line":719},"48":{"name":"(anonymous_48)","decl":{"start":{"line":733,"column":30},"end":{"line":733,"column":31}},"loc":{"start":{"line":733,"column":62},"end":{"line":743,"column":3}},"line":733},"49":{"name":"(anonymous_49)","decl":{"start":{"line":752,"column":37},"end":{"line":752,"column":38}},"loc":{"start":{"line":752,"column":54},"end":{"line":756,"column":1}},"line":752},"50":{"name":"(anonymous_50)","decl":{"start":{"line":766,"column":47},"end":{"line":766,"column":48}},"loc":{"start":{"line":766,"column":70},"end":{"line":787,"column":1}},"line":766},"51":{"name":"(anonymous_51)","decl":{"start":{"line":794,"column":45},"end":{"line":794,"column":46}},"loc":{"start":{"line":794,"column":57},"end":{"line":798,"column":1}},"line":794},"52":{"name":"(anonymous_52)","decl":{"start":{"line":808,"column":43},"end":{"line":808,"column":44}},"loc":{"start":{"line":808,"column":70},"end":{"line":824,"column":1}},"line":808},"53":{"name":"(anonymous_53)","decl":{"start":{"line":831,"column":46},"end":{"line":831,"column":47}},"loc":{"start":{"line":831,"column":58},"end":{"line":833,"column":1}},"line":831},"54":{"name":"(anonymous_54)","decl":{"start":{"line":841,"column":52},"end":{"line":841,"column":53}},"loc":{"start":{"line":841,"column":64},"end":{"line":844,"column":1}},"line":841},"55":{"name":"(anonymous_55)","decl":{"start":{"line":854,"column":51},"end":{"line":854,"column":52}},"loc":{"start":{"line":854,"column":63},"end":{"line":857,"column":1}},"line":854},"56":{"name":"(anonymous_56)","decl":{"start":{"line":861,"column":46},"end":{"line":861,"column":47}},"loc":{"start":{"line":861,"column":63},"end":{"line":863,"column":1}},"line":861},"57":{"name":"(anonymous_57)","decl":{"start":{"line":870,"column":43},"end":{"line":870,"column":44}},"loc":{"start":{"line":870,"column":55},"end":{"line":872,"column":1}},"line":870},"58":{"name":"(anonymous_58)","decl":{"start":{"line":876,"column":43},"end":{"line":876,"column":44}},"loc":{"start":{"line":876,"column":60},"end":{"line":878,"column":1}},"line":876},"59":{"name":"(anonymous_59)","decl":{"start":{"line":892,"column":19},"end":{"line":892,"column":20}},"loc":{"start":{"line":892,"column":39},"end":{"line":894,"column":1}},"line":892},"60":{"name":"(anonymous_60)","decl":{"start":{"line":912,"column":40},"end":{"line":912,"column":41}},"loc":{"start":{"line":912,"column":71},"end":{"line":914,"column":3}},"line":912},"61":{"name":"(anonymous_61)","decl":{"start":{"line":926,"column":30},"end":{"line":926,"column":31}},"loc":{"start":{"line":926,"column":62},"end":{"line":936,"column":3}},"line":926},"62":{"name":"(anonymous_62)","decl":{"start":{"line":945,"column":37},"end":{"line":945,"column":38}},"loc":{"start":{"line":945,"column":54},"end":{"line":949,"column":1}},"line":945},"63":{"name":"(anonymous_63)","decl":{"start":{"line":959,"column":47},"end":{"line":959,"column":48}},"loc":{"start":{"line":959,"column":70},"end":{"line":980,"column":1}},"line":959},"64":{"name":"(anonymous_64)","decl":{"start":{"line":987,"column":45},"end":{"line":987,"column":46}},"loc":{"start":{"line":987,"column":57},"end":{"line":991,"column":1}},"line":987},"65":{"name":"(anonymous_65)","decl":{"start":{"line":1001,"column":43},"end":{"line":1001,"column":44}},"loc":{"start":{"line":1001,"column":70},"end":{"line":1017,"column":1}},"line":1001},"66":{"name":"(anonymous_66)","decl":{"start":{"line":1024,"column":46},"end":{"line":1024,"column":47}},"loc":{"start":{"line":1024,"column":58},"end":{"line":1026,"column":1}},"line":1024},"67":{"name":"(anonymous_67)","decl":{"start":{"line":1034,"column":52},"end":{"line":1034,"column":53}},"loc":{"start":{"line":1034,"column":64},"end":{"line":1037,"column":1}},"line":1034},"68":{"name":"(anonymous_68)","decl":{"start":{"line":1047,"column":51},"end":{"line":1047,"column":52}},"loc":{"start":{"line":1047,"column":63},"end":{"line":1050,"column":1}},"line":1047},"69":{"name":"(anonymous_69)","decl":{"start":{"line":1054,"column":46},"end":{"line":1054,"column":47}},"loc":{"start":{"line":1054,"column":63},"end":{"line":1056,"column":1}},"line":1054},"70":{"name":"(anonymous_70)","decl":{"start":{"line":1063,"column":43},"end":{"line":1063,"column":44}},"loc":{"start":{"line":1063,"column":55},"end":{"line":1065,"column":1}},"line":1063},"71":{"name":"(anonymous_71)","decl":{"start":{"line":1069,"column":43},"end":{"line":1069,"column":44}},"loc":{"start":{"line":1069,"column":60},"end":{"line":1071,"column":1}},"line":1069},"72":{"name":"(anonymous_72)","decl":{"start":{"line":1085,"column":21},"end":{"line":1085,"column":22}},"loc":{"start":{"line":1085,"column":41},"end":{"line":1087,"column":1}},"line":1085},"73":{"name":"(anonymous_73)","decl":{"start":{"line":1112,"column":42},"end":{"line":1112,"column":43}},"loc":{"start":{"line":1112,"column":73},"end":{"line":1114,"column":3}},"line":1112},"74":{"name":"(anonymous_74)","decl":{"start":{"line":1126,"column":32},"end":{"line":1126,"column":33}},"loc":{"start":{"line":1126,"column":64},"end":{"line":1144,"column":3}},"line":1126},"75":{"name":"(anonymous_75)","decl":{"start":{"line":1153,"column":39},"end":{"line":1153,"column":40}},"loc":{"start":{"line":1153,"column":56},"end":{"line":1157,"column":1}},"line":1153},"76":{"name":"(anonymous_76)","decl":{"start":{"line":1167,"column":49},"end":{"line":1167,"column":50}},"loc":{"start":{"line":1167,"column":72},"end":{"line":1218,"column":1}},"line":1167},"77":{"name":"(anonymous_77)","decl":{"start":{"line":1225,"column":47},"end":{"line":1225,"column":48}},"loc":{"start":{"line":1225,"column":59},"end":{"line":1229,"column":1}},"line":1225},"78":{"name":"(anonymous_78)","decl":{"start":{"line":1239,"column":45},"end":{"line":1239,"column":46}},"loc":{"start":{"line":1239,"column":72},"end":{"line":1306,"column":1}},"line":1239},"79":{"name":"(anonymous_79)","decl":{"start":{"line":1313,"column":41},"end":{"line":1313,"column":42}},"loc":{"start":{"line":1313,"column":53},"end":{"line":1316,"column":1}},"line":1313},"80":{"name":"(anonymous_80)","decl":{"start":{"line":1320,"column":41},"end":{"line":1320,"column":42}},"loc":{"start":{"line":1320,"column":58},"end":{"line":1322,"column":1}},"line":1320},"81":{"name":"(anonymous_81)","decl":{"start":{"line":1325,"column":43},"end":{"line":1325,"column":44}},"loc":{"start":{"line":1325,"column":55},"end":{"line":1327,"column":1}},"line":1325},"82":{"name":"(anonymous_82)","decl":{"start":{"line":1334,"column":41},"end":{"line":1334,"column":42}},"loc":{"start":{"line":1334,"column":53},"end":{"line":1336,"column":1}},"line":1334},"83":{"name":"(anonymous_83)","decl":{"start":{"line":1343,"column":48},"end":{"line":1343,"column":49}},"loc":{"start":{"line":1343,"column":60},"end":{"line":1345,"column":1}},"line":1343},"84":{"name":"(anonymous_84)","decl":{"start":{"line":1353,"column":54},"end":{"line":1353,"column":55}},"loc":{"start":{"line":1353,"column":66},"end":{"line":1356,"column":1}},"line":1353},"85":{"name":"(anonymous_85)","decl":{"start":{"line":1366,"column":53},"end":{"line":1366,"column":54}},"loc":{"start":{"line":1366,"column":65},"end":{"line":1369,"column":1}},"line":1366},"86":{"name":"(anonymous_86)","decl":{"start":{"line":1373,"column":48},"end":{"line":1373,"column":49}},"loc":{"start":{"line":1373,"column":65},"end":{"line":1375,"column":1}},"line":1373},"87":{"name":"(anonymous_87)","decl":{"start":{"line":1382,"column":45},"end":{"line":1382,"column":46}},"loc":{"start":{"line":1382,"column":57},"end":{"line":1384,"column":1}},"line":1382},"88":{"name":"(anonymous_88)","decl":{"start":{"line":1388,"column":45},"end":{"line":1388,"column":46}},"loc":{"start":{"line":1388,"column":62},"end":{"line":1390,"column":1}},"line":1388},"89":{"name":"(anonymous_89)","decl":{"start":{"line":1397,"column":42},"end":{"line":1397,"column":43}},"loc":{"start":{"line":1397,"column":54},"end":{"line":1399,"column":1}},"line":1397},"90":{"name":"(anonymous_90)","decl":{"start":{"line":1407,"column":48},"end":{"line":1407,"column":49}},"loc":{"start":{"line":1407,"column":60},"end":{"line":1410,"column":1}},"line":1407},"91":{"name":"(anonymous_91)","decl":{"start":{"line":1420,"column":47},"end":{"line":1420,"column":48}},"loc":{"start":{"line":1420,"column":59},"end":{"line":1423,"column":1}},"line":1420},"92":{"name":"(anonymous_92)","decl":{"start":{"line":1427,"column":42},"end":{"line":1427,"column":43}},"loc":{"start":{"line":1427,"column":59},"end":{"line":1429,"column":1}},"line":1427},"93":{"name":"(anonymous_93)","decl":{"start":{"line":1438,"column":43},"end":{"line":1438,"column":44}},"loc":{"start":{"line":1438,"column":55},"end":{"line":1440,"column":1}},"line":1438},"94":{"name":"(anonymous_94)","decl":{"start":{"line":1444,"column":43},"end":{"line":1444,"column":44}},"loc":{"start":{"line":1444,"column":60},"end":{"line":1446,"column":1}},"line":1444},"95":{"name":"(anonymous_95)","decl":{"start":{"line":1453,"column":42},"end":{"line":1453,"column":43}},"loc":{"start":{"line":1453,"column":54},"end":{"line":1455,"column":1}},"line":1453},"96":{"name":"(anonymous_96)","decl":{"start":{"line":1459,"column":42},"end":{"line":1459,"column":43}},"loc":{"start":{"line":1459,"column":59},"end":{"line":1461,"column":1}},"line":1459},"97":{"name":"(anonymous_97)","decl":{"start":{"line":1468,"column":42},"end":{"line":1468,"column":43}},"loc":{"start":{"line":1468,"column":54},"end":{"line":1470,"column":1}},"line":1468},"98":{"name":"(anonymous_98)","decl":{"start":{"line":1478,"column":48},"end":{"line":1478,"column":49}},"loc":{"start":{"line":1478,"column":60},"end":{"line":1481,"column":1}},"line":1478},"99":{"name":"(anonymous_99)","decl":{"start":{"line":1491,"column":47},"end":{"line":1491,"column":48}},"loc":{"start":{"line":1491,"column":59},"end":{"line":1494,"column":1}},"line":1491},"100":{"name":"(anonymous_100)","decl":{"start":{"line":1498,"column":42},"end":{"line":1498,"column":43}},"loc":{"start":{"line":1498,"column":59},"end":{"line":1500,"column":1}},"line":1498},"101":{"name":"(anonymous_101)","decl":{"start":{"line":1507,"column":51},"end":{"line":1507,"column":52}},"loc":{"start":{"line":1507,"column":63},"end":{"line":1510,"column":1}},"line":1507},"102":{"name":"(anonymous_102)","decl":{"start":{"line":1514,"column":51},"end":{"line":1514,"column":52}},"loc":{"start":{"line":1514,"column":68},"end":{"line":1516,"column":1}},"line":1514},"103":{"name":"(anonymous_103)","decl":{"start":{"line":1524,"column":47},"end":{"line":1524,"column":48}},"loc":{"start":{"line":1524,"column":79},"end":{"line":1526,"column":1}},"line":1524},"104":{"name":"(anonymous_104)","decl":{"start":{"line":1529,"column":53},"end":{"line":1529,"column":54}},"loc":{"start":{"line":1529,"column":65},"end":{"line":1531,"column":1}},"line":1529},"105":{"name":"(anonymous_105)","decl":{"start":{"line":1540,"column":51},"end":{"line":1540,"column":52}},"loc":{"start":{"line":1540,"column":63},"end":{"line":1542,"column":1}},"line":1540},"106":{"name":"(anonymous_106)","decl":{"start":{"line":1546,"column":51},"end":{"line":1546,"column":52}},"loc":{"start":{"line":1546,"column":68},"end":{"line":1548,"column":1}},"line":1546},"107":{"name":"(anonymous_107)","decl":{"start":{"line":1562,"column":27},"end":{"line":1562,"column":28}},"loc":{"start":{"line":1562,"column":47},"end":{"line":1564,"column":1}},"line":1562},"108":{"name":"(anonymous_108)","decl":{"start":{"line":1582,"column":48},"end":{"line":1582,"column":49}},"loc":{"start":{"line":1582,"column":79},"end":{"line":1584,"column":3}},"line":1582},"109":{"name":"(anonymous_109)","decl":{"start":{"line":1596,"column":38},"end":{"line":1596,"column":39}},"loc":{"start":{"line":1596,"column":70},"end":{"line":1605,"column":3}},"line":1596},"110":{"name":"(anonymous_110)","decl":{"start":{"line":1614,"column":45},"end":{"line":1614,"column":46}},"loc":{"start":{"line":1614,"column":62},"end":{"line":1618,"column":1}},"line":1614},"111":{"name":"(anonymous_111)","decl":{"start":{"line":1628,"column":55},"end":{"line":1628,"column":56}},"loc":{"start":{"line":1628,"column":78},"end":{"line":1645,"column":1}},"line":1628},"112":{"name":"(anonymous_112)","decl":{"start":{"line":1652,"column":53},"end":{"line":1652,"column":54}},"loc":{"start":{"line":1652,"column":65},"end":{"line":1656,"column":1}},"line":1652},"113":{"name":"(anonymous_113)","decl":{"start":{"line":1666,"column":51},"end":{"line":1666,"column":52}},"loc":{"start":{"line":1666,"column":78},"end":{"line":1675,"column":1}},"line":1666},"114":{"name":"(anonymous_114)","decl":{"start":{"line":1682,"column":48},"end":{"line":1682,"column":49}},"loc":{"start":{"line":1682,"column":60},"end":{"line":1684,"column":1}},"line":1682},"115":{"name":"(anonymous_115)","decl":{"start":{"line":1688,"column":48},"end":{"line":1688,"column":49}},"loc":{"start":{"line":1688,"column":65},"end":{"line":1690,"column":1}},"line":1688},"116":{"name":"(anonymous_116)","decl":{"start":{"line":1704,"column":31},"end":{"line":1704,"column":32}},"loc":{"start":{"line":1704,"column":51},"end":{"line":1706,"column":1}},"line":1704},"117":{"name":"(anonymous_117)","decl":{"start":{"line":1724,"column":52},"end":{"line":1724,"column":53}},"loc":{"start":{"line":1724,"column":83},"end":{"line":1726,"column":3}},"line":1724},"118":{"name":"(anonymous_118)","decl":{"start":{"line":1738,"column":42},"end":{"line":1738,"column":43}},"loc":{"start":{"line":1738,"column":74},"end":{"line":1748,"column":3}},"line":1738},"119":{"name":"(anonymous_119)","decl":{"start":{"line":1757,"column":49},"end":{"line":1757,"column":50}},"loc":{"start":{"line":1757,"column":66},"end":{"line":1761,"column":1}},"line":1757},"120":{"name":"(anonymous_120)","decl":{"start":{"line":1771,"column":59},"end":{"line":1771,"column":60}},"loc":{"start":{"line":1771,"column":82},"end":{"line":1793,"column":1}},"line":1771},"121":{"name":"(anonymous_121)","decl":{"start":{"line":1800,"column":57},"end":{"line":1800,"column":58}},"loc":{"start":{"line":1800,"column":69},"end":{"line":1804,"column":1}},"line":1800},"122":{"name":"(anonymous_122)","decl":{"start":{"line":1814,"column":55},"end":{"line":1814,"column":56}},"loc":{"start":{"line":1814,"column":82},"end":{"line":1831,"column":1}},"line":1814},"123":{"name":"(anonymous_123)","decl":{"start":{"line":1838,"column":51},"end":{"line":1838,"column":52}},"loc":{"start":{"line":1838,"column":63},"end":{"line":1841,"column":1}},"line":1838},"124":{"name":"(anonymous_124)","decl":{"start":{"line":1845,"column":51},"end":{"line":1845,"column":52}},"loc":{"start":{"line":1845,"column":68},"end":{"line":1847,"column":1}},"line":1845},"125":{"name":"(anonymous_125)","decl":{"start":{"line":1850,"column":53},"end":{"line":1850,"column":54}},"loc":{"start":{"line":1850,"column":65},"end":{"line":1852,"column":1}},"line":1850},"126":{"name":"(anonymous_126)","decl":{"start":{"line":1859,"column":51},"end":{"line":1859,"column":52}},"loc":{"start":{"line":1859,"column":63},"end":{"line":1861,"column":1}},"line":1859},"127":{"name":"(anonymous_127)","decl":{"start":{"line":1868,"column":52},"end":{"line":1868,"column":53}},"loc":{"start":{"line":1868,"column":64},"end":{"line":1870,"column":1}},"line":1868},"128":{"name":"(anonymous_128)","decl":{"start":{"line":1874,"column":52},"end":{"line":1874,"column":53}},"loc":{"start":{"line":1874,"column":69},"end":{"line":1876,"column":1}},"line":1874},"129":{"name":"(anonymous_129)","decl":{"start":{"line":1890,"column":32},"end":{"line":1890,"column":33}},"loc":{"start":{"line":1890,"column":52},"end":{"line":1892,"column":1}},"line":1890},"130":{"name":"(anonymous_130)","decl":{"start":{"line":1917,"column":53},"end":{"line":1917,"column":54}},"loc":{"start":{"line":1917,"column":84},"end":{"line":1919,"column":3}},"line":1917},"131":{"name":"(anonymous_131)","decl":{"start":{"line":1931,"column":43},"end":{"line":1931,"column":44}},"loc":{"start":{"line":1931,"column":75},"end":{"line":1942,"column":3}},"line":1931},"132":{"name":"(anonymous_132)","decl":{"start":{"line":1951,"column":50},"end":{"line":1951,"column":51}},"loc":{"start":{"line":1951,"column":67},"end":{"line":1955,"column":1}},"line":1951},"133":{"name":"(anonymous_133)","decl":{"start":{"line":1965,"column":60},"end":{"line":1965,"column":61}},"loc":{"start":{"line":1965,"column":83},"end":{"line":1987,"column":1}},"line":1965},"134":{"name":"(anonymous_134)","decl":{"start":{"line":1994,"column":58},"end":{"line":1994,"column":59}},"loc":{"start":{"line":1994,"column":70},"end":{"line":1998,"column":1}},"line":1994},"135":{"name":"(anonymous_135)","decl":{"start":{"line":2008,"column":56},"end":{"line":2008,"column":57}},"loc":{"start":{"line":2008,"column":83},"end":{"line":2025,"column":1}},"line":2008},"136":{"name":"(anonymous_136)","decl":{"start":{"line":2032,"column":52},"end":{"line":2032,"column":53}},"loc":{"start":{"line":2032,"column":64},"end":{"line":2034,"column":1}},"line":2032},"137":{"name":"(anonymous_137)","decl":{"start":{"line":2038,"column":52},"end":{"line":2038,"column":53}},"loc":{"start":{"line":2038,"column":69},"end":{"line":2040,"column":1}},"line":2038},"138":{"name":"(anonymous_138)","decl":{"start":{"line":2047,"column":55},"end":{"line":2047,"column":56}},"loc":{"start":{"line":2047,"column":67},"end":{"line":2050,"column":1}},"line":2047},"139":{"name":"(anonymous_139)","decl":{"start":{"line":2054,"column":55},"end":{"line":2054,"column":56}},"loc":{"start":{"line":2054,"column":72},"end":{"line":2056,"column":1}},"line":2054},"140":{"name":"(anonymous_140)","decl":{"start":{"line":2064,"column":51},"end":{"line":2064,"column":52}},"loc":{"start":{"line":2064,"column":83},"end":{"line":2066,"column":1}},"line":2064},"141":{"name":"(anonymous_141)","decl":{"start":{"line":2069,"column":57},"end":{"line":2069,"column":58}},"loc":{"start":{"line":2069,"column":69},"end":{"line":2071,"column":1}},"line":2069},"142":{"name":"(anonymous_142)","decl":{"start":{"line":2085,"column":29},"end":{"line":2085,"column":30}},"loc":{"start":{"line":2085,"column":49},"end":{"line":2087,"column":1}},"line":2085},"143":{"name":"(anonymous_143)","decl":{"start":{"line":2105,"column":50},"end":{"line":2105,"column":51}},"loc":{"start":{"line":2105,"column":81},"end":{"line":2107,"column":3}},"line":2105},"144":{"name":"(anonymous_144)","decl":{"start":{"line":2119,"column":40},"end":{"line":2119,"column":41}},"loc":{"start":{"line":2119,"column":72},"end":{"line":2129,"column":3}},"line":2119},"145":{"name":"(anonymous_145)","decl":{"start":{"line":2138,"column":47},"end":{"line":2138,"column":48}},"loc":{"start":{"line":2138,"column":64},"end":{"line":2142,"column":1}},"line":2138},"146":{"name":"(anonymous_146)","decl":{"start":{"line":2152,"column":57},"end":{"line":2152,"column":58}},"loc":{"start":{"line":2152,"column":80},"end":{"line":2173,"column":1}},"line":2152},"147":{"name":"(anonymous_147)","decl":{"start":{"line":2180,"column":55},"end":{"line":2180,"column":56}},"loc":{"start":{"line":2180,"column":67},"end":{"line":2184,"column":1}},"line":2180},"148":{"name":"(anonymous_148)","decl":{"start":{"line":2194,"column":53},"end":{"line":2194,"column":54}},"loc":{"start":{"line":2194,"column":80},"end":{"line":2210,"column":1}},"line":2194},"149":{"name":"(anonymous_149)","decl":{"start":{"line":2217,"column":52},"end":{"line":2217,"column":53}},"loc":{"start":{"line":2217,"column":64},"end":{"line":2219,"column":1}},"line":2217},"150":{"name":"(anonymous_150)","decl":{"start":{"line":2227,"column":58},"end":{"line":2227,"column":59}},"loc":{"start":{"line":2227,"column":70},"end":{"line":2230,"column":1}},"line":2227},"151":{"name":"(anonymous_151)","decl":{"start":{"line":2240,"column":57},"end":{"line":2240,"column":58}},"loc":{"start":{"line":2240,"column":69},"end":{"line":2243,"column":1}},"line":2240},"152":{"name":"(anonymous_152)","decl":{"start":{"line":2247,"column":52},"end":{"line":2247,"column":53}},"loc":{"start":{"line":2247,"column":69},"end":{"line":2249,"column":1}},"line":2247},"153":{"name":"(anonymous_153)","decl":{"start":{"line":2256,"column":50},"end":{"line":2256,"column":51}},"loc":{"start":{"line":2256,"column":62},"end":{"line":2258,"column":1}},"line":2256},"154":{"name":"(anonymous_154)","decl":{"start":{"line":2262,"column":50},"end":{"line":2262,"column":51}},"loc":{"start":{"line":2262,"column":67},"end":{"line":2264,"column":1}},"line":2262},"155":{"name":"(anonymous_155)","decl":{"start":{"line":2278,"column":34},"end":{"line":2278,"column":35}},"loc":{"start":{"line":2278,"column":54},"end":{"line":2280,"column":1}},"line":2278},"156":{"name":"(anonymous_156)","decl":{"start":{"line":2298,"column":55},"end":{"line":2298,"column":56}},"loc":{"start":{"line":2298,"column":86},"end":{"line":2300,"column":3}},"line":2298},"157":{"name":"(anonymous_157)","decl":{"start":{"line":2312,"column":45},"end":{"line":2312,"column":46}},"loc":{"start":{"line":2312,"column":77},"end":{"line":2323,"column":3}},"line":2312},"158":{"name":"(anonymous_158)","decl":{"start":{"line":2332,"column":52},"end":{"line":2332,"column":53}},"loc":{"start":{"line":2332,"column":69},"end":{"line":2336,"column":1}},"line":2332},"159":{"name":"(anonymous_159)","decl":{"start":{"line":2346,"column":62},"end":{"line":2346,"column":63}},"loc":{"start":{"line":2346,"column":85},"end":{"line":2372,"column":1}},"line":2346},"160":{"name":"(anonymous_160)","decl":{"start":{"line":2379,"column":60},"end":{"line":2379,"column":61}},"loc":{"start":{"line":2379,"column":72},"end":{"line":2383,"column":1}},"line":2379},"161":{"name":"(anonymous_161)","decl":{"start":{"line":2393,"column":58},"end":{"line":2393,"column":59}},"loc":{"start":{"line":2393,"column":85},"end":{"line":2417,"column":1}},"line":2393},"162":{"name":"(anonymous_162)","decl":{"start":{"line":2424,"column":58},"end":{"line":2424,"column":59}},"loc":{"start":{"line":2424,"column":70},"end":{"line":2426,"column":1}},"line":2424},"163":{"name":"(anonymous_163)","decl":{"start":{"line":2434,"column":64},"end":{"line":2434,"column":65}},"loc":{"start":{"line":2434,"column":76},"end":{"line":2437,"column":1}},"line":2434},"164":{"name":"(anonymous_164)","decl":{"start":{"line":2447,"column":63},"end":{"line":2447,"column":64}},"loc":{"start":{"line":2447,"column":75},"end":{"line":2450,"column":1}},"line":2447},"165":{"name":"(anonymous_165)","decl":{"start":{"line":2454,"column":58},"end":{"line":2454,"column":59}},"loc":{"start":{"line":2454,"column":75},"end":{"line":2456,"column":1}},"line":2454},"166":{"name":"(anonymous_166)","decl":{"start":{"line":2463,"column":55},"end":{"line":2463,"column":56}},"loc":{"start":{"line":2463,"column":67},"end":{"line":2465,"column":1}},"line":2463},"167":{"name":"(anonymous_167)","decl":{"start":{"line":2469,"column":55},"end":{"line":2469,"column":56}},"loc":{"start":{"line":2469,"column":72},"end":{"line":2471,"column":1}},"line":2469},"168":{"name":"(anonymous_168)","decl":{"start":{"line":2478,"column":53},"end":{"line":2478,"column":54}},"loc":{"start":{"line":2478,"column":65},"end":{"line":2481,"column":1}},"line":2478},"169":{"name":"(anonymous_169)","decl":{"start":{"line":2485,"column":53},"end":{"line":2485,"column":54}},"loc":{"start":{"line":2485,"column":70},"end":{"line":2487,"column":1}},"line":2485},"170":{"name":"(anonymous_170)","decl":{"start":{"line":2490,"column":55},"end":{"line":2490,"column":56}},"loc":{"start":{"line":2490,"column":67},"end":{"line":2492,"column":1}},"line":2490},"171":{"name":"(anonymous_171)","decl":{"start":{"line":2499,"column":53},"end":{"line":2499,"column":54}},"loc":{"start":{"line":2499,"column":65},"end":{"line":2501,"column":1}},"line":2499},"172":{"name":"(anonymous_172)","decl":{"start":{"line":2515,"column":37},"end":{"line":2515,"column":38}},"loc":{"start":{"line":2515,"column":57},"end":{"line":2517,"column":1}},"line":2515},"173":{"name":"(anonymous_173)","decl":{"start":{"line":2535,"column":58},"end":{"line":2535,"column":59}},"loc":{"start":{"line":2535,"column":89},"end":{"line":2537,"column":3}},"line":2535},"174":{"name":"(anonymous_174)","decl":{"start":{"line":2549,"column":48},"end":{"line":2549,"column":49}},"loc":{"start":{"line":2549,"column":80},"end":{"line":2562,"column":3}},"line":2549},"175":{"name":"(anonymous_175)","decl":{"start":{"line":2571,"column":55},"end":{"line":2571,"column":56}},"loc":{"start":{"line":2571,"column":72},"end":{"line":2575,"column":1}},"line":2571},"176":{"name":"(anonymous_176)","decl":{"start":{"line":2585,"column":65},"end":{"line":2585,"column":66}},"loc":{"start":{"line":2585,"column":88},"end":{"line":2618,"column":1}},"line":2585},"177":{"name":"(anonymous_177)","decl":{"start":{"line":2625,"column":63},"end":{"line":2625,"column":64}},"loc":{"start":{"line":2625,"column":75},"end":{"line":2629,"column":1}},"line":2625},"178":{"name":"(anonymous_178)","decl":{"start":{"line":2639,"column":61},"end":{"line":2639,"column":62}},"loc":{"start":{"line":2639,"column":88},"end":{"line":2676,"column":1}},"line":2639},"179":{"name":"(anonymous_179)","decl":{"start":{"line":2683,"column":55},"end":{"line":2683,"column":56}},"loc":{"start":{"line":2683,"column":67},"end":{"line":2685,"column":1}},"line":2683},"180":{"name":"(anonymous_180)","decl":{"start":{"line":2693,"column":61},"end":{"line":2693,"column":62}},"loc":{"start":{"line":2693,"column":73},"end":{"line":2696,"column":1}},"line":2693},"181":{"name":"(anonymous_181)","decl":{"start":{"line":2706,"column":60},"end":{"line":2706,"column":61}},"loc":{"start":{"line":2706,"column":72},"end":{"line":2709,"column":1}},"line":2706},"182":{"name":"(anonymous_182)","decl":{"start":{"line":2713,"column":55},"end":{"line":2713,"column":56}},"loc":{"start":{"line":2713,"column":72},"end":{"line":2715,"column":1}},"line":2713},"183":{"name":"(anonymous_183)","decl":{"start":{"line":2722,"column":57},"end":{"line":2722,"column":58}},"loc":{"start":{"line":2722,"column":69},"end":{"line":2724,"column":1}},"line":2722},"184":{"name":"(anonymous_184)","decl":{"start":{"line":2728,"column":57},"end":{"line":2728,"column":58}},"loc":{"start":{"line":2728,"column":74},"end":{"line":2730,"column":1}},"line":2728},"185":{"name":"(anonymous_185)","decl":{"start":{"line":2737,"column":57},"end":{"line":2737,"column":58}},"loc":{"start":{"line":2737,"column":69},"end":{"line":2739,"column":1}},"line":2737},"186":{"name":"(anonymous_186)","decl":{"start":{"line":2743,"column":57},"end":{"line":2743,"column":58}},"loc":{"start":{"line":2743,"column":74},"end":{"line":2745,"column":1}},"line":2743},"187":{"name":"(anonymous_187)","decl":{"start":{"line":2752,"column":55},"end":{"line":2752,"column":56}},"loc":{"start":{"line":2752,"column":67},"end":{"line":2754,"column":1}},"line":2752},"188":{"name":"(anonymous_188)","decl":{"start":{"line":2758,"column":55},"end":{"line":2758,"column":56}},"loc":{"start":{"line":2758,"column":72},"end":{"line":2760,"column":1}},"line":2758},"189":{"name":"(anonymous_189)","decl":{"start":{"line":2769,"column":54},"end":{"line":2769,"column":55}},"loc":{"start":{"line":2769,"column":66},"end":{"line":2771,"column":1}},"line":2769},"190":{"name":"(anonymous_190)","decl":{"start":{"line":2775,"column":54},"end":{"line":2775,"column":55}},"loc":{"start":{"line":2775,"column":71},"end":{"line":2777,"column":1}},"line":2775},"191":{"name":"(anonymous_191)","decl":{"start":{"line":2791,"column":38},"end":{"line":2791,"column":39}},"loc":{"start":{"line":2791,"column":58},"end":{"line":2793,"column":1}},"line":2791},"192":{"name":"(anonymous_192)","decl":{"start":{"line":2818,"column":59},"end":{"line":2818,"column":60}},"loc":{"start":{"line":2818,"column":90},"end":{"line":2820,"column":3}},"line":2818},"193":{"name":"(anonymous_193)","decl":{"start":{"line":2832,"column":49},"end":{"line":2832,"column":50}},"loc":{"start":{"line":2832,"column":81},"end":{"line":2845,"column":3}},"line":2832},"194":{"name":"(anonymous_194)","decl":{"start":{"line":2854,"column":56},"end":{"line":2854,"column":57}},"loc":{"start":{"line":2854,"column":73},"end":{"line":2858,"column":1}},"line":2854},"195":{"name":"(anonymous_195)","decl":{"start":{"line":2868,"column":66},"end":{"line":2868,"column":67}},"loc":{"start":{"line":2868,"column":89},"end":{"line":2898,"column":1}},"line":2868},"196":{"name":"(anonymous_196)","decl":{"start":{"line":2905,"column":64},"end":{"line":2905,"column":65}},"loc":{"start":{"line":2905,"column":76},"end":{"line":2909,"column":1}},"line":2905},"197":{"name":"(anonymous_197)","decl":{"start":{"line":2919,"column":62},"end":{"line":2919,"column":63}},"loc":{"start":{"line":2919,"column":89},"end":{"line":2950,"column":1}},"line":2919},"198":{"name":"(anonymous_198)","decl":{"start":{"line":2957,"column":58},"end":{"line":2957,"column":59}},"loc":{"start":{"line":2957,"column":70},"end":{"line":2959,"column":1}},"line":2957},"199":{"name":"(anonymous_199)","decl":{"start":{"line":2963,"column":58},"end":{"line":2963,"column":59}},"loc":{"start":{"line":2963,"column":75},"end":{"line":2965,"column":1}},"line":2963},"200":{"name":"(anonymous_200)","decl":{"start":{"line":2972,"column":62},"end":{"line":2972,"column":63}},"loc":{"start":{"line":2972,"column":74},"end":{"line":2974,"column":1}},"line":2972},"201":{"name":"(anonymous_201)","decl":{"start":{"line":2982,"column":68},"end":{"line":2982,"column":69}},"loc":{"start":{"line":2982,"column":80},"end":{"line":2985,"column":1}},"line":2982},"202":{"name":"(anonymous_202)","decl":{"start":{"line":2995,"column":67},"end":{"line":2995,"column":68}},"loc":{"start":{"line":2995,"column":79},"end":{"line":2998,"column":1}},"line":2995},"203":{"name":"(anonymous_203)","decl":{"start":{"line":3002,"column":62},"end":{"line":3002,"column":63}},"loc":{"start":{"line":3002,"column":79},"end":{"line":3004,"column":1}},"line":3002},"204":{"name":"(anonymous_204)","decl":{"start":{"line":3011,"column":58},"end":{"line":3011,"column":59}},"loc":{"start":{"line":3011,"column":86},"end":{"line":3013,"column":1}},"line":3011},"205":{"name":"(anonymous_205)","decl":{"start":{"line":3016,"column":64},"end":{"line":3016,"column":65}},"loc":{"start":{"line":3016,"column":76},"end":{"line":3018,"column":1}},"line":3016},"206":{"name":"(anonymous_206)","decl":{"start":{"line":3025,"column":63},"end":{"line":3025,"column":64}},"loc":{"start":{"line":3025,"column":75},"end":{"line":3028,"column":1}},"line":3025},"207":{"name":"(anonymous_207)","decl":{"start":{"line":3032,"column":63},"end":{"line":3032,"column":64}},"loc":{"start":{"line":3032,"column":80},"end":{"line":3034,"column":1}},"line":3032},"208":{"name":"(anonymous_208)","decl":{"start":{"line":3042,"column":59},"end":{"line":3042,"column":60}},"loc":{"start":{"line":3042,"column":91},"end":{"line":3044,"column":1}},"line":3042},"209":{"name":"(anonymous_209)","decl":{"start":{"line":3047,"column":65},"end":{"line":3047,"column":66}},"loc":{"start":{"line":3047,"column":77},"end":{"line":3049,"column":1}},"line":3047},"210":{"name":"(anonymous_210)","decl":{"start":{"line":3058,"column":59},"end":{"line":3058,"column":60}},"loc":{"start":{"line":3058,"column":71},"end":{"line":3060,"column":1}},"line":3058},"211":{"name":"(anonymous_211)","decl":{"start":{"line":3064,"column":59},"end":{"line":3064,"column":60}},"loc":{"start":{"line":3064,"column":76},"end":{"line":3066,"column":1}},"line":3064},"212":{"name":"(anonymous_212)","decl":{"start":{"line":3080,"column":30},"end":{"line":3080,"column":31}},"loc":{"start":{"line":3080,"column":50},"end":{"line":3082,"column":1}},"line":3080},"213":{"name":"(anonymous_213)","decl":{"start":{"line":3107,"column":51},"end":{"line":3107,"column":52}},"loc":{"start":{"line":3107,"column":82},"end":{"line":3109,"column":3}},"line":3107},"214":{"name":"(anonymous_214)","decl":{"start":{"line":3121,"column":41},"end":{"line":3121,"column":42}},"loc":{"start":{"line":3121,"column":73},"end":{"line":3130,"column":3}},"line":3121},"215":{"name":"(anonymous_215)","decl":{"start":{"line":3139,"column":48},"end":{"line":3139,"column":49}},"loc":{"start":{"line":3139,"column":65},"end":{"line":3143,"column":1}},"line":3139},"216":{"name":"(anonymous_216)","decl":{"start":{"line":3153,"column":58},"end":{"line":3153,"column":59}},"loc":{"start":{"line":3153,"column":81},"end":{"line":3170,"column":1}},"line":3153},"217":{"name":"(anonymous_217)","decl":{"start":{"line":3177,"column":56},"end":{"line":3177,"column":57}},"loc":{"start":{"line":3177,"column":68},"end":{"line":3181,"column":1}},"line":3177},"218":{"name":"(anonymous_218)","decl":{"start":{"line":3191,"column":54},"end":{"line":3191,"column":55}},"loc":{"start":{"line":3191,"column":81},"end":{"line":3200,"column":1}},"line":3191},"219":{"name":"(anonymous_219)","decl":{"start":{"line":3207,"column":54},"end":{"line":3207,"column":55}},"loc":{"start":{"line":3207,"column":66},"end":{"line":3209,"column":1}},"line":3207},"220":{"name":"(anonymous_220)","decl":{"start":{"line":3217,"column":60},"end":{"line":3217,"column":61}},"loc":{"start":{"line":3217,"column":72},"end":{"line":3220,"column":1}},"line":3217},"221":{"name":"(anonymous_221)","decl":{"start":{"line":3230,"column":59},"end":{"line":3230,"column":60}},"loc":{"start":{"line":3230,"column":71},"end":{"line":3233,"column":1}},"line":3230},"222":{"name":"(anonymous_222)","decl":{"start":{"line":3237,"column":54},"end":{"line":3237,"column":55}},"loc":{"start":{"line":3237,"column":71},"end":{"line":3239,"column":1}},"line":3237},"223":{"name":"(anonymous_223)","decl":{"start":{"line":3246,"column":50},"end":{"line":3246,"column":51}},"loc":{"start":{"line":3246,"column":78},"end":{"line":3248,"column":1}},"line":3246},"224":{"name":"(anonymous_224)","decl":{"start":{"line":3251,"column":56},"end":{"line":3251,"column":57}},"loc":{"start":{"line":3251,"column":68},"end":{"line":3253,"column":1}},"line":3251},"225":{"name":"(anonymous_225)","decl":{"start":{"line":3267,"column":31},"end":{"line":3267,"column":32}},"loc":{"start":{"line":3267,"column":51},"end":{"line":3269,"column":1}},"line":3267},"226":{"name":"(anonymous_226)","decl":{"start":{"line":3294,"column":52},"end":{"line":3294,"column":53}},"loc":{"start":{"line":3294,"column":83},"end":{"line":3296,"column":3}},"line":3294},"227":{"name":"(anonymous_227)","decl":{"start":{"line":3308,"column":42},"end":{"line":3308,"column":43}},"loc":{"start":{"line":3308,"column":74},"end":{"line":3320,"column":3}},"line":3308},"228":{"name":"(anonymous_228)","decl":{"start":{"line":3329,"column":49},"end":{"line":3329,"column":50}},"loc":{"start":{"line":3329,"column":66},"end":{"line":3333,"column":1}},"line":3329},"229":{"name":"(anonymous_229)","decl":{"start":{"line":3343,"column":59},"end":{"line":3343,"column":60}},"loc":{"start":{"line":3343,"column":82},"end":{"line":3369,"column":1}},"line":3343},"230":{"name":"(anonymous_230)","decl":{"start":{"line":3376,"column":57},"end":{"line":3376,"column":58}},"loc":{"start":{"line":3376,"column":69},"end":{"line":3380,"column":1}},"line":3376},"231":{"name":"(anonymous_231)","decl":{"start":{"line":3390,"column":55},"end":{"line":3390,"column":56}},"loc":{"start":{"line":3390,"column":82},"end":{"line":3414,"column":1}},"line":3390},"232":{"name":"(anonymous_232)","decl":{"start":{"line":3421,"column":51},"end":{"line":3421,"column":52}},"loc":{"start":{"line":3421,"column":63},"end":{"line":3423,"column":1}},"line":3421},"233":{"name":"(anonymous_233)","decl":{"start":{"line":3427,"column":51},"end":{"line":3427,"column":52}},"loc":{"start":{"line":3427,"column":68},"end":{"line":3429,"column":1}},"line":3427},"234":{"name":"(anonymous_234)","decl":{"start":{"line":3436,"column":55},"end":{"line":3436,"column":56}},"loc":{"start":{"line":3436,"column":67},"end":{"line":3439,"column":1}},"line":3436},"235":{"name":"(anonymous_235)","decl":{"start":{"line":3443,"column":55},"end":{"line":3443,"column":56}},"loc":{"start":{"line":3443,"column":72},"end":{"line":3445,"column":1}},"line":3443},"236":{"name":"(anonymous_236)","decl":{"start":{"line":3453,"column":51},"end":{"line":3453,"column":52}},"loc":{"start":{"line":3453,"column":83},"end":{"line":3455,"column":1}},"line":3453},"237":{"name":"(anonymous_237)","decl":{"start":{"line":3458,"column":57},"end":{"line":3458,"column":58}},"loc":{"start":{"line":3458,"column":69},"end":{"line":3460,"column":1}},"line":3458},"238":{"name":"(anonymous_238)","decl":{"start":{"line":3469,"column":52},"end":{"line":3469,"column":53}},"loc":{"start":{"line":3469,"column":64},"end":{"line":3471,"column":1}},"line":3469},"239":{"name":"(anonymous_239)","decl":{"start":{"line":3475,"column":52},"end":{"line":3475,"column":53}},"loc":{"start":{"line":3475,"column":69},"end":{"line":3477,"column":1}},"line":3475},"240":{"name":"(anonymous_240)","decl":{"start":{"line":3491,"column":36},"end":{"line":3491,"column":37}},"loc":{"start":{"line":3491,"column":56},"end":{"line":3493,"column":1}},"line":3491},"241":{"name":"(anonymous_241)","decl":{"start":{"line":3518,"column":57},"end":{"line":3518,"column":58}},"loc":{"start":{"line":3518,"column":88},"end":{"line":3520,"column":3}},"line":3518},"242":{"name":"(anonymous_242)","decl":{"start":{"line":3532,"column":47},"end":{"line":3532,"column":48}},"loc":{"start":{"line":3532,"column":79},"end":{"line":3541,"column":3}},"line":3532},"243":{"name":"(anonymous_243)","decl":{"start":{"line":3550,"column":54},"end":{"line":3550,"column":55}},"loc":{"start":{"line":3550,"column":71},"end":{"line":3554,"column":1}},"line":3550},"244":{"name":"(anonymous_244)","decl":{"start":{"line":3564,"column":64},"end":{"line":3564,"column":65}},"loc":{"start":{"line":3564,"column":87},"end":{"line":3581,"column":1}},"line":3564},"245":{"name":"(anonymous_245)","decl":{"start":{"line":3588,"column":62},"end":{"line":3588,"column":63}},"loc":{"start":{"line":3588,"column":74},"end":{"line":3592,"column":1}},"line":3588},"246":{"name":"(anonymous_246)","decl":{"start":{"line":3602,"column":60},"end":{"line":3602,"column":61}},"loc":{"start":{"line":3602,"column":87},"end":{"line":3611,"column":1}},"line":3602},"247":{"name":"(anonymous_247)","decl":{"start":{"line":3618,"column":62},"end":{"line":3618,"column":63}},"loc":{"start":{"line":3618,"column":74},"end":{"line":3620,"column":1}},"line":3618},"248":{"name":"(anonymous_248)","decl":{"start":{"line":3628,"column":68},"end":{"line":3628,"column":69}},"loc":{"start":{"line":3628,"column":80},"end":{"line":3631,"column":1}},"line":3628},"249":{"name":"(anonymous_249)","decl":{"start":{"line":3641,"column":67},"end":{"line":3641,"column":68}},"loc":{"start":{"line":3641,"column":79},"end":{"line":3644,"column":1}},"line":3641},"250":{"name":"(anonymous_250)","decl":{"start":{"line":3648,"column":62},"end":{"line":3648,"column":63}},"loc":{"start":{"line":3648,"column":79},"end":{"line":3650,"column":1}},"line":3648},"251":{"name":"(anonymous_251)","decl":{"start":{"line":3657,"column":58},"end":{"line":3657,"column":59}},"loc":{"start":{"line":3657,"column":86},"end":{"line":3659,"column":1}},"line":3657},"252":{"name":"(anonymous_252)","decl":{"start":{"line":3662,"column":64},"end":{"line":3662,"column":65}},"loc":{"start":{"line":3662,"column":76},"end":{"line":3664,"column":1}},"line":3662},"253":{"name":"(anonymous_253)","decl":{"start":{"line":3678,"column":37},"end":{"line":3678,"column":38}},"loc":{"start":{"line":3678,"column":57},"end":{"line":3680,"column":1}},"line":3678},"254":{"name":"(anonymous_254)","decl":{"start":{"line":3705,"column":58},"end":{"line":3705,"column":59}},"loc":{"start":{"line":3705,"column":89},"end":{"line":3707,"column":3}},"line":3705},"255":{"name":"(anonymous_255)","decl":{"start":{"line":3719,"column":48},"end":{"line":3719,"column":49}},"loc":{"start":{"line":3719,"column":80},"end":{"line":3728,"column":3}},"line":3719},"256":{"name":"(anonymous_256)","decl":{"start":{"line":3737,"column":55},"end":{"line":3737,"column":56}},"loc":{"start":{"line":3737,"column":72},"end":{"line":3741,"column":1}},"line":3737},"257":{"name":"(anonymous_257)","decl":{"start":{"line":3751,"column":65},"end":{"line":3751,"column":66}},"loc":{"start":{"line":3751,"column":88},"end":{"line":3768,"column":1}},"line":3751},"258":{"name":"(anonymous_258)","decl":{"start":{"line":3775,"column":63},"end":{"line":3775,"column":64}},"loc":{"start":{"line":3775,"column":75},"end":{"line":3779,"column":1}},"line":3775},"259":{"name":"(anonymous_259)","decl":{"start":{"line":3789,"column":61},"end":{"line":3789,"column":62}},"loc":{"start":{"line":3789,"column":88},"end":{"line":3798,"column":1}},"line":3789},"260":{"name":"(anonymous_260)","decl":{"start":{"line":3805,"column":61},"end":{"line":3805,"column":62}},"loc":{"start":{"line":3805,"column":73},"end":{"line":3807,"column":1}},"line":3805},"261":{"name":"(anonymous_261)","decl":{"start":{"line":3815,"column":67},"end":{"line":3815,"column":68}},"loc":{"start":{"line":3815,"column":79},"end":{"line":3818,"column":1}},"line":3815},"262":{"name":"(anonymous_262)","decl":{"start":{"line":3828,"column":66},"end":{"line":3828,"column":67}},"loc":{"start":{"line":3828,"column":78},"end":{"line":3831,"column":1}},"line":3828},"263":{"name":"(anonymous_263)","decl":{"start":{"line":3835,"column":61},"end":{"line":3835,"column":62}},"loc":{"start":{"line":3835,"column":78},"end":{"line":3837,"column":1}},"line":3835},"264":{"name":"(anonymous_264)","decl":{"start":{"line":3844,"column":57},"end":{"line":3844,"column":58}},"loc":{"start":{"line":3844,"column":85},"end":{"line":3846,"column":1}},"line":3844},"265":{"name":"(anonymous_265)","decl":{"start":{"line":3849,"column":63},"end":{"line":3849,"column":64}},"loc":{"start":{"line":3849,"column":75},"end":{"line":3851,"column":1}},"line":3849},"266":{"name":"(anonymous_266)","decl":{"start":{"line":3865,"column":38},"end":{"line":3865,"column":39}},"loc":{"start":{"line":3865,"column":58},"end":{"line":3867,"column":1}},"line":3865},"267":{"name":"(anonymous_267)","decl":{"start":{"line":3892,"column":59},"end":{"line":3892,"column":60}},"loc":{"start":{"line":3892,"column":90},"end":{"line":3894,"column":3}},"line":3892},"268":{"name":"(anonymous_268)","decl":{"start":{"line":3906,"column":49},"end":{"line":3906,"column":50}},"loc":{"start":{"line":3906,"column":81},"end":{"line":3919,"column":3}},"line":3906},"269":{"name":"(anonymous_269)","decl":{"start":{"line":3928,"column":56},"end":{"line":3928,"column":57}},"loc":{"start":{"line":3928,"column":73},"end":{"line":3932,"column":1}},"line":3928},"270":{"name":"(anonymous_270)","decl":{"start":{"line":3942,"column":66},"end":{"line":3942,"column":67}},"loc":{"start":{"line":3942,"column":89},"end":{"line":3972,"column":1}},"line":3942},"271":{"name":"(anonymous_271)","decl":{"start":{"line":3979,"column":64},"end":{"line":3979,"column":65}},"loc":{"start":{"line":3979,"column":76},"end":{"line":3983,"column":1}},"line":3979},"272":{"name":"(anonymous_272)","decl":{"start":{"line":3993,"column":62},"end":{"line":3993,"column":63}},"loc":{"start":{"line":3993,"column":89},"end":{"line":4024,"column":1}},"line":3993},"273":{"name":"(anonymous_273)","decl":{"start":{"line":4031,"column":58},"end":{"line":4031,"column":59}},"loc":{"start":{"line":4031,"column":70},"end":{"line":4033,"column":1}},"line":4031},"274":{"name":"(anonymous_274)","decl":{"start":{"line":4037,"column":58},"end":{"line":4037,"column":59}},"loc":{"start":{"line":4037,"column":75},"end":{"line":4039,"column":1}},"line":4037},"275":{"name":"(anonymous_275)","decl":{"start":{"line":4046,"column":62},"end":{"line":4046,"column":63}},"loc":{"start":{"line":4046,"column":74},"end":{"line":4048,"column":1}},"line":4046},"276":{"name":"(anonymous_276)","decl":{"start":{"line":4056,"column":68},"end":{"line":4056,"column":69}},"loc":{"start":{"line":4056,"column":80},"end":{"line":4059,"column":1}},"line":4056},"277":{"name":"(anonymous_277)","decl":{"start":{"line":4069,"column":67},"end":{"line":4069,"column":68}},"loc":{"start":{"line":4069,"column":79},"end":{"line":4072,"column":1}},"line":4069},"278":{"name":"(anonymous_278)","decl":{"start":{"line":4076,"column":62},"end":{"line":4076,"column":63}},"loc":{"start":{"line":4076,"column":79},"end":{"line":4078,"column":1}},"line":4076},"279":{"name":"(anonymous_279)","decl":{"start":{"line":4085,"column":58},"end":{"line":4085,"column":59}},"loc":{"start":{"line":4085,"column":86},"end":{"line":4087,"column":1}},"line":4085},"280":{"name":"(anonymous_280)","decl":{"start":{"line":4090,"column":64},"end":{"line":4090,"column":65}},"loc":{"start":{"line":4090,"column":76},"end":{"line":4092,"column":1}},"line":4090},"281":{"name":"(anonymous_281)","decl":{"start":{"line":4099,"column":59},"end":{"line":4099,"column":60}},"loc":{"start":{"line":4099,"column":71},"end":{"line":4102,"column":1}},"line":4099},"282":{"name":"(anonymous_282)","decl":{"start":{"line":4106,"column":59},"end":{"line":4106,"column":60}},"loc":{"start":{"line":4106,"column":76},"end":{"line":4108,"column":1}},"line":4106},"283":{"name":"(anonymous_283)","decl":{"start":{"line":4116,"column":55},"end":{"line":4116,"column":56}},"loc":{"start":{"line":4116,"column":87},"end":{"line":4118,"column":1}},"line":4116},"284":{"name":"(anonymous_284)","decl":{"start":{"line":4121,"column":61},"end":{"line":4121,"column":62}},"loc":{"start":{"line":4121,"column":73},"end":{"line":4123,"column":1}},"line":4121},"285":{"name":"(anonymous_285)","decl":{"start":{"line":4132,"column":59},"end":{"line":4132,"column":60}},"loc":{"start":{"line":4132,"column":71},"end":{"line":4134,"column":1}},"line":4132},"286":{"name":"(anonymous_286)","decl":{"start":{"line":4138,"column":59},"end":{"line":4138,"column":60}},"loc":{"start":{"line":4138,"column":76},"end":{"line":4140,"column":1}},"line":4138},"287":{"name":"(anonymous_287)","decl":{"start":{"line":4154,"column":32},"end":{"line":4154,"column":33}},"loc":{"start":{"line":4154,"column":52},"end":{"line":4156,"column":1}},"line":4154},"288":{"name":"(anonymous_288)","decl":{"start":{"line":4181,"column":53},"end":{"line":4181,"column":54}},"loc":{"start":{"line":4181,"column":84},"end":{"line":4183,"column":3}},"line":4181},"289":{"name":"(anonymous_289)","decl":{"start":{"line":4195,"column":43},"end":{"line":4195,"column":44}},"loc":{"start":{"line":4195,"column":75},"end":{"line":4205,"column":3}},"line":4195},"290":{"name":"(anonymous_290)","decl":{"start":{"line":4214,"column":50},"end":{"line":4214,"column":51}},"loc":{"start":{"line":4214,"column":67},"end":{"line":4218,"column":1}},"line":4214},"291":{"name":"(anonymous_291)","decl":{"start":{"line":4228,"column":60},"end":{"line":4228,"column":61}},"loc":{"start":{"line":4228,"column":83},"end":{"line":4249,"column":1}},"line":4228},"292":{"name":"(anonymous_292)","decl":{"start":{"line":4256,"column":58},"end":{"line":4256,"column":59}},"loc":{"start":{"line":4256,"column":70},"end":{"line":4260,"column":1}},"line":4256},"293":{"name":"(anonymous_293)","decl":{"start":{"line":4270,"column":56},"end":{"line":4270,"column":57}},"loc":{"start":{"line":4270,"column":83},"end":{"line":4286,"column":1}},"line":4270},"294":{"name":"(anonymous_294)","decl":{"start":{"line":4293,"column":56},"end":{"line":4293,"column":57}},"loc":{"start":{"line":4293,"column":68},"end":{"line":4295,"column":1}},"line":4293},"295":{"name":"(anonymous_295)","decl":{"start":{"line":4303,"column":62},"end":{"line":4303,"column":63}},"loc":{"start":{"line":4303,"column":74},"end":{"line":4306,"column":1}},"line":4303},"296":{"name":"(anonymous_296)","decl":{"start":{"line":4316,"column":61},"end":{"line":4316,"column":62}},"loc":{"start":{"line":4316,"column":73},"end":{"line":4319,"column":1}},"line":4316},"297":{"name":"(anonymous_297)","decl":{"start":{"line":4323,"column":56},"end":{"line":4323,"column":57}},"loc":{"start":{"line":4323,"column":73},"end":{"line":4325,"column":1}},"line":4323},"298":{"name":"(anonymous_298)","decl":{"start":{"line":4332,"column":52},"end":{"line":4332,"column":53}},"loc":{"start":{"line":4332,"column":80},"end":{"line":4334,"column":1}},"line":4332},"299":{"name":"(anonymous_299)","decl":{"start":{"line":4337,"column":58},"end":{"line":4337,"column":59}},"loc":{"start":{"line":4337,"column":70},"end":{"line":4339,"column":1}},"line":4337},"300":{"name":"(anonymous_300)","decl":{"start":{"line":4346,"column":54},"end":{"line":4346,"column":55}},"loc":{"start":{"line":4346,"column":66},"end":{"line":4348,"column":1}},"line":4346},"301":{"name":"(anonymous_301)","decl":{"start":{"line":4356,"column":60},"end":{"line":4356,"column":61}},"loc":{"start":{"line":4356,"column":72},"end":{"line":4359,"column":1}},"line":4356},"302":{"name":"(anonymous_302)","decl":{"start":{"line":4369,"column":59},"end":{"line":4369,"column":60}},"loc":{"start":{"line":4369,"column":71},"end":{"line":4372,"column":1}},"line":4369},"303":{"name":"(anonymous_303)","decl":{"start":{"line":4376,"column":54},"end":{"line":4376,"column":55}},"loc":{"start":{"line":4376,"column":71},"end":{"line":4378,"column":1}},"line":4376},"304":{"name":"(anonymous_304)","decl":{"start":{"line":4392,"column":33},"end":{"line":4392,"column":34}},"loc":{"start":{"line":4392,"column":53},"end":{"line":4394,"column":1}},"line":4392},"305":{"name":"(anonymous_305)","decl":{"start":{"line":4419,"column":54},"end":{"line":4419,"column":55}},"loc":{"start":{"line":4419,"column":85},"end":{"line":4421,"column":3}},"line":4419},"306":{"name":"(anonymous_306)","decl":{"start":{"line":4433,"column":44},"end":{"line":4433,"column":45}},"loc":{"start":{"line":4433,"column":76},"end":{"line":4442,"column":3}},"line":4433},"307":{"name":"(anonymous_307)","decl":{"start":{"line":4451,"column":51},"end":{"line":4451,"column":52}},"loc":{"start":{"line":4451,"column":68},"end":{"line":4455,"column":1}},"line":4451},"308":{"name":"(anonymous_308)","decl":{"start":{"line":4465,"column":61},"end":{"line":4465,"column":62}},"loc":{"start":{"line":4465,"column":84},"end":{"line":4482,"column":1}},"line":4465},"309":{"name":"(anonymous_309)","decl":{"start":{"line":4489,"column":59},"end":{"line":4489,"column":60}},"loc":{"start":{"line":4489,"column":71},"end":{"line":4493,"column":1}},"line":4489},"310":{"name":"(anonymous_310)","decl":{"start":{"line":4503,"column":57},"end":{"line":4503,"column":58}},"loc":{"start":{"line":4503,"column":84},"end":{"line":4512,"column":1}},"line":4503},"311":{"name":"(anonymous_311)","decl":{"start":{"line":4519,"column":57},"end":{"line":4519,"column":58}},"loc":{"start":{"line":4519,"column":69},"end":{"line":4521,"column":1}},"line":4519},"312":{"name":"(anonymous_312)","decl":{"start":{"line":4529,"column":63},"end":{"line":4529,"column":64}},"loc":{"start":{"line":4529,"column":75},"end":{"line":4532,"column":1}},"line":4529},"313":{"name":"(anonymous_313)","decl":{"start":{"line":4542,"column":62},"end":{"line":4542,"column":63}},"loc":{"start":{"line":4542,"column":74},"end":{"line":4545,"column":1}},"line":4542},"314":{"name":"(anonymous_314)","decl":{"start":{"line":4549,"column":57},"end":{"line":4549,"column":58}},"loc":{"start":{"line":4549,"column":74},"end":{"line":4551,"column":1}},"line":4549},"315":{"name":"(anonymous_315)","decl":{"start":{"line":4558,"column":53},"end":{"line":4558,"column":54}},"loc":{"start":{"line":4558,"column":81},"end":{"line":4560,"column":1}},"line":4558},"316":{"name":"(anonymous_316)","decl":{"start":{"line":4563,"column":59},"end":{"line":4563,"column":60}},"loc":{"start":{"line":4563,"column":71},"end":{"line":4565,"column":1}},"line":4563},"317":{"name":"(anonymous_317)","decl":{"start":{"line":4579,"column":34},"end":{"line":4579,"column":35}},"loc":{"start":{"line":4579,"column":54},"end":{"line":4581,"column":1}},"line":4579},"318":{"name":"(anonymous_318)","decl":{"start":{"line":4599,"column":55},"end":{"line":4599,"column":56}},"loc":{"start":{"line":4599,"column":86},"end":{"line":4601,"column":3}},"line":4599},"319":{"name":"(anonymous_319)","decl":{"start":{"line":4613,"column":45},"end":{"line":4613,"column":46}},"loc":{"start":{"line":4613,"column":77},"end":{"line":4624,"column":3}},"line":4613},"320":{"name":"(anonymous_320)","decl":{"start":{"line":4633,"column":52},"end":{"line":4633,"column":53}},"loc":{"start":{"line":4633,"column":69},"end":{"line":4637,"column":1}},"line":4633},"321":{"name":"(anonymous_321)","decl":{"start":{"line":4647,"column":62},"end":{"line":4647,"column":63}},"loc":{"start":{"line":4647,"column":85},"end":{"line":4672,"column":1}},"line":4647},"322":{"name":"(anonymous_322)","decl":{"start":{"line":4679,"column":60},"end":{"line":4679,"column":61}},"loc":{"start":{"line":4679,"column":72},"end":{"line":4683,"column":1}},"line":4679},"323":{"name":"(anonymous_323)","decl":{"start":{"line":4693,"column":58},"end":{"line":4693,"column":59}},"loc":{"start":{"line":4693,"column":85},"end":{"line":4716,"column":1}},"line":4693},"324":{"name":"(anonymous_324)","decl":{"start":{"line":4723,"column":54},"end":{"line":4723,"column":55}},"loc":{"start":{"line":4723,"column":66},"end":{"line":4725,"column":1}},"line":4723},"325":{"name":"(anonymous_325)","decl":{"start":{"line":4729,"column":54},"end":{"line":4729,"column":55}},"loc":{"start":{"line":4729,"column":71},"end":{"line":4731,"column":1}},"line":4729},"326":{"name":"(anonymous_326)","decl":{"start":{"line":4738,"column":60},"end":{"line":4738,"column":61}},"loc":{"start":{"line":4738,"column":72},"end":{"line":4740,"column":1}},"line":4738},"327":{"name":"(anonymous_327)","decl":{"start":{"line":4748,"column":66},"end":{"line":4748,"column":67}},"loc":{"start":{"line":4748,"column":78},"end":{"line":4751,"column":1}},"line":4748},"328":{"name":"(anonymous_328)","decl":{"start":{"line":4761,"column":65},"end":{"line":4761,"column":66}},"loc":{"start":{"line":4761,"column":77},"end":{"line":4764,"column":1}},"line":4761},"329":{"name":"(anonymous_329)","decl":{"start":{"line":4768,"column":60},"end":{"line":4768,"column":61}},"loc":{"start":{"line":4768,"column":77},"end":{"line":4770,"column":1}},"line":4768},"330":{"name":"(anonymous_330)","decl":{"start":{"line":4777,"column":58},"end":{"line":4777,"column":59}},"loc":{"start":{"line":4777,"column":70},"end":{"line":4779,"column":1}},"line":4777},"331":{"name":"(anonymous_331)","decl":{"start":{"line":4783,"column":58},"end":{"line":4783,"column":59}},"loc":{"start":{"line":4783,"column":75},"end":{"line":4785,"column":1}},"line":4783},"332":{"name":"(anonymous_332)","decl":{"start":{"line":4799,"column":26},"end":{"line":4799,"column":27}},"loc":{"start":{"line":4799,"column":46},"end":{"line":4801,"column":1}},"line":4799},"333":{"name":"(anonymous_333)","decl":{"start":{"line":4819,"column":47},"end":{"line":4819,"column":48}},"loc":{"start":{"line":4819,"column":78},"end":{"line":4821,"column":3}},"line":4819},"334":{"name":"(anonymous_334)","decl":{"start":{"line":4833,"column":37},"end":{"line":4833,"column":38}},"loc":{"start":{"line":4833,"column":69},"end":{"line":4842,"column":3}},"line":4833},"335":{"name":"(anonymous_335)","decl":{"start":{"line":4851,"column":44},"end":{"line":4851,"column":45}},"loc":{"start":{"line":4851,"column":61},"end":{"line":4855,"column":1}},"line":4851},"336":{"name":"(anonymous_336)","decl":{"start":{"line":4865,"column":54},"end":{"line":4865,"column":55}},"loc":{"start":{"line":4865,"column":77},"end":{"line":4882,"column":1}},"line":4865},"337":{"name":"(anonymous_337)","decl":{"start":{"line":4889,"column":52},"end":{"line":4889,"column":53}},"loc":{"start":{"line":4889,"column":64},"end":{"line":4893,"column":1}},"line":4889},"338":{"name":"(anonymous_338)","decl":{"start":{"line":4903,"column":50},"end":{"line":4903,"column":51}},"loc":{"start":{"line":4903,"column":77},"end":{"line":4912,"column":1}},"line":4903},"339":{"name":"(anonymous_339)","decl":{"start":{"line":4919,"column":47},"end":{"line":4919,"column":48}},"loc":{"start":{"line":4919,"column":59},"end":{"line":4921,"column":1}},"line":4919},"340":{"name":"(anonymous_340)","decl":{"start":{"line":4925,"column":47},"end":{"line":4925,"column":48}},"loc":{"start":{"line":4925,"column":64},"end":{"line":4927,"column":1}},"line":4925},"341":{"name":"(anonymous_341)","decl":{"start":{"line":4941,"column":34},"end":{"line":4941,"column":35}},"loc":{"start":{"line":4941,"column":54},"end":{"line":4943,"column":1}},"line":4941},"342":{"name":"(anonymous_342)","decl":{"start":{"line":4961,"column":55},"end":{"line":4961,"column":56}},"loc":{"start":{"line":4961,"column":86},"end":{"line":4963,"column":3}},"line":4961},"343":{"name":"(anonymous_343)","decl":{"start":{"line":4975,"column":45},"end":{"line":4975,"column":46}},"loc":{"start":{"line":4975,"column":77},"end":{"line":4985,"column":3}},"line":4975},"344":{"name":"(anonymous_344)","decl":{"start":{"line":4994,"column":52},"end":{"line":4994,"column":53}},"loc":{"start":{"line":4994,"column":69},"end":{"line":4998,"column":1}},"line":4994},"345":{"name":"(anonymous_345)","decl":{"start":{"line":5008,"column":62},"end":{"line":5008,"column":63}},"loc":{"start":{"line":5008,"column":85},"end":{"line":5029,"column":1}},"line":5008},"346":{"name":"(anonymous_346)","decl":{"start":{"line":5036,"column":60},"end":{"line":5036,"column":61}},"loc":{"start":{"line":5036,"column":72},"end":{"line":5040,"column":1}},"line":5036},"347":{"name":"(anonymous_347)","decl":{"start":{"line":5050,"column":58},"end":{"line":5050,"column":59}},"loc":{"start":{"line":5050,"column":85},"end":{"line":5066,"column":1}},"line":5050},"348":{"name":"(anonymous_348)","decl":{"start":{"line":5073,"column":54},"end":{"line":5073,"column":55}},"loc":{"start":{"line":5073,"column":66},"end":{"line":5075,"column":1}},"line":5073},"349":{"name":"(anonymous_349)","decl":{"start":{"line":5079,"column":54},"end":{"line":5079,"column":55}},"loc":{"start":{"line":5079,"column":71},"end":{"line":5081,"column":1}},"line":5079},"350":{"name":"(anonymous_350)","decl":{"start":{"line":5088,"column":57},"end":{"line":5088,"column":58}},"loc":{"start":{"line":5088,"column":69},"end":{"line":5090,"column":1}},"line":5088},"351":{"name":"(anonymous_351)","decl":{"start":{"line":5098,"column":63},"end":{"line":5098,"column":64}},"loc":{"start":{"line":5098,"column":75},"end":{"line":5101,"column":1}},"line":5098},"352":{"name":"(anonymous_352)","decl":{"start":{"line":5111,"column":62},"end":{"line":5111,"column":63}},"loc":{"start":{"line":5111,"column":74},"end":{"line":5114,"column":1}},"line":5111},"353":{"name":"(anonymous_353)","decl":{"start":{"line":5118,"column":57},"end":{"line":5118,"column":58}},"loc":{"start":{"line":5118,"column":74},"end":{"line":5120,"column":1}},"line":5118},"354":{"name":"(anonymous_354)","decl":{"start":{"line":5134,"column":31},"end":{"line":5134,"column":32}},"loc":{"start":{"line":5134,"column":51},"end":{"line":5136,"column":1}},"line":5134},"355":{"name":"(anonymous_355)","decl":{"start":{"line":5154,"column":52},"end":{"line":5154,"column":53}},"loc":{"start":{"line":5154,"column":83},"end":{"line":5156,"column":3}},"line":5154},"356":{"name":"(anonymous_356)","decl":{"start":{"line":5168,"column":42},"end":{"line":5168,"column":43}},"loc":{"start":{"line":5168,"column":74},"end":{"line":5179,"column":3}},"line":5168},"357":{"name":"(anonymous_357)","decl":{"start":{"line":5188,"column":49},"end":{"line":5188,"column":50}},"loc":{"start":{"line":5188,"column":66},"end":{"line":5192,"column":1}},"line":5188},"358":{"name":"(anonymous_358)","decl":{"start":{"line":5202,"column":59},"end":{"line":5202,"column":60}},"loc":{"start":{"line":5202,"column":82},"end":{"line":5227,"column":1}},"line":5202},"359":{"name":"(anonymous_359)","decl":{"start":{"line":5234,"column":57},"end":{"line":5234,"column":58}},"loc":{"start":{"line":5234,"column":69},"end":{"line":5238,"column":1}},"line":5234},"360":{"name":"(anonymous_360)","decl":{"start":{"line":5248,"column":55},"end":{"line":5248,"column":56}},"loc":{"start":{"line":5248,"column":82},"end":{"line":5271,"column":1}},"line":5248},"361":{"name":"(anonymous_361)","decl":{"start":{"line":5278,"column":53},"end":{"line":5278,"column":54}},"loc":{"start":{"line":5278,"column":65},"end":{"line":5280,"column":1}},"line":5278},"362":{"name":"(anonymous_362)","decl":{"start":{"line":5288,"column":59},"end":{"line":5288,"column":60}},"loc":{"start":{"line":5288,"column":71},"end":{"line":5291,"column":1}},"line":5288},"363":{"name":"(anonymous_363)","decl":{"start":{"line":5301,"column":58},"end":{"line":5301,"column":59}},"loc":{"start":{"line":5301,"column":70},"end":{"line":5304,"column":1}},"line":5301},"364":{"name":"(anonymous_364)","decl":{"start":{"line":5308,"column":53},"end":{"line":5308,"column":54}},"loc":{"start":{"line":5308,"column":70},"end":{"line":5310,"column":1}},"line":5308},"365":{"name":"(anonymous_365)","decl":{"start":{"line":5317,"column":55},"end":{"line":5317,"column":56}},"loc":{"start":{"line":5317,"column":67},"end":{"line":5319,"column":1}},"line":5317},"366":{"name":"(anonymous_366)","decl":{"start":{"line":5323,"column":55},"end":{"line":5323,"column":56}},"loc":{"start":{"line":5323,"column":72},"end":{"line":5325,"column":1}},"line":5323},"367":{"name":"(anonymous_367)","decl":{"start":{"line":5332,"column":49},"end":{"line":5332,"column":50}},"loc":{"start":{"line":5332,"column":61},"end":{"line":5334,"column":1}},"line":5332},"368":{"name":"(anonymous_368)","decl":{"start":{"line":5338,"column":49},"end":{"line":5338,"column":50}},"loc":{"start":{"line":5338,"column":66},"end":{"line":5340,"column":1}},"line":5338},"369":{"name":"(anonymous_369)","decl":{"start":{"line":5354,"column":32},"end":{"line":5354,"column":33}},"loc":{"start":{"line":5354,"column":52},"end":{"line":5356,"column":1}},"line":5354},"370":{"name":"(anonymous_370)","decl":{"start":{"line":5381,"column":53},"end":{"line":5381,"column":54}},"loc":{"start":{"line":5381,"column":84},"end":{"line":5383,"column":3}},"line":5381},"371":{"name":"(anonymous_371)","decl":{"start":{"line":5395,"column":43},"end":{"line":5395,"column":44}},"loc":{"start":{"line":5395,"column":75},"end":{"line":5406,"column":3}},"line":5395},"372":{"name":"(anonymous_372)","decl":{"start":{"line":5415,"column":50},"end":{"line":5415,"column":51}},"loc":{"start":{"line":5415,"column":67},"end":{"line":5419,"column":1}},"line":5415},"373":{"name":"(anonymous_373)","decl":{"start":{"line":5429,"column":60},"end":{"line":5429,"column":61}},"loc":{"start":{"line":5429,"column":83},"end":{"line":5454,"column":1}},"line":5429},"374":{"name":"(anonymous_374)","decl":{"start":{"line":5461,"column":58},"end":{"line":5461,"column":59}},"loc":{"start":{"line":5461,"column":70},"end":{"line":5465,"column":1}},"line":5461},"375":{"name":"(anonymous_375)","decl":{"start":{"line":5475,"column":56},"end":{"line":5475,"column":57}},"loc":{"start":{"line":5475,"column":83},"end":{"line":5498,"column":1}},"line":5475},"376":{"name":"(anonymous_376)","decl":{"start":{"line":5505,"column":52},"end":{"line":5505,"column":53}},"loc":{"start":{"line":5505,"column":64},"end":{"line":5507,"column":1}},"line":5505},"377":{"name":"(anonymous_377)","decl":{"start":{"line":5511,"column":52},"end":{"line":5511,"column":53}},"loc":{"start":{"line":5511,"column":69},"end":{"line":5513,"column":1}},"line":5511},"378":{"name":"(anonymous_378)","decl":{"start":{"line":5520,"column":56},"end":{"line":5520,"column":57}},"loc":{"start":{"line":5520,"column":68},"end":{"line":5522,"column":1}},"line":5520},"379":{"name":"(anonymous_379)","decl":{"start":{"line":5530,"column":62},"end":{"line":5530,"column":63}},"loc":{"start":{"line":5530,"column":74},"end":{"line":5533,"column":1}},"line":5530},"380":{"name":"(anonymous_380)","decl":{"start":{"line":5543,"column":61},"end":{"line":5543,"column":62}},"loc":{"start":{"line":5543,"column":73},"end":{"line":5546,"column":1}},"line":5543},"381":{"name":"(anonymous_381)","decl":{"start":{"line":5550,"column":56},"end":{"line":5550,"column":57}},"loc":{"start":{"line":5550,"column":73},"end":{"line":5552,"column":1}},"line":5550},"382":{"name":"(anonymous_382)","decl":{"start":{"line":5559,"column":52},"end":{"line":5559,"column":53}},"loc":{"start":{"line":5559,"column":80},"end":{"line":5561,"column":1}},"line":5559},"383":{"name":"(anonymous_383)","decl":{"start":{"line":5564,"column":58},"end":{"line":5564,"column":59}},"loc":{"start":{"line":5564,"column":70},"end":{"line":5566,"column":1}},"line":5564},"384":{"name":"(anonymous_384)","decl":{"start":{"line":5575,"column":53},"end":{"line":5575,"column":54}},"loc":{"start":{"line":5575,"column":65},"end":{"line":5577,"column":1}},"line":5575},"385":{"name":"(anonymous_385)","decl":{"start":{"line":5581,"column":53},"end":{"line":5581,"column":54}},"loc":{"start":{"line":5581,"column":70},"end":{"line":5583,"column":1}},"line":5581},"386":{"name":"(anonymous_386)","decl":{"start":{"line":5597,"column":38},"end":{"line":5597,"column":39}},"loc":{"start":{"line":5597,"column":58},"end":{"line":5599,"column":1}},"line":5597},"387":{"name":"(anonymous_387)","decl":{"start":{"line":5617,"column":59},"end":{"line":5617,"column":60}},"loc":{"start":{"line":5617,"column":90},"end":{"line":5619,"column":3}},"line":5617},"388":{"name":"(anonymous_388)","decl":{"start":{"line":5631,"column":49},"end":{"line":5631,"column":50}},"loc":{"start":{"line":5631,"column":81},"end":{"line":5640,"column":3}},"line":5631},"389":{"name":"(anonymous_389)","decl":{"start":{"line":5649,"column":56},"end":{"line":5649,"column":57}},"loc":{"start":{"line":5649,"column":73},"end":{"line":5653,"column":1}},"line":5649},"390":{"name":"(anonymous_390)","decl":{"start":{"line":5663,"column":66},"end":{"line":5663,"column":67}},"loc":{"start":{"line":5663,"column":89},"end":{"line":5676,"column":1}},"line":5663},"391":{"name":"(anonymous_391)","decl":{"start":{"line":5683,"column":64},"end":{"line":5683,"column":65}},"loc":{"start":{"line":5683,"column":76},"end":{"line":5687,"column":1}},"line":5683},"392":{"name":"(anonymous_392)","decl":{"start":{"line":5697,"column":62},"end":{"line":5697,"column":63}},"loc":{"start":{"line":5697,"column":89},"end":{"line":5699,"column":1}},"line":5697},"393":{"name":"(anonymous_393)","decl":{"start":{"line":5713,"column":39},"end":{"line":5713,"column":40}},"loc":{"start":{"line":5713,"column":59},"end":{"line":5715,"column":1}},"line":5713},"394":{"name":"(anonymous_394)","decl":{"start":{"line":5733,"column":60},"end":{"line":5733,"column":61}},"loc":{"start":{"line":5733,"column":91},"end":{"line":5735,"column":3}},"line":5733},"395":{"name":"(anonymous_395)","decl":{"start":{"line":5747,"column":50},"end":{"line":5747,"column":51}},"loc":{"start":{"line":5747,"column":82},"end":{"line":5757,"column":3}},"line":5747},"396":{"name":"(anonymous_396)","decl":{"start":{"line":5766,"column":57},"end":{"line":5766,"column":58}},"loc":{"start":{"line":5766,"column":74},"end":{"line":5770,"column":1}},"line":5766},"397":{"name":"(anonymous_397)","decl":{"start":{"line":5780,"column":67},"end":{"line":5780,"column":68}},"loc":{"start":{"line":5780,"column":90},"end":{"line":5802,"column":1}},"line":5780},"398":{"name":"(anonymous_398)","decl":{"start":{"line":5809,"column":65},"end":{"line":5809,"column":66}},"loc":{"start":{"line":5809,"column":77},"end":{"line":5813,"column":1}},"line":5809},"399":{"name":"(anonymous_399)","decl":{"start":{"line":5823,"column":63},"end":{"line":5823,"column":64}},"loc":{"start":{"line":5823,"column":90},"end":{"line":5840,"column":1}},"line":5823},"400":{"name":"(anonymous_400)","decl":{"start":{"line":5847,"column":59},"end":{"line":5847,"column":60}},"loc":{"start":{"line":5847,"column":71},"end":{"line":5849,"column":1}},"line":5847},"401":{"name":"(anonymous_401)","decl":{"start":{"line":5853,"column":59},"end":{"line":5853,"column":60}},"loc":{"start":{"line":5853,"column":76},"end":{"line":5855,"column":1}},"line":5853},"402":{"name":"(anonymous_402)","decl":{"start":{"line":5862,"column":64},"end":{"line":5862,"column":65}},"loc":{"start":{"line":5862,"column":76},"end":{"line":5865,"column":1}},"line":5862},"403":{"name":"(anonymous_403)","decl":{"start":{"line":5869,"column":64},"end":{"line":5869,"column":65}},"loc":{"start":{"line":5869,"column":81},"end":{"line":5871,"column":1}},"line":5869},"404":{"name":"(anonymous_404)","decl":{"start":{"line":5874,"column":66},"end":{"line":5874,"column":67}},"loc":{"start":{"line":5874,"column":78},"end":{"line":5876,"column":1}},"line":5874},"405":{"name":"(anonymous_405)","decl":{"start":{"line":5883,"column":64},"end":{"line":5883,"column":65}},"loc":{"start":{"line":5883,"column":76},"end":{"line":5885,"column":1}},"line":5883},"406":{"name":"(anonymous_406)","decl":{"start":{"line":5899,"column":39},"end":{"line":5899,"column":40}},"loc":{"start":{"line":5899,"column":59},"end":{"line":5901,"column":1}},"line":5899},"407":{"name":"(anonymous_407)","decl":{"start":{"line":5919,"column":60},"end":{"line":5919,"column":61}},"loc":{"start":{"line":5919,"column":91},"end":{"line":5921,"column":3}},"line":5919},"408":{"name":"(anonymous_408)","decl":{"start":{"line":5933,"column":50},"end":{"line":5933,"column":51}},"loc":{"start":{"line":5933,"column":82},"end":{"line":5942,"column":3}},"line":5933},"409":{"name":"(anonymous_409)","decl":{"start":{"line":5951,"column":57},"end":{"line":5951,"column":58}},"loc":{"start":{"line":5951,"column":74},"end":{"line":5955,"column":1}},"line":5951},"410":{"name":"(anonymous_410)","decl":{"start":{"line":5965,"column":67},"end":{"line":5965,"column":68}},"loc":{"start":{"line":5965,"column":90},"end":{"line":5983,"column":1}},"line":5965},"411":{"name":"(anonymous_411)","decl":{"start":{"line":5990,"column":65},"end":{"line":5990,"column":66}},"loc":{"start":{"line":5990,"column":77},"end":{"line":5994,"column":1}},"line":5990},"412":{"name":"(anonymous_412)","decl":{"start":{"line":6004,"column":63},"end":{"line":6004,"column":64}},"loc":{"start":{"line":6004,"column":90},"end":{"line":6014,"column":1}},"line":6004},"413":{"name":"(anonymous_413)","decl":{"start":{"line":6021,"column":64},"end":{"line":6021,"column":65}},"loc":{"start":{"line":6021,"column":76},"end":{"line":6024,"column":1}},"line":6021},"414":{"name":"(anonymous_414)","decl":{"start":{"line":6028,"column":64},"end":{"line":6028,"column":65}},"loc":{"start":{"line":6028,"column":81},"end":{"line":6030,"column":1}},"line":6028},"415":{"name":"(anonymous_415)","decl":{"start":{"line":6033,"column":66},"end":{"line":6033,"column":67}},"loc":{"start":{"line":6033,"column":78},"end":{"line":6035,"column":1}},"line":6033},"416":{"name":"(anonymous_416)","decl":{"start":{"line":6042,"column":64},"end":{"line":6042,"column":65}},"loc":{"start":{"line":6042,"column":76},"end":{"line":6044,"column":1}},"line":6042}},"branchMap":{"0":{"loc":{"start":{"line":61,"column":0},"end":{"line":63,"column":1}},"type":"if","locations":[{"start":{"line":61,"column":0},"end":{"line":63,"column":1}},{"start":{"line":61,"column":0},"end":{"line":63,"column":1}}],"line":61},"1":{"loc":{"start":{"line":61,"column":4},"end":{"line":61,"column":27}},"type":"binary-expr","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":14}},{"start":{"line":61,"column":18},"end":{"line":61,"column":27}}],"line":61},"2":{"loc":{"start":{"line":66,"column":0},"end":{"line":109,"column":1}},"type":"if","locations":[{"start":{"line":66,"column":0},"end":{"line":109,"column":1}},{"start":{"line":66,"column":0},"end":{"line":109,"column":1}}],"line":66},"3":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{"line":104,"column":4},"end":{"line":106,"column":5}}],"line":104},"4":{"loc":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},{"start":{"line":133,"column":4},"end":{"line":135,"column":5}}],"line":133},"5":{"loc":{"start":{"line":137,"column":4},"end":{"line":176,"column":15}},"type":"switch","locations":[{"start":{"line":138,"column":6},"end":{"line":141,"column":14}},{"start":{"line":142,"column":6},"end":{"line":145,"column":14}},{"start":{"line":146,"column":6},"end":{"line":149,"column":14}},{"start":{"line":150,"column":6},"end":{"line":153,"column":14}},{"start":{"line":154,"column":6},"end":{"line":157,"column":14}},{"start":{"line":158,"column":6},"end":{"line":161,"column":14}},{"start":{"line":162,"column":6},"end":{"line":165,"column":14}},{"start":{"line":166,"column":6},"end":{"line":169,"column":14}},{"start":{"line":170,"column":6},"end":{"line":173,"column":14}},{"start":{"line":174,"column":6},"end":{"line":176,"column":14}}],"line":137},"6":{"loc":{"start":{"line":204,"column":2},"end":{"line":209,"column":3}},"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":209,"column":3}},{"start":{"line":204,"column":2},"end":{"line":209,"column":3}}],"line":204},"7":{"loc":{"start":{"line":211,"column":2},"end":{"line":216,"column":3}},"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":216,"column":3}},{"start":{"line":211,"column":2},"end":{"line":216,"column":3}}],"line":211},"8":{"loc":{"start":{"line":218,"column":2},"end":{"line":223,"column":3}},"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":223,"column":3}},{"start":{"line":218,"column":2},"end":{"line":223,"column":3}}],"line":218},"9":{"loc":{"start":{"line":225,"column":2},"end":{"line":230,"column":3}},"type":"if","locations":[{"start":{"line":225,"column":2},"end":{"line":230,"column":3}},{"start":{"line":225,"column":2},"end":{"line":230,"column":3}}],"line":225},"10":{"loc":{"start":{"line":232,"column":2},"end":{"line":237,"column":3}},"type":"if","locations":[{"start":{"line":232,"column":2},"end":{"line":237,"column":3}},{"start":{"line":232,"column":2},"end":{"line":237,"column":3}}],"line":232},"11":{"loc":{"start":{"line":239,"column":2},"end":{"line":244,"column":3}},"type":"if","locations":[{"start":{"line":239,"column":2},"end":{"line":244,"column":3}},{"start":{"line":239,"column":2},"end":{"line":244,"column":3}}],"line":239},"12":{"loc":{"start":{"line":246,"column":2},"end":{"line":251,"column":3}},"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":251,"column":3}},{"start":{"line":246,"column":2},"end":{"line":251,"column":3}}],"line":246},"13":{"loc":{"start":{"line":253,"column":2},"end":{"line":258,"column":3}},"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":258,"column":3}},{"start":{"line":253,"column":2},"end":{"line":258,"column":3}}],"line":253},"14":{"loc":{"start":{"line":260,"column":2},"end":{"line":265,"column":3}},"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":265,"column":3}},{"start":{"line":260,"column":2},"end":{"line":265,"column":3}}],"line":260},"15":{"loc":{"start":{"line":493,"column":0},"end":{"line":495,"column":1}},"type":"if","locations":[{"start":{"line":493,"column":0},"end":{"line":495,"column":1}},{"start":{"line":493,"column":0},"end":{"line":495,"column":1}}],"line":493},"16":{"loc":{"start":{"line":493,"column":4},"end":{"line":493,"column":27}},"type":"binary-expr","locations":[{"start":{"line":493,"column":4},"end":{"line":493,"column":14}},{"start":{"line":493,"column":18},"end":{"line":493,"column":27}}],"line":493},"17":{"loc":{"start":{"line":498,"column":0},"end":{"line":534,"column":1}},"type":"if","locations":[{"start":{"line":498,"column":0},"end":{"line":534,"column":1}},{"start":{"line":498,"column":0},"end":{"line":534,"column":1}}],"line":498},"18":{"loc":{"start":{"line":525,"column":14},"end":{"line":525,"column":89}},"type":"binary-expr","locations":[{"start":{"line":525,"column":15},"end":{"line":525,"column":34}},{"start":{"line":525,"column":39},"end":{"line":525,"column":89}}],"line":525},"19":{"loc":{"start":{"line":529,"column":4},"end":{"line":531,"column":5}},"type":"if","locations":[{"start":{"line":529,"column":4},"end":{"line":531,"column":5}},{"start":{"line":529,"column":4},"end":{"line":531,"column":5}}],"line":529},"20":{"loc":{"start":{"line":558,"column":4},"end":{"line":560,"column":5}},"type":"if","locations":[{"start":{"line":558,"column":4},"end":{"line":560,"column":5}},{"start":{"line":558,"column":4},"end":{"line":560,"column":5}}],"line":558},"21":{"loc":{"start":{"line":562,"column":4},"end":{"line":574,"column":15}},"type":"switch","locations":[{"start":{"line":563,"column":6},"end":{"line":567,"column":14}},{"start":{"line":568,"column":6},"end":{"line":571,"column":14}},{"start":{"line":572,"column":6},"end":{"line":574,"column":14}}],"line":562},"22":{"loc":{"start":{"line":602,"column":2},"end":{"line":608,"column":3}},"type":"if","locations":[{"start":{"line":602,"column":2},"end":{"line":608,"column":3}},{"start":{"line":602,"column":2},"end":{"line":608,"column":3}}],"line":602},"23":{"loc":{"start":{"line":610,"column":2},"end":{"line":615,"column":3}},"type":"if","locations":[{"start":{"line":610,"column":2},"end":{"line":615,"column":3}},{"start":{"line":610,"column":2},"end":{"line":615,"column":3}}],"line":610},"24":{"loc":{"start":{"line":703,"column":0},"end":{"line":705,"column":1}},"type":"if","locations":[{"start":{"line":703,"column":0},"end":{"line":705,"column":1}},{"start":{"line":703,"column":0},"end":{"line":705,"column":1}}],"line":703},"25":{"loc":{"start":{"line":703,"column":4},"end":{"line":703,"column":27}},"type":"binary-expr","locations":[{"start":{"line":703,"column":4},"end":{"line":703,"column":14}},{"start":{"line":703,"column":18},"end":{"line":703,"column":27}}],"line":703},"26":{"loc":{"start":{"line":708,"column":0},"end":{"line":744,"column":1}},"type":"if","locations":[{"start":{"line":708,"column":0},"end":{"line":744,"column":1}},{"start":{"line":708,"column":0},"end":{"line":744,"column":1}}],"line":708},"27":{"loc":{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},"type":"if","locations":[{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},{"start":{"line":739,"column":4},"end":{"line":741,"column":5}}],"line":739},"28":{"loc":{"start":{"line":768,"column":4},"end":{"line":770,"column":5}},"type":"if","locations":[{"start":{"line":768,"column":4},"end":{"line":770,"column":5}},{"start":{"line":768,"column":4},"end":{"line":770,"column":5}}],"line":768},"29":{"loc":{"start":{"line":772,"column":4},"end":{"line":783,"column":15}},"type":"switch","locations":[{"start":{"line":773,"column":6},"end":{"line":776,"column":14}},{"start":{"line":777,"column":6},"end":{"line":780,"column":14}},{"start":{"line":781,"column":6},"end":{"line":783,"column":14}}],"line":772},"30":{"loc":{"start":{"line":811,"column":2},"end":{"line":816,"column":3}},"type":"if","locations":[{"start":{"line":811,"column":2},"end":{"line":816,"column":3}},{"start":{"line":811,"column":2},"end":{"line":816,"column":3}}],"line":811},"31":{"loc":{"start":{"line":818,"column":2},"end":{"line":823,"column":3}},"type":"if","locations":[{"start":{"line":818,"column":2},"end":{"line":823,"column":3}},{"start":{"line":818,"column":2},"end":{"line":823,"column":3}}],"line":818},"32":{"loc":{"start":{"line":896,"column":0},"end":{"line":898,"column":1}},"type":"if","locations":[{"start":{"line":896,"column":0},"end":{"line":898,"column":1}},{"start":{"line":896,"column":0},"end":{"line":898,"column":1}}],"line":896},"33":{"loc":{"start":{"line":896,"column":4},"end":{"line":896,"column":27}},"type":"binary-expr","locations":[{"start":{"line":896,"column":4},"end":{"line":896,"column":14}},{"start":{"line":896,"column":18},"end":{"line":896,"column":27}}],"line":896},"34":{"loc":{"start":{"line":901,"column":0},"end":{"line":937,"column":1}},"type":"if","locations":[{"start":{"line":901,"column":0},"end":{"line":937,"column":1}},{"start":{"line":901,"column":0},"end":{"line":937,"column":1}}],"line":901},"35":{"loc":{"start":{"line":932,"column":4},"end":{"line":934,"column":5}},"type":"if","locations":[{"start":{"line":932,"column":4},"end":{"line":934,"column":5}},{"start":{"line":932,"column":4},"end":{"line":934,"column":5}}],"line":932},"36":{"loc":{"start":{"line":961,"column":4},"end":{"line":963,"column":5}},"type":"if","locations":[{"start":{"line":961,"column":4},"end":{"line":963,"column":5}},{"start":{"line":961,"column":4},"end":{"line":963,"column":5}}],"line":961},"37":{"loc":{"start":{"line":965,"column":4},"end":{"line":976,"column":15}},"type":"switch","locations":[{"start":{"line":966,"column":6},"end":{"line":969,"column":14}},{"start":{"line":970,"column":6},"end":{"line":973,"column":14}},{"start":{"line":974,"column":6},"end":{"line":976,"column":14}}],"line":965},"38":{"loc":{"start":{"line":1004,"column":2},"end":{"line":1009,"column":3}},"type":"if","locations":[{"start":{"line":1004,"column":2},"end":{"line":1009,"column":3}},{"start":{"line":1004,"column":2},"end":{"line":1009,"column":3}}],"line":1004},"39":{"loc":{"start":{"line":1011,"column":2},"end":{"line":1016,"column":3}},"type":"if","locations":[{"start":{"line":1011,"column":2},"end":{"line":1016,"column":3}},{"start":{"line":1011,"column":2},"end":{"line":1016,"column":3}}],"line":1011},"40":{"loc":{"start":{"line":1089,"column":0},"end":{"line":1091,"column":1}},"type":"if","locations":[{"start":{"line":1089,"column":0},"end":{"line":1091,"column":1}},{"start":{"line":1089,"column":0},"end":{"line":1091,"column":1}}],"line":1089},"41":{"loc":{"start":{"line":1089,"column":4},"end":{"line":1089,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1089,"column":4},"end":{"line":1089,"column":14}},{"start":{"line":1089,"column":18},"end":{"line":1089,"column":27}}],"line":1089},"42":{"loc":{"start":{"line":1101,"column":0},"end":{"line":1145,"column":1}},"type":"if","locations":[{"start":{"line":1101,"column":0},"end":{"line":1145,"column":1}},{"start":{"line":1101,"column":0},"end":{"line":1145,"column":1}}],"line":1101},"43":{"loc":{"start":{"line":1128,"column":14},"end":{"line":1128,"column":87}},"type":"binary-expr","locations":[{"start":{"line":1128,"column":15},"end":{"line":1128,"column":34}},{"start":{"line":1128,"column":39},"end":{"line":1128,"column":87}}],"line":1128},"44":{"loc":{"start":{"line":1140,"column":4},"end":{"line":1142,"column":5}},"type":"if","locations":[{"start":{"line":1140,"column":4},"end":{"line":1142,"column":5}},{"start":{"line":1140,"column":4},"end":{"line":1142,"column":5}}],"line":1140},"45":{"loc":{"start":{"line":1169,"column":4},"end":{"line":1171,"column":5}},"type":"if","locations":[{"start":{"line":1169,"column":4},"end":{"line":1171,"column":5}},{"start":{"line":1169,"column":4},"end":{"line":1171,"column":5}}],"line":1169},"46":{"loc":{"start":{"line":1173,"column":4},"end":{"line":1214,"column":15}},"type":"switch","locations":[{"start":{"line":1174,"column":6},"end":{"line":1178,"column":14}},{"start":{"line":1179,"column":6},"end":{"line":1182,"column":14}},{"start":{"line":1183,"column":6},"end":{"line":1186,"column":14}},{"start":{"line":1187,"column":6},"end":{"line":1190,"column":14}},{"start":{"line":1191,"column":6},"end":{"line":1194,"column":14}},{"start":{"line":1195,"column":6},"end":{"line":1198,"column":14}},{"start":{"line":1199,"column":6},"end":{"line":1202,"column":14}},{"start":{"line":1203,"column":6},"end":{"line":1207,"column":14}},{"start":{"line":1208,"column":6},"end":{"line":1211,"column":14}},{"start":{"line":1212,"column":6},"end":{"line":1214,"column":14}}],"line":1173},"47":{"loc":{"start":{"line":1242,"column":2},"end":{"line":1248,"column":3}},"type":"if","locations":[{"start":{"line":1242,"column":2},"end":{"line":1248,"column":3}},{"start":{"line":1242,"column":2},"end":{"line":1248,"column":3}}],"line":1242},"48":{"loc":{"start":{"line":1250,"column":2},"end":{"line":1255,"column":3}},"type":"if","locations":[{"start":{"line":1250,"column":2},"end":{"line":1255,"column":3}},{"start":{"line":1250,"column":2},"end":{"line":1255,"column":3}}],"line":1250},"49":{"loc":{"start":{"line":1257,"column":2},"end":{"line":1262,"column":3}},"type":"if","locations":[{"start":{"line":1257,"column":2},"end":{"line":1262,"column":3}},{"start":{"line":1257,"column":2},"end":{"line":1262,"column":3}}],"line":1257},"50":{"loc":{"start":{"line":1264,"column":2},"end":{"line":1269,"column":3}},"type":"if","locations":[{"start":{"line":1264,"column":2},"end":{"line":1269,"column":3}},{"start":{"line":1264,"column":2},"end":{"line":1269,"column":3}}],"line":1264},"51":{"loc":{"start":{"line":1271,"column":2},"end":{"line":1276,"column":3}},"type":"if","locations":[{"start":{"line":1271,"column":2},"end":{"line":1276,"column":3}},{"start":{"line":1271,"column":2},"end":{"line":1276,"column":3}}],"line":1271},"52":{"loc":{"start":{"line":1278,"column":2},"end":{"line":1283,"column":3}},"type":"if","locations":[{"start":{"line":1278,"column":2},"end":{"line":1283,"column":3}},{"start":{"line":1278,"column":2},"end":{"line":1283,"column":3}}],"line":1278},"53":{"loc":{"start":{"line":1285,"column":2},"end":{"line":1290,"column":3}},"type":"if","locations":[{"start":{"line":1285,"column":2},"end":{"line":1290,"column":3}},{"start":{"line":1285,"column":2},"end":{"line":1290,"column":3}}],"line":1285},"54":{"loc":{"start":{"line":1292,"column":2},"end":{"line":1298,"column":3}},"type":"if","locations":[{"start":{"line":1292,"column":2},"end":{"line":1298,"column":3}},{"start":{"line":1292,"column":2},"end":{"line":1298,"column":3}}],"line":1292},"55":{"loc":{"start":{"line":1300,"column":2},"end":{"line":1305,"column":3}},"type":"if","locations":[{"start":{"line":1300,"column":2},"end":{"line":1305,"column":3}},{"start":{"line":1300,"column":2},"end":{"line":1305,"column":3}}],"line":1300},"56":{"loc":{"start":{"line":1566,"column":0},"end":{"line":1568,"column":1}},"type":"if","locations":[{"start":{"line":1566,"column":0},"end":{"line":1568,"column":1}},{"start":{"line":1566,"column":0},"end":{"line":1568,"column":1}}],"line":1566},"57":{"loc":{"start":{"line":1566,"column":4},"end":{"line":1566,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1566,"column":4},"end":{"line":1566,"column":14}},{"start":{"line":1566,"column":18},"end":{"line":1566,"column":27}}],"line":1566},"58":{"loc":{"start":{"line":1571,"column":0},"end":{"line":1606,"column":1}},"type":"if","locations":[{"start":{"line":1571,"column":0},"end":{"line":1606,"column":1}},{"start":{"line":1571,"column":0},"end":{"line":1606,"column":1}}],"line":1571},"59":{"loc":{"start":{"line":1601,"column":4},"end":{"line":1603,"column":5}},"type":"if","locations":[{"start":{"line":1601,"column":4},"end":{"line":1603,"column":5}},{"start":{"line":1601,"column":4},"end":{"line":1603,"column":5}}],"line":1601},"60":{"loc":{"start":{"line":1630,"column":4},"end":{"line":1632,"column":5}},"type":"if","locations":[{"start":{"line":1630,"column":4},"end":{"line":1632,"column":5}},{"start":{"line":1630,"column":4},"end":{"line":1632,"column":5}}],"line":1630},"61":{"loc":{"start":{"line":1634,"column":4},"end":{"line":1641,"column":15}},"type":"switch","locations":[{"start":{"line":1635,"column":6},"end":{"line":1638,"column":14}},{"start":{"line":1639,"column":6},"end":{"line":1641,"column":14}}],"line":1634},"62":{"loc":{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}},"type":"if","locations":[{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}},{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}}],"line":1669},"63":{"loc":{"start":{"line":1708,"column":0},"end":{"line":1710,"column":1}},"type":"if","locations":[{"start":{"line":1708,"column":0},"end":{"line":1710,"column":1}},{"start":{"line":1708,"column":0},"end":{"line":1710,"column":1}}],"line":1708},"64":{"loc":{"start":{"line":1708,"column":4},"end":{"line":1708,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1708,"column":4},"end":{"line":1708,"column":14}},{"start":{"line":1708,"column":18},"end":{"line":1708,"column":27}}],"line":1708},"65":{"loc":{"start":{"line":1713,"column":0},"end":{"line":1749,"column":1}},"type":"if","locations":[{"start":{"line":1713,"column":0},"end":{"line":1749,"column":1}},{"start":{"line":1713,"column":0},"end":{"line":1749,"column":1}}],"line":1713},"66":{"loc":{"start":{"line":1740,"column":14},"end":{"line":1740,"column":87}},"type":"binary-expr","locations":[{"start":{"line":1740,"column":15},"end":{"line":1740,"column":34}},{"start":{"line":1740,"column":39},"end":{"line":1740,"column":87}}],"line":1740},"67":{"loc":{"start":{"line":1744,"column":4},"end":{"line":1746,"column":5}},"type":"if","locations":[{"start":{"line":1744,"column":4},"end":{"line":1746,"column":5}},{"start":{"line":1744,"column":4},"end":{"line":1746,"column":5}}],"line":1744},"68":{"loc":{"start":{"line":1773,"column":4},"end":{"line":1775,"column":5}},"type":"if","locations":[{"start":{"line":1773,"column":4},"end":{"line":1775,"column":5}},{"start":{"line":1773,"column":4},"end":{"line":1775,"column":5}}],"line":1773},"69":{"loc":{"start":{"line":1777,"column":4},"end":{"line":1789,"column":15}},"type":"switch","locations":[{"start":{"line":1778,"column":6},"end":{"line":1782,"column":14}},{"start":{"line":1783,"column":6},"end":{"line":1786,"column":14}},{"start":{"line":1787,"column":6},"end":{"line":1789,"column":14}}],"line":1777},"70":{"loc":{"start":{"line":1817,"column":2},"end":{"line":1823,"column":3}},"type":"if","locations":[{"start":{"line":1817,"column":2},"end":{"line":1823,"column":3}},{"start":{"line":1817,"column":2},"end":{"line":1823,"column":3}}],"line":1817},"71":{"loc":{"start":{"line":1825,"column":2},"end":{"line":1830,"column":3}},"type":"if","locations":[{"start":{"line":1825,"column":2},"end":{"line":1830,"column":3}},{"start":{"line":1825,"column":2},"end":{"line":1830,"column":3}}],"line":1825},"72":{"loc":{"start":{"line":1894,"column":0},"end":{"line":1896,"column":1}},"type":"if","locations":[{"start":{"line":1894,"column":0},"end":{"line":1896,"column":1}},{"start":{"line":1894,"column":0},"end":{"line":1896,"column":1}}],"line":1894},"73":{"loc":{"start":{"line":1894,"column":4},"end":{"line":1894,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1894,"column":4},"end":{"line":1894,"column":14}},{"start":{"line":1894,"column":18},"end":{"line":1894,"column":27}}],"line":1894},"74":{"loc":{"start":{"line":1906,"column":0},"end":{"line":1943,"column":1}},"type":"if","locations":[{"start":{"line":1906,"column":0},"end":{"line":1943,"column":1}},{"start":{"line":1906,"column":0},"end":{"line":1943,"column":1}}],"line":1906},"75":{"loc":{"start":{"line":1938,"column":4},"end":{"line":1940,"column":5}},"type":"if","locations":[{"start":{"line":1938,"column":4},"end":{"line":1940,"column":5}},{"start":{"line":1938,"column":4},"end":{"line":1940,"column":5}}],"line":1938},"76":{"loc":{"start":{"line":1967,"column":4},"end":{"line":1969,"column":5}},"type":"if","locations":[{"start":{"line":1967,"column":4},"end":{"line":1969,"column":5}},{"start":{"line":1967,"column":4},"end":{"line":1969,"column":5}}],"line":1967},"77":{"loc":{"start":{"line":1971,"column":4},"end":{"line":1983,"column":15}},"type":"switch","locations":[{"start":{"line":1972,"column":6},"end":{"line":1975,"column":14}},{"start":{"line":1976,"column":6},"end":{"line":1980,"column":14}},{"start":{"line":1981,"column":6},"end":{"line":1983,"column":14}}],"line":1971},"78":{"loc":{"start":{"line":2011,"column":2},"end":{"line":2016,"column":3}},"type":"if","locations":[{"start":{"line":2011,"column":2},"end":{"line":2016,"column":3}},{"start":{"line":2011,"column":2},"end":{"line":2016,"column":3}}],"line":2011},"79":{"loc":{"start":{"line":2018,"column":2},"end":{"line":2024,"column":3}},"type":"if","locations":[{"start":{"line":2018,"column":2},"end":{"line":2024,"column":3}},{"start":{"line":2018,"column":2},"end":{"line":2024,"column":3}}],"line":2018},"80":{"loc":{"start":{"line":2089,"column":0},"end":{"line":2091,"column":1}},"type":"if","locations":[{"start":{"line":2089,"column":0},"end":{"line":2091,"column":1}},{"start":{"line":2089,"column":0},"end":{"line":2091,"column":1}}],"line":2089},"81":{"loc":{"start":{"line":2089,"column":4},"end":{"line":2089,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2089,"column":4},"end":{"line":2089,"column":14}},{"start":{"line":2089,"column":18},"end":{"line":2089,"column":27}}],"line":2089},"82":{"loc":{"start":{"line":2094,"column":0},"end":{"line":2130,"column":1}},"type":"if","locations":[{"start":{"line":2094,"column":0},"end":{"line":2130,"column":1}},{"start":{"line":2094,"column":0},"end":{"line":2130,"column":1}}],"line":2094},"83":{"loc":{"start":{"line":2125,"column":4},"end":{"line":2127,"column":5}},"type":"if","locations":[{"start":{"line":2125,"column":4},"end":{"line":2127,"column":5}},{"start":{"line":2125,"column":4},"end":{"line":2127,"column":5}}],"line":2125},"84":{"loc":{"start":{"line":2154,"column":4},"end":{"line":2156,"column":5}},"type":"if","locations":[{"start":{"line":2154,"column":4},"end":{"line":2156,"column":5}},{"start":{"line":2154,"column":4},"end":{"line":2156,"column":5}}],"line":2154},"85":{"loc":{"start":{"line":2158,"column":4},"end":{"line":2169,"column":15}},"type":"switch","locations":[{"start":{"line":2159,"column":6},"end":{"line":2162,"column":14}},{"start":{"line":2163,"column":6},"end":{"line":2166,"column":14}},{"start":{"line":2167,"column":6},"end":{"line":2169,"column":14}}],"line":2158},"86":{"loc":{"start":{"line":2197,"column":2},"end":{"line":2202,"column":3}},"type":"if","locations":[{"start":{"line":2197,"column":2},"end":{"line":2202,"column":3}},{"start":{"line":2197,"column":2},"end":{"line":2202,"column":3}}],"line":2197},"87":{"loc":{"start":{"line":2204,"column":2},"end":{"line":2209,"column":3}},"type":"if","locations":[{"start":{"line":2204,"column":2},"end":{"line":2209,"column":3}},{"start":{"line":2204,"column":2},"end":{"line":2209,"column":3}}],"line":2204},"88":{"loc":{"start":{"line":2282,"column":0},"end":{"line":2284,"column":1}},"type":"if","locations":[{"start":{"line":2282,"column":0},"end":{"line":2284,"column":1}},{"start":{"line":2282,"column":0},"end":{"line":2284,"column":1}}],"line":2282},"89":{"loc":{"start":{"line":2282,"column":4},"end":{"line":2282,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2282,"column":4},"end":{"line":2282,"column":14}},{"start":{"line":2282,"column":18},"end":{"line":2282,"column":27}}],"line":2282},"90":{"loc":{"start":{"line":2287,"column":0},"end":{"line":2324,"column":1}},"type":"if","locations":[{"start":{"line":2287,"column":0},"end":{"line":2324,"column":1}},{"start":{"line":2287,"column":0},"end":{"line":2324,"column":1}}],"line":2287},"91":{"loc":{"start":{"line":2316,"column":13},"end":{"line":2316,"column":85}},"type":"binary-expr","locations":[{"start":{"line":2316,"column":14},"end":{"line":2316,"column":32}},{"start":{"line":2316,"column":37},"end":{"line":2316,"column":85}}],"line":2316},"92":{"loc":{"start":{"line":2319,"column":4},"end":{"line":2321,"column":5}},"type":"if","locations":[{"start":{"line":2319,"column":4},"end":{"line":2321,"column":5}},{"start":{"line":2319,"column":4},"end":{"line":2321,"column":5}}],"line":2319},"93":{"loc":{"start":{"line":2348,"column":4},"end":{"line":2350,"column":5}},"type":"if","locations":[{"start":{"line":2348,"column":4},"end":{"line":2350,"column":5}},{"start":{"line":2348,"column":4},"end":{"line":2350,"column":5}}],"line":2348},"94":{"loc":{"start":{"line":2352,"column":4},"end":{"line":2368,"column":15}},"type":"switch","locations":[{"start":{"line":2353,"column":6},"end":{"line":2356,"column":14}},{"start":{"line":2357,"column":6},"end":{"line":2360,"column":14}},{"start":{"line":2361,"column":6},"end":{"line":2365,"column":14}},{"start":{"line":2366,"column":6},"end":{"line":2368,"column":14}}],"line":2352},"95":{"loc":{"start":{"line":2396,"column":2},"end":{"line":2401,"column":3}},"type":"if","locations":[{"start":{"line":2396,"column":2},"end":{"line":2401,"column":3}},{"start":{"line":2396,"column":2},"end":{"line":2401,"column":3}}],"line":2396},"96":{"loc":{"start":{"line":2403,"column":2},"end":{"line":2408,"column":3}},"type":"if","locations":[{"start":{"line":2403,"column":2},"end":{"line":2408,"column":3}},{"start":{"line":2403,"column":2},"end":{"line":2408,"column":3}}],"line":2403},"97":{"loc":{"start":{"line":2410,"column":2},"end":{"line":2416,"column":3}},"type":"if","locations":[{"start":{"line":2410,"column":2},"end":{"line":2416,"column":3}},{"start":{"line":2410,"column":2},"end":{"line":2416,"column":3}}],"line":2410},"98":{"loc":{"start":{"line":2519,"column":0},"end":{"line":2521,"column":1}},"type":"if","locations":[{"start":{"line":2519,"column":0},"end":{"line":2521,"column":1}},{"start":{"line":2519,"column":0},"end":{"line":2521,"column":1}}],"line":2519},"99":{"loc":{"start":{"line":2519,"column":4},"end":{"line":2519,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2519,"column":4},"end":{"line":2519,"column":14}},{"start":{"line":2519,"column":18},"end":{"line":2519,"column":27}}],"line":2519},"100":{"loc":{"start":{"line":2524,"column":0},"end":{"line":2563,"column":1}},"type":"if","locations":[{"start":{"line":2524,"column":0},"end":{"line":2563,"column":1}},{"start":{"line":2524,"column":0},"end":{"line":2563,"column":1}}],"line":2524},"101":{"loc":{"start":{"line":2558,"column":4},"end":{"line":2560,"column":5}},"type":"if","locations":[{"start":{"line":2558,"column":4},"end":{"line":2560,"column":5}},{"start":{"line":2558,"column":4},"end":{"line":2560,"column":5}}],"line":2558},"102":{"loc":{"start":{"line":2587,"column":4},"end":{"line":2589,"column":5}},"type":"if","locations":[{"start":{"line":2587,"column":4},"end":{"line":2589,"column":5}},{"start":{"line":2587,"column":4},"end":{"line":2589,"column":5}}],"line":2587},"103":{"loc":{"start":{"line":2591,"column":4},"end":{"line":2614,"column":15}},"type":"switch","locations":[{"start":{"line":2592,"column":6},"end":{"line":2595,"column":14}},{"start":{"line":2596,"column":6},"end":{"line":2599,"column":14}},{"start":{"line":2600,"column":6},"end":{"line":2603,"column":14}},{"start":{"line":2604,"column":6},"end":{"line":2607,"column":14}},{"start":{"line":2608,"column":6},"end":{"line":2611,"column":14}},{"start":{"line":2612,"column":6},"end":{"line":2614,"column":14}}],"line":2591},"104":{"loc":{"start":{"line":2642,"column":2},"end":{"line":2647,"column":3}},"type":"if","locations":[{"start":{"line":2642,"column":2},"end":{"line":2647,"column":3}},{"start":{"line":2642,"column":2},"end":{"line":2647,"column":3}}],"line":2642},"105":{"loc":{"start":{"line":2649,"column":2},"end":{"line":2654,"column":3}},"type":"if","locations":[{"start":{"line":2649,"column":2},"end":{"line":2654,"column":3}},{"start":{"line":2649,"column":2},"end":{"line":2654,"column":3}}],"line":2649},"106":{"loc":{"start":{"line":2656,"column":2},"end":{"line":2661,"column":3}},"type":"if","locations":[{"start":{"line":2656,"column":2},"end":{"line":2661,"column":3}},{"start":{"line":2656,"column":2},"end":{"line":2661,"column":3}}],"line":2656},"107":{"loc":{"start":{"line":2663,"column":2},"end":{"line":2668,"column":3}},"type":"if","locations":[{"start":{"line":2663,"column":2},"end":{"line":2668,"column":3}},{"start":{"line":2663,"column":2},"end":{"line":2668,"column":3}}],"line":2663},"108":{"loc":{"start":{"line":2670,"column":2},"end":{"line":2675,"column":3}},"type":"if","locations":[{"start":{"line":2670,"column":2},"end":{"line":2675,"column":3}},{"start":{"line":2670,"column":2},"end":{"line":2675,"column":3}}],"line":2670},"109":{"loc":{"start":{"line":2795,"column":0},"end":{"line":2797,"column":1}},"type":"if","locations":[{"start":{"line":2795,"column":0},"end":{"line":2797,"column":1}},{"start":{"line":2795,"column":0},"end":{"line":2797,"column":1}}],"line":2795},"110":{"loc":{"start":{"line":2795,"column":4},"end":{"line":2795,"column":27}},"type":"binary-expr","locations":[{"start":{"line":2795,"column":4},"end":{"line":2795,"column":14}},{"start":{"line":2795,"column":18},"end":{"line":2795,"column":27}}],"line":2795},"111":{"loc":{"start":{"line":2807,"column":0},"end":{"line":2846,"column":1}},"type":"if","locations":[{"start":{"line":2807,"column":0},"end":{"line":2846,"column":1}},{"start":{"line":2807,"column":0},"end":{"line":2846,"column":1}}],"line":2807},"112":{"loc":{"start":{"line":2841,"column":4},"end":{"line":2843,"column":5}},"type":"if","locations":[{"start":{"line":2841,"column":4},"end":{"line":2843,"column":5}},{"start":{"line":2841,"column":4},"end":{"line":2843,"column":5}}],"line":2841},"113":{"loc":{"start":{"line":2870,"column":4},"end":{"line":2872,"column":5}},"type":"if","locations":[{"start":{"line":2870,"column":4},"end":{"line":2872,"column":5}},{"start":{"line":2870,"column":4},"end":{"line":2872,"column":5}}],"line":2870},"114":{"loc":{"start":{"line":2874,"column":4},"end":{"line":2894,"column":15}},"type":"switch","locations":[{"start":{"line":2875,"column":6},"end":{"line":2878,"column":14}},{"start":{"line":2879,"column":6},"end":{"line":2882,"column":14}},{"start":{"line":2883,"column":6},"end":{"line":2887,"column":14}},{"start":{"line":2888,"column":6},"end":{"line":2891,"column":14}},{"start":{"line":2892,"column":6},"end":{"line":2894,"column":14}}],"line":2874},"115":{"loc":{"start":{"line":2922,"column":2},"end":{"line":2927,"column":3}},"type":"if","locations":[{"start":{"line":2922,"column":2},"end":{"line":2927,"column":3}},{"start":{"line":2922,"column":2},"end":{"line":2927,"column":3}}],"line":2922},"116":{"loc":{"start":{"line":2929,"column":2},"end":{"line":2934,"column":3}},"type":"if","locations":[{"start":{"line":2929,"column":2},"end":{"line":2934,"column":3}},{"start":{"line":2929,"column":2},"end":{"line":2934,"column":3}}],"line":2929},"117":{"loc":{"start":{"line":2936,"column":2},"end":{"line":2942,"column":3}},"type":"if","locations":[{"start":{"line":2936,"column":2},"end":{"line":2942,"column":3}},{"start":{"line":2936,"column":2},"end":{"line":2942,"column":3}}],"line":2936},"118":{"loc":{"start":{"line":2944,"column":2},"end":{"line":2949,"column":3}},"type":"if","locations":[{"start":{"line":2944,"column":2},"end":{"line":2949,"column":3}},{"start":{"line":2944,"column":2},"end":{"line":2949,"column":3}}],"line":2944},"119":{"loc":{"start":{"line":3003,"column":33},"end":{"line":3003,"column":44}},"type":"binary-expr","locations":[{"start":{"line":3003,"column":33},"end":{"line":3003,"column":38}},{"start":{"line":3003,"column":42},"end":{"line":3003,"column":44}}],"line":3003},"120":{"loc":{"start":{"line":3084,"column":0},"end":{"line":3086,"column":1}},"type":"if","locations":[{"start":{"line":3084,"column":0},"end":{"line":3086,"column":1}},{"start":{"line":3084,"column":0},"end":{"line":3086,"column":1}}],"line":3084},"121":{"loc":{"start":{"line":3084,"column":4},"end":{"line":3084,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3084,"column":4},"end":{"line":3084,"column":14}},{"start":{"line":3084,"column":18},"end":{"line":3084,"column":27}}],"line":3084},"122":{"loc":{"start":{"line":3096,"column":0},"end":{"line":3131,"column":1}},"type":"if","locations":[{"start":{"line":3096,"column":0},"end":{"line":3131,"column":1}},{"start":{"line":3096,"column":0},"end":{"line":3131,"column":1}}],"line":3096},"123":{"loc":{"start":{"line":3126,"column":4},"end":{"line":3128,"column":5}},"type":"if","locations":[{"start":{"line":3126,"column":4},"end":{"line":3128,"column":5}},{"start":{"line":3126,"column":4},"end":{"line":3128,"column":5}}],"line":3126},"124":{"loc":{"start":{"line":3155,"column":4},"end":{"line":3157,"column":5}},"type":"if","locations":[{"start":{"line":3155,"column":4},"end":{"line":3157,"column":5}},{"start":{"line":3155,"column":4},"end":{"line":3157,"column":5}}],"line":3155},"125":{"loc":{"start":{"line":3159,"column":4},"end":{"line":3166,"column":15}},"type":"switch","locations":[{"start":{"line":3160,"column":6},"end":{"line":3163,"column":14}},{"start":{"line":3164,"column":6},"end":{"line":3166,"column":14}}],"line":3159},"126":{"loc":{"start":{"line":3194,"column":2},"end":{"line":3199,"column":3}},"type":"if","locations":[{"start":{"line":3194,"column":2},"end":{"line":3199,"column":3}},{"start":{"line":3194,"column":2},"end":{"line":3199,"column":3}}],"line":3194},"127":{"loc":{"start":{"line":3238,"column":33},"end":{"line":3238,"column":44}},"type":"binary-expr","locations":[{"start":{"line":3238,"column":33},"end":{"line":3238,"column":38}},{"start":{"line":3238,"column":42},"end":{"line":3238,"column":44}}],"line":3238},"128":{"loc":{"start":{"line":3271,"column":0},"end":{"line":3273,"column":1}},"type":"if","locations":[{"start":{"line":3271,"column":0},"end":{"line":3273,"column":1}},{"start":{"line":3271,"column":0},"end":{"line":3273,"column":1}}],"line":3271},"129":{"loc":{"start":{"line":3271,"column":4},"end":{"line":3271,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3271,"column":4},"end":{"line":3271,"column":14}},{"start":{"line":3271,"column":18},"end":{"line":3271,"column":27}}],"line":3271},"130":{"loc":{"start":{"line":3283,"column":0},"end":{"line":3321,"column":1}},"type":"if","locations":[{"start":{"line":3283,"column":0},"end":{"line":3321,"column":1}},{"start":{"line":3283,"column":0},"end":{"line":3321,"column":1}}],"line":3283},"131":{"loc":{"start":{"line":3316,"column":4},"end":{"line":3318,"column":5}},"type":"if","locations":[{"start":{"line":3316,"column":4},"end":{"line":3318,"column":5}},{"start":{"line":3316,"column":4},"end":{"line":3318,"column":5}}],"line":3316},"132":{"loc":{"start":{"line":3345,"column":4},"end":{"line":3347,"column":5}},"type":"if","locations":[{"start":{"line":3345,"column":4},"end":{"line":3347,"column":5}},{"start":{"line":3345,"column":4},"end":{"line":3347,"column":5}}],"line":3345},"133":{"loc":{"start":{"line":3349,"column":4},"end":{"line":3365,"column":15}},"type":"switch","locations":[{"start":{"line":3350,"column":6},"end":{"line":3353,"column":14}},{"start":{"line":3354,"column":6},"end":{"line":3358,"column":14}},{"start":{"line":3359,"column":6},"end":{"line":3362,"column":14}},{"start":{"line":3363,"column":6},"end":{"line":3365,"column":14}}],"line":3349},"134":{"loc":{"start":{"line":3393,"column":2},"end":{"line":3398,"column":3}},"type":"if","locations":[{"start":{"line":3393,"column":2},"end":{"line":3398,"column":3}},{"start":{"line":3393,"column":2},"end":{"line":3398,"column":3}}],"line":3393},"135":{"loc":{"start":{"line":3400,"column":2},"end":{"line":3406,"column":3}},"type":"if","locations":[{"start":{"line":3400,"column":2},"end":{"line":3406,"column":3}},{"start":{"line":3400,"column":2},"end":{"line":3406,"column":3}}],"line":3400},"136":{"loc":{"start":{"line":3408,"column":2},"end":{"line":3413,"column":3}},"type":"if","locations":[{"start":{"line":3408,"column":2},"end":{"line":3413,"column":3}},{"start":{"line":3408,"column":2},"end":{"line":3413,"column":3}}],"line":3408},"137":{"loc":{"start":{"line":3495,"column":0},"end":{"line":3497,"column":1}},"type":"if","locations":[{"start":{"line":3495,"column":0},"end":{"line":3497,"column":1}},{"start":{"line":3495,"column":0},"end":{"line":3497,"column":1}}],"line":3495},"138":{"loc":{"start":{"line":3495,"column":4},"end":{"line":3495,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3495,"column":4},"end":{"line":3495,"column":14}},{"start":{"line":3495,"column":18},"end":{"line":3495,"column":27}}],"line":3495},"139":{"loc":{"start":{"line":3507,"column":0},"end":{"line":3542,"column":1}},"type":"if","locations":[{"start":{"line":3507,"column":0},"end":{"line":3542,"column":1}},{"start":{"line":3507,"column":0},"end":{"line":3542,"column":1}}],"line":3507},"140":{"loc":{"start":{"line":3537,"column":4},"end":{"line":3539,"column":5}},"type":"if","locations":[{"start":{"line":3537,"column":4},"end":{"line":3539,"column":5}},{"start":{"line":3537,"column":4},"end":{"line":3539,"column":5}}],"line":3537},"141":{"loc":{"start":{"line":3566,"column":4},"end":{"line":3568,"column":5}},"type":"if","locations":[{"start":{"line":3566,"column":4},"end":{"line":3568,"column":5}},{"start":{"line":3566,"column":4},"end":{"line":3568,"column":5}}],"line":3566},"142":{"loc":{"start":{"line":3570,"column":4},"end":{"line":3577,"column":15}},"type":"switch","locations":[{"start":{"line":3571,"column":6},"end":{"line":3574,"column":14}},{"start":{"line":3575,"column":6},"end":{"line":3577,"column":14}}],"line":3570},"143":{"loc":{"start":{"line":3605,"column":2},"end":{"line":3610,"column":3}},"type":"if","locations":[{"start":{"line":3605,"column":2},"end":{"line":3610,"column":3}},{"start":{"line":3605,"column":2},"end":{"line":3610,"column":3}}],"line":3605},"144":{"loc":{"start":{"line":3649,"column":33},"end":{"line":3649,"column":44}},"type":"binary-expr","locations":[{"start":{"line":3649,"column":33},"end":{"line":3649,"column":38}},{"start":{"line":3649,"column":42},"end":{"line":3649,"column":44}}],"line":3649},"145":{"loc":{"start":{"line":3682,"column":0},"end":{"line":3684,"column":1}},"type":"if","locations":[{"start":{"line":3682,"column":0},"end":{"line":3684,"column":1}},{"start":{"line":3682,"column":0},"end":{"line":3684,"column":1}}],"line":3682},"146":{"loc":{"start":{"line":3682,"column":4},"end":{"line":3682,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3682,"column":4},"end":{"line":3682,"column":14}},{"start":{"line":3682,"column":18},"end":{"line":3682,"column":27}}],"line":3682},"147":{"loc":{"start":{"line":3694,"column":0},"end":{"line":3729,"column":1}},"type":"if","locations":[{"start":{"line":3694,"column":0},"end":{"line":3729,"column":1}},{"start":{"line":3694,"column":0},"end":{"line":3729,"column":1}}],"line":3694},"148":{"loc":{"start":{"line":3724,"column":4},"end":{"line":3726,"column":5}},"type":"if","locations":[{"start":{"line":3724,"column":4},"end":{"line":3726,"column":5}},{"start":{"line":3724,"column":4},"end":{"line":3726,"column":5}}],"line":3724},"149":{"loc":{"start":{"line":3753,"column":4},"end":{"line":3755,"column":5}},"type":"if","locations":[{"start":{"line":3753,"column":4},"end":{"line":3755,"column":5}},{"start":{"line":3753,"column":4},"end":{"line":3755,"column":5}}],"line":3753},"150":{"loc":{"start":{"line":3757,"column":4},"end":{"line":3764,"column":15}},"type":"switch","locations":[{"start":{"line":3758,"column":6},"end":{"line":3761,"column":14}},{"start":{"line":3762,"column":6},"end":{"line":3764,"column":14}}],"line":3757},"151":{"loc":{"start":{"line":3792,"column":2},"end":{"line":3797,"column":3}},"type":"if","locations":[{"start":{"line":3792,"column":2},"end":{"line":3797,"column":3}},{"start":{"line":3792,"column":2},"end":{"line":3797,"column":3}}],"line":3792},"152":{"loc":{"start":{"line":3836,"column":33},"end":{"line":3836,"column":44}},"type":"binary-expr","locations":[{"start":{"line":3836,"column":33},"end":{"line":3836,"column":38}},{"start":{"line":3836,"column":42},"end":{"line":3836,"column":44}}],"line":3836},"153":{"loc":{"start":{"line":3869,"column":0},"end":{"line":3871,"column":1}},"type":"if","locations":[{"start":{"line":3869,"column":0},"end":{"line":3871,"column":1}},{"start":{"line":3869,"column":0},"end":{"line":3871,"column":1}}],"line":3869},"154":{"loc":{"start":{"line":3869,"column":4},"end":{"line":3869,"column":27}},"type":"binary-expr","locations":[{"start":{"line":3869,"column":4},"end":{"line":3869,"column":14}},{"start":{"line":3869,"column":18},"end":{"line":3869,"column":27}}],"line":3869},"155":{"loc":{"start":{"line":3881,"column":0},"end":{"line":3920,"column":1}},"type":"if","locations":[{"start":{"line":3881,"column":0},"end":{"line":3920,"column":1}},{"start":{"line":3881,"column":0},"end":{"line":3920,"column":1}}],"line":3881},"156":{"loc":{"start":{"line":3915,"column":4},"end":{"line":3917,"column":5}},"type":"if","locations":[{"start":{"line":3915,"column":4},"end":{"line":3917,"column":5}},{"start":{"line":3915,"column":4},"end":{"line":3917,"column":5}}],"line":3915},"157":{"loc":{"start":{"line":3944,"column":4},"end":{"line":3946,"column":5}},"type":"if","locations":[{"start":{"line":3944,"column":4},"end":{"line":3946,"column":5}},{"start":{"line":3944,"column":4},"end":{"line":3946,"column":5}}],"line":3944},"158":{"loc":{"start":{"line":3948,"column":4},"end":{"line":3968,"column":15}},"type":"switch","locations":[{"start":{"line":3949,"column":6},"end":{"line":3952,"column":14}},{"start":{"line":3953,"column":6},"end":{"line":3956,"column":14}},{"start":{"line":3957,"column":6},"end":{"line":3961,"column":14}},{"start":{"line":3962,"column":6},"end":{"line":3965,"column":14}},{"start":{"line":3966,"column":6},"end":{"line":3968,"column":14}}],"line":3948},"159":{"loc":{"start":{"line":3996,"column":2},"end":{"line":4001,"column":3}},"type":"if","locations":[{"start":{"line":3996,"column":2},"end":{"line":4001,"column":3}},{"start":{"line":3996,"column":2},"end":{"line":4001,"column":3}}],"line":3996},"160":{"loc":{"start":{"line":4003,"column":2},"end":{"line":4008,"column":3}},"type":"if","locations":[{"start":{"line":4003,"column":2},"end":{"line":4008,"column":3}},{"start":{"line":4003,"column":2},"end":{"line":4008,"column":3}}],"line":4003},"161":{"loc":{"start":{"line":4010,"column":2},"end":{"line":4016,"column":3}},"type":"if","locations":[{"start":{"line":4010,"column":2},"end":{"line":4016,"column":3}},{"start":{"line":4010,"column":2},"end":{"line":4016,"column":3}}],"line":4010},"162":{"loc":{"start":{"line":4018,"column":2},"end":{"line":4023,"column":3}},"type":"if","locations":[{"start":{"line":4018,"column":2},"end":{"line":4023,"column":3}},{"start":{"line":4018,"column":2},"end":{"line":4023,"column":3}}],"line":4018},"163":{"loc":{"start":{"line":4077,"column":33},"end":{"line":4077,"column":44}},"type":"binary-expr","locations":[{"start":{"line":4077,"column":33},"end":{"line":4077,"column":38}},{"start":{"line":4077,"column":42},"end":{"line":4077,"column":44}}],"line":4077},"164":{"loc":{"start":{"line":4158,"column":0},"end":{"line":4160,"column":1}},"type":"if","locations":[{"start":{"line":4158,"column":0},"end":{"line":4160,"column":1}},{"start":{"line":4158,"column":0},"end":{"line":4160,"column":1}}],"line":4158},"165":{"loc":{"start":{"line":4158,"column":4},"end":{"line":4158,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4158,"column":4},"end":{"line":4158,"column":14}},{"start":{"line":4158,"column":18},"end":{"line":4158,"column":27}}],"line":4158},"166":{"loc":{"start":{"line":4170,"column":0},"end":{"line":4206,"column":1}},"type":"if","locations":[{"start":{"line":4170,"column":0},"end":{"line":4206,"column":1}},{"start":{"line":4170,"column":0},"end":{"line":4206,"column":1}}],"line":4170},"167":{"loc":{"start":{"line":4201,"column":4},"end":{"line":4203,"column":5}},"type":"if","locations":[{"start":{"line":4201,"column":4},"end":{"line":4203,"column":5}},{"start":{"line":4201,"column":4},"end":{"line":4203,"column":5}}],"line":4201},"168":{"loc":{"start":{"line":4230,"column":4},"end":{"line":4232,"column":5}},"type":"if","locations":[{"start":{"line":4230,"column":4},"end":{"line":4232,"column":5}},{"start":{"line":4230,"column":4},"end":{"line":4232,"column":5}}],"line":4230},"169":{"loc":{"start":{"line":4234,"column":4},"end":{"line":4245,"column":15}},"type":"switch","locations":[{"start":{"line":4235,"column":6},"end":{"line":4238,"column":14}},{"start":{"line":4239,"column":6},"end":{"line":4242,"column":14}},{"start":{"line":4243,"column":6},"end":{"line":4245,"column":14}}],"line":4234},"170":{"loc":{"start":{"line":4273,"column":2},"end":{"line":4278,"column":3}},"type":"if","locations":[{"start":{"line":4273,"column":2},"end":{"line":4278,"column":3}},{"start":{"line":4273,"column":2},"end":{"line":4278,"column":3}}],"line":4273},"171":{"loc":{"start":{"line":4280,"column":2},"end":{"line":4285,"column":3}},"type":"if","locations":[{"start":{"line":4280,"column":2},"end":{"line":4285,"column":3}},{"start":{"line":4280,"column":2},"end":{"line":4285,"column":3}}],"line":4280},"172":{"loc":{"start":{"line":4324,"column":33},"end":{"line":4324,"column":44}},"type":"binary-expr","locations":[{"start":{"line":4324,"column":33},"end":{"line":4324,"column":38}},{"start":{"line":4324,"column":42},"end":{"line":4324,"column":44}}],"line":4324},"173":{"loc":{"start":{"line":4396,"column":0},"end":{"line":4398,"column":1}},"type":"if","locations":[{"start":{"line":4396,"column":0},"end":{"line":4398,"column":1}},{"start":{"line":4396,"column":0},"end":{"line":4398,"column":1}}],"line":4396},"174":{"loc":{"start":{"line":4396,"column":4},"end":{"line":4396,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4396,"column":4},"end":{"line":4396,"column":14}},{"start":{"line":4396,"column":18},"end":{"line":4396,"column":27}}],"line":4396},"175":{"loc":{"start":{"line":4408,"column":0},"end":{"line":4443,"column":1}},"type":"if","locations":[{"start":{"line":4408,"column":0},"end":{"line":4443,"column":1}},{"start":{"line":4408,"column":0},"end":{"line":4443,"column":1}}],"line":4408},"176":{"loc":{"start":{"line":4438,"column":4},"end":{"line":4440,"column":5}},"type":"if","locations":[{"start":{"line":4438,"column":4},"end":{"line":4440,"column":5}},{"start":{"line":4438,"column":4},"end":{"line":4440,"column":5}}],"line":4438},"177":{"loc":{"start":{"line":4467,"column":4},"end":{"line":4469,"column":5}},"type":"if","locations":[{"start":{"line":4467,"column":4},"end":{"line":4469,"column":5}},{"start":{"line":4467,"column":4},"end":{"line":4469,"column":5}}],"line":4467},"178":{"loc":{"start":{"line":4471,"column":4},"end":{"line":4478,"column":15}},"type":"switch","locations":[{"start":{"line":4472,"column":6},"end":{"line":4475,"column":14}},{"start":{"line":4476,"column":6},"end":{"line":4478,"column":14}}],"line":4471},"179":{"loc":{"start":{"line":4506,"column":2},"end":{"line":4511,"column":3}},"type":"if","locations":[{"start":{"line":4506,"column":2},"end":{"line":4511,"column":3}},{"start":{"line":4506,"column":2},"end":{"line":4511,"column":3}}],"line":4506},"180":{"loc":{"start":{"line":4550,"column":33},"end":{"line":4550,"column":44}},"type":"binary-expr","locations":[{"start":{"line":4550,"column":33},"end":{"line":4550,"column":38}},{"start":{"line":4550,"column":42},"end":{"line":4550,"column":44}}],"line":4550},"181":{"loc":{"start":{"line":4583,"column":0},"end":{"line":4585,"column":1}},"type":"if","locations":[{"start":{"line":4583,"column":0},"end":{"line":4585,"column":1}},{"start":{"line":4583,"column":0},"end":{"line":4585,"column":1}}],"line":4583},"182":{"loc":{"start":{"line":4583,"column":4},"end":{"line":4583,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4583,"column":4},"end":{"line":4583,"column":14}},{"start":{"line":4583,"column":18},"end":{"line":4583,"column":27}}],"line":4583},"183":{"loc":{"start":{"line":4588,"column":0},"end":{"line":4625,"column":1}},"type":"if","locations":[{"start":{"line":4588,"column":0},"end":{"line":4625,"column":1}},{"start":{"line":4588,"column":0},"end":{"line":4625,"column":1}}],"line":4588},"184":{"loc":{"start":{"line":4620,"column":4},"end":{"line":4622,"column":5}},"type":"if","locations":[{"start":{"line":4620,"column":4},"end":{"line":4622,"column":5}},{"start":{"line":4620,"column":4},"end":{"line":4622,"column":5}}],"line":4620},"185":{"loc":{"start":{"line":4649,"column":4},"end":{"line":4651,"column":5}},"type":"if","locations":[{"start":{"line":4649,"column":4},"end":{"line":4651,"column":5}},{"start":{"line":4649,"column":4},"end":{"line":4651,"column":5}}],"line":4649},"186":{"loc":{"start":{"line":4653,"column":4},"end":{"line":4668,"column":15}},"type":"switch","locations":[{"start":{"line":4654,"column":6},"end":{"line":4657,"column":14}},{"start":{"line":4658,"column":6},"end":{"line":4661,"column":14}},{"start":{"line":4662,"column":6},"end":{"line":4665,"column":14}},{"start":{"line":4666,"column":6},"end":{"line":4668,"column":14}}],"line":4653},"187":{"loc":{"start":{"line":4696,"column":2},"end":{"line":4701,"column":3}},"type":"if","locations":[{"start":{"line":4696,"column":2},"end":{"line":4701,"column":3}},{"start":{"line":4696,"column":2},"end":{"line":4701,"column":3}}],"line":4696},"188":{"loc":{"start":{"line":4703,"column":2},"end":{"line":4708,"column":3}},"type":"if","locations":[{"start":{"line":4703,"column":2},"end":{"line":4708,"column":3}},{"start":{"line":4703,"column":2},"end":{"line":4708,"column":3}}],"line":4703},"189":{"loc":{"start":{"line":4710,"column":2},"end":{"line":4715,"column":3}},"type":"if","locations":[{"start":{"line":4710,"column":2},"end":{"line":4715,"column":3}},{"start":{"line":4710,"column":2},"end":{"line":4715,"column":3}}],"line":4710},"190":{"loc":{"start":{"line":4803,"column":0},"end":{"line":4805,"column":1}},"type":"if","locations":[{"start":{"line":4803,"column":0},"end":{"line":4805,"column":1}},{"start":{"line":4803,"column":0},"end":{"line":4805,"column":1}}],"line":4803},"191":{"loc":{"start":{"line":4803,"column":4},"end":{"line":4803,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4803,"column":4},"end":{"line":4803,"column":14}},{"start":{"line":4803,"column":18},"end":{"line":4803,"column":27}}],"line":4803},"192":{"loc":{"start":{"line":4808,"column":0},"end":{"line":4843,"column":1}},"type":"if","locations":[{"start":{"line":4808,"column":0},"end":{"line":4843,"column":1}},{"start":{"line":4808,"column":0},"end":{"line":4843,"column":1}}],"line":4808},"193":{"loc":{"start":{"line":4838,"column":4},"end":{"line":4840,"column":5}},"type":"if","locations":[{"start":{"line":4838,"column":4},"end":{"line":4840,"column":5}},{"start":{"line":4838,"column":4},"end":{"line":4840,"column":5}}],"line":4838},"194":{"loc":{"start":{"line":4867,"column":4},"end":{"line":4869,"column":5}},"type":"if","locations":[{"start":{"line":4867,"column":4},"end":{"line":4869,"column":5}},{"start":{"line":4867,"column":4},"end":{"line":4869,"column":5}}],"line":4867},"195":{"loc":{"start":{"line":4871,"column":4},"end":{"line":4878,"column":15}},"type":"switch","locations":[{"start":{"line":4872,"column":6},"end":{"line":4875,"column":14}},{"start":{"line":4876,"column":6},"end":{"line":4878,"column":14}}],"line":4871},"196":{"loc":{"start":{"line":4906,"column":2},"end":{"line":4911,"column":3}},"type":"if","locations":[{"start":{"line":4906,"column":2},"end":{"line":4911,"column":3}},{"start":{"line":4906,"column":2},"end":{"line":4911,"column":3}}],"line":4906},"197":{"loc":{"start":{"line":4945,"column":0},"end":{"line":4947,"column":1}},"type":"if","locations":[{"start":{"line":4945,"column":0},"end":{"line":4947,"column":1}},{"start":{"line":4945,"column":0},"end":{"line":4947,"column":1}}],"line":4945},"198":{"loc":{"start":{"line":4945,"column":4},"end":{"line":4945,"column":27}},"type":"binary-expr","locations":[{"start":{"line":4945,"column":4},"end":{"line":4945,"column":14}},{"start":{"line":4945,"column":18},"end":{"line":4945,"column":27}}],"line":4945},"199":{"loc":{"start":{"line":4950,"column":0},"end":{"line":4986,"column":1}},"type":"if","locations":[{"start":{"line":4950,"column":0},"end":{"line":4986,"column":1}},{"start":{"line":4950,"column":0},"end":{"line":4986,"column":1}}],"line":4950},"200":{"loc":{"start":{"line":4981,"column":4},"end":{"line":4983,"column":5}},"type":"if","locations":[{"start":{"line":4981,"column":4},"end":{"line":4983,"column":5}},{"start":{"line":4981,"column":4},"end":{"line":4983,"column":5}}],"line":4981},"201":{"loc":{"start":{"line":5010,"column":4},"end":{"line":5012,"column":5}},"type":"if","locations":[{"start":{"line":5010,"column":4},"end":{"line":5012,"column":5}},{"start":{"line":5010,"column":4},"end":{"line":5012,"column":5}}],"line":5010},"202":{"loc":{"start":{"line":5014,"column":4},"end":{"line":5025,"column":15}},"type":"switch","locations":[{"start":{"line":5015,"column":6},"end":{"line":5018,"column":14}},{"start":{"line":5019,"column":6},"end":{"line":5022,"column":14}},{"start":{"line":5023,"column":6},"end":{"line":5025,"column":14}}],"line":5014},"203":{"loc":{"start":{"line":5053,"column":2},"end":{"line":5058,"column":3}},"type":"if","locations":[{"start":{"line":5053,"column":2},"end":{"line":5058,"column":3}},{"start":{"line":5053,"column":2},"end":{"line":5058,"column":3}}],"line":5053},"204":{"loc":{"start":{"line":5060,"column":2},"end":{"line":5065,"column":3}},"type":"if","locations":[{"start":{"line":5060,"column":2},"end":{"line":5065,"column":3}},{"start":{"line":5060,"column":2},"end":{"line":5065,"column":3}}],"line":5060},"205":{"loc":{"start":{"line":5138,"column":0},"end":{"line":5140,"column":1}},"type":"if","locations":[{"start":{"line":5138,"column":0},"end":{"line":5140,"column":1}},{"start":{"line":5138,"column":0},"end":{"line":5140,"column":1}}],"line":5138},"206":{"loc":{"start":{"line":5138,"column":4},"end":{"line":5138,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5138,"column":4},"end":{"line":5138,"column":14}},{"start":{"line":5138,"column":18},"end":{"line":5138,"column":27}}],"line":5138},"207":{"loc":{"start":{"line":5143,"column":0},"end":{"line":5180,"column":1}},"type":"if","locations":[{"start":{"line":5143,"column":0},"end":{"line":5180,"column":1}},{"start":{"line":5143,"column":0},"end":{"line":5180,"column":1}}],"line":5143},"208":{"loc":{"start":{"line":5175,"column":4},"end":{"line":5177,"column":5}},"type":"if","locations":[{"start":{"line":5175,"column":4},"end":{"line":5177,"column":5}},{"start":{"line":5175,"column":4},"end":{"line":5177,"column":5}}],"line":5175},"209":{"loc":{"start":{"line":5204,"column":4},"end":{"line":5206,"column":5}},"type":"if","locations":[{"start":{"line":5204,"column":4},"end":{"line":5206,"column":5}},{"start":{"line":5204,"column":4},"end":{"line":5206,"column":5}}],"line":5204},"210":{"loc":{"start":{"line":5208,"column":4},"end":{"line":5223,"column":15}},"type":"switch","locations":[{"start":{"line":5209,"column":6},"end":{"line":5212,"column":14}},{"start":{"line":5213,"column":6},"end":{"line":5216,"column":14}},{"start":{"line":5217,"column":6},"end":{"line":5220,"column":14}},{"start":{"line":5221,"column":6},"end":{"line":5223,"column":14}}],"line":5208},"211":{"loc":{"start":{"line":5251,"column":2},"end":{"line":5256,"column":3}},"type":"if","locations":[{"start":{"line":5251,"column":2},"end":{"line":5256,"column":3}},{"start":{"line":5251,"column":2},"end":{"line":5256,"column":3}}],"line":5251},"212":{"loc":{"start":{"line":5258,"column":2},"end":{"line":5263,"column":3}},"type":"if","locations":[{"start":{"line":5258,"column":2},"end":{"line":5263,"column":3}},{"start":{"line":5258,"column":2},"end":{"line":5263,"column":3}}],"line":5258},"213":{"loc":{"start":{"line":5265,"column":2},"end":{"line":5270,"column":3}},"type":"if","locations":[{"start":{"line":5265,"column":2},"end":{"line":5270,"column":3}},{"start":{"line":5265,"column":2},"end":{"line":5270,"column":3}}],"line":5265},"214":{"loc":{"start":{"line":5358,"column":0},"end":{"line":5360,"column":1}},"type":"if","locations":[{"start":{"line":5358,"column":0},"end":{"line":5360,"column":1}},{"start":{"line":5358,"column":0},"end":{"line":5360,"column":1}}],"line":5358},"215":{"loc":{"start":{"line":5358,"column":4},"end":{"line":5358,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5358,"column":4},"end":{"line":5358,"column":14}},{"start":{"line":5358,"column":18},"end":{"line":5358,"column":27}}],"line":5358},"216":{"loc":{"start":{"line":5370,"column":0},"end":{"line":5407,"column":1}},"type":"if","locations":[{"start":{"line":5370,"column":0},"end":{"line":5407,"column":1}},{"start":{"line":5370,"column":0},"end":{"line":5407,"column":1}}],"line":5370},"217":{"loc":{"start":{"line":5402,"column":4},"end":{"line":5404,"column":5}},"type":"if","locations":[{"start":{"line":5402,"column":4},"end":{"line":5404,"column":5}},{"start":{"line":5402,"column":4},"end":{"line":5404,"column":5}}],"line":5402},"218":{"loc":{"start":{"line":5431,"column":4},"end":{"line":5433,"column":5}},"type":"if","locations":[{"start":{"line":5431,"column":4},"end":{"line":5433,"column":5}},{"start":{"line":5431,"column":4},"end":{"line":5433,"column":5}}],"line":5431},"219":{"loc":{"start":{"line":5435,"column":4},"end":{"line":5450,"column":15}},"type":"switch","locations":[{"start":{"line":5436,"column":6},"end":{"line":5439,"column":14}},{"start":{"line":5440,"column":6},"end":{"line":5443,"column":14}},{"start":{"line":5444,"column":6},"end":{"line":5447,"column":14}},{"start":{"line":5448,"column":6},"end":{"line":5450,"column":14}}],"line":5435},"220":{"loc":{"start":{"line":5478,"column":2},"end":{"line":5483,"column":3}},"type":"if","locations":[{"start":{"line":5478,"column":2},"end":{"line":5483,"column":3}},{"start":{"line":5478,"column":2},"end":{"line":5483,"column":3}}],"line":5478},"221":{"loc":{"start":{"line":5485,"column":2},"end":{"line":5490,"column":3}},"type":"if","locations":[{"start":{"line":5485,"column":2},"end":{"line":5490,"column":3}},{"start":{"line":5485,"column":2},"end":{"line":5490,"column":3}}],"line":5485},"222":{"loc":{"start":{"line":5492,"column":2},"end":{"line":5497,"column":3}},"type":"if","locations":[{"start":{"line":5492,"column":2},"end":{"line":5497,"column":3}},{"start":{"line":5492,"column":2},"end":{"line":5497,"column":3}}],"line":5492},"223":{"loc":{"start":{"line":5551,"column":33},"end":{"line":5551,"column":44}},"type":"binary-expr","locations":[{"start":{"line":5551,"column":33},"end":{"line":5551,"column":38}},{"start":{"line":5551,"column":42},"end":{"line":5551,"column":44}}],"line":5551},"224":{"loc":{"start":{"line":5601,"column":0},"end":{"line":5603,"column":1}},"type":"if","locations":[{"start":{"line":5601,"column":0},"end":{"line":5603,"column":1}},{"start":{"line":5601,"column":0},"end":{"line":5603,"column":1}}],"line":5601},"225":{"loc":{"start":{"line":5601,"column":4},"end":{"line":5601,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5601,"column":4},"end":{"line":5601,"column":14}},{"start":{"line":5601,"column":18},"end":{"line":5601,"column":27}}],"line":5601},"226":{"loc":{"start":{"line":5606,"column":0},"end":{"line":5641,"column":1}},"type":"if","locations":[{"start":{"line":5606,"column":0},"end":{"line":5641,"column":1}},{"start":{"line":5606,"column":0},"end":{"line":5641,"column":1}}],"line":5606},"227":{"loc":{"start":{"line":5636,"column":4},"end":{"line":5638,"column":5}},"type":"if","locations":[{"start":{"line":5636,"column":4},"end":{"line":5638,"column":5}},{"start":{"line":5636,"column":4},"end":{"line":5638,"column":5}}],"line":5636},"228":{"loc":{"start":{"line":5665,"column":4},"end":{"line":5667,"column":5}},"type":"if","locations":[{"start":{"line":5665,"column":4},"end":{"line":5667,"column":5}},{"start":{"line":5665,"column":4},"end":{"line":5667,"column":5}}],"line":5665},"229":{"loc":{"start":{"line":5669,"column":4},"end":{"line":5672,"column":15}},"type":"switch","locations":[{"start":{"line":5670,"column":6},"end":{"line":5672,"column":14}}],"line":5669},"230":{"loc":{"start":{"line":5717,"column":0},"end":{"line":5719,"column":1}},"type":"if","locations":[{"start":{"line":5717,"column":0},"end":{"line":5719,"column":1}},{"start":{"line":5717,"column":0},"end":{"line":5719,"column":1}}],"line":5717},"231":{"loc":{"start":{"line":5717,"column":4},"end":{"line":5717,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5717,"column":4},"end":{"line":5717,"column":14}},{"start":{"line":5717,"column":18},"end":{"line":5717,"column":27}}],"line":5717},"232":{"loc":{"start":{"line":5722,"column":0},"end":{"line":5758,"column":1}},"type":"if","locations":[{"start":{"line":5722,"column":0},"end":{"line":5758,"column":1}},{"start":{"line":5722,"column":0},"end":{"line":5758,"column":1}}],"line":5722},"233":{"loc":{"start":{"line":5750,"column":19},"end":{"line":5750,"column":102}},"type":"binary-expr","locations":[{"start":{"line":5750,"column":20},"end":{"line":5750,"column":44}},{"start":{"line":5750,"column":49},"end":{"line":5750,"column":102}}],"line":5750},"234":{"loc":{"start":{"line":5753,"column":4},"end":{"line":5755,"column":5}},"type":"if","locations":[{"start":{"line":5753,"column":4},"end":{"line":5755,"column":5}},{"start":{"line":5753,"column":4},"end":{"line":5755,"column":5}}],"line":5753},"235":{"loc":{"start":{"line":5782,"column":4},"end":{"line":5784,"column":5}},"type":"if","locations":[{"start":{"line":5782,"column":4},"end":{"line":5784,"column":5}},{"start":{"line":5782,"column":4},"end":{"line":5784,"column":5}}],"line":5782},"236":{"loc":{"start":{"line":5786,"column":4},"end":{"line":5798,"column":15}},"type":"switch","locations":[{"start":{"line":5787,"column":6},"end":{"line":5790,"column":14}},{"start":{"line":5791,"column":6},"end":{"line":5795,"column":14}},{"start":{"line":5796,"column":6},"end":{"line":5798,"column":14}}],"line":5786},"237":{"loc":{"start":{"line":5826,"column":2},"end":{"line":5831,"column":3}},"type":"if","locations":[{"start":{"line":5826,"column":2},"end":{"line":5831,"column":3}},{"start":{"line":5826,"column":2},"end":{"line":5831,"column":3}}],"line":5826},"238":{"loc":{"start":{"line":5833,"column":2},"end":{"line":5839,"column":3}},"type":"if","locations":[{"start":{"line":5833,"column":2},"end":{"line":5839,"column":3}},{"start":{"line":5833,"column":2},"end":{"line":5839,"column":3}}],"line":5833},"239":{"loc":{"start":{"line":5903,"column":0},"end":{"line":5905,"column":1}},"type":"if","locations":[{"start":{"line":5903,"column":0},"end":{"line":5905,"column":1}},{"start":{"line":5903,"column":0},"end":{"line":5905,"column":1}}],"line":5903},"240":{"loc":{"start":{"line":5903,"column":4},"end":{"line":5903,"column":27}},"type":"binary-expr","locations":[{"start":{"line":5903,"column":4},"end":{"line":5903,"column":14}},{"start":{"line":5903,"column":18},"end":{"line":5903,"column":27}}],"line":5903},"241":{"loc":{"start":{"line":5908,"column":0},"end":{"line":5943,"column":1}},"type":"if","locations":[{"start":{"line":5908,"column":0},"end":{"line":5943,"column":1}},{"start":{"line":5908,"column":0},"end":{"line":5943,"column":1}}],"line":5908},"242":{"loc":{"start":{"line":5935,"column":19},"end":{"line":5935,"column":102}},"type":"binary-expr","locations":[{"start":{"line":5935,"column":20},"end":{"line":5935,"column":44}},{"start":{"line":5935,"column":49},"end":{"line":5935,"column":102}}],"line":5935},"243":{"loc":{"start":{"line":5938,"column":4},"end":{"line":5940,"column":5}},"type":"if","locations":[{"start":{"line":5938,"column":4},"end":{"line":5940,"column":5}},{"start":{"line":5938,"column":4},"end":{"line":5940,"column":5}}],"line":5938},"244":{"loc":{"start":{"line":5967,"column":4},"end":{"line":5969,"column":5}},"type":"if","locations":[{"start":{"line":5967,"column":4},"end":{"line":5969,"column":5}},{"start":{"line":5967,"column":4},"end":{"line":5969,"column":5}}],"line":5967},"245":{"loc":{"start":{"line":5971,"column":4},"end":{"line":5979,"column":15}},"type":"switch","locations":[{"start":{"line":5972,"column":6},"end":{"line":5976,"column":14}},{"start":{"line":5977,"column":6},"end":{"line":5979,"column":14}}],"line":5971},"246":{"loc":{"start":{"line":6007,"column":2},"end":{"line":6013,"column":3}},"type":"if","locations":[{"start":{"line":6007,"column":2},"end":{"line":6013,"column":3}},{"start":{"line":6007,"column":2},"end":{"line":6013,"column":3}}],"line":6007}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":1,"38":1,"39":0,"40":1,"41":1,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":1,"124":0,"125":1,"126":0,"127":1,"128":0,"129":1,"130":0,"131":1,"132":0,"133":1,"134":0,"135":1,"136":0,"137":1,"138":0,"139":1,"140":0,"141":1,"142":0,"143":1,"144":0,"145":1,"146":0,"147":1,"148":0,"149":1,"150":0,"151":1,"152":0,"153":1,"154":0,"155":1,"156":0,"157":1,"158":0,"159":1,"160":0,"161":1,"162":0,"163":1,"164":0,"165":1,"166":0,"167":1,"168":0,"169":1,"170":0,"171":1,"172":1,"173":0,"174":1,"175":1,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":1,"217":0,"218":1,"219":0,"220":1,"221":0,"222":1,"223":0,"224":1,"225":0,"226":1,"227":0,"228":1,"229":0,"230":1,"231":0,"232":1,"233":1,"234":0,"235":1,"236":1,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":1,"244":0,"245":0,"246":0,"247":1,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":1,"263":0,"264":0,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":1,"275":0,"276":1,"277":0,"278":1,"279":0,"280":1,"281":0,"282":1,"283":0,"284":1,"285":0,"286":1,"287":0,"288":1,"289":1,"290":0,"291":1,"292":1,"293":0,"294":1,"295":0,"296":0,"297":0,"298":0,"299":1,"300":0,"301":0,"302":0,"303":1,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":1,"319":0,"320":0,"321":0,"322":1,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":1,"331":0,"332":1,"333":0,"334":1,"335":0,"336":1,"337":0,"338":1,"339":0,"340":1,"341":0,"342":1,"343":0,"344":1,"345":1,"346":0,"347":1,"348":1,"349":1,"350":0,"351":1,"352":0,"353":0,"354":0,"355":0,"356":1,"357":0,"358":0,"359":0,"360":1,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":1,"399":0,"400":0,"401":0,"402":1,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":1,"432":0,"433":1,"434":0,"435":1,"436":0,"437":1,"438":0,"439":1,"440":0,"441":1,"442":0,"443":1,"444":0,"445":1,"446":0,"447":1,"448":0,"449":1,"450":0,"451":1,"452":0,"453":1,"454":0,"455":1,"456":0,"457":1,"458":0,"459":1,"460":0,"461":1,"462":0,"463":1,"464":0,"465":1,"466":0,"467":1,"468":0,"469":1,"470":0,"471":1,"472":0,"473":1,"474":0,"475":1,"476":0,"477":1,"478":0,"479":1,"480":0,"481":1,"482":0,"483":1,"484":0,"485":1,"486":0,"487":1,"488":0,"489":1,"490":1,"491":0,"492":1,"493":1,"494":0,"495":1,"496":0,"497":0,"498":0,"499":0,"500":1,"501":0,"502":0,"503":0,"504":1,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":1,"517":0,"518":0,"519":0,"520":1,"521":0,"522":0,"523":0,"524":0,"525":1,"526":0,"527":1,"528":0,"529":1,"530":0,"531":1,"532":1,"533":0,"534":1,"535":1,"536":0,"537":1,"538":0,"539":0,"540":0,"541":0,"542":1,"543":0,"544":0,"545":0,"546":1,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":1,"563":0,"564":0,"565":0,"566":1,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":1,"575":0,"576":1,"577":0,"578":1,"579":0,"580":1,"581":0,"582":1,"583":0,"584":1,"585":0,"586":1,"587":0,"588":1,"589":1,"590":0,"591":1,"592":1,"593":1,"594":0,"595":1,"596":0,"597":0,"598":0,"599":0,"600":1,"601":0,"602":0,"603":0,"604":1,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":1,"621":0,"622":0,"623":0,"624":1,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":1,"633":0,"634":1,"635":0,"636":1,"637":0,"638":1,"639":0,"640":1,"641":0,"642":1,"643":0,"644":1,"645":1,"646":1,"647":1,"648":0,"649":1,"650":1,"651":0,"652":1,"653":1,"654":1,"655":0,"656":1,"657":1,"658":0,"659":0,"660":0,"661":1,"662":1,"663":2,"664":0,"665":2,"666":2,"667":1,"668":1,"669":1,"670":1,"671":1,"672":1,"673":0,"674":0,"675":1,"676":1,"677":0,"678":0,"679":0,"680":1,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":1,"689":2,"690":1,"691":1,"692":1,"693":1,"694":1,"695":1,"696":1,"697":0,"698":1,"699":1,"700":1,"701":0,"702":1,"703":1,"704":0,"705":1,"706":1,"707":0,"708":1,"709":0,"710":0,"711":0,"712":0,"713":1,"714":0,"715":0,"716":0,"717":1,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":1,"737":0,"738":0,"739":0,"740":1,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":1,"752":0,"753":1,"754":0,"755":1,"756":0,"757":1,"758":0,"759":1,"760":0,"761":1,"762":0,"763":1,"764":0,"765":1,"766":0,"767":1,"768":0,"769":1,"770":0,"771":1,"772":0,"773":1,"774":1,"775":0,"776":1,"777":1,"778":0,"779":1,"780":0,"781":0,"782":0,"783":0,"784":1,"785":0,"786":0,"787":0,"788":1,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":1,"813":0,"814":0,"815":0,"816":1,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":1,"834":0,"835":1,"836":0,"837":1,"838":0,"839":1,"840":0,"841":1,"842":0,"843":1,"844":0,"845":1,"846":0,"847":1,"848":0,"849":1,"850":0,"851":1,"852":0,"853":1,"854":0,"855":1,"856":0,"857":1,"858":0,"859":1,"860":1,"861":0,"862":1,"863":1,"864":1,"865":0,"866":1,"867":0,"868":0,"869":0,"870":0,"871":1,"872":0,"873":0,"874":0,"875":1,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":1,"898":0,"899":0,"900":0,"901":1,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":1,"916":0,"917":1,"918":0,"919":1,"920":0,"921":1,"922":0,"923":1,"924":0,"925":1,"926":0,"927":1,"928":0,"929":1,"930":0,"931":1,"932":0,"933":1,"934":0,"935":1,"936":0,"937":1,"938":0,"939":1,"940":0,"941":1,"942":0,"943":1,"944":0,"945":1,"946":1,"947":0,"948":1,"949":1,"950":1,"951":0,"952":1,"953":0,"954":0,"955":0,"956":0,"957":1,"958":0,"959":0,"960":0,"961":1,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":1,"974":0,"975":0,"976":0,"977":1,"978":0,"979":0,"980":0,"981":0,"982":1,"983":0,"984":1,"985":0,"986":1,"987":0,"988":1,"989":0,"990":1,"991":0,"992":1,"993":0,"994":1,"995":0,"996":1,"997":1,"998":0,"999":1,"1000":1,"1001":1,"1002":0,"1003":1,"1004":0,"1005":0,"1006":0,"1007":0,"1008":1,"1009":0,"1010":0,"1011":0,"1012":1,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":1,"1032":0,"1033":0,"1034":0,"1035":1,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":1,"1047":0,"1048":1,"1049":0,"1050":1,"1051":0,"1052":1,"1053":0,"1054":1,"1055":0,"1056":1,"1057":0,"1058":1,"1059":0,"1060":1,"1061":0,"1062":1,"1063":0,"1064":1,"1065":1,"1066":0,"1067":1,"1068":1,"1069":1,"1070":0,"1071":1,"1072":0,"1073":0,"1074":0,"1075":0,"1076":1,"1077":0,"1078":0,"1079":0,"1080":1,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":1,"1093":0,"1094":0,"1095":0,"1096":1,"1097":0,"1098":0,"1099":0,"1100":0,"1101":1,"1102":0,"1103":1,"1104":0,"1105":1,"1106":0,"1107":1,"1108":0,"1109":1,"1110":0,"1111":1,"1112":0,"1113":1,"1114":0,"1115":1,"1116":1,"1117":0,"1118":1,"1119":1,"1120":1,"1121":0,"1122":1,"1123":0,"1124":0,"1125":0,"1126":0,"1127":1,"1128":0,"1129":0,"1130":0,"1131":1,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":1,"1144":0,"1145":0,"1146":0,"1147":1,"1148":0,"1149":0,"1150":0,"1151":0,"1152":1,"1153":0,"1154":1,"1155":0,"1156":1,"1157":0,"1158":1,"1159":0,"1160":1,"1161":0,"1162":1,"1163":0,"1164":1,"1165":0,"1166":1,"1167":1,"1168":0,"1169":1,"1170":1,"1171":1,"1172":0,"1173":1,"1174":0,"1175":0,"1176":0,"1177":0,"1178":1,"1179":0,"1180":0,"1181":0,"1182":1,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":1,"1205":0,"1206":0,"1207":0,"1208":1,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":1,"1223":0,"1224":1,"1225":0,"1226":1,"1227":0,"1228":1,"1229":0,"1230":1,"1231":0,"1232":1,"1233":0,"1234":1,"1235":0,"1236":1,"1237":0,"1238":1,"1239":0,"1240":1,"1241":0,"1242":1,"1243":0,"1244":1,"1245":0,"1246":1,"1247":0,"1248":1,"1249":0,"1250":1,"1251":0,"1252":1,"1253":1,"1254":0,"1255":1,"1256":1,"1257":1,"1258":0,"1259":1,"1260":0,"1261":0,"1262":0,"1263":0,"1264":1,"1265":0,"1266":0,"1267":0,"1268":1,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":1,"1284":0,"1285":0,"1286":0,"1287":1,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":1,"1296":0,"1297":1,"1298":0,"1299":1,"1300":0,"1301":1,"1302":0,"1303":1,"1304":0,"1305":1,"1306":0,"1307":1,"1308":0,"1309":1,"1310":0,"1311":1,"1312":0,"1313":1,"1314":0,"1315":1,"1316":0,"1317":1,"1318":1,"1319":0,"1320":1,"1321":1,"1322":1,"1323":0,"1324":1,"1325":0,"1326":0,"1327":0,"1328":0,"1329":1,"1330":0,"1331":0,"1332":0,"1333":1,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":1,"1346":0,"1347":0,"1348":0,"1349":1,"1350":0,"1351":0,"1352":0,"1353":0,"1354":1,"1355":0,"1356":1,"1357":0,"1358":1,"1359":0,"1360":1,"1361":0,"1362":1,"1363":0,"1364":1,"1365":0,"1366":1,"1367":0,"1368":1,"1369":1,"1370":0,"1371":1,"1372":1,"1373":0,"1374":1,"1375":0,"1376":0,"1377":0,"1378":0,"1379":1,"1380":0,"1381":0,"1382":0,"1383":1,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":1,"1402":0,"1403":0,"1404":0,"1405":1,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":1,"1417":0,"1418":1,"1419":0,"1420":1,"1421":0,"1422":1,"1423":0,"1424":1,"1425":0,"1426":1,"1427":0,"1428":1,"1429":0,"1430":1,"1431":0,"1432":1,"1433":0,"1434":1,"1435":1,"1436":0,"1437":1,"1438":1,"1439":0,"1440":1,"1441":0,"1442":0,"1443":0,"1444":0,"1445":1,"1446":0,"1447":0,"1448":0,"1449":1,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":1,"1462":0,"1463":0,"1464":0,"1465":1,"1466":0,"1467":0,"1468":0,"1469":0,"1470":1,"1471":0,"1472":1,"1473":0,"1474":1,"1475":0,"1476":1,"1477":1,"1478":0,"1479":1,"1480":1,"1481":0,"1482":1,"1483":0,"1484":0,"1485":0,"1486":0,"1487":1,"1488":0,"1489":0,"1490":0,"1491":1,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":1,"1507":0,"1508":0,"1509":0,"1510":1,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1517":0,"1518":1,"1519":0,"1520":1,"1521":0,"1522":1,"1523":0,"1524":1,"1525":0,"1526":1,"1527":0,"1528":1,"1529":0,"1530":1,"1531":0,"1532":1,"1533":1,"1534":0,"1535":1,"1536":1,"1537":0,"1538":1,"1539":0,"1540":0,"1541":0,"1542":0,"1543":1,"1544":0,"1545":0,"1546":0,"1547":1,"1548":0,"1549":0,"1550":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":1,"1566":0,"1567":0,"1568":0,"1569":1,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":1,"1581":0,"1582":1,"1583":0,"1584":1,"1585":0,"1586":1,"1587":0,"1588":1,"1589":0,"1590":1,"1591":0,"1592":1,"1593":0,"1594":1,"1595":0,"1596":1,"1597":0,"1598":1,"1599":1,"1600":0,"1601":1,"1602":1,"1603":1,"1604":0,"1605":1,"1606":0,"1607":0,"1608":0,"1609":0,"1610":1,"1611":0,"1612":0,"1613":0,"1614":1,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1623":0,"1624":0,"1625":0,"1626":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":1,"1633":0,"1634":0,"1635":0,"1636":1,"1637":0,"1638":0,"1639":0,"1640":0,"1641":0,"1642":0,"1643":0,"1644":0,"1645":0,"1646":0,"1647":1,"1648":0,"1649":1,"1650":0,"1651":1,"1652":0,"1653":1,"1654":0,"1655":1,"1656":0,"1657":1,"1658":0,"1659":1,"1660":0,"1661":1,"1662":0,"1663":1,"1664":0,"1665":1,"1666":0,"1667":1,"1668":0,"1669":1,"1670":1,"1671":0,"1672":1,"1673":1,"1674":0,"1675":1,"1676":0,"1677":0,"1678":0,"1679":0,"1680":1,"1681":0,"1682":0,"1683":0,"1684":1,"1685":0,"1686":0,"1687":0,"1688":0,"1689":0,"1690":0,"1691":0,"1692":0,"1693":1,"1694":0,"1695":0,"1696":0,"1697":1,"1698":0,"1699":1,"1700":0,"1701":1,"1702":1,"1703":0,"1704":1,"1705":1,"1706":0,"1707":1,"1708":0,"1709":0,"1710":0,"1711":0,"1712":1,"1713":0,"1714":0,"1715":0,"1716":1,"1717":0,"1718":0,"1719":0,"1720":0,"1721":0,"1722":0,"1723":0,"1724":0,"1725":0,"1726":0,"1727":0,"1728":0,"1729":0,"1730":0,"1731":0,"1732":1,"1733":0,"1734":0,"1735":0,"1736":1,"1737":0,"1738":0,"1739":0,"1740":0,"1741":0,"1742":0,"1743":0,"1744":1,"1745":0,"1746":1,"1747":0,"1748":1,"1749":0,"1750":1,"1751":0,"1752":1,"1753":0,"1754":1,"1755":0,"1756":1,"1757":0,"1758":1,"1759":1,"1760":0,"1761":1,"1762":1,"1763":0,"1764":1,"1765":0,"1766":0,"1767":0,"1768":0,"1769":1,"1770":0,"1771":0,"1772":0,"1773":1,"1774":0,"1775":0,"1776":0,"1777":0,"1778":0,"1779":0,"1780":0,"1781":0,"1782":0,"1783":0,"1784":0,"1785":0,"1786":1,"1787":0,"1788":0,"1789":0,"1790":1,"1791":0,"1792":0,"1793":0,"1794":0,"1795":1,"1796":0,"1797":1,"1798":0,"1799":1,"1800":0,"1801":1,"1802":0,"1803":1,"1804":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":1,"145":0,"146":1,"147":0,"148":0,"149":2,"150":1,"151":1,"152":1,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0},"b":{"0":[0,1],"1":[1,0],"2":[1,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0,0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,1],"16":[1,0],"17":[1,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,1],"25":[1,0],"26":[1,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,1],"33":[1,0],"34":[1,0],"35":[0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0],"40":[0,1],"41":[1,0],"42":[1,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0,0,0,0,0,0,0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,1],"57":[1,0],"58":[1,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,1],"64":[1,0],"65":[1,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0],"70":[0,0],"71":[0,0],"72":[0,1],"73":[1,0],"74":[1,0],"75":[0,0],"76":[0,0],"77":[0,0,0],"78":[0,0],"79":[0,0],"80":[0,1],"81":[1,0],"82":[1,0],"83":[0,1],"84":[0,2],"85":[1,1,0],"86":[0,0],"87":[0,0],"88":[0,1],"89":[1,0],"90":[1,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0,0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,1],"99":[1,0],"100":[1,0],"101":[0,0],"102":[0,0],"103":[0,0,0,0,0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,1],"110":[1,0],"111":[1,0],"112":[0,0],"113":[0,0],"114":[0,0,0,0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,1],"121":[1,0],"122":[1,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,1],"129":[1,0],"130":[1,0],"131":[0,0],"132":[0,0],"133":[0,0,0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,1],"138":[1,0],"139":[1,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,1],"146":[1,0],"147":[1,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,1],"154":[1,0],"155":[1,0],"156":[0,0],"157":[0,0],"158":[0,0,0,0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,1],"165":[1,0],"166":[1,0],"167":[0,0],"168":[0,0],"169":[0,0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,1],"174":[1,0],"175":[1,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,1],"182":[1,0],"183":[1,0],"184":[0,0],"185":[0,0],"186":[0,0,0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,1],"191":[1,0],"192":[1,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,1],"198":[1,0],"199":[1,0],"200":[0,0],"201":[0,0],"202":[0,0,0],"203":[0,0],"204":[0,0],"205":[0,1],"206":[1,0],"207":[1,0],"208":[0,0],"209":[0,0],"210":[0,0,0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,1],"215":[1,0],"216":[1,0],"217":[0,0],"218":[0,0],"219":[0,0,0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,1],"225":[1,0],"226":[1,0],"227":[0,0],"228":[0,0],"229":[0],"230":[0,1],"231":[1,0],"232":[1,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0,0],"237":[0,0],"238":[0,0],"239":[0,1],"240":[1,0],"241":[1,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0]},"inputSourceMap":{"version":3,"sources":["p2p_pb.js"],"names":["jspb","require","goog","global","Function","blockchain_pb","object","extend","proto","node_pb","exportSymbol","types","MsgHeader","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","clientversion","getFieldWithDefault","timestamp","id","gossip","peerid","getPeerid_asB64","nodepubkey","getNodepubkey_asB64","sign","getSign_asB64","subprotocol","length","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setClientversion","readInt64","setTimestamp","setId","readBool","setGossip","readBytes","setPeerid","setNodepubkey","setSign","readUint32","setSubprotocol","setLength","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getClientversion","writeString","getTimestamp","writeInt64","getId","getGossip","writeBool","getPeerid_asU8","writeBytes","getNodepubkey_asU8","getSign_asU8","getSubprotocol","writeUint32","getLength","setProto3StringField","setProto3IntField","setProto3BooleanField","getPeerid","bytesAsB64","bytesAsU8","setProto3BytesField","getNodepubkey","getSign","P2PMessage","header","getHeader","data","getData_asB64","readMessage","setHeader","setData","writeMessage","getData_asU8","getWrapperField","setWrapperField","clearHeader","hasHeader","getField","getData","Ping","bestBlockHash","getBestBlockHash_asB64","bestHeight","setBestBlockHash","readUint64","setBestHeight","getBestBlockHash_asU8","getBestHeight","writeUint64","getBestBlockHash","Pong","bestblockhash","getBestblockhash_asB64","bestheight","setBestblockhash","setBestheight","getBestblockhash_asU8","getBestheight","getBestblockhash","Status","repeatedFields_","sender","getSender","PeerAddress","chainid","getChainid_asB64","noexpose","version","genesis","getGenesis_asB64","certificatesList","toObjectList","getCertificatesList","AgentCertificate","issuecertificate","setSender","setChainid","setNoexpose","setVersion","setGenesis","addCertificates","setIssuecertificate","getChainid_asU8","getNoexpose","getVersion","getGenesis_asU8","writeRepeatedMessage","getIssuecertificate","clearSender","hasSender","getChainid","getGenesis","getRepeatedWrapperField","setCertificatesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearCertificatesList","GoAwayNotice","setMessage","getMessage","AddressesRequest","maxsize","setMaxsize","getMaxsize","AddressesResponse","status","peersList","getPeersList","readEnum","setStatus","addPeers","getStatus","writeEnum","setProto3EnumField","setPeersList","clearPeersList","NewBlockNotice","blockhash","getBlockhash_asB64","blockno","setBlockhash","setBlockno","getBlockhash_asU8","getBlockno","getBlockhash","BlockProducedNotice","producerid","getProducerid_asB64","block","getBlock","Block","setProducerid","setBlock","getProducerid_asU8","getProducerid","clearBlock","hasBlock","GetBlockHeadersRequest","hash","getHash_asB64","height","offset","size","asc","setHash","setHeight","setOffset","setSize","setAsc","getHash_asU8","getHeight","getOffset","getSize","getAsc","getHash","GetBlockHeadersResponse","hashesList","getHashesList_asB64","headersList","getHeadersList","BlockHeader","hasnext","addHashes","addHeaders","setHasnext","getHashesList_asU8","writeRepeatedBytes","getHasnext","getHashesList","getRepeatedField","bytesListAsB64","bytesListAsU8","setHashesList","setField","addToRepeatedField","clearHashesList","setHeadersList","clearHeadersList","GetBlockRequest","GetBlockResponse","blocksList","getBlocksList","addBlocks","setBlocksList","clearBlocksList","NewTransactionsNotice","txhashesList","getTxhashesList_asB64","addTxhashes","getTxhashesList_asU8","getTxhashesList","setTxhashesList","clearTxhashesList","GetTransactionsRequest","GetTransactionsResponse","txsList","getTxsList","Tx","addTxs","setTxsList","clearTxsList","GetMissingRequest","stophash","getStophash_asB64","setStophash","getStophash_asU8","getStophash","GetAncestorRequest","GetAncestorResponse","ancestorhash","getAncestorhash_asB64","ancestorno","setAncestorhash","setAncestorno","getAncestorhash_asU8","getAncestorno","getAncestorhash","GetHashByNo","GetHashByNoResponse","GetHashesRequest","prevhash","getPrevhash_asB64","prevnumber","setPrevhash","setPrevnumber","getPrevhash_asU8","getPrevnumber","getPrevhash","GetHashesResponse","IssueCertificateRequest","IssueCertificateResponse","certificate","getCertificate","setCertificate","clearCertificate","hasCertificate","CertificateRenewedNotice","ResultStatus","OK","CANCELED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","UNAUTHENTICATED","exports"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/types","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar blockchain_pb = require('./blockchain_pb.js');\ngoog.object.extend(proto, blockchain_pb);\nvar node_pb = require('./node_pb.js');\ngoog.object.extend(proto, node_pb);\ngoog.exportSymbol('proto.types.AddressesRequest', null, global);\ngoog.exportSymbol('proto.types.AddressesResponse', null, global);\ngoog.exportSymbol('proto.types.BlockProducedNotice', null, global);\ngoog.exportSymbol('proto.types.CertificateRenewedNotice', null, global);\ngoog.exportSymbol('proto.types.GetAncestorRequest', null, global);\ngoog.exportSymbol('proto.types.GetAncestorResponse', null, global);\ngoog.exportSymbol('proto.types.GetBlockHeadersRequest', null, global);\ngoog.exportSymbol('proto.types.GetBlockHeadersResponse', null, global);\ngoog.exportSymbol('proto.types.GetBlockRequest', null, global);\ngoog.exportSymbol('proto.types.GetBlockResponse', null, global);\ngoog.exportSymbol('proto.types.GetHashByNo', null, global);\ngoog.exportSymbol('proto.types.GetHashByNoResponse', null, global);\ngoog.exportSymbol('proto.types.GetHashesRequest', null, global);\ngoog.exportSymbol('proto.types.GetHashesResponse', null, global);\ngoog.exportSymbol('proto.types.GetMissingRequest', null, global);\ngoog.exportSymbol('proto.types.GetTransactionsRequest', null, global);\ngoog.exportSymbol('proto.types.GetTransactionsResponse', null, global);\ngoog.exportSymbol('proto.types.GoAwayNotice', null, global);\ngoog.exportSymbol('proto.types.IssueCertificateRequest', null, global);\ngoog.exportSymbol('proto.types.IssueCertificateResponse', null, global);\ngoog.exportSymbol('proto.types.MsgHeader', null, global);\ngoog.exportSymbol('proto.types.NewBlockNotice', null, global);\ngoog.exportSymbol('proto.types.NewTransactionsNotice', null, global);\ngoog.exportSymbol('proto.types.P2PMessage', null, global);\ngoog.exportSymbol('proto.types.Ping', null, global);\ngoog.exportSymbol('proto.types.Pong', null, global);\ngoog.exportSymbol('proto.types.ResultStatus', null, global);\ngoog.exportSymbol('proto.types.Status', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.MsgHeader = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.MsgHeader, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.MsgHeader.displayName = 'proto.types.MsgHeader';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.MsgHeader.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.MsgHeader.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.MsgHeader} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MsgHeader.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    clientversion: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    id: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    gossip: jspb.Message.getFieldWithDefault(msg, 4, false),\n    peerid: msg.getPeerid_asB64(),\n    nodepubkey: msg.getNodepubkey_asB64(),\n    sign: msg.getSign_asB64(),\n    subprotocol: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    length: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.MsgHeader}\n */\nproto.types.MsgHeader.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.MsgHeader;\n  return proto.types.MsgHeader.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.MsgHeader} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.MsgHeader}\n */\nproto.types.MsgHeader.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientversion(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setGossip(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPeerid(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNodepubkey(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSign(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setSubprotocol(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLength(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.MsgHeader.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.MsgHeader.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.MsgHeader} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MsgHeader.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClientversion();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getGossip();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getPeerid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getNodepubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getSign_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n  f = message.getSubprotocol();\n  if (f !== 0) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = message.getLength();\n  if (f !== 0) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string clientVersion = 1;\n * @return {string}\n */\nproto.types.MsgHeader.prototype.getClientversion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.MsgHeader.prototype.setClientversion = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int64 timestamp = 2;\n * @return {number}\n */\nproto.types.MsgHeader.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.MsgHeader.prototype.setTimestamp = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string id = 3;\n * @return {string}\n */\nproto.types.MsgHeader.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.MsgHeader.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bool gossip = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.MsgHeader.prototype.getGossip = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.MsgHeader.prototype.setGossip = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional bytes peerID = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.types.MsgHeader.prototype.getPeerid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes peerID = 5;\n * This is a type-conversion wrapper around `getPeerid()`\n * @return {string}\n */\nproto.types.MsgHeader.prototype.getPeerid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPeerid()));\n};\n\n\n/**\n * optional bytes peerID = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPeerid()`\n * @return {!Uint8Array}\n */\nproto.types.MsgHeader.prototype.getPeerid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPeerid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.MsgHeader.prototype.setPeerid = function(value) {\n  jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional bytes nodePubKey = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.types.MsgHeader.prototype.getNodepubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes nodePubKey = 6;\n * This is a type-conversion wrapper around `getNodepubkey()`\n * @return {string}\n */\nproto.types.MsgHeader.prototype.getNodepubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNodepubkey()));\n};\n\n\n/**\n * optional bytes nodePubKey = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNodepubkey()`\n * @return {!Uint8Array}\n */\nproto.types.MsgHeader.prototype.getNodepubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNodepubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.MsgHeader.prototype.setNodepubkey = function(value) {\n  jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional bytes sign = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.types.MsgHeader.prototype.getSign = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes sign = 7;\n * This is a type-conversion wrapper around `getSign()`\n * @return {string}\n */\nproto.types.MsgHeader.prototype.getSign_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSign()));\n};\n\n\n/**\n * optional bytes sign = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSign()`\n * @return {!Uint8Array}\n */\nproto.types.MsgHeader.prototype.getSign_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSign()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.MsgHeader.prototype.setSign = function(value) {\n  jspb.Message.setProto3BytesField(this, 7, value);\n};\n\n\n/**\n * optional uint32 subprotocol = 8;\n * @return {number}\n */\nproto.types.MsgHeader.prototype.getSubprotocol = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.types.MsgHeader.prototype.setSubprotocol = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional uint32 length = 9;\n * @return {number}\n */\nproto.types.MsgHeader.prototype.getLength = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.types.MsgHeader.prototype.setLength = function(value) {\n  jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.P2PMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.P2PMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.P2PMessage.displayName = 'proto.types.P2PMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.P2PMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.P2PMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.P2PMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.P2PMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    header: (f = msg.getHeader()) && proto.types.MsgHeader.toObject(includeInstance, f),\n    data: msg.getData_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.P2PMessage}\n */\nproto.types.P2PMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.P2PMessage;\n  return proto.types.P2PMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.P2PMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.P2PMessage}\n */\nproto.types.P2PMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.MsgHeader;\n      reader.readMessage(value,proto.types.MsgHeader.deserializeBinaryFromReader);\n      msg.setHeader(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.P2PMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.P2PMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.P2PMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.P2PMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHeader();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.types.MsgHeader.serializeBinaryToWriter\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional MsgHeader header = 1;\n * @return {?proto.types.MsgHeader}\n */\nproto.types.P2PMessage.prototype.getHeader = function() {\n  return /** @type{?proto.types.MsgHeader} */ (\n    jspb.Message.getWrapperField(this, proto.types.MsgHeader, 1));\n};\n\n\n/** @param {?proto.types.MsgHeader|undefined} value */\nproto.types.P2PMessage.prototype.setHeader = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.P2PMessage.prototype.clearHeader = function() {\n  this.setHeader(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.P2PMessage.prototype.hasHeader = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes data = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.P2PMessage.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.types.P2PMessage.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.types.P2PMessage.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.P2PMessage.prototype.setData = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Ping = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Ping, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Ping.displayName = 'proto.types.Ping';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Ping.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Ping.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Ping} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Ping.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    bestBlockHash: msg.getBestBlockHash_asB64(),\n    bestHeight: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Ping}\n */\nproto.types.Ping.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Ping;\n  return proto.types.Ping.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Ping} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Ping}\n */\nproto.types.Ping.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBestBlockHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBestHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Ping.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Ping.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Ping} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Ping.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBestBlockHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBestHeight();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes best_block_hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Ping.prototype.getBestBlockHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes best_block_hash = 1;\n * This is a type-conversion wrapper around `getBestBlockHash()`\n * @return {string}\n */\nproto.types.Ping.prototype.getBestBlockHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBestBlockHash()));\n};\n\n\n/**\n * optional bytes best_block_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBestBlockHash()`\n * @return {!Uint8Array}\n */\nproto.types.Ping.prototype.getBestBlockHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBestBlockHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Ping.prototype.setBestBlockHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 best_height = 2;\n * @return {number}\n */\nproto.types.Ping.prototype.getBestHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Ping.prototype.setBestHeight = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Pong = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.Pong, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Pong.displayName = 'proto.types.Pong';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Pong.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Pong.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Pong} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Pong.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    bestblockhash: msg.getBestblockhash_asB64(),\n    bestheight: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Pong}\n */\nproto.types.Pong.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Pong;\n  return proto.types.Pong.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Pong} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Pong}\n */\nproto.types.Pong.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBestblockhash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBestheight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Pong.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Pong.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Pong} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Pong.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBestblockhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBestheight();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes bestBlockHash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Pong.prototype.getBestblockhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes bestBlockHash = 1;\n * This is a type-conversion wrapper around `getBestblockhash()`\n * @return {string}\n */\nproto.types.Pong.prototype.getBestblockhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBestblockhash()));\n};\n\n\n/**\n * optional bytes bestBlockHash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBestblockhash()`\n * @return {!Uint8Array}\n */\nproto.types.Pong.prototype.getBestblockhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBestblockhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Pong.prototype.setBestblockhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 bestHeight = 2;\n * @return {number}\n */\nproto.types.Pong.prototype.getBestheight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Pong.prototype.setBestheight = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Status = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.Status.repeatedFields_, null);\n};\ngoog.inherits(proto.types.Status, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Status.displayName = 'proto.types.Status';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.Status.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Status.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Status.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Status} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Status.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sender: (f = msg.getSender()) && node_pb.PeerAddress.toObject(includeInstance, f),\n    bestblockhash: msg.getBestblockhash_asB64(),\n    bestheight: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    chainid: msg.getChainid_asB64(),\n    noexpose: jspb.Message.getFieldWithDefault(msg, 5, false),\n    version: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    genesis: msg.getGenesis_asB64(),\n    certificatesList: jspb.Message.toObjectList(msg.getCertificatesList(),\n    node_pb.AgentCertificate.toObject, includeInstance),\n    issuecertificate: jspb.Message.getFieldWithDefault(msg, 9, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Status}\n */\nproto.types.Status.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Status;\n  return proto.types.Status.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Status} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Status}\n */\nproto.types.Status.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new node_pb.PeerAddress;\n      reader.readMessage(value,node_pb.PeerAddress.deserializeBinaryFromReader);\n      msg.setSender(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBestblockhash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBestheight(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainid(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setNoexpose(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setGenesis(value);\n      break;\n    case 8:\n      var value = new node_pb.AgentCertificate;\n      reader.readMessage(value,node_pb.AgentCertificate.deserializeBinaryFromReader);\n      msg.addCertificates(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIssuecertificate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Status.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Status.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Status} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Status.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSender();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      node_pb.PeerAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getBestblockhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getBestheight();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getChainid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getNoexpose();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getGenesis_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n  f = message.getCertificatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      node_pb.AgentCertificate.serializeBinaryToWriter\n    );\n  }\n  f = message.getIssuecertificate();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress sender = 1;\n * @return {?proto.types.PeerAddress}\n */\nproto.types.Status.prototype.getSender = function() {\n  return /** @type{?proto.types.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, node_pb.PeerAddress, 1));\n};\n\n\n/** @param {?proto.types.PeerAddress|undefined} value */\nproto.types.Status.prototype.setSender = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.Status.prototype.clearSender = function() {\n  this.setSender(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.Status.prototype.hasSender = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes bestBlockHash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Status.prototype.getBestblockhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes bestBlockHash = 2;\n * This is a type-conversion wrapper around `getBestblockhash()`\n * @return {string}\n */\nproto.types.Status.prototype.getBestblockhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBestblockhash()));\n};\n\n\n/**\n * optional bytes bestBlockHash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBestblockhash()`\n * @return {!Uint8Array}\n */\nproto.types.Status.prototype.getBestblockhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBestblockhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Status.prototype.setBestblockhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional uint64 bestHeight = 3;\n * @return {number}\n */\nproto.types.Status.prototype.getBestheight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.Status.prototype.setBestheight = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes chainID = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Status.prototype.getChainid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes chainID = 4;\n * This is a type-conversion wrapper around `getChainid()`\n * @return {string}\n */\nproto.types.Status.prototype.getChainid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainid()));\n};\n\n\n/**\n * optional bytes chainID = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainid()`\n * @return {!Uint8Array}\n */\nproto.types.Status.prototype.getChainid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Status.prototype.setChainid = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bool noExpose = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.Status.prototype.getNoexpose = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.Status.prototype.setNoexpose = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional string version = 6;\n * @return {string}\n */\nproto.types.Status.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.Status.prototype.setVersion = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional bytes genesis = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.types.Status.prototype.getGenesis = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes genesis = 7;\n * This is a type-conversion wrapper around `getGenesis()`\n * @return {string}\n */\nproto.types.Status.prototype.getGenesis_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getGenesis()));\n};\n\n\n/**\n * optional bytes genesis = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGenesis()`\n * @return {!Uint8Array}\n */\nproto.types.Status.prototype.getGenesis_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getGenesis()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.Status.prototype.setGenesis = function(value) {\n  jspb.Message.setProto3BytesField(this, 7, value);\n};\n\n\n/**\n * repeated AgentCertificate certificates = 8;\n * @return {!Array<!proto.types.AgentCertificate>}\n */\nproto.types.Status.prototype.getCertificatesList = function() {\n  return /** @type{!Array<!proto.types.AgentCertificate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, node_pb.AgentCertificate, 8));\n};\n\n\n/** @param {!Array<!proto.types.AgentCertificate>} value */\nproto.types.Status.prototype.setCertificatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.types.AgentCertificate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.AgentCertificate}\n */\nproto.types.Status.prototype.addCertificates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.types.AgentCertificate, opt_index);\n};\n\n\nproto.types.Status.prototype.clearCertificatesList = function() {\n  this.setCertificatesList([]);\n};\n\n\n/**\n * optional bool issueCertificate = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.Status.prototype.getIssuecertificate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.Status.prototype.setIssuecertificate = function(value) {\n  jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GoAwayNotice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.GoAwayNotice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GoAwayNotice.displayName = 'proto.types.GoAwayNotice';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GoAwayNotice.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GoAwayNotice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GoAwayNotice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GoAwayNotice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GoAwayNotice}\n */\nproto.types.GoAwayNotice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GoAwayNotice;\n  return proto.types.GoAwayNotice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GoAwayNotice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GoAwayNotice}\n */\nproto.types.GoAwayNotice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GoAwayNotice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GoAwayNotice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GoAwayNotice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GoAwayNotice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.types.GoAwayNotice.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.GoAwayNotice.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.AddressesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.AddressesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.AddressesRequest.displayName = 'proto.types.AddressesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.AddressesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.AddressesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.AddressesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AddressesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sender: (f = msg.getSender()) && node_pb.PeerAddress.toObject(includeInstance, f),\n    maxsize: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.AddressesRequest}\n */\nproto.types.AddressesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.AddressesRequest;\n  return proto.types.AddressesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.AddressesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.AddressesRequest}\n */\nproto.types.AddressesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new node_pb.PeerAddress;\n      reader.readMessage(value,node_pb.PeerAddress.deserializeBinaryFromReader);\n      msg.setSender(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxsize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.AddressesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.AddressesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.AddressesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AddressesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSender();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      node_pb.PeerAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getMaxsize();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress sender = 1;\n * @return {?proto.types.PeerAddress}\n */\nproto.types.AddressesRequest.prototype.getSender = function() {\n  return /** @type{?proto.types.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, node_pb.PeerAddress, 1));\n};\n\n\n/** @param {?proto.types.PeerAddress|undefined} value */\nproto.types.AddressesRequest.prototype.setSender = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.AddressesRequest.prototype.clearSender = function() {\n  this.setSender(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.AddressesRequest.prototype.hasSender = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 maxSize = 2;\n * @return {number}\n */\nproto.types.AddressesRequest.prototype.getMaxsize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.AddressesRequest.prototype.setMaxsize = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.AddressesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.AddressesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.types.AddressesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.AddressesResponse.displayName = 'proto.types.AddressesResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.AddressesResponse.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.AddressesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.AddressesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.AddressesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AddressesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    peersList: jspb.Message.toObjectList(msg.getPeersList(),\n    node_pb.PeerAddress.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.AddressesResponse}\n */\nproto.types.AddressesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.AddressesResponse;\n  return proto.types.AddressesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.AddressesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.AddressesResponse}\n */\nproto.types.AddressesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ResultStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = new node_pb.PeerAddress;\n      reader.readMessage(value,node_pb.PeerAddress.deserializeBinaryFromReader);\n      msg.addPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.AddressesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.AddressesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.AddressesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.AddressesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      node_pb.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ResultStatus status = 1;\n * @return {!proto.types.ResultStatus}\n */\nproto.types.AddressesResponse.prototype.getStatus = function() {\n  return /** @type {!proto.types.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ResultStatus} value */\nproto.types.AddressesResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * repeated PeerAddress peers = 2;\n * @return {!Array<!proto.types.PeerAddress>}\n */\nproto.types.AddressesResponse.prototype.getPeersList = function() {\n  return /** @type{!Array<!proto.types.PeerAddress>} */ (\n    jspb.Message.getRepeatedWrapperField(this, node_pb.PeerAddress, 2));\n};\n\n\n/** @param {!Array<!proto.types.PeerAddress>} value */\nproto.types.AddressesResponse.prototype.setPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.types.PeerAddress=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.PeerAddress}\n */\nproto.types.AddressesResponse.prototype.addPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.types.PeerAddress, opt_index);\n};\n\n\nproto.types.AddressesResponse.prototype.clearPeersList = function() {\n  this.setPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.NewBlockNotice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.NewBlockNotice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.NewBlockNotice.displayName = 'proto.types.NewBlockNotice';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.NewBlockNotice.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.NewBlockNotice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.NewBlockNotice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.NewBlockNotice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockhash: msg.getBlockhash_asB64(),\n    blockno: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.NewBlockNotice}\n */\nproto.types.NewBlockNotice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.NewBlockNotice;\n  return proto.types.NewBlockNotice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.NewBlockNotice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.NewBlockNotice}\n */\nproto.types.NewBlockNotice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlockhash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockno(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.NewBlockNotice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.NewBlockNotice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.NewBlockNotice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.NewBlockNotice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBlockno();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes blockHash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.NewBlockNotice.prototype.getBlockhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes blockHash = 1;\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {string}\n */\nproto.types.NewBlockNotice.prototype.getBlockhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlockhash()));\n};\n\n\n/**\n * optional bytes blockHash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {!Uint8Array}\n */\nproto.types.NewBlockNotice.prototype.getBlockhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlockhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.NewBlockNotice.prototype.setBlockhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 blockNo = 2;\n * @return {number}\n */\nproto.types.NewBlockNotice.prototype.getBlockno = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.NewBlockNotice.prototype.setBlockno = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.BlockProducedNotice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.BlockProducedNotice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.BlockProducedNotice.displayName = 'proto.types.BlockProducedNotice';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.BlockProducedNotice.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.BlockProducedNotice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.BlockProducedNotice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockProducedNotice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    producerid: msg.getProducerid_asB64(),\n    blockno: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    block: (f = msg.getBlock()) && blockchain_pb.Block.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.BlockProducedNotice}\n */\nproto.types.BlockProducedNotice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.BlockProducedNotice;\n  return proto.types.BlockProducedNotice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.BlockProducedNotice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.BlockProducedNotice}\n */\nproto.types.BlockProducedNotice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProducerid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockno(value);\n      break;\n    case 3:\n      var value = new blockchain_pb.Block;\n      reader.readMessage(value,blockchain_pb.Block.deserializeBinaryFromReader);\n      msg.setBlock(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.BlockProducedNotice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.BlockProducedNotice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.BlockProducedNotice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.BlockProducedNotice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProducerid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBlockno();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getBlock();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      blockchain_pb.Block.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes producerID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.BlockProducedNotice.prototype.getProducerid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes producerID = 1;\n * This is a type-conversion wrapper around `getProducerid()`\n * @return {string}\n */\nproto.types.BlockProducedNotice.prototype.getProducerid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProducerid()));\n};\n\n\n/**\n * optional bytes producerID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProducerid()`\n * @return {!Uint8Array}\n */\nproto.types.BlockProducedNotice.prototype.getProducerid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProducerid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.BlockProducedNotice.prototype.setProducerid = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 blockNo = 2;\n * @return {number}\n */\nproto.types.BlockProducedNotice.prototype.getBlockno = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.BlockProducedNotice.prototype.setBlockno = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional Block block = 3;\n * @return {?proto.types.Block}\n */\nproto.types.BlockProducedNotice.prototype.getBlock = function() {\n  return /** @type{?proto.types.Block} */ (\n    jspb.Message.getWrapperField(this, blockchain_pb.Block, 3));\n};\n\n\n/** @param {?proto.types.Block|undefined} value */\nproto.types.BlockProducedNotice.prototype.setBlock = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.types.BlockProducedNotice.prototype.clearBlock = function() {\n  this.setBlock(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.BlockProducedNotice.prototype.hasBlock = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetBlockHeadersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.GetBlockHeadersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetBlockHeadersRequest.displayName = 'proto.types.GetBlockHeadersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetBlockHeadersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetBlockHeadersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetBlockHeadersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetBlockHeadersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    height: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    size: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    asc: jspb.Message.getFieldWithDefault(msg, 5, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetBlockHeadersRequest}\n */\nproto.types.GetBlockHeadersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetBlockHeadersRequest;\n  return proto.types.GetBlockHeadersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetBlockHeadersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetBlockHeadersRequest}\n */\nproto.types.GetBlockHeadersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHeight(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setOffset(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setSize(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAsc(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetBlockHeadersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetBlockHeadersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetBlockHeadersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetBlockHeadersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getAsc();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.GetBlockHeadersRequest.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.types.GetBlockHeadersRequest.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.types.GetBlockHeadersRequest.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.GetBlockHeadersRequest.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 height = 2;\n * @return {number}\n */\nproto.types.GetBlockHeadersRequest.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.GetBlockHeadersRequest.prototype.setHeight = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 offset = 3;\n * @return {number}\n */\nproto.types.GetBlockHeadersRequest.prototype.getOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.GetBlockHeadersRequest.prototype.setOffset = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint32 size = 4;\n * @return {number}\n */\nproto.types.GetBlockHeadersRequest.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.types.GetBlockHeadersRequest.prototype.setSize = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bool asc = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.GetBlockHeadersRequest.prototype.getAsc = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.GetBlockHeadersRequest.prototype.setAsc = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetBlockHeadersResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetBlockHeadersResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.types.GetBlockHeadersResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetBlockHeadersResponse.displayName = 'proto.types.GetBlockHeadersResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.GetBlockHeadersResponse.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetBlockHeadersResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetBlockHeadersResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetBlockHeadersResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetBlockHeadersResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    hashesList: msg.getHashesList_asB64(),\n    headersList: jspb.Message.toObjectList(msg.getHeadersList(),\n    blockchain_pb.BlockHeader.toObject, includeInstance),\n    hasnext: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetBlockHeadersResponse}\n */\nproto.types.GetBlockHeadersResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetBlockHeadersResponse;\n  return proto.types.GetBlockHeadersResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetBlockHeadersResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetBlockHeadersResponse}\n */\nproto.types.GetBlockHeadersResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ResultStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addHashes(value);\n      break;\n    case 3:\n      var value = new blockchain_pb.BlockHeader;\n      reader.readMessage(value,blockchain_pb.BlockHeader.deserializeBinaryFromReader);\n      msg.addHeaders(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasnext(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetBlockHeadersResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetBlockHeadersResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetBlockHeadersResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetBlockHeadersResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getHashesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = message.getHeadersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      blockchain_pb.BlockHeader.serializeBinaryToWriter\n    );\n  }\n  f = message.getHasnext();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResultStatus status = 1;\n * @return {!proto.types.ResultStatus}\n */\nproto.types.GetBlockHeadersResponse.prototype.getStatus = function() {\n  return /** @type {!proto.types.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ResultStatus} value */\nproto.types.GetBlockHeadersResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * repeated bytes hashes = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.GetBlockHeadersResponse.prototype.getHashesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes hashes = 2;\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<string>}\n */\nproto.types.GetBlockHeadersResponse.prototype.getHashesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getHashesList()));\n};\n\n\n/**\n * repeated bytes hashes = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.GetBlockHeadersResponse.prototype.getHashesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getHashesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.GetBlockHeadersResponse.prototype.setHashesList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.GetBlockHeadersResponse.prototype.addHashes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.types.GetBlockHeadersResponse.prototype.clearHashesList = function() {\n  this.setHashesList([]);\n};\n\n\n/**\n * repeated BlockHeader headers = 3;\n * @return {!Array<!proto.types.BlockHeader>}\n */\nproto.types.GetBlockHeadersResponse.prototype.getHeadersList = function() {\n  return /** @type{!Array<!proto.types.BlockHeader>} */ (\n    jspb.Message.getRepeatedWrapperField(this, blockchain_pb.BlockHeader, 3));\n};\n\n\n/** @param {!Array<!proto.types.BlockHeader>} value */\nproto.types.GetBlockHeadersResponse.prototype.setHeadersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.types.BlockHeader=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.BlockHeader}\n */\nproto.types.GetBlockHeadersResponse.prototype.addHeaders = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.types.BlockHeader, opt_index);\n};\n\n\nproto.types.GetBlockHeadersResponse.prototype.clearHeadersList = function() {\n  this.setHeadersList([]);\n};\n\n\n/**\n * optional bool hasNext = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.GetBlockHeadersResponse.prototype.getHasnext = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.GetBlockHeadersResponse.prototype.setHasnext = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetBlockRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetBlockRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.types.GetBlockRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetBlockRequest.displayName = 'proto.types.GetBlockRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.GetBlockRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetBlockRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetBlockRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetBlockRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetBlockRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hashesList: msg.getHashesList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetBlockRequest}\n */\nproto.types.GetBlockRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetBlockRequest;\n  return proto.types.GetBlockRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetBlockRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetBlockRequest}\n */\nproto.types.GetBlockRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addHashes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetBlockRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetBlockRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetBlockRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetBlockRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHashesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.GetBlockRequest.prototype.getHashesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<string>}\n */\nproto.types.GetBlockRequest.prototype.getHashesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getHashesList()));\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.GetBlockRequest.prototype.getHashesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getHashesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.GetBlockRequest.prototype.setHashesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.GetBlockRequest.prototype.addHashes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.types.GetBlockRequest.prototype.clearHashesList = function() {\n  this.setHashesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetBlockResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetBlockResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.types.GetBlockResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetBlockResponse.displayName = 'proto.types.GetBlockResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.GetBlockResponse.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetBlockResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetBlockResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetBlockResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetBlockResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    blocksList: jspb.Message.toObjectList(msg.getBlocksList(),\n    blockchain_pb.Block.toObject, includeInstance),\n    hasnext: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetBlockResponse}\n */\nproto.types.GetBlockResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetBlockResponse;\n  return proto.types.GetBlockResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetBlockResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetBlockResponse}\n */\nproto.types.GetBlockResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ResultStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = new blockchain_pb.Block;\n      reader.readMessage(value,blockchain_pb.Block.deserializeBinaryFromReader);\n      msg.addBlocks(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasnext(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetBlockResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetBlockResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetBlockResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetBlockResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getBlocksList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      blockchain_pb.Block.serializeBinaryToWriter\n    );\n  }\n  f = message.getHasnext();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResultStatus status = 1;\n * @return {!proto.types.ResultStatus}\n */\nproto.types.GetBlockResponse.prototype.getStatus = function() {\n  return /** @type {!proto.types.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ResultStatus} value */\nproto.types.GetBlockResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * repeated Block blocks = 2;\n * @return {!Array<!proto.types.Block>}\n */\nproto.types.GetBlockResponse.prototype.getBlocksList = function() {\n  return /** @type{!Array<!proto.types.Block>} */ (\n    jspb.Message.getRepeatedWrapperField(this, blockchain_pb.Block, 2));\n};\n\n\n/** @param {!Array<!proto.types.Block>} value */\nproto.types.GetBlockResponse.prototype.setBlocksList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.types.Block=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Block}\n */\nproto.types.GetBlockResponse.prototype.addBlocks = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.types.Block, opt_index);\n};\n\n\nproto.types.GetBlockResponse.prototype.clearBlocksList = function() {\n  this.setBlocksList([]);\n};\n\n\n/**\n * optional bool hasNext = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.GetBlockResponse.prototype.getHasnext = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.GetBlockResponse.prototype.setHasnext = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.NewTransactionsNotice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.NewTransactionsNotice.repeatedFields_, null);\n};\ngoog.inherits(proto.types.NewTransactionsNotice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.NewTransactionsNotice.displayName = 'proto.types.NewTransactionsNotice';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.NewTransactionsNotice.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.NewTransactionsNotice.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.NewTransactionsNotice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.NewTransactionsNotice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.NewTransactionsNotice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txhashesList: msg.getTxhashesList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.NewTransactionsNotice}\n */\nproto.types.NewTransactionsNotice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.NewTransactionsNotice;\n  return proto.types.NewTransactionsNotice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.NewTransactionsNotice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.NewTransactionsNotice}\n */\nproto.types.NewTransactionsNotice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addTxhashes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.NewTransactionsNotice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.NewTransactionsNotice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.NewTransactionsNotice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.NewTransactionsNotice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxhashesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes txHashes = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.NewTransactionsNotice.prototype.getTxhashesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes txHashes = 1;\n * This is a type-conversion wrapper around `getTxhashesList()`\n * @return {!Array<string>}\n */\nproto.types.NewTransactionsNotice.prototype.getTxhashesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getTxhashesList()));\n};\n\n\n/**\n * repeated bytes txHashes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxhashesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.NewTransactionsNotice.prototype.getTxhashesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getTxhashesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.NewTransactionsNotice.prototype.setTxhashesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.NewTransactionsNotice.prototype.addTxhashes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.types.NewTransactionsNotice.prototype.clearTxhashesList = function() {\n  this.setTxhashesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetTransactionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetTransactionsRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.types.GetTransactionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetTransactionsRequest.displayName = 'proto.types.GetTransactionsRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.GetTransactionsRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetTransactionsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetTransactionsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetTransactionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetTransactionsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hashesList: msg.getHashesList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetTransactionsRequest}\n */\nproto.types.GetTransactionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetTransactionsRequest;\n  return proto.types.GetTransactionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetTransactionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetTransactionsRequest}\n */\nproto.types.GetTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addHashes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetTransactionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetTransactionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetTransactionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetTransactionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHashesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.GetTransactionsRequest.prototype.getHashesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<string>}\n */\nproto.types.GetTransactionsRequest.prototype.getHashesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getHashesList()));\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.GetTransactionsRequest.prototype.getHashesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getHashesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.GetTransactionsRequest.prototype.setHashesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.GetTransactionsRequest.prototype.addHashes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.types.GetTransactionsRequest.prototype.clearHashesList = function() {\n  this.setHashesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetTransactionsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetTransactionsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.types.GetTransactionsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetTransactionsResponse.displayName = 'proto.types.GetTransactionsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.GetTransactionsResponse.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetTransactionsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetTransactionsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetTransactionsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetTransactionsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    hashesList: msg.getHashesList_asB64(),\n    txsList: jspb.Message.toObjectList(msg.getTxsList(),\n    blockchain_pb.Tx.toObject, includeInstance),\n    hasnext: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetTransactionsResponse}\n */\nproto.types.GetTransactionsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetTransactionsResponse;\n  return proto.types.GetTransactionsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetTransactionsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetTransactionsResponse}\n */\nproto.types.GetTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ResultStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addHashes(value);\n      break;\n    case 3:\n      var value = new blockchain_pb.Tx;\n      reader.readMessage(value,blockchain_pb.Tx.deserializeBinaryFromReader);\n      msg.addTxs(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasnext(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetTransactionsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetTransactionsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetTransactionsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetTransactionsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getHashesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = message.getTxsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      blockchain_pb.Tx.serializeBinaryToWriter\n    );\n  }\n  f = message.getHasnext();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResultStatus status = 1;\n * @return {!proto.types.ResultStatus}\n */\nproto.types.GetTransactionsResponse.prototype.getStatus = function() {\n  return /** @type {!proto.types.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ResultStatus} value */\nproto.types.GetTransactionsResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * repeated bytes hashes = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.GetTransactionsResponse.prototype.getHashesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes hashes = 2;\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<string>}\n */\nproto.types.GetTransactionsResponse.prototype.getHashesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getHashesList()));\n};\n\n\n/**\n * repeated bytes hashes = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.GetTransactionsResponse.prototype.getHashesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getHashesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.GetTransactionsResponse.prototype.setHashesList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.GetTransactionsResponse.prototype.addHashes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.types.GetTransactionsResponse.prototype.clearHashesList = function() {\n  this.setHashesList([]);\n};\n\n\n/**\n * repeated Tx txs = 3;\n * @return {!Array<!proto.types.Tx>}\n */\nproto.types.GetTransactionsResponse.prototype.getTxsList = function() {\n  return /** @type{!Array<!proto.types.Tx>} */ (\n    jspb.Message.getRepeatedWrapperField(this, blockchain_pb.Tx, 3));\n};\n\n\n/** @param {!Array<!proto.types.Tx>} value */\nproto.types.GetTransactionsResponse.prototype.setTxsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.types.Tx=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.Tx}\n */\nproto.types.GetTransactionsResponse.prototype.addTxs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.types.Tx, opt_index);\n};\n\n\nproto.types.GetTransactionsResponse.prototype.clearTxsList = function() {\n  this.setTxsList([]);\n};\n\n\n/**\n * optional bool hasNext = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.GetTransactionsResponse.prototype.getHasnext = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.GetTransactionsResponse.prototype.setHasnext = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetMissingRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetMissingRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.types.GetMissingRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetMissingRequest.displayName = 'proto.types.GetMissingRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.GetMissingRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetMissingRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetMissingRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetMissingRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetMissingRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hashesList: msg.getHashesList_asB64(),\n    stophash: msg.getStophash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetMissingRequest}\n */\nproto.types.GetMissingRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetMissingRequest;\n  return proto.types.GetMissingRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetMissingRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetMissingRequest}\n */\nproto.types.GetMissingRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addHashes(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setStophash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetMissingRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetMissingRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetMissingRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetMissingRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHashesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n  f = message.getStophash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.GetMissingRequest.prototype.getHashesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<string>}\n */\nproto.types.GetMissingRequest.prototype.getHashesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getHashesList()));\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.GetMissingRequest.prototype.getHashesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getHashesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.GetMissingRequest.prototype.setHashesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.GetMissingRequest.prototype.addHashes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.types.GetMissingRequest.prototype.clearHashesList = function() {\n  this.setHashesList([]);\n};\n\n\n/**\n * optional bytes stophash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.GetMissingRequest.prototype.getStophash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes stophash = 2;\n * This is a type-conversion wrapper around `getStophash()`\n * @return {string}\n */\nproto.types.GetMissingRequest.prototype.getStophash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getStophash()));\n};\n\n\n/**\n * optional bytes stophash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStophash()`\n * @return {!Uint8Array}\n */\nproto.types.GetMissingRequest.prototype.getStophash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getStophash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.GetMissingRequest.prototype.setStophash = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetAncestorRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetAncestorRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.types.GetAncestorRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetAncestorRequest.displayName = 'proto.types.GetAncestorRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.GetAncestorRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetAncestorRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetAncestorRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetAncestorRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetAncestorRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hashesList: msg.getHashesList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetAncestorRequest}\n */\nproto.types.GetAncestorRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetAncestorRequest;\n  return proto.types.GetAncestorRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetAncestorRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetAncestorRequest}\n */\nproto.types.GetAncestorRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addHashes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetAncestorRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetAncestorRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetAncestorRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetAncestorRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHashesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.GetAncestorRequest.prototype.getHashesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<string>}\n */\nproto.types.GetAncestorRequest.prototype.getHashesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getHashesList()));\n};\n\n\n/**\n * repeated bytes hashes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.GetAncestorRequest.prototype.getHashesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getHashesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.GetAncestorRequest.prototype.setHashesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.GetAncestorRequest.prototype.addHashes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.types.GetAncestorRequest.prototype.clearHashesList = function() {\n  this.setHashesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetAncestorResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.GetAncestorResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetAncestorResponse.displayName = 'proto.types.GetAncestorResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetAncestorResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetAncestorResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetAncestorResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetAncestorResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    ancestorhash: msg.getAncestorhash_asB64(),\n    ancestorno: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetAncestorResponse}\n */\nproto.types.GetAncestorResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetAncestorResponse;\n  return proto.types.GetAncestorResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetAncestorResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetAncestorResponse}\n */\nproto.types.GetAncestorResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ResultStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAncestorhash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAncestorno(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetAncestorResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetAncestorResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetAncestorResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetAncestorResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getAncestorhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAncestorno();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResultStatus status = 1;\n * @return {!proto.types.ResultStatus}\n */\nproto.types.GetAncestorResponse.prototype.getStatus = function() {\n  return /** @type {!proto.types.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ResultStatus} value */\nproto.types.GetAncestorResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional bytes ancestorHash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.GetAncestorResponse.prototype.getAncestorhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes ancestorHash = 2;\n * This is a type-conversion wrapper around `getAncestorhash()`\n * @return {string}\n */\nproto.types.GetAncestorResponse.prototype.getAncestorhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAncestorhash()));\n};\n\n\n/**\n * optional bytes ancestorHash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAncestorhash()`\n * @return {!Uint8Array}\n */\nproto.types.GetAncestorResponse.prototype.getAncestorhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAncestorhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.GetAncestorResponse.prototype.setAncestorhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional uint64 ancestorNo = 3;\n * @return {number}\n */\nproto.types.GetAncestorResponse.prototype.getAncestorno = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.GetAncestorResponse.prototype.setAncestorno = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetHashByNo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.GetHashByNo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetHashByNo.displayName = 'proto.types.GetHashByNo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetHashByNo.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetHashByNo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetHashByNo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetHashByNo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockno: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetHashByNo}\n */\nproto.types.GetHashByNo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetHashByNo;\n  return proto.types.GetHashByNo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetHashByNo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetHashByNo}\n */\nproto.types.GetHashByNo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockno(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetHashByNo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetHashByNo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetHashByNo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetHashByNo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockno();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 blockNo = 1;\n * @return {number}\n */\nproto.types.GetHashByNo.prototype.getBlockno = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.types.GetHashByNo.prototype.setBlockno = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetHashByNoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.GetHashByNoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetHashByNoResponse.displayName = 'proto.types.GetHashByNoResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetHashByNoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetHashByNoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetHashByNoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetHashByNoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    blockhash: msg.getBlockhash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetHashByNoResponse}\n */\nproto.types.GetHashByNoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetHashByNoResponse;\n  return proto.types.GetHashByNoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetHashByNoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetHashByNoResponse}\n */\nproto.types.GetHashByNoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ResultStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlockhash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetHashByNoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetHashByNoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetHashByNoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetHashByNoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getBlockhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResultStatus status = 1;\n * @return {!proto.types.ResultStatus}\n */\nproto.types.GetHashByNoResponse.prototype.getStatus = function() {\n  return /** @type {!proto.types.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ResultStatus} value */\nproto.types.GetHashByNoResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional bytes blockHash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.types.GetHashByNoResponse.prototype.getBlockhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes blockHash = 2;\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {string}\n */\nproto.types.GetHashByNoResponse.prototype.getBlockhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlockhash()));\n};\n\n\n/**\n * optional bytes blockHash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {!Uint8Array}\n */\nproto.types.GetHashByNoResponse.prototype.getBlockhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlockhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.GetHashByNoResponse.prototype.setBlockhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetHashesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.GetHashesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetHashesRequest.displayName = 'proto.types.GetHashesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetHashesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetHashesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetHashesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetHashesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    prevhash: msg.getPrevhash_asB64(),\n    prevnumber: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    size: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetHashesRequest}\n */\nproto.types.GetHashesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetHashesRequest;\n  return proto.types.GetHashesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetHashesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetHashesRequest}\n */\nproto.types.GetHashesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPrevhash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPrevnumber(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetHashesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetHashesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetHashesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetHashesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPrevhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPrevnumber();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes prevHash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.GetHashesRequest.prototype.getPrevhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes prevHash = 1;\n * This is a type-conversion wrapper around `getPrevhash()`\n * @return {string}\n */\nproto.types.GetHashesRequest.prototype.getPrevhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPrevhash()));\n};\n\n\n/**\n * optional bytes prevHash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPrevhash()`\n * @return {!Uint8Array}\n */\nproto.types.GetHashesRequest.prototype.getPrevhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPrevhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.GetHashesRequest.prototype.setPrevhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 prevNumber = 2;\n * @return {number}\n */\nproto.types.GetHashesRequest.prototype.getPrevnumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.GetHashesRequest.prototype.setPrevnumber = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 size = 3;\n * @return {number}\n */\nproto.types.GetHashesRequest.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.GetHashesRequest.prototype.setSize = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetHashesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetHashesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.types.GetHashesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetHashesResponse.displayName = 'proto.types.GetHashesResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.GetHashesResponse.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetHashesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetHashesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetHashesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetHashesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    hashesList: msg.getHashesList_asB64(),\n    hasnext: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetHashesResponse}\n */\nproto.types.GetHashesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetHashesResponse;\n  return proto.types.GetHashesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetHashesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetHashesResponse}\n */\nproto.types.GetHashesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ResultStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addHashes(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasnext(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetHashesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetHashesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetHashesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetHashesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getHashesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = message.getHasnext();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResultStatus status = 1;\n * @return {!proto.types.ResultStatus}\n */\nproto.types.GetHashesResponse.prototype.getStatus = function() {\n  return /** @type {!proto.types.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ResultStatus} value */\nproto.types.GetHashesResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * repeated bytes hashes = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.types.GetHashesResponse.prototype.getHashesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes hashes = 2;\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<string>}\n */\nproto.types.GetHashesResponse.prototype.getHashesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getHashesList()));\n};\n\n\n/**\n * repeated bytes hashes = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.types.GetHashesResponse.prototype.getHashesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getHashesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.types.GetHashesResponse.prototype.setHashesList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.types.GetHashesResponse.prototype.addHashes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.types.GetHashesResponse.prototype.clearHashesList = function() {\n  this.setHashesList([]);\n};\n\n\n/**\n * optional bool hasNext = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.types.GetHashesResponse.prototype.getHasnext = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.types.GetHashesResponse.prototype.setHasnext = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.IssueCertificateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.IssueCertificateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.IssueCertificateRequest.displayName = 'proto.types.IssueCertificateRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.IssueCertificateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.IssueCertificateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.IssueCertificateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.IssueCertificateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.IssueCertificateRequest}\n */\nproto.types.IssueCertificateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.IssueCertificateRequest;\n  return proto.types.IssueCertificateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.IssueCertificateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.IssueCertificateRequest}\n */\nproto.types.IssueCertificateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.IssueCertificateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.IssueCertificateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.IssueCertificateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.IssueCertificateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.IssueCertificateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.IssueCertificateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.IssueCertificateResponse.displayName = 'proto.types.IssueCertificateResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.IssueCertificateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.IssueCertificateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.IssueCertificateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.IssueCertificateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    certificate: (f = msg.getCertificate()) && node_pb.AgentCertificate.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.IssueCertificateResponse}\n */\nproto.types.IssueCertificateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.IssueCertificateResponse;\n  return proto.types.IssueCertificateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.IssueCertificateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.IssueCertificateResponse}\n */\nproto.types.IssueCertificateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ResultStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = new node_pb.AgentCertificate;\n      reader.readMessage(value,node_pb.AgentCertificate.deserializeBinaryFromReader);\n      msg.setCertificate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.IssueCertificateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.IssueCertificateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.IssueCertificateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.IssueCertificateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getCertificate();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      node_pb.AgentCertificate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ResultStatus status = 1;\n * @return {!proto.types.ResultStatus}\n */\nproto.types.IssueCertificateResponse.prototype.getStatus = function() {\n  return /** @type {!proto.types.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ResultStatus} value */\nproto.types.IssueCertificateResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional AgentCertificate certificate = 2;\n * @return {?proto.types.AgentCertificate}\n */\nproto.types.IssueCertificateResponse.prototype.getCertificate = function() {\n  return /** @type{?proto.types.AgentCertificate} */ (\n    jspb.Message.getWrapperField(this, node_pb.AgentCertificate, 2));\n};\n\n\n/** @param {?proto.types.AgentCertificate|undefined} value */\nproto.types.IssueCertificateResponse.prototype.setCertificate = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.types.IssueCertificateResponse.prototype.clearCertificate = function() {\n  this.setCertificate(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.IssueCertificateResponse.prototype.hasCertificate = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.CertificateRenewedNotice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.CertificateRenewedNotice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.CertificateRenewedNotice.displayName = 'proto.types.CertificateRenewedNotice';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.CertificateRenewedNotice.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.CertificateRenewedNotice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.CertificateRenewedNotice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.CertificateRenewedNotice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    certificate: (f = msg.getCertificate()) && node_pb.AgentCertificate.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.CertificateRenewedNotice}\n */\nproto.types.CertificateRenewedNotice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.CertificateRenewedNotice;\n  return proto.types.CertificateRenewedNotice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.CertificateRenewedNotice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.CertificateRenewedNotice}\n */\nproto.types.CertificateRenewedNotice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = new node_pb.AgentCertificate;\n      reader.readMessage(value,node_pb.AgentCertificate.deserializeBinaryFromReader);\n      msg.setCertificate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.CertificateRenewedNotice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.CertificateRenewedNotice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.CertificateRenewedNotice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.CertificateRenewedNotice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCertificate();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      node_pb.AgentCertificate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional AgentCertificate certificate = 2;\n * @return {?proto.types.AgentCertificate}\n */\nproto.types.CertificateRenewedNotice.prototype.getCertificate = function() {\n  return /** @type{?proto.types.AgentCertificate} */ (\n    jspb.Message.getWrapperField(this, node_pb.AgentCertificate, 2));\n};\n\n\n/** @param {?proto.types.AgentCertificate|undefined} value */\nproto.types.CertificateRenewedNotice.prototype.setCertificate = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.types.CertificateRenewedNotice.prototype.clearCertificate = function() {\n  this.setCertificate(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.CertificateRenewedNotice.prototype.hasCertificate = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * @enum {number}\n */\nproto.types.ResultStatus = {\n  OK: 0,\n  CANCELED: 1,\n  UNKNOWN: 2,\n  INVALID_ARGUMENT: 3,\n  DEADLINE_EXCEEDED: 4,\n  NOT_FOUND: 5,\n  ALREADY_EXISTS: 6,\n  PERMISSION_DENIED: 7,\n  RESOURCE_EXHAUSTED: 8,\n  FAILED_PRECONDITION: 9,\n  ABORTED: 10,\n  OUT_OF_RANGE: 11,\n  UNIMPLEMENTED: 12,\n  INTERNAL: 13,\n  UNAVAILABLE: 14,\n  DATA_LOSS: 15,\n  UNAUTHENTICATED: 16\n};\n\ngoog.object.extend(exports, proto.types);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a4d2d72cb5c39f528a723533925571370da63f06","contentHash":"cc7820c25fe567e11df14eb13dba90293b27ed6844a7774101ec9bc912ea897b"},"/Users/paulgrau/projects/aergo/herajs/packages/client/types/metric_pb.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/types/metric_pb.js","statementMap":{"0":{"start":{"line":10,"column":11},"end":{"line":10,"column":37}},"1":{"start":{"line":11,"column":11},"end":{"line":11,"column":15}},"2":{"start":{"line":12,"column":13},"end":{"line":12,"column":38}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":58}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":55}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":58}},"7":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":99}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":56}},"10":{"start":{"line":33,"column":0},"end":{"line":35,"column":1}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":72}},"12":{"start":{"line":41,"column":0},"end":{"line":41,"column":49}},"13":{"start":{"line":45,"column":0},"end":{"line":80,"column":1}},"14":{"start":{"line":56,"column":2},"end":{"line":58,"column":4}},"15":{"start":{"line":57,"column":4},"end":{"line":57,"column":74}},"16":{"start":{"line":70,"column":2},"end":{"line":79,"column":4}},"17":{"start":{"line":71,"column":16},"end":{"line":72,"column":56}},"18":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":76,"column":6},"end":{"line":76,"column":37}},"20":{"start":{"line":78,"column":4},"end":{"line":78,"column":15}},"21":{"start":{"line":88,"column":0},"end":{"line":92,"column":2}},"22":{"start":{"line":89,"column":15},"end":{"line":89,"column":43}},"23":{"start":{"line":90,"column":12},"end":{"line":90,"column":44}},"24":{"start":{"line":91,"column":2},"end":{"line":91,"column":77}},"25":{"start":{"line":102,"column":0},"end":{"line":119,"column":2}},"26":{"start":{"line":103,"column":2},"end":{"line":117,"column":3}},"27":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"28":{"start":{"line":105,"column":6},"end":{"line":105,"column":12}},"29":{"start":{"line":107,"column":16},"end":{"line":107,"column":39}},"30":{"start":{"line":108,"column":4},"end":{"line":115,"column":15}},"31":{"start":{"line":110,"column":66},"end":{"line":110,"column":89}},"32":{"start":{"line":111,"column":8},"end":{"line":111,"column":32}},"33":{"start":{"line":112,"column":8},"end":{"line":112,"column":14}},"34":{"start":{"line":114,"column":8},"end":{"line":114,"column":27}},"35":{"start":{"line":115,"column":8},"end":{"line":115,"column":14}},"36":{"start":{"line":118,"column":2},"end":{"line":118,"column":13}},"37":{"start":{"line":126,"column":0},"end":{"line":130,"column":2}},"38":{"start":{"line":127,"column":15},"end":{"line":127,"column":38}},"39":{"start":{"line":128,"column":2},"end":{"line":128,"column":67}},"40":{"start":{"line":129,"column":2},"end":{"line":129,"column":34}},"41":{"start":{"line":140,"column":0},"end":{"line":149,"column":2}},"42":{"start":{"line":141,"column":10},"end":{"line":141,"column":19}},"43":{"start":{"line":142,"column":2},"end":{"line":142,"column":29}},"44":{"start":{"line":143,"column":2},"end":{"line":148,"column":3}},"45":{"start":{"line":144,"column":4},"end":{"line":146,"column":7}},"46":{"start":{"line":156,"column":0},"end":{"line":158,"column":2}},"47":{"start":{"line":157,"column":2},"end":{"line":157,"column":96}},"48":{"start":{"line":162,"column":0},"end":{"line":164,"column":2}},"49":{"start":{"line":163,"column":2},"end":{"line":163,"column":46}},"50":{"start":{"line":171,"column":0},"end":{"line":173,"column":2}},"51":{"start":{"line":172,"column":2},"end":{"line":172,"column":61}},"52":{"start":{"line":176,"column":0},"end":{"line":178,"column":2}},"53":{"start":{"line":177,"column":2},"end":{"line":177,"column":24}},"54":{"start":{"line":192,"column":0},"end":{"line":194,"column":2}},"55":{"start":{"line":193,"column":2},"end":{"line":193,"column":92}},"56":{"start":{"line":195,"column":0},"end":{"line":195,"column":49}},"57":{"start":{"line":196,"column":0},"end":{"line":198,"column":1}},"58":{"start":{"line":197,"column":2},"end":{"line":197,"column":58}},"59":{"start":{"line":204,"column":0},"end":{"line":204,"column":42}},"60":{"start":{"line":208,"column":0},"end":{"line":244,"column":1}},"61":{"start":{"line":219,"column":2},"end":{"line":221,"column":4}},"62":{"start":{"line":220,"column":4},"end":{"line":220,"column":67}},"63":{"start":{"line":233,"column":2},"end":{"line":243,"column":4}},"64":{"start":{"line":234,"column":16},"end":{"line":236,"column":57}},"65":{"start":{"line":239,"column":4},"end":{"line":241,"column":5}},"66":{"start":{"line":240,"column":6},"end":{"line":240,"column":37}},"67":{"start":{"line":242,"column":4},"end":{"line":242,"column":15}},"68":{"start":{"line":252,"column":0},"end":{"line":256,"column":2}},"69":{"start":{"line":253,"column":15},"end":{"line":253,"column":43}},"70":{"start":{"line":254,"column":12},"end":{"line":254,"column":37}},"71":{"start":{"line":255,"column":2},"end":{"line":255,"column":70}},"72":{"start":{"line":266,"column":0},"end":{"line":284,"column":2}},"73":{"start":{"line":267,"column":2},"end":{"line":282,"column":3}},"74":{"start":{"line":268,"column":4},"end":{"line":270,"column":5}},"75":{"start":{"line":269,"column":6},"end":{"line":269,"column":12}},"76":{"start":{"line":271,"column":16},"end":{"line":271,"column":39}},"77":{"start":{"line":272,"column":4},"end":{"line":280,"column":15}},"78":{"start":{"line":274,"column":20},"end":{"line":274,"column":48}},"79":{"start":{"line":275,"column":8},"end":{"line":275,"column":86}},"80":{"start":{"line":276,"column":8},"end":{"line":276,"column":28}},"81":{"start":{"line":277,"column":8},"end":{"line":277,"column":14}},"82":{"start":{"line":279,"column":8},"end":{"line":279,"column":27}},"83":{"start":{"line":280,"column":8},"end":{"line":280,"column":14}},"84":{"start":{"line":283,"column":2},"end":{"line":283,"column":13}},"85":{"start":{"line":291,"column":0},"end":{"line":295,"column":2}},"86":{"start":{"line":292,"column":15},"end":{"line":292,"column":38}},"87":{"start":{"line":293,"column":2},"end":{"line":293,"column":60}},"88":{"start":{"line":294,"column":2},"end":{"line":294,"column":34}},"89":{"start":{"line":305,"column":0},"end":{"line":315,"column":2}},"90":{"start":{"line":306,"column":10},"end":{"line":306,"column":19}},"91":{"start":{"line":307,"column":2},"end":{"line":307,"column":29}},"92":{"start":{"line":308,"column":2},"end":{"line":314,"column":3}},"93":{"start":{"line":309,"column":4},"end":{"line":312,"column":52}},"94":{"start":{"line":322,"column":0},"end":{"line":325,"column":2}},"95":{"start":{"line":323,"column":2},"end":{"line":324,"column":75}},"96":{"start":{"line":329,"column":0},"end":{"line":331,"column":2}},"97":{"start":{"line":330,"column":2},"end":{"line":330,"column":55}},"98":{"start":{"line":339,"column":0},"end":{"line":341,"column":2}},"99":{"start":{"line":340,"column":2},"end":{"line":340,"column":103}},"100":{"start":{"line":344,"column":0},"end":{"line":346,"column":2}},"101":{"start":{"line":345,"column":2},"end":{"line":345,"column":24}},"102":{"start":{"line":360,"column":0},"end":{"line":362,"column":2}},"103":{"start":{"line":361,"column":2},"end":{"line":361,"column":61}},"104":{"start":{"line":363,"column":0},"end":{"line":363,"column":52}},"105":{"start":{"line":364,"column":0},"end":{"line":366,"column":1}},"106":{"start":{"line":365,"column":2},"end":{"line":365,"column":64}},"107":{"start":{"line":369,"column":0},"end":{"line":408,"column":1}},"108":{"start":{"line":380,"column":2},"end":{"line":382,"column":4}},"109":{"start":{"line":381,"column":4},"end":{"line":381,"column":70}},"110":{"start":{"line":394,"column":2},"end":{"line":407,"column":4}},"111":{"start":{"line":395,"column":16},"end":{"line":400,"column":59}},"112":{"start":{"line":403,"column":4},"end":{"line":405,"column":5}},"113":{"start":{"line":404,"column":6},"end":{"line":404,"column":37}},"114":{"start":{"line":406,"column":4},"end":{"line":406,"column":15}},"115":{"start":{"line":416,"column":0},"end":{"line":420,"column":2}},"116":{"start":{"line":417,"column":15},"end":{"line":417,"column":43}},"117":{"start":{"line":418,"column":12},"end":{"line":418,"column":40}},"118":{"start":{"line":419,"column":2},"end":{"line":419,"column":73}},"119":{"start":{"line":430,"column":0},"end":{"line":463,"column":2}},"120":{"start":{"line":431,"column":2},"end":{"line":461,"column":3}},"121":{"start":{"line":432,"column":4},"end":{"line":434,"column":5}},"122":{"start":{"line":433,"column":6},"end":{"line":433,"column":12}},"123":{"start":{"line":435,"column":16},"end":{"line":435,"column":39}},"124":{"start":{"line":436,"column":4},"end":{"line":459,"column":15}},"125":{"start":{"line":438,"column":46},"end":{"line":438,"column":64}},"126":{"start":{"line":439,"column":8},"end":{"line":439,"column":29}},"127":{"start":{"line":440,"column":8},"end":{"line":440,"column":14}},"128":{"start":{"line":442,"column":41},"end":{"line":442,"column":59}},"129":{"start":{"line":443,"column":8},"end":{"line":443,"column":28}},"130":{"start":{"line":444,"column":8},"end":{"line":444,"column":14}},"131":{"start":{"line":446,"column":41},"end":{"line":446,"column":59}},"132":{"start":{"line":447,"column":8},"end":{"line":447,"column":28}},"133":{"start":{"line":448,"column":8},"end":{"line":448,"column":14}},"134":{"start":{"line":450,"column":41},"end":{"line":450,"column":59}},"135":{"start":{"line":451,"column":8},"end":{"line":451,"column":29}},"136":{"start":{"line":452,"column":8},"end":{"line":452,"column":14}},"137":{"start":{"line":454,"column":41},"end":{"line":454,"column":59}},"138":{"start":{"line":455,"column":8},"end":{"line":455,"column":29}},"139":{"start":{"line":456,"column":8},"end":{"line":456,"column":14}},"140":{"start":{"line":458,"column":8},"end":{"line":458,"column":27}},"141":{"start":{"line":459,"column":8},"end":{"line":459,"column":14}},"142":{"start":{"line":462,"column":2},"end":{"line":462,"column":13}},"143":{"start":{"line":470,"column":0},"end":{"line":474,"column":2}},"144":{"start":{"line":471,"column":15},"end":{"line":471,"column":38}},"145":{"start":{"line":472,"column":2},"end":{"line":472,"column":63}},"146":{"start":{"line":473,"column":2},"end":{"line":473,"column":34}},"147":{"start":{"line":484,"column":0},"end":{"line":521,"column":2}},"148":{"start":{"line":485,"column":10},"end":{"line":485,"column":19}},"149":{"start":{"line":486,"column":2},"end":{"line":486,"column":31}},"150":{"start":{"line":487,"column":2},"end":{"line":492,"column":3}},"151":{"start":{"line":488,"column":4},"end":{"line":490,"column":7}},"152":{"start":{"line":493,"column":2},"end":{"line":493,"column":25}},"153":{"start":{"line":494,"column":2},"end":{"line":499,"column":3}},"154":{"start":{"line":495,"column":4},"end":{"line":497,"column":7}},"155":{"start":{"line":500,"column":2},"end":{"line":500,"column":25}},"156":{"start":{"line":501,"column":2},"end":{"line":506,"column":3}},"157":{"start":{"line":502,"column":4},"end":{"line":504,"column":7}},"158":{"start":{"line":507,"column":2},"end":{"line":507,"column":26}},"159":{"start":{"line":508,"column":2},"end":{"line":513,"column":3}},"160":{"start":{"line":509,"column":4},"end":{"line":511,"column":7}},"161":{"start":{"line":514,"column":2},"end":{"line":514,"column":26}},"162":{"start":{"line":515,"column":2},"end":{"line":520,"column":3}},"163":{"start":{"line":516,"column":4},"end":{"line":518,"column":7}},"164":{"start":{"line":528,"column":0},"end":{"line":530,"column":2}},"165":{"start":{"line":529,"column":2},"end":{"line":529,"column":92}},"166":{"start":{"line":538,"column":0},"end":{"line":541,"column":2}},"167":{"start":{"line":539,"column":2},"end":{"line":540,"column":23}},"168":{"start":{"line":551,"column":0},"end":{"line":554,"column":2}},"169":{"start":{"line":552,"column":2},"end":{"line":553,"column":23}},"170":{"start":{"line":558,"column":0},"end":{"line":560,"column":2}},"171":{"start":{"line":559,"column":2},"end":{"line":559,"column":51}},"172":{"start":{"line":567,"column":0},"end":{"line":569,"column":2}},"173":{"start":{"line":568,"column":2},"end":{"line":568,"column":77}},"174":{"start":{"line":573,"column":0},"end":{"line":575,"column":2}},"175":{"start":{"line":574,"column":2},"end":{"line":574,"column":49}},"176":{"start":{"line":582,"column":0},"end":{"line":584,"column":2}},"177":{"start":{"line":583,"column":2},"end":{"line":583,"column":77}},"178":{"start":{"line":588,"column":0},"end":{"line":590,"column":2}},"179":{"start":{"line":589,"column":2},"end":{"line":589,"column":49}},"180":{"start":{"line":597,"column":0},"end":{"line":599,"column":2}},"181":{"start":{"line":598,"column":2},"end":{"line":598,"column":77}},"182":{"start":{"line":603,"column":0},"end":{"line":605,"column":2}},"183":{"start":{"line":604,"column":2},"end":{"line":604,"column":49}},"184":{"start":{"line":612,"column":0},"end":{"line":614,"column":2}},"185":{"start":{"line":613,"column":2},"end":{"line":613,"column":77}},"186":{"start":{"line":618,"column":0},"end":{"line":620,"column":2}},"187":{"start":{"line":619,"column":2},"end":{"line":619,"column":49}},"188":{"start":{"line":626,"column":0},"end":{"line":628,"column":19}},"189":{"start":{"line":631,"column":0},"end":{"line":631,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":29,"column":29},"end":{"line":29,"column":30}},"loc":{"start":{"line":29,"column":49},"end":{"line":31,"column":1}},"line":29},"1":{"name":"(anonymous_1)","decl":{"start":{"line":56,"column":50},"end":{"line":56,"column":51}},"loc":{"start":{"line":56,"column":81},"end":{"line":58,"column":3}},"line":56},"2":{"name":"(anonymous_2)","decl":{"start":{"line":70,"column":40},"end":{"line":70,"column":41}},"loc":{"start":{"line":70,"column":72},"end":{"line":79,"column":3}},"line":70},"3":{"name":"(anonymous_3)","decl":{"start":{"line":88,"column":47},"end":{"line":88,"column":48}},"loc":{"start":{"line":88,"column":64},"end":{"line":92,"column":1}},"line":88},"4":{"name":"(anonymous_4)","decl":{"start":{"line":102,"column":57},"end":{"line":102,"column":58}},"loc":{"start":{"line":102,"column":80},"end":{"line":119,"column":1}},"line":102},"5":{"name":"(anonymous_5)","decl":{"start":{"line":126,"column":55},"end":{"line":126,"column":56}},"loc":{"start":{"line":126,"column":67},"end":{"line":130,"column":1}},"line":126},"6":{"name":"(anonymous_6)","decl":{"start":{"line":140,"column":53},"end":{"line":140,"column":54}},"loc":{"start":{"line":140,"column":80},"end":{"line":149,"column":1}},"line":140},"7":{"name":"(anonymous_7)","decl":{"start":{"line":156,"column":52},"end":{"line":156,"column":53}},"loc":{"start":{"line":156,"column":64},"end":{"line":158,"column":1}},"line":156},"8":{"name":"(anonymous_8)","decl":{"start":{"line":162,"column":52},"end":{"line":162,"column":53}},"loc":{"start":{"line":162,"column":69},"end":{"line":164,"column":1}},"line":162},"9":{"name":"(anonymous_9)","decl":{"start":{"line":171,"column":48},"end":{"line":171,"column":49}},"loc":{"start":{"line":171,"column":76},"end":{"line":173,"column":1}},"line":171},"10":{"name":"(anonymous_10)","decl":{"start":{"line":176,"column":54},"end":{"line":176,"column":55}},"loc":{"start":{"line":176,"column":66},"end":{"line":178,"column":1}},"line":176},"11":{"name":"(anonymous_11)","decl":{"start":{"line":192,"column":22},"end":{"line":192,"column":23}},"loc":{"start":{"line":192,"column":42},"end":{"line":194,"column":1}},"line":192},"12":{"name":"(anonymous_12)","decl":{"start":{"line":219,"column":43},"end":{"line":219,"column":44}},"loc":{"start":{"line":219,"column":74},"end":{"line":221,"column":3}},"line":219},"13":{"name":"(anonymous_13)","decl":{"start":{"line":233,"column":33},"end":{"line":233,"column":34}},"loc":{"start":{"line":233,"column":65},"end":{"line":243,"column":3}},"line":233},"14":{"name":"(anonymous_14)","decl":{"start":{"line":252,"column":40},"end":{"line":252,"column":41}},"loc":{"start":{"line":252,"column":57},"end":{"line":256,"column":1}},"line":252},"15":{"name":"(anonymous_15)","decl":{"start":{"line":266,"column":50},"end":{"line":266,"column":51}},"loc":{"start":{"line":266,"column":73},"end":{"line":284,"column":1}},"line":266},"16":{"name":"(anonymous_16)","decl":{"start":{"line":291,"column":48},"end":{"line":291,"column":49}},"loc":{"start":{"line":291,"column":60},"end":{"line":295,"column":1}},"line":291},"17":{"name":"(anonymous_17)","decl":{"start":{"line":305,"column":46},"end":{"line":305,"column":47}},"loc":{"start":{"line":305,"column":73},"end":{"line":315,"column":1}},"line":305},"18":{"name":"(anonymous_18)","decl":{"start":{"line":322,"column":45},"end":{"line":322,"column":46}},"loc":{"start":{"line":322,"column":57},"end":{"line":325,"column":1}},"line":322},"19":{"name":"(anonymous_19)","decl":{"start":{"line":329,"column":45},"end":{"line":329,"column":46}},"loc":{"start":{"line":329,"column":62},"end":{"line":331,"column":1}},"line":329},"20":{"name":"(anonymous_20)","decl":{"start":{"line":339,"column":41},"end":{"line":339,"column":42}},"loc":{"start":{"line":339,"column":73},"end":{"line":341,"column":1}},"line":339},"21":{"name":"(anonymous_21)","decl":{"start":{"line":344,"column":47},"end":{"line":344,"column":48}},"loc":{"start":{"line":344,"column":59},"end":{"line":346,"column":1}},"line":344},"22":{"name":"(anonymous_22)","decl":{"start":{"line":360,"column":25},"end":{"line":360,"column":26}},"loc":{"start":{"line":360,"column":45},"end":{"line":362,"column":1}},"line":360},"23":{"name":"(anonymous_23)","decl":{"start":{"line":380,"column":46},"end":{"line":380,"column":47}},"loc":{"start":{"line":380,"column":77},"end":{"line":382,"column":3}},"line":380},"24":{"name":"(anonymous_24)","decl":{"start":{"line":394,"column":36},"end":{"line":394,"column":37}},"loc":{"start":{"line":394,"column":68},"end":{"line":407,"column":3}},"line":394},"25":{"name":"(anonymous_25)","decl":{"start":{"line":416,"column":43},"end":{"line":416,"column":44}},"loc":{"start":{"line":416,"column":60},"end":{"line":420,"column":1}},"line":416},"26":{"name":"(anonymous_26)","decl":{"start":{"line":430,"column":53},"end":{"line":430,"column":54}},"loc":{"start":{"line":430,"column":76},"end":{"line":463,"column":1}},"line":430},"27":{"name":"(anonymous_27)","decl":{"start":{"line":470,"column":51},"end":{"line":470,"column":52}},"loc":{"start":{"line":470,"column":63},"end":{"line":474,"column":1}},"line":470},"28":{"name":"(anonymous_28)","decl":{"start":{"line":484,"column":49},"end":{"line":484,"column":50}},"loc":{"start":{"line":484,"column":76},"end":{"line":521,"column":1}},"line":484},"29":{"name":"(anonymous_29)","decl":{"start":{"line":528,"column":45},"end":{"line":528,"column":46}},"loc":{"start":{"line":528,"column":57},"end":{"line":530,"column":1}},"line":528},"30":{"name":"(anonymous_30)","decl":{"start":{"line":538,"column":51},"end":{"line":538,"column":52}},"loc":{"start":{"line":538,"column":63},"end":{"line":541,"column":1}},"line":538},"31":{"name":"(anonymous_31)","decl":{"start":{"line":551,"column":50},"end":{"line":551,"column":51}},"loc":{"start":{"line":551,"column":62},"end":{"line":554,"column":1}},"line":551},"32":{"name":"(anonymous_32)","decl":{"start":{"line":558,"column":45},"end":{"line":558,"column":46}},"loc":{"start":{"line":558,"column":62},"end":{"line":560,"column":1}},"line":558},"33":{"name":"(anonymous_33)","decl":{"start":{"line":567,"column":44},"end":{"line":567,"column":45}},"loc":{"start":{"line":567,"column":56},"end":{"line":569,"column":1}},"line":567},"34":{"name":"(anonymous_34)","decl":{"start":{"line":573,"column":44},"end":{"line":573,"column":45}},"loc":{"start":{"line":573,"column":61},"end":{"line":575,"column":1}},"line":573},"35":{"name":"(anonymous_35)","decl":{"start":{"line":582,"column":44},"end":{"line":582,"column":45}},"loc":{"start":{"line":582,"column":56},"end":{"line":584,"column":1}},"line":582},"36":{"name":"(anonymous_36)","decl":{"start":{"line":588,"column":44},"end":{"line":588,"column":45}},"loc":{"start":{"line":588,"column":61},"end":{"line":590,"column":1}},"line":588},"37":{"name":"(anonymous_37)","decl":{"start":{"line":597,"column":45},"end":{"line":597,"column":46}},"loc":{"start":{"line":597,"column":57},"end":{"line":599,"column":1}},"line":597},"38":{"name":"(anonymous_38)","decl":{"start":{"line":603,"column":45},"end":{"line":603,"column":46}},"loc":{"start":{"line":603,"column":62},"end":{"line":605,"column":1}},"line":603},"39":{"name":"(anonymous_39)","decl":{"start":{"line":612,"column":45},"end":{"line":612,"column":46}},"loc":{"start":{"line":612,"column":57},"end":{"line":614,"column":1}},"line":612},"40":{"name":"(anonymous_40)","decl":{"start":{"line":618,"column":45},"end":{"line":618,"column":46}},"loc":{"start":{"line":618,"column":62},"end":{"line":620,"column":1}},"line":618}},"branchMap":{"0":{"loc":{"start":{"line":33,"column":0},"end":{"line":35,"column":1}},"type":"if","locations":[{"start":{"line":33,"column":0},"end":{"line":35,"column":1}},{"start":{"line":33,"column":0},"end":{"line":35,"column":1}}],"line":33},"1":{"loc":{"start":{"line":33,"column":4},"end":{"line":33,"column":27}},"type":"binary-expr","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":14}},{"start":{"line":33,"column":18},"end":{"line":33,"column":27}}],"line":33},"2":{"loc":{"start":{"line":45,"column":0},"end":{"line":80,"column":1}},"type":"if","locations":[{"start":{"line":45,"column":0},"end":{"line":80,"column":1}},{"start":{"line":45,"column":0},"end":{"line":80,"column":1}}],"line":45},"3":{"loc":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},{"start":{"line":75,"column":4},"end":{"line":77,"column":5}}],"line":75},"4":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{"line":104,"column":4},"end":{"line":106,"column":5}}],"line":104},"5":{"loc":{"start":{"line":108,"column":4},"end":{"line":115,"column":15}},"type":"switch","locations":[{"start":{"line":109,"column":6},"end":{"line":112,"column":14}},{"start":{"line":113,"column":6},"end":{"line":115,"column":14}}],"line":108},"6":{"loc":{"start":{"line":143,"column":2},"end":{"line":148,"column":3}},"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":148,"column":3}},{"start":{"line":143,"column":2},"end":{"line":148,"column":3}}],"line":143},"7":{"loc":{"start":{"line":163,"column":33},"end":{"line":163,"column":44}},"type":"binary-expr","locations":[{"start":{"line":163,"column":33},"end":{"line":163,"column":38}},{"start":{"line":163,"column":42},"end":{"line":163,"column":44}}],"line":163},"8":{"loc":{"start":{"line":196,"column":0},"end":{"line":198,"column":1}},"type":"if","locations":[{"start":{"line":196,"column":0},"end":{"line":198,"column":1}},{"start":{"line":196,"column":0},"end":{"line":198,"column":1}}],"line":196},"9":{"loc":{"start":{"line":196,"column":4},"end":{"line":196,"column":27}},"type":"binary-expr","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":14}},{"start":{"line":196,"column":18},"end":{"line":196,"column":27}}],"line":196},"10":{"loc":{"start":{"line":208,"column":0},"end":{"line":244,"column":1}},"type":"if","locations":[{"start":{"line":208,"column":0},"end":{"line":244,"column":1}},{"start":{"line":208,"column":0},"end":{"line":244,"column":1}}],"line":208},"11":{"loc":{"start":{"line":239,"column":4},"end":{"line":241,"column":5}},"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":241,"column":5}},{"start":{"line":239,"column":4},"end":{"line":241,"column":5}}],"line":239},"12":{"loc":{"start":{"line":268,"column":4},"end":{"line":270,"column":5}},"type":"if","locations":[{"start":{"line":268,"column":4},"end":{"line":270,"column":5}},{"start":{"line":268,"column":4},"end":{"line":270,"column":5}}],"line":268},"13":{"loc":{"start":{"line":272,"column":4},"end":{"line":280,"column":15}},"type":"switch","locations":[{"start":{"line":273,"column":6},"end":{"line":277,"column":14}},{"start":{"line":278,"column":6},"end":{"line":280,"column":14}}],"line":272},"14":{"loc":{"start":{"line":308,"column":2},"end":{"line":314,"column":3}},"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":314,"column":3}},{"start":{"line":308,"column":2},"end":{"line":314,"column":3}}],"line":308},"15":{"loc":{"start":{"line":364,"column":0},"end":{"line":366,"column":1}},"type":"if","locations":[{"start":{"line":364,"column":0},"end":{"line":366,"column":1}},{"start":{"line":364,"column":0},"end":{"line":366,"column":1}}],"line":364},"16":{"loc":{"start":{"line":364,"column":4},"end":{"line":364,"column":27}},"type":"binary-expr","locations":[{"start":{"line":364,"column":4},"end":{"line":364,"column":14}},{"start":{"line":364,"column":18},"end":{"line":364,"column":27}}],"line":364},"17":{"loc":{"start":{"line":369,"column":0},"end":{"line":408,"column":1}},"type":"if","locations":[{"start":{"line":369,"column":0},"end":{"line":408,"column":1}},{"start":{"line":369,"column":0},"end":{"line":408,"column":1}}],"line":369},"18":{"loc":{"start":{"line":403,"column":4},"end":{"line":405,"column":5}},"type":"if","locations":[{"start":{"line":403,"column":4},"end":{"line":405,"column":5}},{"start":{"line":403,"column":4},"end":{"line":405,"column":5}}],"line":403},"19":{"loc":{"start":{"line":432,"column":4},"end":{"line":434,"column":5}},"type":"if","locations":[{"start":{"line":432,"column":4},"end":{"line":434,"column":5}},{"start":{"line":432,"column":4},"end":{"line":434,"column":5}}],"line":432},"20":{"loc":{"start":{"line":436,"column":4},"end":{"line":459,"column":15}},"type":"switch","locations":[{"start":{"line":437,"column":6},"end":{"line":440,"column":14}},{"start":{"line":441,"column":6},"end":{"line":444,"column":14}},{"start":{"line":445,"column":6},"end":{"line":448,"column":14}},{"start":{"line":449,"column":6},"end":{"line":452,"column":14}},{"start":{"line":453,"column":6},"end":{"line":456,"column":14}},{"start":{"line":457,"column":6},"end":{"line":459,"column":14}}],"line":436},"21":{"loc":{"start":{"line":487,"column":2},"end":{"line":492,"column":3}},"type":"if","locations":[{"start":{"line":487,"column":2},"end":{"line":492,"column":3}},{"start":{"line":487,"column":2},"end":{"line":492,"column":3}}],"line":487},"22":{"loc":{"start":{"line":494,"column":2},"end":{"line":499,"column":3}},"type":"if","locations":[{"start":{"line":494,"column":2},"end":{"line":499,"column":3}},{"start":{"line":494,"column":2},"end":{"line":499,"column":3}}],"line":494},"23":{"loc":{"start":{"line":501,"column":2},"end":{"line":506,"column":3}},"type":"if","locations":[{"start":{"line":501,"column":2},"end":{"line":506,"column":3}},{"start":{"line":501,"column":2},"end":{"line":506,"column":3}}],"line":501},"24":{"loc":{"start":{"line":508,"column":2},"end":{"line":513,"column":3}},"type":"if","locations":[{"start":{"line":508,"column":2},"end":{"line":513,"column":3}},{"start":{"line":508,"column":2},"end":{"line":513,"column":3}}],"line":508},"25":{"loc":{"start":{"line":515,"column":2},"end":{"line":520,"column":3}},"type":"if","locations":[{"start":{"line":515,"column":2},"end":{"line":520,"column":3}},{"start":{"line":515,"column":2},"end":{"line":520,"column":3}}],"line":515}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":1,"49":0,"50":1,"51":0,"52":1,"53":0,"54":1,"55":0,"56":1,"57":1,"58":0,"59":1,"60":1,"61":1,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":1,"97":0,"98":1,"99":0,"100":1,"101":0,"102":1,"103":0,"104":1,"105":1,"106":0,"107":1,"108":1,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":1,"165":0,"166":1,"167":0,"168":1,"169":0,"170":1,"171":0,"172":1,"173":0,"174":1,"175":0,"176":1,"177":0,"178":1,"179":0,"180":1,"181":0,"182":1,"183":0,"184":1,"185":0,"186":1,"187":0,"188":1,"189":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"0":[0,1],"1":[1,0],"2":[1,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,1],"9":[1,0],"10":[1,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,1],"16":[1,0],"17":[1,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"inputSourceMap":{"version":3,"sources":["metric_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","types","MetricsRequest","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","typesList","getRepeatedField","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readPackedEnum","setTypesList","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getTypesList","length","writePackedEnum","setField","addTypes","opt_index","addToRepeatedField","clearTypesList","Metrics","peersList","toObjectList","getPeersList","PeerMetric","readMessage","addPeers","writeRepeatedMessage","getRepeatedWrapperField","setPeersList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearPeersList","peerid","getPeerid_asB64","sumin","getFieldWithDefault","avrin","sumout","avrout","readBytes","setPeerid","readInt64","setSumin","setAvrin","setSumout","setAvrout","getPeerid_asU8","writeBytes","getSumin","writeInt64","getAvrin","getSumout","getAvrout","getPeerid","bytesAsB64","bytesAsU8","setProto3BytesField","setProto3IntField","MetricType","NOTHING","P2P_NETWORK","object","extend","exports"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/types","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.types.MetricType', null, global);\ngoog.exportSymbol('proto.types.Metrics', null, global);\ngoog.exportSymbol('proto.types.MetricsRequest', null, global);\ngoog.exportSymbol('proto.types.PeerMetric', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.MetricsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.MetricsRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.types.MetricsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.MetricsRequest.displayName = 'proto.types.MetricsRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.MetricsRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.MetricsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.MetricsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.MetricsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MetricsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    typesList: jspb.Message.getRepeatedField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.MetricsRequest}\n */\nproto.types.MetricsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.MetricsRequest;\n  return proto.types.MetricsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.MetricsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.MetricsRequest}\n */\nproto.types.MetricsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array<!proto.types.MetricType>} */ (reader.readPackedEnum());\n      msg.setTypesList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.MetricsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.MetricsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.MetricsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MetricsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTypesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated MetricType types = 1;\n * @return {!Array<!proto.types.MetricType>}\n */\nproto.types.MetricsRequest.prototype.getTypesList = function() {\n  return /** @type {!Array<!proto.types.MetricType>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array<!proto.types.MetricType>} value */\nproto.types.MetricsRequest.prototype.setTypesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!proto.types.MetricType} value\n * @param {number=} opt_index\n */\nproto.types.MetricsRequest.prototype.addTypes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.types.MetricsRequest.prototype.clearTypesList = function() {\n  this.setTypesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.Metrics = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.Metrics.repeatedFields_, null);\n};\ngoog.inherits(proto.types.Metrics, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.Metrics.displayName = 'proto.types.Metrics';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.Metrics.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.Metrics.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.Metrics.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.Metrics} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Metrics.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peersList: jspb.Message.toObjectList(msg.getPeersList(),\n    proto.types.PeerMetric.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.Metrics}\n */\nproto.types.Metrics.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.Metrics;\n  return proto.types.Metrics.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.Metrics} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.Metrics}\n */\nproto.types.Metrics.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.PeerMetric;\n      reader.readMessage(value,proto.types.PeerMetric.deserializeBinaryFromReader);\n      msg.addPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.Metrics.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.Metrics.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.Metrics} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.Metrics.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.types.PeerMetric.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated PeerMetric peers = 1;\n * @return {!Array<!proto.types.PeerMetric>}\n */\nproto.types.Metrics.prototype.getPeersList = function() {\n  return /** @type{!Array<!proto.types.PeerMetric>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.PeerMetric, 1));\n};\n\n\n/** @param {!Array<!proto.types.PeerMetric>} value */\nproto.types.Metrics.prototype.setPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.types.PeerMetric=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.PeerMetric}\n */\nproto.types.Metrics.prototype.addPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.PeerMetric, opt_index);\n};\n\n\nproto.types.Metrics.prototype.clearPeersList = function() {\n  this.setPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.PeerMetric = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.PeerMetric, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.PeerMetric.displayName = 'proto.types.PeerMetric';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.PeerMetric.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.PeerMetric.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.PeerMetric} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PeerMetric.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerid: msg.getPeerid_asB64(),\n    sumin: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    avrin: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    sumout: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    avrout: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.PeerMetric}\n */\nproto.types.PeerMetric.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.PeerMetric;\n  return proto.types.PeerMetric.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.PeerMetric} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.PeerMetric}\n */\nproto.types.PeerMetric.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPeerid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSumin(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAvrin(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSumout(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAvrout(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.PeerMetric.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.PeerMetric.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.PeerMetric} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.PeerMetric.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSumin();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getAvrin();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getSumout();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getAvrout();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes peerID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.PeerMetric.prototype.getPeerid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes peerID = 1;\n * This is a type-conversion wrapper around `getPeerid()`\n * @return {string}\n */\nproto.types.PeerMetric.prototype.getPeerid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPeerid()));\n};\n\n\n/**\n * optional bytes peerID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPeerid()`\n * @return {!Uint8Array}\n */\nproto.types.PeerMetric.prototype.getPeerid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPeerid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.PeerMetric.prototype.setPeerid = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 sumIn = 2;\n * @return {number}\n */\nproto.types.PeerMetric.prototype.getSumin = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.PeerMetric.prototype.setSumin = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 avrIn = 3;\n * @return {number}\n */\nproto.types.PeerMetric.prototype.getAvrin = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.types.PeerMetric.prototype.setAvrin = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 sumOut = 4;\n * @return {number}\n */\nproto.types.PeerMetric.prototype.getSumout = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.types.PeerMetric.prototype.setSumout = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 avrOut = 5;\n * @return {number}\n */\nproto.types.PeerMetric.prototype.getAvrout = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.types.PeerMetric.prototype.setAvrout = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.types.MetricType = {\n  NOTHING: 0,\n  P2P_NETWORK: 1\n};\n\ngoog.object.extend(exports, proto.types);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"689e1a9cc620aa67e6af3d423063185f7e3dbc96","contentHash":"a1ea4c66ca9a38bf8d44164bacd1880ce6e48da585d2a78793b6c60ff2f72993"},"/Users/paulgrau/projects/aergo/herajs/packages/client/types/raft_pb.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/types/raft_pb.js","statementMap":{"0":{"start":{"line":10,"column":11},"end":{"line":10,"column":37}},"1":{"start":{"line":11,"column":11},"end":{"line":11,"column":15}},"2":{"start":{"line":12,"column":13},"end":{"line":12,"column":38}},"3":{"start":{"line":14,"column":13},"end":{"line":14,"column":35}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":66}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":63}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":69}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":70}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":61}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":58}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":64}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":69}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":68}},"14":{"start":{"line":25,"column":0},"end":{"line":25,"column":64}},"15":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"16":{"start":{"line":38,"column":2},"end":{"line":38,"column":61}},"17":{"start":{"line":40,"column":0},"end":{"line":40,"column":52}},"18":{"start":{"line":41,"column":0},"end":{"line":43,"column":1}},"19":{"start":{"line":42,"column":2},"end":{"line":42,"column":64}},"20":{"start":{"line":46,"column":0},"end":{"line":84,"column":1}},"21":{"start":{"line":57,"column":2},"end":{"line":59,"column":4}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":70}},"23":{"start":{"line":71,"column":2},"end":{"line":83,"column":4}},"24":{"start":{"line":72,"column":16},"end":{"line":76,"column":37}},"25":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"26":{"start":{"line":80,"column":6},"end":{"line":80,"column":37}},"27":{"start":{"line":82,"column":4},"end":{"line":82,"column":15}},"28":{"start":{"line":92,"column":0},"end":{"line":96,"column":2}},"29":{"start":{"line":93,"column":15},"end":{"line":93,"column":43}},"30":{"start":{"line":94,"column":12},"end":{"line":94,"column":40}},"31":{"start":{"line":95,"column":2},"end":{"line":95,"column":73}},"32":{"start":{"line":106,"column":0},"end":{"line":135,"column":2}},"33":{"start":{"line":107,"column":2},"end":{"line":133,"column":3}},"34":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"35":{"start":{"line":109,"column":6},"end":{"line":109,"column":12}},"36":{"start":{"line":111,"column":16},"end":{"line":111,"column":39}},"37":{"start":{"line":112,"column":4},"end":{"line":131,"column":15}},"38":{"start":{"line":114,"column":41},"end":{"line":114,"column":60}},"39":{"start":{"line":115,"column":8},"end":{"line":115,"column":25}},"40":{"start":{"line":116,"column":8},"end":{"line":116,"column":14}},"41":{"start":{"line":118,"column":41},"end":{"line":118,"column":60}},"42":{"start":{"line":119,"column":8},"end":{"line":119,"column":27}},"43":{"start":{"line":120,"column":8},"end":{"line":120,"column":14}},"44":{"start":{"line":122,"column":41},"end":{"line":122,"column":60}},"45":{"start":{"line":123,"column":8},"end":{"line":123,"column":30}},"46":{"start":{"line":124,"column":8},"end":{"line":124,"column":14}},"47":{"start":{"line":126,"column":46},"end":{"line":126,"column":64}},"48":{"start":{"line":127,"column":8},"end":{"line":127,"column":29}},"49":{"start":{"line":128,"column":8},"end":{"line":128,"column":14}},"50":{"start":{"line":130,"column":8},"end":{"line":130,"column":27}},"51":{"start":{"line":131,"column":8},"end":{"line":131,"column":14}},"52":{"start":{"line":134,"column":2},"end":{"line":134,"column":13}},"53":{"start":{"line":142,"column":0},"end":{"line":146,"column":2}},"54":{"start":{"line":143,"column":15},"end":{"line":143,"column":38}},"55":{"start":{"line":144,"column":2},"end":{"line":144,"column":63}},"56":{"start":{"line":145,"column":2},"end":{"line":145,"column":34}},"57":{"start":{"line":156,"column":0},"end":{"line":186,"column":2}},"58":{"start":{"line":157,"column":10},"end":{"line":157,"column":19}},"59":{"start":{"line":158,"column":2},"end":{"line":158,"column":22}},"60":{"start":{"line":159,"column":2},"end":{"line":164,"column":3}},"61":{"start":{"line":160,"column":4},"end":{"line":162,"column":7}},"62":{"start":{"line":165,"column":2},"end":{"line":165,"column":24}},"63":{"start":{"line":166,"column":2},"end":{"line":171,"column":3}},"64":{"start":{"line":167,"column":4},"end":{"line":169,"column":7}},"65":{"start":{"line":172,"column":2},"end":{"line":172,"column":27}},"66":{"start":{"line":173,"column":2},"end":{"line":178,"column":3}},"67":{"start":{"line":174,"column":4},"end":{"line":176,"column":7}},"68":{"start":{"line":179,"column":2},"end":{"line":179,"column":31}},"69":{"start":{"line":180,"column":2},"end":{"line":185,"column":3}},"70":{"start":{"line":181,"column":4},"end":{"line":183,"column":7}},"71":{"start":{"line":193,"column":0},"end":{"line":195,"column":2}},"72":{"start":{"line":194,"column":2},"end":{"line":194,"column":77}},"73":{"start":{"line":199,"column":0},"end":{"line":201,"column":2}},"74":{"start":{"line":200,"column":2},"end":{"line":200,"column":49}},"75":{"start":{"line":208,"column":0},"end":{"line":210,"column":2}},"76":{"start":{"line":209,"column":2},"end":{"line":209,"column":78}},"77":{"start":{"line":214,"column":0},"end":{"line":216,"column":2}},"78":{"start":{"line":215,"column":2},"end":{"line":215,"column":52}},"79":{"start":{"line":223,"column":0},"end":{"line":225,"column":2}},"80":{"start":{"line":224,"column":2},"end":{"line":224,"column":78}},"81":{"start":{"line":229,"column":0},"end":{"line":231,"column":2}},"82":{"start":{"line":230,"column":2},"end":{"line":230,"column":52}},"83":{"start":{"line":238,"column":0},"end":{"line":240,"column":2}},"84":{"start":{"line":239,"column":2},"end":{"line":239,"column":92}},"85":{"start":{"line":248,"column":0},"end":{"line":251,"column":2}},"86":{"start":{"line":249,"column":2},"end":{"line":250,"column":23}},"87":{"start":{"line":261,"column":0},"end":{"line":264,"column":2}},"88":{"start":{"line":262,"column":2},"end":{"line":263,"column":23}},"89":{"start":{"line":268,"column":0},"end":{"line":270,"column":2}},"90":{"start":{"line":269,"column":2},"end":{"line":269,"column":51}},"91":{"start":{"line":284,"column":0},"end":{"line":286,"column":2}},"92":{"start":{"line":285,"column":2},"end":{"line":285,"column":61}},"93":{"start":{"line":287,"column":0},"end":{"line":287,"column":58}},"94":{"start":{"line":288,"column":0},"end":{"line":290,"column":1}},"95":{"start":{"line":289,"column":2},"end":{"line":289,"column":76}},"96":{"start":{"line":293,"column":0},"end":{"line":330,"column":1}},"97":{"start":{"line":304,"column":2},"end":{"line":306,"column":4}},"98":{"start":{"line":305,"column":4},"end":{"line":305,"column":76}},"99":{"start":{"line":318,"column":2},"end":{"line":329,"column":4}},"100":{"start":{"line":319,"column":16},"end":{"line":322,"column":88}},"101":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"102":{"start":{"line":326,"column":6},"end":{"line":326,"column":37}},"103":{"start":{"line":328,"column":4},"end":{"line":328,"column":15}},"104":{"start":{"line":338,"column":0},"end":{"line":342,"column":2}},"105":{"start":{"line":339,"column":15},"end":{"line":339,"column":43}},"106":{"start":{"line":340,"column":12},"end":{"line":340,"column":46}},"107":{"start":{"line":341,"column":2},"end":{"line":341,"column":79}},"108":{"start":{"line":352,"column":0},"end":{"line":378,"column":2}},"109":{"start":{"line":353,"column":2},"end":{"line":376,"column":3}},"110":{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},"111":{"start":{"line":355,"column":6},"end":{"line":355,"column":12}},"112":{"start":{"line":357,"column":16},"end":{"line":357,"column":39}},"113":{"start":{"line":358,"column":4},"end":{"line":374,"column":15}},"114":{"start":{"line":360,"column":68},"end":{"line":360,"column":85}},"115":{"start":{"line":361,"column":8},"end":{"line":361,"column":27}},"116":{"start":{"line":362,"column":8},"end":{"line":362,"column":14}},"117":{"start":{"line":364,"column":41},"end":{"line":364,"column":60}},"118":{"start":{"line":365,"column":8},"end":{"line":365,"column":32}},"119":{"start":{"line":366,"column":8},"end":{"line":366,"column":14}},"120":{"start":{"line":368,"column":20},"end":{"line":368,"column":48}},"121":{"start":{"line":369,"column":8},"end":{"line":369,"column":86}},"122":{"start":{"line":370,"column":8},"end":{"line":370,"column":27}},"123":{"start":{"line":371,"column":8},"end":{"line":371,"column":14}},"124":{"start":{"line":373,"column":8},"end":{"line":373,"column":27}},"125":{"start":{"line":374,"column":8},"end":{"line":374,"column":14}},"126":{"start":{"line":377,"column":2},"end":{"line":377,"column":13}},"127":{"start":{"line":385,"column":0},"end":{"line":389,"column":2}},"128":{"start":{"line":386,"column":15},"end":{"line":386,"column":38}},"129":{"start":{"line":387,"column":2},"end":{"line":387,"column":69}},"130":{"start":{"line":388,"column":2},"end":{"line":388,"column":34}},"131":{"start":{"line":399,"column":0},"end":{"line":423,"column":2}},"132":{"start":{"line":400,"column":10},"end":{"line":400,"column":19}},"133":{"start":{"line":401,"column":2},"end":{"line":401,"column":24}},"134":{"start":{"line":402,"column":2},"end":{"line":407,"column":3}},"135":{"start":{"line":403,"column":4},"end":{"line":405,"column":7}},"136":{"start":{"line":408,"column":2},"end":{"line":408,"column":29}},"137":{"start":{"line":409,"column":2},"end":{"line":414,"column":3}},"138":{"start":{"line":410,"column":4},"end":{"line":412,"column":7}},"139":{"start":{"line":415,"column":2},"end":{"line":415,"column":24}},"140":{"start":{"line":416,"column":2},"end":{"line":422,"column":3}},"141":{"start":{"line":417,"column":4},"end":{"line":420,"column":52}},"142":{"start":{"line":430,"column":0},"end":{"line":432,"column":2}},"143":{"start":{"line":431,"column":2},"end":{"line":431,"column":104}},"144":{"start":{"line":436,"column":0},"end":{"line":438,"column":2}},"145":{"start":{"line":437,"column":2},"end":{"line":437,"column":50}},"146":{"start":{"line":445,"column":0},"end":{"line":447,"column":2}},"147":{"start":{"line":446,"column":2},"end":{"line":446,"column":77}},"148":{"start":{"line":451,"column":0},"end":{"line":453,"column":2}},"149":{"start":{"line":452,"column":2},"end":{"line":452,"column":49}},"150":{"start":{"line":460,"column":0},"end":{"line":463,"column":2}},"151":{"start":{"line":461,"column":2},"end":{"line":462,"column":67}},"152":{"start":{"line":467,"column":0},"end":{"line":469,"column":2}},"153":{"start":{"line":468,"column":2},"end":{"line":468,"column":47}},"154":{"start":{"line":472,"column":0},"end":{"line":474,"column":2}},"155":{"start":{"line":473,"column":2},"end":{"line":473,"column":26}},"156":{"start":{"line":481,"column":0},"end":{"line":483,"column":2}},"157":{"start":{"line":482,"column":2},"end":{"line":482,"column":48}},"158":{"start":{"line":497,"column":0},"end":{"line":499,"column":2}},"159":{"start":{"line":498,"column":2},"end":{"line":498,"column":61}},"160":{"start":{"line":500,"column":0},"end":{"line":500,"column":63}},"161":{"start":{"line":501,"column":0},"end":{"line":503,"column":1}},"162":{"start":{"line":502,"column":2},"end":{"line":502,"column":86}},"163":{"start":{"line":506,"column":0},"end":{"line":541,"column":1}},"164":{"start":{"line":517,"column":2},"end":{"line":519,"column":4}},"165":{"start":{"line":518,"column":4},"end":{"line":518,"column":81}},"166":{"start":{"line":531,"column":2},"end":{"line":540,"column":4}},"167":{"start":{"line":532,"column":16},"end":{"line":533,"column":88}},"168":{"start":{"line":536,"column":4},"end":{"line":538,"column":5}},"169":{"start":{"line":537,"column":6},"end":{"line":537,"column":37}},"170":{"start":{"line":539,"column":4},"end":{"line":539,"column":15}},"171":{"start":{"line":549,"column":0},"end":{"line":553,"column":2}},"172":{"start":{"line":550,"column":15},"end":{"line":550,"column":43}},"173":{"start":{"line":551,"column":12},"end":{"line":551,"column":51}},"174":{"start":{"line":552,"column":2},"end":{"line":552,"column":84}},"175":{"start":{"line":563,"column":0},"end":{"line":581,"column":2}},"176":{"start":{"line":564,"column":2},"end":{"line":579,"column":3}},"177":{"start":{"line":565,"column":4},"end":{"line":567,"column":5}},"178":{"start":{"line":566,"column":6},"end":{"line":566,"column":12}},"179":{"start":{"line":568,"column":16},"end":{"line":568,"column":39}},"180":{"start":{"line":569,"column":4},"end":{"line":577,"column":15}},"181":{"start":{"line":571,"column":20},"end":{"line":571,"column":48}},"182":{"start":{"line":572,"column":8},"end":{"line":572,"column":86}},"183":{"start":{"line":573,"column":8},"end":{"line":573,"column":27}},"184":{"start":{"line":574,"column":8},"end":{"line":574,"column":14}},"185":{"start":{"line":576,"column":8},"end":{"line":576,"column":27}},"186":{"start":{"line":577,"column":8},"end":{"line":577,"column":14}},"187":{"start":{"line":580,"column":2},"end":{"line":580,"column":13}},"188":{"start":{"line":588,"column":0},"end":{"line":592,"column":2}},"189":{"start":{"line":589,"column":15},"end":{"line":589,"column":38}},"190":{"start":{"line":590,"column":2},"end":{"line":590,"column":74}},"191":{"start":{"line":591,"column":2},"end":{"line":591,"column":34}},"192":{"start":{"line":602,"column":0},"end":{"line":612,"column":2}},"193":{"start":{"line":603,"column":10},"end":{"line":603,"column":19}},"194":{"start":{"line":604,"column":2},"end":{"line":604,"column":24}},"195":{"start":{"line":605,"column":2},"end":{"line":611,"column":3}},"196":{"start":{"line":606,"column":4},"end":{"line":609,"column":52}},"197":{"start":{"line":619,"column":0},"end":{"line":622,"column":2}},"198":{"start":{"line":620,"column":2},"end":{"line":621,"column":67}},"199":{"start":{"line":626,"column":0},"end":{"line":628,"column":2}},"200":{"start":{"line":627,"column":2},"end":{"line":627,"column":47}},"201":{"start":{"line":631,"column":0},"end":{"line":633,"column":2}},"202":{"start":{"line":632,"column":2},"end":{"line":632,"column":26}},"203":{"start":{"line":640,"column":0},"end":{"line":642,"column":2}},"204":{"start":{"line":641,"column":2},"end":{"line":641,"column":48}},"205":{"start":{"line":656,"column":0},"end":{"line":658,"column":2}},"206":{"start":{"line":657,"column":2},"end":{"line":657,"column":61}},"207":{"start":{"line":659,"column":0},"end":{"line":659,"column":55}},"208":{"start":{"line":660,"column":0},"end":{"line":662,"column":1}},"209":{"start":{"line":661,"column":2},"end":{"line":661,"column":70}},"210":{"start":{"line":665,"column":0},"end":{"line":701,"column":1}},"211":{"start":{"line":676,"column":2},"end":{"line":678,"column":4}},"212":{"start":{"line":677,"column":4},"end":{"line":677,"column":73}},"213":{"start":{"line":690,"column":2},"end":{"line":700,"column":4}},"214":{"start":{"line":691,"column":16},"end":{"line":693,"column":59}},"215":{"start":{"line":696,"column":4},"end":{"line":698,"column":5}},"216":{"start":{"line":697,"column":6},"end":{"line":697,"column":37}},"217":{"start":{"line":699,"column":4},"end":{"line":699,"column":15}},"218":{"start":{"line":709,"column":0},"end":{"line":713,"column":2}},"219":{"start":{"line":710,"column":15},"end":{"line":710,"column":43}},"220":{"start":{"line":711,"column":12},"end":{"line":711,"column":43}},"221":{"start":{"line":712,"column":2},"end":{"line":712,"column":76}},"222":{"start":{"line":723,"column":0},"end":{"line":744,"column":2}},"223":{"start":{"line":724,"column":2},"end":{"line":742,"column":3}},"224":{"start":{"line":725,"column":4},"end":{"line":727,"column":5}},"225":{"start":{"line":726,"column":6},"end":{"line":726,"column":12}},"226":{"start":{"line":728,"column":16},"end":{"line":728,"column":39}},"227":{"start":{"line":729,"column":4},"end":{"line":740,"column":15}},"228":{"start":{"line":731,"column":41},"end":{"line":731,"column":60}},"229":{"start":{"line":732,"column":8},"end":{"line":732,"column":27}},"230":{"start":{"line":733,"column":8},"end":{"line":733,"column":14}},"231":{"start":{"line":735,"column":41},"end":{"line":735,"column":60}},"232":{"start":{"line":736,"column":8},"end":{"line":736,"column":29}},"233":{"start":{"line":737,"column":8},"end":{"line":737,"column":14}},"234":{"start":{"line":739,"column":8},"end":{"line":739,"column":27}},"235":{"start":{"line":740,"column":8},"end":{"line":740,"column":14}},"236":{"start":{"line":743,"column":2},"end":{"line":743,"column":13}},"237":{"start":{"line":751,"column":0},"end":{"line":755,"column":2}},"238":{"start":{"line":752,"column":15},"end":{"line":752,"column":38}},"239":{"start":{"line":753,"column":2},"end":{"line":753,"column":66}},"240":{"start":{"line":754,"column":2},"end":{"line":754,"column":34}},"241":{"start":{"line":765,"column":0},"end":{"line":781,"column":2}},"242":{"start":{"line":766,"column":10},"end":{"line":766,"column":19}},"243":{"start":{"line":767,"column":2},"end":{"line":767,"column":24}},"244":{"start":{"line":768,"column":2},"end":{"line":773,"column":3}},"245":{"start":{"line":769,"column":4},"end":{"line":771,"column":7}},"246":{"start":{"line":774,"column":2},"end":{"line":774,"column":26}},"247":{"start":{"line":775,"column":2},"end":{"line":780,"column":3}},"248":{"start":{"line":776,"column":4},"end":{"line":778,"column":7}},"249":{"start":{"line":788,"column":0},"end":{"line":790,"column":2}},"250":{"start":{"line":789,"column":2},"end":{"line":789,"column":77}},"251":{"start":{"line":794,"column":0},"end":{"line":796,"column":2}},"252":{"start":{"line":795,"column":2},"end":{"line":795,"column":49}},"253":{"start":{"line":803,"column":0},"end":{"line":805,"column":2}},"254":{"start":{"line":804,"column":2},"end":{"line":804,"column":77}},"255":{"start":{"line":809,"column":0},"end":{"line":811,"column":2}},"256":{"start":{"line":810,"column":2},"end":{"line":810,"column":49}},"257":{"start":{"line":825,"column":0},"end":{"line":827,"column":2}},"258":{"start":{"line":826,"column":2},"end":{"line":826,"column":61}},"259":{"start":{"line":828,"column":0},"end":{"line":828,"column":63}},"260":{"start":{"line":829,"column":0},"end":{"line":831,"column":1}},"261":{"start":{"line":830,"column":2},"end":{"line":830,"column":86}},"262":{"start":{"line":834,"column":0},"end":{"line":869,"column":1}},"263":{"start":{"line":845,"column":2},"end":{"line":847,"column":4}},"264":{"start":{"line":846,"column":4},"end":{"line":846,"column":81}},"265":{"start":{"line":859,"column":2},"end":{"line":868,"column":4}},"266":{"start":{"line":860,"column":16},"end":{"line":861,"column":51}},"267":{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},"268":{"start":{"line":865,"column":6},"end":{"line":865,"column":37}},"269":{"start":{"line":867,"column":4},"end":{"line":867,"column":15}},"270":{"start":{"line":877,"column":0},"end":{"line":881,"column":2}},"271":{"start":{"line":878,"column":15},"end":{"line":878,"column":43}},"272":{"start":{"line":879,"column":12},"end":{"line":879,"column":51}},"273":{"start":{"line":880,"column":2},"end":{"line":880,"column":84}},"274":{"start":{"line":891,"column":0},"end":{"line":908,"column":2}},"275":{"start":{"line":892,"column":2},"end":{"line":906,"column":3}},"276":{"start":{"line":893,"column":4},"end":{"line":895,"column":5}},"277":{"start":{"line":894,"column":6},"end":{"line":894,"column":12}},"278":{"start":{"line":896,"column":16},"end":{"line":896,"column":39}},"279":{"start":{"line":897,"column":4},"end":{"line":904,"column":15}},"280":{"start":{"line":899,"column":46},"end":{"line":899,"column":64}},"281":{"start":{"line":900,"column":8},"end":{"line":900,"column":36}},"282":{"start":{"line":901,"column":8},"end":{"line":901,"column":14}},"283":{"start":{"line":903,"column":8},"end":{"line":903,"column":27}},"284":{"start":{"line":904,"column":8},"end":{"line":904,"column":14}},"285":{"start":{"line":907,"column":2},"end":{"line":907,"column":13}},"286":{"start":{"line":915,"column":0},"end":{"line":919,"column":2}},"287":{"start":{"line":916,"column":15},"end":{"line":916,"column":38}},"288":{"start":{"line":917,"column":2},"end":{"line":917,"column":74}},"289":{"start":{"line":918,"column":2},"end":{"line":918,"column":34}},"290":{"start":{"line":929,"column":0},"end":{"line":938,"column":2}},"291":{"start":{"line":930,"column":10},"end":{"line":930,"column":19}},"292":{"start":{"line":931,"column":2},"end":{"line":931,"column":38}},"293":{"start":{"line":932,"column":2},"end":{"line":937,"column":3}},"294":{"start":{"line":933,"column":4},"end":{"line":935,"column":7}},"295":{"start":{"line":945,"column":0},"end":{"line":947,"column":2}},"296":{"start":{"line":946,"column":2},"end":{"line":946,"column":92}},"297":{"start":{"line":955,"column":0},"end":{"line":958,"column":2}},"298":{"start":{"line":956,"column":2},"end":{"line":957,"column":30}},"299":{"start":{"line":968,"column":0},"end":{"line":971,"column":2}},"300":{"start":{"line":969,"column":2},"end":{"line":970,"column":30}},"301":{"start":{"line":975,"column":0},"end":{"line":977,"column":2}},"302":{"start":{"line":976,"column":2},"end":{"line":976,"column":51}},"303":{"start":{"line":991,"column":0},"end":{"line":993,"column":2}},"304":{"start":{"line":992,"column":2},"end":{"line":992,"column":107}},"305":{"start":{"line":994,"column":0},"end":{"line":994,"column":64}},"306":{"start":{"line":995,"column":0},"end":{"line":997,"column":1}},"307":{"start":{"line":996,"column":2},"end":{"line":996,"column":88}},"308":{"start":{"line":1003,"column":0},"end":{"line":1003,"column":57}},"309":{"start":{"line":1007,"column":0},"end":{"line":1048,"column":1}},"310":{"start":{"line":1018,"column":2},"end":{"line":1020,"column":4}},"311":{"start":{"line":1019,"column":4},"end":{"line":1019,"column":82}},"312":{"start":{"line":1032,"column":2},"end":{"line":1047,"column":4}},"313":{"start":{"line":1033,"column":16},"end":{"line":1040,"column":109}},"314":{"start":{"line":1043,"column":4},"end":{"line":1045,"column":5}},"315":{"start":{"line":1044,"column":6},"end":{"line":1044,"column":37}},"316":{"start":{"line":1046,"column":4},"end":{"line":1046,"column":15}},"317":{"start":{"line":1056,"column":0},"end":{"line":1060,"column":2}},"318":{"start":{"line":1057,"column":15},"end":{"line":1057,"column":43}},"319":{"start":{"line":1058,"column":12},"end":{"line":1058,"column":52}},"320":{"start":{"line":1059,"column":2},"end":{"line":1059,"column":85}},"321":{"start":{"line":1070,"column":0},"end":{"line":1109,"column":2}},"322":{"start":{"line":1071,"column":2},"end":{"line":1107,"column":3}},"323":{"start":{"line":1072,"column":4},"end":{"line":1074,"column":5}},"324":{"start":{"line":1073,"column":6},"end":{"line":1073,"column":12}},"325":{"start":{"line":1075,"column":16},"end":{"line":1075,"column":39}},"326":{"start":{"line":1076,"column":4},"end":{"line":1105,"column":15}},"327":{"start":{"line":1078,"column":46},"end":{"line":1078,"column":64}},"328":{"start":{"line":1079,"column":8},"end":{"line":1079,"column":30}},"329":{"start":{"line":1080,"column":8},"end":{"line":1080,"column":14}},"330":{"start":{"line":1082,"column":41},"end":{"line":1082,"column":60}},"331":{"start":{"line":1083,"column":8},"end":{"line":1083,"column":32}},"332":{"start":{"line":1084,"column":8},"end":{"line":1084,"column":14}},"333":{"start":{"line":1086,"column":41},"end":{"line":1086,"column":60}},"334":{"start":{"line":1087,"column":8},"end":{"line":1087,"column":28}},"335":{"start":{"line":1088,"column":8},"end":{"line":1088,"column":14}},"336":{"start":{"line":1090,"column":20},"end":{"line":1090,"column":48}},"337":{"start":{"line":1091,"column":8},"end":{"line":1091,"column":86}},"338":{"start":{"line":1092,"column":8},"end":{"line":1092,"column":31}},"339":{"start":{"line":1093,"column":8},"end":{"line":1093,"column":14}},"340":{"start":{"line":1095,"column":41},"end":{"line":1095,"column":60}},"341":{"start":{"line":1096,"column":8},"end":{"line":1096,"column":34}},"342":{"start":{"line":1097,"column":8},"end":{"line":1097,"column":14}},"343":{"start":{"line":1099,"column":20},"end":{"line":1099,"column":51}},"344":{"start":{"line":1100,"column":8},"end":{"line":1100,"column":89}},"345":{"start":{"line":1101,"column":8},"end":{"line":1101,"column":36}},"346":{"start":{"line":1102,"column":8},"end":{"line":1102,"column":14}},"347":{"start":{"line":1104,"column":8},"end":{"line":1104,"column":27}},"348":{"start":{"line":1105,"column":8},"end":{"line":1105,"column":14}},"349":{"start":{"line":1108,"column":2},"end":{"line":1108,"column":13}},"350":{"start":{"line":1116,"column":0},"end":{"line":1120,"column":2}},"351":{"start":{"line":1117,"column":15},"end":{"line":1117,"column":38}},"352":{"start":{"line":1118,"column":2},"end":{"line":1118,"column":75}},"353":{"start":{"line":1119,"column":2},"end":{"line":1119,"column":34}},"354":{"start":{"line":1130,"column":0},"end":{"line":1176,"column":2}},"355":{"start":{"line":1131,"column":10},"end":{"line":1131,"column":19}},"356":{"start":{"line":1132,"column":2},"end":{"line":1132,"column":32}},"357":{"start":{"line":1133,"column":2},"end":{"line":1138,"column":3}},"358":{"start":{"line":1134,"column":4},"end":{"line":1136,"column":7}},"359":{"start":{"line":1139,"column":2},"end":{"line":1139,"column":29}},"360":{"start":{"line":1140,"column":2},"end":{"line":1145,"column":3}},"361":{"start":{"line":1141,"column":4},"end":{"line":1143,"column":7}},"362":{"start":{"line":1146,"column":2},"end":{"line":1146,"column":25}},"363":{"start":{"line":1147,"column":2},"end":{"line":1152,"column":3}},"364":{"start":{"line":1148,"column":4},"end":{"line":1150,"column":7}},"365":{"start":{"line":1153,"column":2},"end":{"line":1153,"column":32}},"366":{"start":{"line":1154,"column":2},"end":{"line":1160,"column":3}},"367":{"start":{"line":1155,"column":4},"end":{"line":1158,"column":52}},"368":{"start":{"line":1161,"column":2},"end":{"line":1161,"column":31}},"369":{"start":{"line":1162,"column":2},"end":{"line":1167,"column":3}},"370":{"start":{"line":1163,"column":4},"end":{"line":1165,"column":7}},"371":{"start":{"line":1168,"column":2},"end":{"line":1168,"column":33}},"372":{"start":{"line":1169,"column":2},"end":{"line":1175,"column":3}},"373":{"start":{"line":1170,"column":4},"end":{"line":1173,"column":55}},"374":{"start":{"line":1183,"column":0},"end":{"line":1185,"column":2}},"375":{"start":{"line":1184,"column":2},"end":{"line":1184,"column":92}},"376":{"start":{"line":1193,"column":0},"end":{"line":1196,"column":2}},"377":{"start":{"line":1194,"column":2},"end":{"line":1195,"column":24}},"378":{"start":{"line":1206,"column":0},"end":{"line":1209,"column":2}},"379":{"start":{"line":1207,"column":2},"end":{"line":1208,"column":24}},"380":{"start":{"line":1213,"column":0},"end":{"line":1215,"column":2}},"381":{"start":{"line":1214,"column":2},"end":{"line":1214,"column":51}},"382":{"start":{"line":1222,"column":0},"end":{"line":1224,"column":2}},"383":{"start":{"line":1223,"column":2},"end":{"line":1223,"column":77}},"384":{"start":{"line":1228,"column":0},"end":{"line":1230,"column":2}},"385":{"start":{"line":1229,"column":2},"end":{"line":1229,"column":49}},"386":{"start":{"line":1237,"column":0},"end":{"line":1239,"column":2}},"387":{"start":{"line":1238,"column":2},"end":{"line":1238,"column":78}},"388":{"start":{"line":1243,"column":0},"end":{"line":1245,"column":2}},"389":{"start":{"line":1244,"column":2},"end":{"line":1244,"column":52}},"390":{"start":{"line":1252,"column":0},"end":{"line":1255,"column":2}},"391":{"start":{"line":1253,"column":2},"end":{"line":1254,"column":75}},"392":{"start":{"line":1259,"column":0},"end":{"line":1261,"column":2}},"393":{"start":{"line":1260,"column":2},"end":{"line":1260,"column":55}},"394":{"start":{"line":1269,"column":0},"end":{"line":1271,"column":2}},"395":{"start":{"line":1270,"column":2},"end":{"line":1270,"column":103}},"396":{"start":{"line":1274,"column":0},"end":{"line":1276,"column":2}},"397":{"start":{"line":1275,"column":2},"end":{"line":1275,"column":27}},"398":{"start":{"line":1283,"column":0},"end":{"line":1285,"column":2}},"399":{"start":{"line":1284,"column":2},"end":{"line":1284,"column":77}},"400":{"start":{"line":1289,"column":0},"end":{"line":1291,"column":2}},"401":{"start":{"line":1290,"column":2},"end":{"line":1290,"column":49}},"402":{"start":{"line":1298,"column":0},"end":{"line":1301,"column":2}},"403":{"start":{"line":1299,"column":2},"end":{"line":1300,"column":70}},"404":{"start":{"line":1305,"column":0},"end":{"line":1307,"column":2}},"405":{"start":{"line":1306,"column":2},"end":{"line":1306,"column":47}},"406":{"start":{"line":1310,"column":0},"end":{"line":1312,"column":2}},"407":{"start":{"line":1311,"column":2},"end":{"line":1311,"column":35}},"408":{"start":{"line":1319,"column":0},"end":{"line":1321,"column":2}},"409":{"start":{"line":1320,"column":2},"end":{"line":1320,"column":48}},"410":{"start":{"line":1335,"column":0},"end":{"line":1337,"column":2}},"411":{"start":{"line":1336,"column":2},"end":{"line":1336,"column":103}},"412":{"start":{"line":1338,"column":0},"end":{"line":1338,"column":60}},"413":{"start":{"line":1339,"column":0},"end":{"line":1341,"column":1}},"414":{"start":{"line":1340,"column":2},"end":{"line":1340,"column":80}},"415":{"start":{"line":1347,"column":0},"end":{"line":1347,"column":53}},"416":{"start":{"line":1351,"column":0},"end":{"line":1389,"column":1}},"417":{"start":{"line":1362,"column":2},"end":{"line":1364,"column":4}},"418":{"start":{"line":1363,"column":4},"end":{"line":1363,"column":78}},"419":{"start":{"line":1376,"column":2},"end":{"line":1388,"column":4}},"420":{"start":{"line":1377,"column":16},"end":{"line":1381,"column":57}},"421":{"start":{"line":1384,"column":4},"end":{"line":1386,"column":5}},"422":{"start":{"line":1385,"column":6},"end":{"line":1385,"column":37}},"423":{"start":{"line":1387,"column":4},"end":{"line":1387,"column":15}},"424":{"start":{"line":1397,"column":0},"end":{"line":1401,"column":2}},"425":{"start":{"line":1398,"column":15},"end":{"line":1398,"column":43}},"426":{"start":{"line":1399,"column":12},"end":{"line":1399,"column":48}},"427":{"start":{"line":1400,"column":2},"end":{"line":1400,"column":81}},"428":{"start":{"line":1411,"column":0},"end":{"line":1437,"column":2}},"429":{"start":{"line":1412,"column":2},"end":{"line":1435,"column":3}},"430":{"start":{"line":1413,"column":4},"end":{"line":1415,"column":5}},"431":{"start":{"line":1414,"column":6},"end":{"line":1414,"column":12}},"432":{"start":{"line":1416,"column":16},"end":{"line":1416,"column":39}},"433":{"start":{"line":1417,"column":4},"end":{"line":1433,"column":15}},"434":{"start":{"line":1419,"column":63},"end":{"line":1419,"column":80}},"435":{"start":{"line":1420,"column":8},"end":{"line":1420,"column":28}},"436":{"start":{"line":1421,"column":8},"end":{"line":1421,"column":14}},"437":{"start":{"line":1423,"column":41},"end":{"line":1423,"column":60}},"438":{"start":{"line":1424,"column":8},"end":{"line":1424,"column":26}},"439":{"start":{"line":1425,"column":8},"end":{"line":1425,"column":14}},"440":{"start":{"line":1427,"column":20},"end":{"line":1427,"column":48}},"441":{"start":{"line":1428,"column":8},"end":{"line":1428,"column":86}},"442":{"start":{"line":1429,"column":8},"end":{"line":1429,"column":30}},"443":{"start":{"line":1430,"column":8},"end":{"line":1430,"column":14}},"444":{"start":{"line":1432,"column":8},"end":{"line":1432,"column":27}},"445":{"start":{"line":1433,"column":8},"end":{"line":1433,"column":14}},"446":{"start":{"line":1436,"column":2},"end":{"line":1436,"column":13}},"447":{"start":{"line":1444,"column":0},"end":{"line":1448,"column":2}},"448":{"start":{"line":1445,"column":15},"end":{"line":1445,"column":38}},"449":{"start":{"line":1446,"column":2},"end":{"line":1446,"column":71}},"450":{"start":{"line":1447,"column":2},"end":{"line":1447,"column":34}},"451":{"start":{"line":1458,"column":0},"end":{"line":1482,"column":2}},"452":{"start":{"line":1459,"column":10},"end":{"line":1459,"column":19}},"453":{"start":{"line":1460,"column":2},"end":{"line":1460,"column":25}},"454":{"start":{"line":1461,"column":2},"end":{"line":1466,"column":3}},"455":{"start":{"line":1462,"column":4},"end":{"line":1464,"column":7}},"456":{"start":{"line":1467,"column":2},"end":{"line":1467,"column":23}},"457":{"start":{"line":1468,"column":2},"end":{"line":1473,"column":3}},"458":{"start":{"line":1469,"column":4},"end":{"line":1471,"column":7}},"459":{"start":{"line":1474,"column":2},"end":{"line":1474,"column":31}},"460":{"start":{"line":1475,"column":2},"end":{"line":1481,"column":3}},"461":{"start":{"line":1476,"column":4},"end":{"line":1479,"column":52}},"462":{"start":{"line":1489,"column":0},"end":{"line":1491,"column":2}},"463":{"start":{"line":1490,"column":2},"end":{"line":1490,"column":99}},"464":{"start":{"line":1495,"column":0},"end":{"line":1497,"column":2}},"465":{"start":{"line":1496,"column":2},"end":{"line":1496,"column":50}},"466":{"start":{"line":1504,"column":0},"end":{"line":1506,"column":2}},"467":{"start":{"line":1505,"column":2},"end":{"line":1505,"column":78}},"468":{"start":{"line":1510,"column":0},"end":{"line":1512,"column":2}},"469":{"start":{"line":1511,"column":2},"end":{"line":1511,"column":52}},"470":{"start":{"line":1519,"column":0},"end":{"line":1522,"column":2}},"471":{"start":{"line":1520,"column":2},"end":{"line":1521,"column":75}},"472":{"start":{"line":1526,"column":0},"end":{"line":1528,"column":2}},"473":{"start":{"line":1527,"column":2},"end":{"line":1527,"column":55}},"474":{"start":{"line":1536,"column":0},"end":{"line":1538,"column":2}},"475":{"start":{"line":1537,"column":2},"end":{"line":1537,"column":103}},"476":{"start":{"line":1541,"column":0},"end":{"line":1543,"column":2}},"477":{"start":{"line":1542,"column":2},"end":{"line":1542,"column":26}},"478":{"start":{"line":1557,"column":0},"end":{"line":1559,"column":2}},"479":{"start":{"line":1558,"column":2},"end":{"line":1558,"column":61}},"480":{"start":{"line":1560,"column":0},"end":{"line":1560,"column":58}},"481":{"start":{"line":1561,"column":0},"end":{"line":1563,"column":1}},"482":{"start":{"line":1562,"column":2},"end":{"line":1562,"column":76}},"483":{"start":{"line":1566,"column":0},"end":{"line":1602,"column":1}},"484":{"start":{"line":1577,"column":2},"end":{"line":1579,"column":4}},"485":{"start":{"line":1578,"column":4},"end":{"line":1578,"column":76}},"486":{"start":{"line":1591,"column":2},"end":{"line":1601,"column":4}},"487":{"start":{"line":1592,"column":16},"end":{"line":1594,"column":61}},"488":{"start":{"line":1597,"column":4},"end":{"line":1599,"column":5}},"489":{"start":{"line":1598,"column":6},"end":{"line":1598,"column":37}},"490":{"start":{"line":1600,"column":4},"end":{"line":1600,"column":15}},"491":{"start":{"line":1610,"column":0},"end":{"line":1614,"column":2}},"492":{"start":{"line":1611,"column":15},"end":{"line":1611,"column":43}},"493":{"start":{"line":1612,"column":12},"end":{"line":1612,"column":46}},"494":{"start":{"line":1613,"column":2},"end":{"line":1613,"column":79}},"495":{"start":{"line":1624,"column":0},"end":{"line":1645,"column":2}},"496":{"start":{"line":1625,"column":2},"end":{"line":1643,"column":3}},"497":{"start":{"line":1626,"column":4},"end":{"line":1628,"column":5}},"498":{"start":{"line":1627,"column":6},"end":{"line":1627,"column":12}},"499":{"start":{"line":1629,"column":16},"end":{"line":1629,"column":39}},"500":{"start":{"line":1630,"column":4},"end":{"line":1641,"column":15}},"501":{"start":{"line":1632,"column":60},"end":{"line":1632,"column":77}},"502":{"start":{"line":1633,"column":8},"end":{"line":1633,"column":29}},"503":{"start":{"line":1634,"column":8},"end":{"line":1634,"column":14}},"504":{"start":{"line":1636,"column":41},"end":{"line":1636,"column":60}},"505":{"start":{"line":1637,"column":8},"end":{"line":1637,"column":30}},"506":{"start":{"line":1638,"column":8},"end":{"line":1638,"column":14}},"507":{"start":{"line":1640,"column":8},"end":{"line":1640,"column":27}},"508":{"start":{"line":1641,"column":8},"end":{"line":1641,"column":14}},"509":{"start":{"line":1644,"column":2},"end":{"line":1644,"column":13}},"510":{"start":{"line":1652,"column":0},"end":{"line":1656,"column":2}},"511":{"start":{"line":1653,"column":15},"end":{"line":1653,"column":38}},"512":{"start":{"line":1654,"column":2},"end":{"line":1654,"column":69}},"513":{"start":{"line":1655,"column":2},"end":{"line":1655,"column":34}},"514":{"start":{"line":1666,"column":0},"end":{"line":1682,"column":2}},"515":{"start":{"line":1667,"column":10},"end":{"line":1667,"column":19}},"516":{"start":{"line":1668,"column":2},"end":{"line":1668,"column":26}},"517":{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}},"518":{"start":{"line":1670,"column":4},"end":{"line":1672,"column":7}},"519":{"start":{"line":1675,"column":2},"end":{"line":1675,"column":27}},"520":{"start":{"line":1676,"column":2},"end":{"line":1681,"column":3}},"521":{"start":{"line":1677,"column":4},"end":{"line":1679,"column":7}},"522":{"start":{"line":1689,"column":0},"end":{"line":1691,"column":2}},"523":{"start":{"line":1690,"column":2},"end":{"line":1690,"column":96}},"524":{"start":{"line":1695,"column":0},"end":{"line":1697,"column":2}},"525":{"start":{"line":1696,"column":2},"end":{"line":1696,"column":50}},"526":{"start":{"line":1704,"column":0},"end":{"line":1706,"column":2}},"527":{"start":{"line":1705,"column":2},"end":{"line":1705,"column":78}},"528":{"start":{"line":1710,"column":0},"end":{"line":1712,"column":2}},"529":{"start":{"line":1711,"column":2},"end":{"line":1711,"column":52}},"530":{"start":{"line":1718,"column":0},"end":{"line":1720,"column":21}},"531":{"start":{"line":1726,"column":0},"end":{"line":1729,"column":33}},"532":{"start":{"line":1732,"column":0},"end":{"line":1732,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":37,"column":25},"end":{"line":37,"column":26}},"loc":{"start":{"line":37,"column":45},"end":{"line":39,"column":1}},"line":37},"1":{"name":"(anonymous_1)","decl":{"start":{"line":57,"column":46},"end":{"line":57,"column":47}},"loc":{"start":{"line":57,"column":77},"end":{"line":59,"column":3}},"line":57},"2":{"name":"(anonymous_2)","decl":{"start":{"line":71,"column":36},"end":{"line":71,"column":37}},"loc":{"start":{"line":71,"column":68},"end":{"line":83,"column":3}},"line":71},"3":{"name":"(anonymous_3)","decl":{"start":{"line":92,"column":43},"end":{"line":92,"column":44}},"loc":{"start":{"line":92,"column":60},"end":{"line":96,"column":1}},"line":92},"4":{"name":"(anonymous_4)","decl":{"start":{"line":106,"column":53},"end":{"line":106,"column":54}},"loc":{"start":{"line":106,"column":76},"end":{"line":135,"column":1}},"line":106},"5":{"name":"(anonymous_5)","decl":{"start":{"line":142,"column":51},"end":{"line":142,"column":52}},"loc":{"start":{"line":142,"column":63},"end":{"line":146,"column":1}},"line":142},"6":{"name":"(anonymous_6)","decl":{"start":{"line":156,"column":49},"end":{"line":156,"column":50}},"loc":{"start":{"line":156,"column":76},"end":{"line":186,"column":1}},"line":156},"7":{"name":"(anonymous_7)","decl":{"start":{"line":193,"column":41},"end":{"line":193,"column":42}},"loc":{"start":{"line":193,"column":53},"end":{"line":195,"column":1}},"line":193},"8":{"name":"(anonymous_8)","decl":{"start":{"line":199,"column":41},"end":{"line":199,"column":42}},"loc":{"start":{"line":199,"column":58},"end":{"line":201,"column":1}},"line":199},"9":{"name":"(anonymous_9)","decl":{"start":{"line":208,"column":43},"end":{"line":208,"column":44}},"loc":{"start":{"line":208,"column":55},"end":{"line":210,"column":1}},"line":208},"10":{"name":"(anonymous_10)","decl":{"start":{"line":214,"column":43},"end":{"line":214,"column":44}},"loc":{"start":{"line":214,"column":60},"end":{"line":216,"column":1}},"line":214},"11":{"name":"(anonymous_11)","decl":{"start":{"line":223,"column":46},"end":{"line":223,"column":47}},"loc":{"start":{"line":223,"column":58},"end":{"line":225,"column":1}},"line":223},"12":{"name":"(anonymous_12)","decl":{"start":{"line":229,"column":46},"end":{"line":229,"column":47}},"loc":{"start":{"line":229,"column":63},"end":{"line":231,"column":1}},"line":229},"13":{"name":"(anonymous_13)","decl":{"start":{"line":238,"column":45},"end":{"line":238,"column":46}},"loc":{"start":{"line":238,"column":57},"end":{"line":240,"column":1}},"line":238},"14":{"name":"(anonymous_14)","decl":{"start":{"line":248,"column":51},"end":{"line":248,"column":52}},"loc":{"start":{"line":248,"column":63},"end":{"line":251,"column":1}},"line":248},"15":{"name":"(anonymous_15)","decl":{"start":{"line":261,"column":50},"end":{"line":261,"column":51}},"loc":{"start":{"line":261,"column":62},"end":{"line":264,"column":1}},"line":261},"16":{"name":"(anonymous_16)","decl":{"start":{"line":268,"column":45},"end":{"line":268,"column":46}},"loc":{"start":{"line":268,"column":62},"end":{"line":270,"column":1}},"line":268},"17":{"name":"(anonymous_17)","decl":{"start":{"line":284,"column":31},"end":{"line":284,"column":32}},"loc":{"start":{"line":284,"column":51},"end":{"line":286,"column":1}},"line":284},"18":{"name":"(anonymous_18)","decl":{"start":{"line":304,"column":52},"end":{"line":304,"column":53}},"loc":{"start":{"line":304,"column":83},"end":{"line":306,"column":3}},"line":304},"19":{"name":"(anonymous_19)","decl":{"start":{"line":318,"column":42},"end":{"line":318,"column":43}},"loc":{"start":{"line":318,"column":74},"end":{"line":329,"column":3}},"line":318},"20":{"name":"(anonymous_20)","decl":{"start":{"line":338,"column":49},"end":{"line":338,"column":50}},"loc":{"start":{"line":338,"column":66},"end":{"line":342,"column":1}},"line":338},"21":{"name":"(anonymous_21)","decl":{"start":{"line":352,"column":59},"end":{"line":352,"column":60}},"loc":{"start":{"line":352,"column":82},"end":{"line":378,"column":1}},"line":352},"22":{"name":"(anonymous_22)","decl":{"start":{"line":385,"column":57},"end":{"line":385,"column":58}},"loc":{"start":{"line":385,"column":69},"end":{"line":389,"column":1}},"line":385},"23":{"name":"(anonymous_23)","decl":{"start":{"line":399,"column":55},"end":{"line":399,"column":56}},"loc":{"start":{"line":399,"column":82},"end":{"line":423,"column":1}},"line":399},"24":{"name":"(anonymous_24)","decl":{"start":{"line":430,"column":49},"end":{"line":430,"column":50}},"loc":{"start":{"line":430,"column":61},"end":{"line":432,"column":1}},"line":430},"25":{"name":"(anonymous_25)","decl":{"start":{"line":436,"column":49},"end":{"line":436,"column":50}},"loc":{"start":{"line":436,"column":66},"end":{"line":438,"column":1}},"line":436},"26":{"name":"(anonymous_26)","decl":{"start":{"line":445,"column":54},"end":{"line":445,"column":55}},"loc":{"start":{"line":445,"column":66},"end":{"line":447,"column":1}},"line":445},"27":{"name":"(anonymous_27)","decl":{"start":{"line":451,"column":54},"end":{"line":451,"column":55}},"loc":{"start":{"line":451,"column":71},"end":{"line":453,"column":1}},"line":451},"28":{"name":"(anonymous_28)","decl":{"start":{"line":460,"column":49},"end":{"line":460,"column":50}},"loc":{"start":{"line":460,"column":61},"end":{"line":463,"column":1}},"line":460},"29":{"name":"(anonymous_29)","decl":{"start":{"line":467,"column":49},"end":{"line":467,"column":50}},"loc":{"start":{"line":467,"column":66},"end":{"line":469,"column":1}},"line":467},"30":{"name":"(anonymous_30)","decl":{"start":{"line":472,"column":51},"end":{"line":472,"column":52}},"loc":{"start":{"line":472,"column":63},"end":{"line":474,"column":1}},"line":472},"31":{"name":"(anonymous_31)","decl":{"start":{"line":481,"column":49},"end":{"line":481,"column":50}},"loc":{"start":{"line":481,"column":61},"end":{"line":483,"column":1}},"line":481},"32":{"name":"(anonymous_32)","decl":{"start":{"line":497,"column":36},"end":{"line":497,"column":37}},"loc":{"start":{"line":497,"column":56},"end":{"line":499,"column":1}},"line":497},"33":{"name":"(anonymous_33)","decl":{"start":{"line":517,"column":57},"end":{"line":517,"column":58}},"loc":{"start":{"line":517,"column":88},"end":{"line":519,"column":3}},"line":517},"34":{"name":"(anonymous_34)","decl":{"start":{"line":531,"column":47},"end":{"line":531,"column":48}},"loc":{"start":{"line":531,"column":79},"end":{"line":540,"column":3}},"line":531},"35":{"name":"(anonymous_35)","decl":{"start":{"line":549,"column":54},"end":{"line":549,"column":55}},"loc":{"start":{"line":549,"column":71},"end":{"line":553,"column":1}},"line":549},"36":{"name":"(anonymous_36)","decl":{"start":{"line":563,"column":64},"end":{"line":563,"column":65}},"loc":{"start":{"line":563,"column":87},"end":{"line":581,"column":1}},"line":563},"37":{"name":"(anonymous_37)","decl":{"start":{"line":588,"column":62},"end":{"line":588,"column":63}},"loc":{"start":{"line":588,"column":74},"end":{"line":592,"column":1}},"line":588},"38":{"name":"(anonymous_38)","decl":{"start":{"line":602,"column":60},"end":{"line":602,"column":61}},"loc":{"start":{"line":602,"column":87},"end":{"line":612,"column":1}},"line":602},"39":{"name":"(anonymous_39)","decl":{"start":{"line":619,"column":54},"end":{"line":619,"column":55}},"loc":{"start":{"line":619,"column":66},"end":{"line":622,"column":1}},"line":619},"40":{"name":"(anonymous_40)","decl":{"start":{"line":626,"column":54},"end":{"line":626,"column":55}},"loc":{"start":{"line":626,"column":71},"end":{"line":628,"column":1}},"line":626},"41":{"name":"(anonymous_41)","decl":{"start":{"line":631,"column":56},"end":{"line":631,"column":57}},"loc":{"start":{"line":631,"column":68},"end":{"line":633,"column":1}},"line":631},"42":{"name":"(anonymous_42)","decl":{"start":{"line":640,"column":54},"end":{"line":640,"column":55}},"loc":{"start":{"line":640,"column":66},"end":{"line":642,"column":1}},"line":640},"43":{"name":"(anonymous_43)","decl":{"start":{"line":656,"column":28},"end":{"line":656,"column":29}},"loc":{"start":{"line":656,"column":48},"end":{"line":658,"column":1}},"line":656},"44":{"name":"(anonymous_44)","decl":{"start":{"line":676,"column":49},"end":{"line":676,"column":50}},"loc":{"start":{"line":676,"column":80},"end":{"line":678,"column":3}},"line":676},"45":{"name":"(anonymous_45)","decl":{"start":{"line":690,"column":39},"end":{"line":690,"column":40}},"loc":{"start":{"line":690,"column":71},"end":{"line":700,"column":3}},"line":690},"46":{"name":"(anonymous_46)","decl":{"start":{"line":709,"column":46},"end":{"line":709,"column":47}},"loc":{"start":{"line":709,"column":63},"end":{"line":713,"column":1}},"line":709},"47":{"name":"(anonymous_47)","decl":{"start":{"line":723,"column":56},"end":{"line":723,"column":57}},"loc":{"start":{"line":723,"column":79},"end":{"line":744,"column":1}},"line":723},"48":{"name":"(anonymous_48)","decl":{"start":{"line":751,"column":54},"end":{"line":751,"column":55}},"loc":{"start":{"line":751,"column":66},"end":{"line":755,"column":1}},"line":751},"49":{"name":"(anonymous_49)","decl":{"start":{"line":765,"column":52},"end":{"line":765,"column":53}},"loc":{"start":{"line":765,"column":79},"end":{"line":781,"column":1}},"line":765},"50":{"name":"(anonymous_50)","decl":{"start":{"line":788,"column":46},"end":{"line":788,"column":47}},"loc":{"start":{"line":788,"column":58},"end":{"line":790,"column":1}},"line":788},"51":{"name":"(anonymous_51)","decl":{"start":{"line":794,"column":46},"end":{"line":794,"column":47}},"loc":{"start":{"line":794,"column":63},"end":{"line":796,"column":1}},"line":794},"52":{"name":"(anonymous_52)","decl":{"start":{"line":803,"column":48},"end":{"line":803,"column":49}},"loc":{"start":{"line":803,"column":60},"end":{"line":805,"column":1}},"line":803},"53":{"name":"(anonymous_53)","decl":{"start":{"line":809,"column":48},"end":{"line":809,"column":49}},"loc":{"start":{"line":809,"column":65},"end":{"line":811,"column":1}},"line":809},"54":{"name":"(anonymous_54)","decl":{"start":{"line":825,"column":36},"end":{"line":825,"column":37}},"loc":{"start":{"line":825,"column":56},"end":{"line":827,"column":1}},"line":825},"55":{"name":"(anonymous_55)","decl":{"start":{"line":845,"column":57},"end":{"line":845,"column":58}},"loc":{"start":{"line":845,"column":88},"end":{"line":847,"column":3}},"line":845},"56":{"name":"(anonymous_56)","decl":{"start":{"line":859,"column":47},"end":{"line":859,"column":48}},"loc":{"start":{"line":859,"column":79},"end":{"line":868,"column":3}},"line":859},"57":{"name":"(anonymous_57)","decl":{"start":{"line":877,"column":54},"end":{"line":877,"column":55}},"loc":{"start":{"line":877,"column":71},"end":{"line":881,"column":1}},"line":877},"58":{"name":"(anonymous_58)","decl":{"start":{"line":891,"column":64},"end":{"line":891,"column":65}},"loc":{"start":{"line":891,"column":87},"end":{"line":908,"column":1}},"line":891},"59":{"name":"(anonymous_59)","decl":{"start":{"line":915,"column":62},"end":{"line":915,"column":63}},"loc":{"start":{"line":915,"column":74},"end":{"line":919,"column":1}},"line":915},"60":{"name":"(anonymous_60)","decl":{"start":{"line":929,"column":60},"end":{"line":929,"column":61}},"loc":{"start":{"line":929,"column":87},"end":{"line":938,"column":1}},"line":929},"61":{"name":"(anonymous_61)","decl":{"start":{"line":945,"column":63},"end":{"line":945,"column":64}},"loc":{"start":{"line":945,"column":75},"end":{"line":947,"column":1}},"line":945},"62":{"name":"(anonymous_62)","decl":{"start":{"line":955,"column":69},"end":{"line":955,"column":70}},"loc":{"start":{"line":955,"column":81},"end":{"line":958,"column":1}},"line":955},"63":{"name":"(anonymous_63)","decl":{"start":{"line":968,"column":68},"end":{"line":968,"column":69}},"loc":{"start":{"line":968,"column":80},"end":{"line":971,"column":1}},"line":968},"64":{"name":"(anonymous_64)","decl":{"start":{"line":975,"column":63},"end":{"line":975,"column":64}},"loc":{"start":{"line":975,"column":80},"end":{"line":977,"column":1}},"line":975},"65":{"name":"(anonymous_65)","decl":{"start":{"line":991,"column":37},"end":{"line":991,"column":38}},"loc":{"start":{"line":991,"column":57},"end":{"line":993,"column":1}},"line":991},"66":{"name":"(anonymous_66)","decl":{"start":{"line":1018,"column":58},"end":{"line":1018,"column":59}},"loc":{"start":{"line":1018,"column":89},"end":{"line":1020,"column":3}},"line":1018},"67":{"name":"(anonymous_67)","decl":{"start":{"line":1032,"column":48},"end":{"line":1032,"column":49}},"loc":{"start":{"line":1032,"column":80},"end":{"line":1047,"column":3}},"line":1032},"68":{"name":"(anonymous_68)","decl":{"start":{"line":1056,"column":55},"end":{"line":1056,"column":56}},"loc":{"start":{"line":1056,"column":72},"end":{"line":1060,"column":1}},"line":1056},"69":{"name":"(anonymous_69)","decl":{"start":{"line":1070,"column":65},"end":{"line":1070,"column":66}},"loc":{"start":{"line":1070,"column":88},"end":{"line":1109,"column":1}},"line":1070},"70":{"name":"(anonymous_70)","decl":{"start":{"line":1116,"column":63},"end":{"line":1116,"column":64}},"loc":{"start":{"line":1116,"column":75},"end":{"line":1120,"column":1}},"line":1116},"71":{"name":"(anonymous_71)","decl":{"start":{"line":1130,"column":61},"end":{"line":1130,"column":62}},"loc":{"start":{"line":1130,"column":88},"end":{"line":1176,"column":1}},"line":1130},"72":{"name":"(anonymous_72)","decl":{"start":{"line":1183,"column":58},"end":{"line":1183,"column":59}},"loc":{"start":{"line":1183,"column":70},"end":{"line":1185,"column":1}},"line":1183},"73":{"name":"(anonymous_73)","decl":{"start":{"line":1193,"column":64},"end":{"line":1193,"column":65}},"loc":{"start":{"line":1193,"column":76},"end":{"line":1196,"column":1}},"line":1193},"74":{"name":"(anonymous_74)","decl":{"start":{"line":1206,"column":63},"end":{"line":1206,"column":64}},"loc":{"start":{"line":1206,"column":75},"end":{"line":1209,"column":1}},"line":1206},"75":{"name":"(anonymous_75)","decl":{"start":{"line":1213,"column":58},"end":{"line":1213,"column":59}},"loc":{"start":{"line":1213,"column":75},"end":{"line":1215,"column":1}},"line":1213},"76":{"name":"(anonymous_76)","decl":{"start":{"line":1222,"column":60},"end":{"line":1222,"column":61}},"loc":{"start":{"line":1222,"column":72},"end":{"line":1224,"column":1}},"line":1222},"77":{"name":"(anonymous_77)","decl":{"start":{"line":1228,"column":60},"end":{"line":1228,"column":61}},"loc":{"start":{"line":1228,"column":77},"end":{"line":1230,"column":1}},"line":1228},"78":{"name":"(anonymous_78)","decl":{"start":{"line":1237,"column":56},"end":{"line":1237,"column":57}},"loc":{"start":{"line":1237,"column":68},"end":{"line":1239,"column":1}},"line":1237},"79":{"name":"(anonymous_79)","decl":{"start":{"line":1243,"column":56},"end":{"line":1243,"column":57}},"loc":{"start":{"line":1243,"column":73},"end":{"line":1245,"column":1}},"line":1243},"80":{"name":"(anonymous_80)","decl":{"start":{"line":1252,"column":63},"end":{"line":1252,"column":64}},"loc":{"start":{"line":1252,"column":75},"end":{"line":1255,"column":1}},"line":1252},"81":{"name":"(anonymous_81)","decl":{"start":{"line":1259,"column":63},"end":{"line":1259,"column":64}},"loc":{"start":{"line":1259,"column":80},"end":{"line":1261,"column":1}},"line":1259},"82":{"name":"(anonymous_82)","decl":{"start":{"line":1269,"column":59},"end":{"line":1269,"column":60}},"loc":{"start":{"line":1269,"column":91},"end":{"line":1271,"column":1}},"line":1269},"83":{"name":"(anonymous_83)","decl":{"start":{"line":1274,"column":65},"end":{"line":1274,"column":66}},"loc":{"start":{"line":1274,"column":77},"end":{"line":1276,"column":1}},"line":1274},"84":{"name":"(anonymous_84)","decl":{"start":{"line":1283,"column":62},"end":{"line":1283,"column":63}},"loc":{"start":{"line":1283,"column":74},"end":{"line":1285,"column":1}},"line":1283},"85":{"name":"(anonymous_85)","decl":{"start":{"line":1289,"column":62},"end":{"line":1289,"column":63}},"loc":{"start":{"line":1289,"column":79},"end":{"line":1291,"column":1}},"line":1289},"86":{"name":"(anonymous_86)","decl":{"start":{"line":1298,"column":64},"end":{"line":1298,"column":65}},"loc":{"start":{"line":1298,"column":76},"end":{"line":1301,"column":1}},"line":1298},"87":{"name":"(anonymous_87)","decl":{"start":{"line":1305,"column":64},"end":{"line":1305,"column":65}},"loc":{"start":{"line":1305,"column":81},"end":{"line":1307,"column":1}},"line":1305},"88":{"name":"(anonymous_88)","decl":{"start":{"line":1310,"column":66},"end":{"line":1310,"column":67}},"loc":{"start":{"line":1310,"column":78},"end":{"line":1312,"column":1}},"line":1310},"89":{"name":"(anonymous_89)","decl":{"start":{"line":1319,"column":64},"end":{"line":1319,"column":65}},"loc":{"start":{"line":1319,"column":76},"end":{"line":1321,"column":1}},"line":1319},"90":{"name":"(anonymous_90)","decl":{"start":{"line":1335,"column":33},"end":{"line":1335,"column":34}},"loc":{"start":{"line":1335,"column":53},"end":{"line":1337,"column":1}},"line":1335},"91":{"name":"(anonymous_91)","decl":{"start":{"line":1362,"column":54},"end":{"line":1362,"column":55}},"loc":{"start":{"line":1362,"column":85},"end":{"line":1364,"column":3}},"line":1362},"92":{"name":"(anonymous_92)","decl":{"start":{"line":1376,"column":44},"end":{"line":1376,"column":45}},"loc":{"start":{"line":1376,"column":76},"end":{"line":1388,"column":3}},"line":1376},"93":{"name":"(anonymous_93)","decl":{"start":{"line":1397,"column":51},"end":{"line":1397,"column":52}},"loc":{"start":{"line":1397,"column":68},"end":{"line":1401,"column":1}},"line":1397},"94":{"name":"(anonymous_94)","decl":{"start":{"line":1411,"column":61},"end":{"line":1411,"column":62}},"loc":{"start":{"line":1411,"column":84},"end":{"line":1437,"column":1}},"line":1411},"95":{"name":"(anonymous_95)","decl":{"start":{"line":1444,"column":59},"end":{"line":1444,"column":60}},"loc":{"start":{"line":1444,"column":71},"end":{"line":1448,"column":1}},"line":1444},"96":{"name":"(anonymous_96)","decl":{"start":{"line":1458,"column":57},"end":{"line":1458,"column":58}},"loc":{"start":{"line":1458,"column":84},"end":{"line":1482,"column":1}},"line":1458},"97":{"name":"(anonymous_97)","decl":{"start":{"line":1489,"column":52},"end":{"line":1489,"column":53}},"loc":{"start":{"line":1489,"column":64},"end":{"line":1491,"column":1}},"line":1489},"98":{"name":"(anonymous_98)","decl":{"start":{"line":1495,"column":52},"end":{"line":1495,"column":53}},"loc":{"start":{"line":1495,"column":69},"end":{"line":1497,"column":1}},"line":1495},"99":{"name":"(anonymous_99)","decl":{"start":{"line":1504,"column":50},"end":{"line":1504,"column":51}},"loc":{"start":{"line":1504,"column":62},"end":{"line":1506,"column":1}},"line":1504},"100":{"name":"(anonymous_100)","decl":{"start":{"line":1510,"column":50},"end":{"line":1510,"column":51}},"loc":{"start":{"line":1510,"column":67},"end":{"line":1512,"column":1}},"line":1510},"101":{"name":"(anonymous_101)","decl":{"start":{"line":1519,"column":58},"end":{"line":1519,"column":59}},"loc":{"start":{"line":1519,"column":70},"end":{"line":1522,"column":1}},"line":1519},"102":{"name":"(anonymous_102)","decl":{"start":{"line":1526,"column":58},"end":{"line":1526,"column":59}},"loc":{"start":{"line":1526,"column":75},"end":{"line":1528,"column":1}},"line":1526},"103":{"name":"(anonymous_103)","decl":{"start":{"line":1536,"column":54},"end":{"line":1536,"column":55}},"loc":{"start":{"line":1536,"column":86},"end":{"line":1538,"column":1}},"line":1536},"104":{"name":"(anonymous_104)","decl":{"start":{"line":1541,"column":60},"end":{"line":1541,"column":61}},"loc":{"start":{"line":1541,"column":72},"end":{"line":1543,"column":1}},"line":1541},"105":{"name":"(anonymous_105)","decl":{"start":{"line":1557,"column":31},"end":{"line":1557,"column":32}},"loc":{"start":{"line":1557,"column":51},"end":{"line":1559,"column":1}},"line":1557},"106":{"name":"(anonymous_106)","decl":{"start":{"line":1577,"column":52},"end":{"line":1577,"column":53}},"loc":{"start":{"line":1577,"column":83},"end":{"line":1579,"column":3}},"line":1577},"107":{"name":"(anonymous_107)","decl":{"start":{"line":1591,"column":42},"end":{"line":1591,"column":43}},"loc":{"start":{"line":1591,"column":74},"end":{"line":1601,"column":3}},"line":1591},"108":{"name":"(anonymous_108)","decl":{"start":{"line":1610,"column":49},"end":{"line":1610,"column":50}},"loc":{"start":{"line":1610,"column":66},"end":{"line":1614,"column":1}},"line":1610},"109":{"name":"(anonymous_109)","decl":{"start":{"line":1624,"column":59},"end":{"line":1624,"column":60}},"loc":{"start":{"line":1624,"column":82},"end":{"line":1645,"column":1}},"line":1624},"110":{"name":"(anonymous_110)","decl":{"start":{"line":1652,"column":57},"end":{"line":1652,"column":58}},"loc":{"start":{"line":1652,"column":69},"end":{"line":1656,"column":1}},"line":1652},"111":{"name":"(anonymous_111)","decl":{"start":{"line":1666,"column":55},"end":{"line":1666,"column":56}},"loc":{"start":{"line":1666,"column":82},"end":{"line":1682,"column":1}},"line":1666},"112":{"name":"(anonymous_112)","decl":{"start":{"line":1689,"column":51},"end":{"line":1689,"column":52}},"loc":{"start":{"line":1689,"column":63},"end":{"line":1691,"column":1}},"line":1689},"113":{"name":"(anonymous_113)","decl":{"start":{"line":1695,"column":51},"end":{"line":1695,"column":52}},"loc":{"start":{"line":1695,"column":68},"end":{"line":1697,"column":1}},"line":1695},"114":{"name":"(anonymous_114)","decl":{"start":{"line":1704,"column":52},"end":{"line":1704,"column":53}},"loc":{"start":{"line":1704,"column":64},"end":{"line":1706,"column":1}},"line":1704},"115":{"name":"(anonymous_115)","decl":{"start":{"line":1710,"column":52},"end":{"line":1710,"column":53}},"loc":{"start":{"line":1710,"column":69},"end":{"line":1712,"column":1}},"line":1710}},"branchMap":{"0":{"loc":{"start":{"line":41,"column":0},"end":{"line":43,"column":1}},"type":"if","locations":[{"start":{"line":41,"column":0},"end":{"line":43,"column":1}},{"start":{"line":41,"column":0},"end":{"line":43,"column":1}}],"line":41},"1":{"loc":{"start":{"line":41,"column":4},"end":{"line":41,"column":27}},"type":"binary-expr","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":14}},{"start":{"line":41,"column":18},"end":{"line":41,"column":27}}],"line":41},"2":{"loc":{"start":{"line":46,"column":0},"end":{"line":84,"column":1}},"type":"if","locations":[{"start":{"line":46,"column":0},"end":{"line":84,"column":1}},{"start":{"line":46,"column":0},"end":{"line":84,"column":1}}],"line":46},"3":{"loc":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},{"start":{"line":79,"column":4},"end":{"line":81,"column":5}}],"line":79},"4":{"loc":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},{"start":{"line":108,"column":4},"end":{"line":110,"column":5}}],"line":108},"5":{"loc":{"start":{"line":112,"column":4},"end":{"line":131,"column":15}},"type":"switch","locations":[{"start":{"line":113,"column":6},"end":{"line":116,"column":14}},{"start":{"line":117,"column":6},"end":{"line":120,"column":14}},{"start":{"line":121,"column":6},"end":{"line":124,"column":14}},{"start":{"line":125,"column":6},"end":{"line":128,"column":14}},{"start":{"line":129,"column":6},"end":{"line":131,"column":14}}],"line":112},"6":{"loc":{"start":{"line":159,"column":2},"end":{"line":164,"column":3}},"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":164,"column":3}},{"start":{"line":159,"column":2},"end":{"line":164,"column":3}}],"line":159},"7":{"loc":{"start":{"line":166,"column":2},"end":{"line":171,"column":3}},"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":171,"column":3}},{"start":{"line":166,"column":2},"end":{"line":171,"column":3}}],"line":166},"8":{"loc":{"start":{"line":173,"column":2},"end":{"line":178,"column":3}},"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":178,"column":3}},{"start":{"line":173,"column":2},"end":{"line":178,"column":3}}],"line":173},"9":{"loc":{"start":{"line":180,"column":2},"end":{"line":185,"column":3}},"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":185,"column":3}},{"start":{"line":180,"column":2},"end":{"line":185,"column":3}}],"line":180},"10":{"loc":{"start":{"line":288,"column":0},"end":{"line":290,"column":1}},"type":"if","locations":[{"start":{"line":288,"column":0},"end":{"line":290,"column":1}},{"start":{"line":288,"column":0},"end":{"line":290,"column":1}}],"line":288},"11":{"loc":{"start":{"line":288,"column":4},"end":{"line":288,"column":27}},"type":"binary-expr","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":14}},{"start":{"line":288,"column":18},"end":{"line":288,"column":27}}],"line":288},"12":{"loc":{"start":{"line":293,"column":0},"end":{"line":330,"column":1}},"type":"if","locations":[{"start":{"line":293,"column":0},"end":{"line":330,"column":1}},{"start":{"line":293,"column":0},"end":{"line":330,"column":1}}],"line":293},"13":{"loc":{"start":{"line":322,"column":12},"end":{"line":322,"column":86}},"type":"binary-expr","locations":[{"start":{"line":322,"column":13},"end":{"line":322,"column":30}},{"start":{"line":322,"column":35},"end":{"line":322,"column":86}}],"line":322},"14":{"loc":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"type":"if","locations":[{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},{"start":{"line":325,"column":4},"end":{"line":327,"column":5}}],"line":325},"15":{"loc":{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},{"start":{"line":354,"column":4},"end":{"line":356,"column":5}}],"line":354},"16":{"loc":{"start":{"line":358,"column":4},"end":{"line":374,"column":15}},"type":"switch","locations":[{"start":{"line":359,"column":6},"end":{"line":362,"column":14}},{"start":{"line":363,"column":6},"end":{"line":366,"column":14}},{"start":{"line":367,"column":6},"end":{"line":371,"column":14}},{"start":{"line":372,"column":6},"end":{"line":374,"column":14}}],"line":358},"17":{"loc":{"start":{"line":402,"column":2},"end":{"line":407,"column":3}},"type":"if","locations":[{"start":{"line":402,"column":2},"end":{"line":407,"column":3}},{"start":{"line":402,"column":2},"end":{"line":407,"column":3}}],"line":402},"18":{"loc":{"start":{"line":409,"column":2},"end":{"line":414,"column":3}},"type":"if","locations":[{"start":{"line":409,"column":2},"end":{"line":414,"column":3}},{"start":{"line":409,"column":2},"end":{"line":414,"column":3}}],"line":409},"19":{"loc":{"start":{"line":416,"column":2},"end":{"line":422,"column":3}},"type":"if","locations":[{"start":{"line":416,"column":2},"end":{"line":422,"column":3}},{"start":{"line":416,"column":2},"end":{"line":422,"column":3}}],"line":416},"20":{"loc":{"start":{"line":501,"column":0},"end":{"line":503,"column":1}},"type":"if","locations":[{"start":{"line":501,"column":0},"end":{"line":503,"column":1}},{"start":{"line":501,"column":0},"end":{"line":503,"column":1}}],"line":501},"21":{"loc":{"start":{"line":501,"column":4},"end":{"line":501,"column":27}},"type":"binary-expr","locations":[{"start":{"line":501,"column":4},"end":{"line":501,"column":14}},{"start":{"line":501,"column":18},"end":{"line":501,"column":27}}],"line":501},"22":{"loc":{"start":{"line":506,"column":0},"end":{"line":541,"column":1}},"type":"if","locations":[{"start":{"line":506,"column":0},"end":{"line":541,"column":1}},{"start":{"line":506,"column":0},"end":{"line":541,"column":1}}],"line":506},"23":{"loc":{"start":{"line":533,"column":12},"end":{"line":533,"column":86}},"type":"binary-expr","locations":[{"start":{"line":533,"column":13},"end":{"line":533,"column":30}},{"start":{"line":533,"column":35},"end":{"line":533,"column":86}}],"line":533},"24":{"loc":{"start":{"line":536,"column":4},"end":{"line":538,"column":5}},"type":"if","locations":[{"start":{"line":536,"column":4},"end":{"line":538,"column":5}},{"start":{"line":536,"column":4},"end":{"line":538,"column":5}}],"line":536},"25":{"loc":{"start":{"line":565,"column":4},"end":{"line":567,"column":5}},"type":"if","locations":[{"start":{"line":565,"column":4},"end":{"line":567,"column":5}},{"start":{"line":565,"column":4},"end":{"line":567,"column":5}}],"line":565},"26":{"loc":{"start":{"line":569,"column":4},"end":{"line":577,"column":15}},"type":"switch","locations":[{"start":{"line":570,"column":6},"end":{"line":574,"column":14}},{"start":{"line":575,"column":6},"end":{"line":577,"column":14}}],"line":569},"27":{"loc":{"start":{"line":605,"column":2},"end":{"line":611,"column":3}},"type":"if","locations":[{"start":{"line":605,"column":2},"end":{"line":611,"column":3}},{"start":{"line":605,"column":2},"end":{"line":611,"column":3}}],"line":605},"28":{"loc":{"start":{"line":660,"column":0},"end":{"line":662,"column":1}},"type":"if","locations":[{"start":{"line":660,"column":0},"end":{"line":662,"column":1}},{"start":{"line":660,"column":0},"end":{"line":662,"column":1}}],"line":660},"29":{"loc":{"start":{"line":660,"column":4},"end":{"line":660,"column":27}},"type":"binary-expr","locations":[{"start":{"line":660,"column":4},"end":{"line":660,"column":14}},{"start":{"line":660,"column":18},"end":{"line":660,"column":27}}],"line":660},"30":{"loc":{"start":{"line":665,"column":0},"end":{"line":701,"column":1}},"type":"if","locations":[{"start":{"line":665,"column":0},"end":{"line":701,"column":1}},{"start":{"line":665,"column":0},"end":{"line":701,"column":1}}],"line":665},"31":{"loc":{"start":{"line":696,"column":4},"end":{"line":698,"column":5}},"type":"if","locations":[{"start":{"line":696,"column":4},"end":{"line":698,"column":5}},{"start":{"line":696,"column":4},"end":{"line":698,"column":5}}],"line":696},"32":{"loc":{"start":{"line":725,"column":4},"end":{"line":727,"column":5}},"type":"if","locations":[{"start":{"line":725,"column":4},"end":{"line":727,"column":5}},{"start":{"line":725,"column":4},"end":{"line":727,"column":5}}],"line":725},"33":{"loc":{"start":{"line":729,"column":4},"end":{"line":740,"column":15}},"type":"switch","locations":[{"start":{"line":730,"column":6},"end":{"line":733,"column":14}},{"start":{"line":734,"column":6},"end":{"line":737,"column":14}},{"start":{"line":738,"column":6},"end":{"line":740,"column":14}}],"line":729},"34":{"loc":{"start":{"line":768,"column":2},"end":{"line":773,"column":3}},"type":"if","locations":[{"start":{"line":768,"column":2},"end":{"line":773,"column":3}},{"start":{"line":768,"column":2},"end":{"line":773,"column":3}}],"line":768},"35":{"loc":{"start":{"line":775,"column":2},"end":{"line":780,"column":3}},"type":"if","locations":[{"start":{"line":775,"column":2},"end":{"line":780,"column":3}},{"start":{"line":775,"column":2},"end":{"line":780,"column":3}}],"line":775},"36":{"loc":{"start":{"line":829,"column":0},"end":{"line":831,"column":1}},"type":"if","locations":[{"start":{"line":829,"column":0},"end":{"line":831,"column":1}},{"start":{"line":829,"column":0},"end":{"line":831,"column":1}}],"line":829},"37":{"loc":{"start":{"line":829,"column":4},"end":{"line":829,"column":27}},"type":"binary-expr","locations":[{"start":{"line":829,"column":4},"end":{"line":829,"column":14}},{"start":{"line":829,"column":18},"end":{"line":829,"column":27}}],"line":829},"38":{"loc":{"start":{"line":834,"column":0},"end":{"line":869,"column":1}},"type":"if","locations":[{"start":{"line":834,"column":0},"end":{"line":869,"column":1}},{"start":{"line":834,"column":0},"end":{"line":869,"column":1}}],"line":834},"39":{"loc":{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},"type":"if","locations":[{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},{"start":{"line":864,"column":4},"end":{"line":866,"column":5}}],"line":864},"40":{"loc":{"start":{"line":893,"column":4},"end":{"line":895,"column":5}},"type":"if","locations":[{"start":{"line":893,"column":4},"end":{"line":895,"column":5}},{"start":{"line":893,"column":4},"end":{"line":895,"column":5}}],"line":893},"41":{"loc":{"start":{"line":897,"column":4},"end":{"line":904,"column":15}},"type":"switch","locations":[{"start":{"line":898,"column":6},"end":{"line":901,"column":14}},{"start":{"line":902,"column":6},"end":{"line":904,"column":14}}],"line":897},"42":{"loc":{"start":{"line":932,"column":2},"end":{"line":937,"column":3}},"type":"if","locations":[{"start":{"line":932,"column":2},"end":{"line":937,"column":3}},{"start":{"line":932,"column":2},"end":{"line":937,"column":3}}],"line":932},"43":{"loc":{"start":{"line":995,"column":0},"end":{"line":997,"column":1}},"type":"if","locations":[{"start":{"line":995,"column":0},"end":{"line":997,"column":1}},{"start":{"line":995,"column":0},"end":{"line":997,"column":1}}],"line":995},"44":{"loc":{"start":{"line":995,"column":4},"end":{"line":995,"column":27}},"type":"binary-expr","locations":[{"start":{"line":995,"column":4},"end":{"line":995,"column":14}},{"start":{"line":995,"column":18},"end":{"line":995,"column":27}}],"line":995},"45":{"loc":{"start":{"line":1007,"column":0},"end":{"line":1048,"column":1}},"type":"if","locations":[{"start":{"line":1007,"column":0},"end":{"line":1048,"column":1}},{"start":{"line":1007,"column":0},"end":{"line":1048,"column":1}}],"line":1007},"46":{"loc":{"start":{"line":1040,"column":21},"end":{"line":1040,"column":107}},"type":"binary-expr","locations":[{"start":{"line":1040,"column":22},"end":{"line":1040,"column":48}},{"start":{"line":1040,"column":53},"end":{"line":1040,"column":107}}],"line":1040},"47":{"loc":{"start":{"line":1043,"column":4},"end":{"line":1045,"column":5}},"type":"if","locations":[{"start":{"line":1043,"column":4},"end":{"line":1045,"column":5}},{"start":{"line":1043,"column":4},"end":{"line":1045,"column":5}}],"line":1043},"48":{"loc":{"start":{"line":1072,"column":4},"end":{"line":1074,"column":5}},"type":"if","locations":[{"start":{"line":1072,"column":4},"end":{"line":1074,"column":5}},{"start":{"line":1072,"column":4},"end":{"line":1074,"column":5}}],"line":1072},"49":{"loc":{"start":{"line":1076,"column":4},"end":{"line":1105,"column":15}},"type":"switch","locations":[{"start":{"line":1077,"column":6},"end":{"line":1080,"column":14}},{"start":{"line":1081,"column":6},"end":{"line":1084,"column":14}},{"start":{"line":1085,"column":6},"end":{"line":1088,"column":14}},{"start":{"line":1089,"column":6},"end":{"line":1093,"column":14}},{"start":{"line":1094,"column":6},"end":{"line":1097,"column":14}},{"start":{"line":1098,"column":6},"end":{"line":1102,"column":14}},{"start":{"line":1103,"column":6},"end":{"line":1105,"column":14}}],"line":1076},"50":{"loc":{"start":{"line":1133,"column":2},"end":{"line":1138,"column":3}},"type":"if","locations":[{"start":{"line":1133,"column":2},"end":{"line":1138,"column":3}},{"start":{"line":1133,"column":2},"end":{"line":1138,"column":3}}],"line":1133},"51":{"loc":{"start":{"line":1140,"column":2},"end":{"line":1145,"column":3}},"type":"if","locations":[{"start":{"line":1140,"column":2},"end":{"line":1145,"column":3}},{"start":{"line":1140,"column":2},"end":{"line":1145,"column":3}}],"line":1140},"52":{"loc":{"start":{"line":1147,"column":2},"end":{"line":1152,"column":3}},"type":"if","locations":[{"start":{"line":1147,"column":2},"end":{"line":1152,"column":3}},{"start":{"line":1147,"column":2},"end":{"line":1152,"column":3}}],"line":1147},"53":{"loc":{"start":{"line":1154,"column":2},"end":{"line":1160,"column":3}},"type":"if","locations":[{"start":{"line":1154,"column":2},"end":{"line":1160,"column":3}},{"start":{"line":1154,"column":2},"end":{"line":1160,"column":3}}],"line":1154},"54":{"loc":{"start":{"line":1162,"column":2},"end":{"line":1167,"column":3}},"type":"if","locations":[{"start":{"line":1162,"column":2},"end":{"line":1167,"column":3}},{"start":{"line":1162,"column":2},"end":{"line":1167,"column":3}}],"line":1162},"55":{"loc":{"start":{"line":1169,"column":2},"end":{"line":1175,"column":3}},"type":"if","locations":[{"start":{"line":1169,"column":2},"end":{"line":1175,"column":3}},{"start":{"line":1169,"column":2},"end":{"line":1175,"column":3}}],"line":1169},"56":{"loc":{"start":{"line":1339,"column":0},"end":{"line":1341,"column":1}},"type":"if","locations":[{"start":{"line":1339,"column":0},"end":{"line":1341,"column":1}},{"start":{"line":1339,"column":0},"end":{"line":1341,"column":1}}],"line":1339},"57":{"loc":{"start":{"line":1339,"column":4},"end":{"line":1339,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1339,"column":4},"end":{"line":1339,"column":14}},{"start":{"line":1339,"column":18},"end":{"line":1339,"column":27}}],"line":1339},"58":{"loc":{"start":{"line":1351,"column":0},"end":{"line":1389,"column":1}},"type":"if","locations":[{"start":{"line":1351,"column":0},"end":{"line":1389,"column":1}},{"start":{"line":1351,"column":0},"end":{"line":1389,"column":1}}],"line":1351},"59":{"loc":{"start":{"line":1384,"column":4},"end":{"line":1386,"column":5}},"type":"if","locations":[{"start":{"line":1384,"column":4},"end":{"line":1386,"column":5}},{"start":{"line":1384,"column":4},"end":{"line":1386,"column":5}}],"line":1384},"60":{"loc":{"start":{"line":1413,"column":4},"end":{"line":1415,"column":5}},"type":"if","locations":[{"start":{"line":1413,"column":4},"end":{"line":1415,"column":5}},{"start":{"line":1413,"column":4},"end":{"line":1415,"column":5}}],"line":1413},"61":{"loc":{"start":{"line":1417,"column":4},"end":{"line":1433,"column":15}},"type":"switch","locations":[{"start":{"line":1418,"column":6},"end":{"line":1421,"column":14}},{"start":{"line":1422,"column":6},"end":{"line":1425,"column":14}},{"start":{"line":1426,"column":6},"end":{"line":1430,"column":14}},{"start":{"line":1431,"column":6},"end":{"line":1433,"column":14}}],"line":1417},"62":{"loc":{"start":{"line":1461,"column":2},"end":{"line":1466,"column":3}},"type":"if","locations":[{"start":{"line":1461,"column":2},"end":{"line":1466,"column":3}},{"start":{"line":1461,"column":2},"end":{"line":1466,"column":3}}],"line":1461},"63":{"loc":{"start":{"line":1468,"column":2},"end":{"line":1473,"column":3}},"type":"if","locations":[{"start":{"line":1468,"column":2},"end":{"line":1473,"column":3}},{"start":{"line":1468,"column":2},"end":{"line":1473,"column":3}}],"line":1468},"64":{"loc":{"start":{"line":1475,"column":2},"end":{"line":1481,"column":3}},"type":"if","locations":[{"start":{"line":1475,"column":2},"end":{"line":1481,"column":3}},{"start":{"line":1475,"column":2},"end":{"line":1481,"column":3}}],"line":1475},"65":{"loc":{"start":{"line":1561,"column":0},"end":{"line":1563,"column":1}},"type":"if","locations":[{"start":{"line":1561,"column":0},"end":{"line":1563,"column":1}},{"start":{"line":1561,"column":0},"end":{"line":1563,"column":1}}],"line":1561},"66":{"loc":{"start":{"line":1561,"column":4},"end":{"line":1561,"column":27}},"type":"binary-expr","locations":[{"start":{"line":1561,"column":4},"end":{"line":1561,"column":14}},{"start":{"line":1561,"column":18},"end":{"line":1561,"column":27}}],"line":1561},"67":{"loc":{"start":{"line":1566,"column":0},"end":{"line":1602,"column":1}},"type":"if","locations":[{"start":{"line":1566,"column":0},"end":{"line":1602,"column":1}},{"start":{"line":1566,"column":0},"end":{"line":1602,"column":1}}],"line":1566},"68":{"loc":{"start":{"line":1597,"column":4},"end":{"line":1599,"column":5}},"type":"if","locations":[{"start":{"line":1597,"column":4},"end":{"line":1599,"column":5}},{"start":{"line":1597,"column":4},"end":{"line":1599,"column":5}}],"line":1597},"69":{"loc":{"start":{"line":1626,"column":4},"end":{"line":1628,"column":5}},"type":"if","locations":[{"start":{"line":1626,"column":4},"end":{"line":1628,"column":5}},{"start":{"line":1626,"column":4},"end":{"line":1628,"column":5}}],"line":1626},"70":{"loc":{"start":{"line":1630,"column":4},"end":{"line":1641,"column":15}},"type":"switch","locations":[{"start":{"line":1631,"column":6},"end":{"line":1634,"column":14}},{"start":{"line":1635,"column":6},"end":{"line":1638,"column":14}},{"start":{"line":1639,"column":6},"end":{"line":1641,"column":14}}],"line":1630},"71":{"loc":{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}},"type":"if","locations":[{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}},{"start":{"line":1669,"column":2},"end":{"line":1674,"column":3}}],"line":1669},"72":{"loc":{"start":{"line":1676,"column":2},"end":{"line":1681,"column":3}},"type":"if","locations":[{"start":{"line":1676,"column":2},"end":{"line":1681,"column":3}},{"start":{"line":1676,"column":2},"end":{"line":1681,"column":3}}],"line":1676}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":1,"18":1,"19":0,"20":1,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":1,"74":0,"75":1,"76":0,"77":1,"78":0,"79":1,"80":0,"81":1,"82":0,"83":1,"84":0,"85":1,"86":0,"87":1,"88":0,"89":1,"90":0,"91":1,"92":0,"93":1,"94":1,"95":0,"96":1,"97":1,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":1,"145":0,"146":1,"147":0,"148":1,"149":0,"150":1,"151":0,"152":1,"153":0,"154":1,"155":0,"156":1,"157":0,"158":1,"159":0,"160":1,"161":1,"162":0,"163":1,"164":1,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":1,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":1,"200":0,"201":1,"202":0,"203":1,"204":0,"205":1,"206":0,"207":1,"208":1,"209":0,"210":1,"211":1,"212":0,"213":1,"214":0,"215":0,"216":0,"217":0,"218":1,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":1,"238":0,"239":0,"240":0,"241":1,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":1,"250":0,"251":1,"252":0,"253":1,"254":0,"255":1,"256":0,"257":1,"258":0,"259":1,"260":1,"261":0,"262":1,"263":1,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":1,"271":0,"272":0,"273":0,"274":1,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":1,"287":0,"288":0,"289":0,"290":1,"291":0,"292":0,"293":0,"294":0,"295":1,"296":0,"297":1,"298":0,"299":1,"300":0,"301":1,"302":0,"303":1,"304":0,"305":1,"306":1,"307":0,"308":1,"309":1,"310":1,"311":0,"312":1,"313":0,"314":0,"315":0,"316":0,"317":1,"318":0,"319":0,"320":0,"321":1,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":1,"351":0,"352":0,"353":0,"354":1,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":1,"375":0,"376":1,"377":0,"378":1,"379":0,"380":1,"381":0,"382":1,"383":0,"384":1,"385":0,"386":1,"387":0,"388":1,"389":0,"390":1,"391":0,"392":1,"393":0,"394":1,"395":0,"396":1,"397":0,"398":1,"399":0,"400":1,"401":0,"402":1,"403":0,"404":1,"405":0,"406":1,"407":0,"408":1,"409":0,"410":1,"411":0,"412":1,"413":1,"414":0,"415":1,"416":1,"417":1,"418":0,"419":1,"420":0,"421":0,"422":0,"423":0,"424":1,"425":0,"426":0,"427":0,"428":1,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":1,"448":0,"449":0,"450":0,"451":1,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":1,"463":0,"464":1,"465":0,"466":1,"467":0,"468":1,"469":0,"470":1,"471":0,"472":1,"473":0,"474":1,"475":0,"476":1,"477":0,"478":1,"479":0,"480":1,"481":1,"482":0,"483":1,"484":1,"485":0,"486":1,"487":0,"488":0,"489":0,"490":0,"491":1,"492":0,"493":0,"494":0,"495":1,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":1,"511":0,"512":0,"513":0,"514":1,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":1,"523":0,"524":1,"525":0,"526":1,"527":0,"528":1,"529":0,"530":1,"531":1,"532":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0},"b":{"0":[0,1],"1":[1,0],"2":[1,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,1],"11":[1,0],"12":[1,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,1],"21":[1,0],"22":[1,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,1],"29":[1,0],"30":[1,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,1],"37":[1,0],"38":[1,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,1],"44":[1,0],"45":[1,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0,0,0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,1],"57":[1,0],"58":[1,0],"59":[0,0],"60":[0,0],"61":[0,0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,1],"66":[1,0],"67":[1,0],"68":[0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0]},"inputSourceMap":{"version":3,"sources":["raft_pb.js"],"names":["jspb","require","goog","global","Function","p2p_pb","object","extend","proto","exportSymbol","types","MemberAttr","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","name","address","peerid","getPeerid_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readUint64","setId","readString","setName","setAddress","readBytes","setPeerid","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","writeUint64","getName","length","writeString","getAddress","getPeerid_asU8","writeBytes","setProto3IntField","setProto3StringField","getPeerid","bytesAsB64","bytesAsU8","setProto3BytesField","MembershipChange","type","requestid","attr","getAttr","readEnum","setType","setRequestid","readMessage","setAttr","getType","writeEnum","getRequestid","writeMessage","setProto3EnumField","getWrapperField","setWrapperField","clearAttr","hasAttr","getField","MembershipChangeReply","HardStateInfo","term","commit","setTerm","setCommit","getTerm","getCommit","GetClusterInfoRequest","bestblockhash","getBestblockhash_asB64","setBestblockhash","getBestblockhash_asU8","getBestblockhash","GetClusterInfoResponse","repeatedFields_","chainid","getChainid_asB64","clusterid","error","mbrattrsList","toObjectList","getMbrattrsList","bestblockno","hardstateinfo","getHardstateinfo","setChainid","setClusterid","setError","addMbrattrs","setBestblockno","setHardstateinfo","getChainid_asU8","getClusterid","getError","writeRepeatedMessage","getBestblockno","getChainid","getRepeatedWrapperField","setMbrattrsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearMbrattrsList","clearHardstateinfo","hasHardstateinfo","ConfChangeProgress","state","err","membersList","getMembersList","setState","setErr","addMembers","getState","getErr","setMembersList","clearMembersList","SnapshotResponse","status","setStatus","setMessage","getStatus","getMessage","MembershipChangeType","ADD_MEMBER","REMOVE_MEMBER","ConfChangeState","CONF_CHANGE_STATE_PROPOSED","CONF_CHANGE_STATE_SAVED","CONF_CHANGE_STATE_APPLIED","exports"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/types","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar p2p_pb = require('./p2p_pb.js');\ngoog.object.extend(proto, p2p_pb);\ngoog.exportSymbol('proto.types.ConfChangeProgress', null, global);\ngoog.exportSymbol('proto.types.ConfChangeState', null, global);\ngoog.exportSymbol('proto.types.GetClusterInfoRequest', null, global);\ngoog.exportSymbol('proto.types.GetClusterInfoResponse', null, global);\ngoog.exportSymbol('proto.types.HardStateInfo', null, global);\ngoog.exportSymbol('proto.types.MemberAttr', null, global);\ngoog.exportSymbol('proto.types.MembershipChange', null, global);\ngoog.exportSymbol('proto.types.MembershipChangeReply', null, global);\ngoog.exportSymbol('proto.types.MembershipChangeType', null, global);\ngoog.exportSymbol('proto.types.SnapshotResponse', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.MemberAttr = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.MemberAttr, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.MemberAttr.displayName = 'proto.types.MemberAttr';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.MemberAttr.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.MemberAttr.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.MemberAttr} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MemberAttr.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    address: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    peerid: msg.getPeerid_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.MemberAttr}\n */\nproto.types.MemberAttr.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.MemberAttr;\n  return proto.types.MemberAttr.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.MemberAttr} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.MemberAttr}\n */\nproto.types.MemberAttr.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPeerid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.MemberAttr.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.MemberAttr.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.MemberAttr} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MemberAttr.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPeerid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 ID = 1;\n * @return {number}\n */\nproto.types.MemberAttr.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.types.MemberAttr.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.types.MemberAttr.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.MemberAttr.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string address = 3;\n * @return {string}\n */\nproto.types.MemberAttr.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.MemberAttr.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bytes peerID = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.types.MemberAttr.prototype.getPeerid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes peerID = 4;\n * This is a type-conversion wrapper around `getPeerid()`\n * @return {string}\n */\nproto.types.MemberAttr.prototype.getPeerid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPeerid()));\n};\n\n\n/**\n * optional bytes peerID = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPeerid()`\n * @return {!Uint8Array}\n */\nproto.types.MemberAttr.prototype.getPeerid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPeerid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.MemberAttr.prototype.setPeerid = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.MembershipChange = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.MembershipChange, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.MembershipChange.displayName = 'proto.types.MembershipChange';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.MembershipChange.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.MembershipChange.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.MembershipChange} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MembershipChange.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    requestid: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    attr: (f = msg.getAttr()) && proto.types.MemberAttr.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.MembershipChange}\n */\nproto.types.MembershipChange.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.MembershipChange;\n  return proto.types.MembershipChange.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.MembershipChange} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.MembershipChange}\n */\nproto.types.MembershipChange.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.MembershipChangeType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRequestid(value);\n      break;\n    case 3:\n      var value = new proto.types.MemberAttr;\n      reader.readMessage(value,proto.types.MemberAttr.deserializeBinaryFromReader);\n      msg.setAttr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.MembershipChange.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.MembershipChange.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.MembershipChange} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MembershipChange.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getRequestid();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getAttr();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.types.MemberAttr.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional MembershipChangeType type = 1;\n * @return {!proto.types.MembershipChangeType}\n */\nproto.types.MembershipChange.prototype.getType = function() {\n  return /** @type {!proto.types.MembershipChangeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.MembershipChangeType} value */\nproto.types.MembershipChange.prototype.setType = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional uint64 requestID = 2;\n * @return {number}\n */\nproto.types.MembershipChange.prototype.getRequestid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.MembershipChange.prototype.setRequestid = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional MemberAttr attr = 3;\n * @return {?proto.types.MemberAttr}\n */\nproto.types.MembershipChange.prototype.getAttr = function() {\n  return /** @type{?proto.types.MemberAttr} */ (\n    jspb.Message.getWrapperField(this, proto.types.MemberAttr, 3));\n};\n\n\n/** @param {?proto.types.MemberAttr|undefined} value */\nproto.types.MembershipChange.prototype.setAttr = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.types.MembershipChange.prototype.clearAttr = function() {\n  this.setAttr(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.MembershipChange.prototype.hasAttr = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.MembershipChangeReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.MembershipChangeReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.MembershipChangeReply.displayName = 'proto.types.MembershipChangeReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.MembershipChangeReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.MembershipChangeReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.MembershipChangeReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MembershipChangeReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    attr: (f = msg.getAttr()) && proto.types.MemberAttr.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.MembershipChangeReply}\n */\nproto.types.MembershipChangeReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.MembershipChangeReply;\n  return proto.types.MembershipChangeReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.MembershipChangeReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.MembershipChangeReply}\n */\nproto.types.MembershipChangeReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.types.MemberAttr;\n      reader.readMessage(value,proto.types.MemberAttr.deserializeBinaryFromReader);\n      msg.setAttr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.MembershipChangeReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.MembershipChangeReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.MembershipChangeReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.MembershipChangeReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAttr();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.types.MemberAttr.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional MemberAttr attr = 1;\n * @return {?proto.types.MemberAttr}\n */\nproto.types.MembershipChangeReply.prototype.getAttr = function() {\n  return /** @type{?proto.types.MemberAttr} */ (\n    jspb.Message.getWrapperField(this, proto.types.MemberAttr, 1));\n};\n\n\n/** @param {?proto.types.MemberAttr|undefined} value */\nproto.types.MembershipChangeReply.prototype.setAttr = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.types.MembershipChangeReply.prototype.clearAttr = function() {\n  this.setAttr(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.MembershipChangeReply.prototype.hasAttr = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.HardStateInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.HardStateInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.HardStateInfo.displayName = 'proto.types.HardStateInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.HardStateInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.HardStateInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.HardStateInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.HardStateInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    term: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    commit: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.HardStateInfo}\n */\nproto.types.HardStateInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.HardStateInfo;\n  return proto.types.HardStateInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.HardStateInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.HardStateInfo}\n */\nproto.types.HardStateInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTerm(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setCommit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.HardStateInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.HardStateInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.HardStateInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.HardStateInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTerm();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getCommit();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 term = 1;\n * @return {number}\n */\nproto.types.HardStateInfo.prototype.getTerm = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.types.HardStateInfo.prototype.setTerm = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 commit = 2;\n * @return {number}\n */\nproto.types.HardStateInfo.prototype.getCommit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.HardStateInfo.prototype.setCommit = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetClusterInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.GetClusterInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetClusterInfoRequest.displayName = 'proto.types.GetClusterInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetClusterInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetClusterInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetClusterInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetClusterInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    bestblockhash: msg.getBestblockhash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetClusterInfoRequest}\n */\nproto.types.GetClusterInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetClusterInfoRequest;\n  return proto.types.GetClusterInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetClusterInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetClusterInfoRequest}\n */\nproto.types.GetClusterInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBestblockhash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetClusterInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetClusterInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetClusterInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetClusterInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBestblockhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes bestBlockHash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.GetClusterInfoRequest.prototype.getBestblockhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes bestBlockHash = 1;\n * This is a type-conversion wrapper around `getBestblockhash()`\n * @return {string}\n */\nproto.types.GetClusterInfoRequest.prototype.getBestblockhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBestblockhash()));\n};\n\n\n/**\n * optional bytes bestBlockHash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBestblockhash()`\n * @return {!Uint8Array}\n */\nproto.types.GetClusterInfoRequest.prototype.getBestblockhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBestblockhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.GetClusterInfoRequest.prototype.setBestblockhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.GetClusterInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetClusterInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.types.GetClusterInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.GetClusterInfoResponse.displayName = 'proto.types.GetClusterInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.GetClusterInfoResponse.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.GetClusterInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.GetClusterInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.GetClusterInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetClusterInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chainid: msg.getChainid_asB64(),\n    clusterid: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    error: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    mbrattrsList: jspb.Message.toObjectList(msg.getMbrattrsList(),\n    proto.types.MemberAttr.toObject, includeInstance),\n    bestblockno: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    hardstateinfo: (f = msg.getHardstateinfo()) && proto.types.HardStateInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.GetClusterInfoResponse}\n */\nproto.types.GetClusterInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.GetClusterInfoResponse;\n  return proto.types.GetClusterInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.GetClusterInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.GetClusterInfoResponse}\n */\nproto.types.GetClusterInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setClusterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 4:\n      var value = new proto.types.MemberAttr;\n      reader.readMessage(value,proto.types.MemberAttr.deserializeBinaryFromReader);\n      msg.addMbrattrs(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBestblockno(value);\n      break;\n    case 6:\n      var value = new proto.types.HardStateInfo;\n      reader.readMessage(value,proto.types.HardStateInfo.deserializeBinaryFromReader);\n      msg.setHardstateinfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.GetClusterInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.GetClusterInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.GetClusterInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.GetClusterInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChainid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getClusterid();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMbrattrsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.types.MemberAttr.serializeBinaryToWriter\n    );\n  }\n  f = message.getBestblockno();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getHardstateinfo();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.types.HardStateInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes chainID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.types.GetClusterInfoResponse.prototype.getChainid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes chainID = 1;\n * This is a type-conversion wrapper around `getChainid()`\n * @return {string}\n */\nproto.types.GetClusterInfoResponse.prototype.getChainid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainid()));\n};\n\n\n/**\n * optional bytes chainID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainid()`\n * @return {!Uint8Array}\n */\nproto.types.GetClusterInfoResponse.prototype.getChainid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.types.GetClusterInfoResponse.prototype.setChainid = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 clusterID = 2;\n * @return {number}\n */\nproto.types.GetClusterInfoResponse.prototype.getClusterid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.types.GetClusterInfoResponse.prototype.setClusterid = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string error = 3;\n * @return {string}\n */\nproto.types.GetClusterInfoResponse.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.GetClusterInfoResponse.prototype.setError = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * repeated MemberAttr mbrAttrs = 4;\n * @return {!Array<!proto.types.MemberAttr>}\n */\nproto.types.GetClusterInfoResponse.prototype.getMbrattrsList = function() {\n  return /** @type{!Array<!proto.types.MemberAttr>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.MemberAttr, 4));\n};\n\n\n/** @param {!Array<!proto.types.MemberAttr>} value */\nproto.types.GetClusterInfoResponse.prototype.setMbrattrsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.types.MemberAttr=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.MemberAttr}\n */\nproto.types.GetClusterInfoResponse.prototype.addMbrattrs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.types.MemberAttr, opt_index);\n};\n\n\nproto.types.GetClusterInfoResponse.prototype.clearMbrattrsList = function() {\n  this.setMbrattrsList([]);\n};\n\n\n/**\n * optional uint64 bestBlockNo = 5;\n * @return {number}\n */\nproto.types.GetClusterInfoResponse.prototype.getBestblockno = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.types.GetClusterInfoResponse.prototype.setBestblockno = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional HardStateInfo hardStateInfo = 6;\n * @return {?proto.types.HardStateInfo}\n */\nproto.types.GetClusterInfoResponse.prototype.getHardstateinfo = function() {\n  return /** @type{?proto.types.HardStateInfo} */ (\n    jspb.Message.getWrapperField(this, proto.types.HardStateInfo, 6));\n};\n\n\n/** @param {?proto.types.HardStateInfo|undefined} value */\nproto.types.GetClusterInfoResponse.prototype.setHardstateinfo = function(value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\n\nproto.types.GetClusterInfoResponse.prototype.clearHardstateinfo = function() {\n  this.setHardstateinfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.types.GetClusterInfoResponse.prototype.hasHardstateinfo = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.ConfChangeProgress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.ConfChangeProgress.repeatedFields_, null);\n};\ngoog.inherits(proto.types.ConfChangeProgress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.ConfChangeProgress.displayName = 'proto.types.ConfChangeProgress';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.types.ConfChangeProgress.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.ConfChangeProgress.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.ConfChangeProgress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.ConfChangeProgress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ConfChangeProgress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    state: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    err: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    membersList: jspb.Message.toObjectList(msg.getMembersList(),\n    proto.types.MemberAttr.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.ConfChangeProgress}\n */\nproto.types.ConfChangeProgress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.ConfChangeProgress;\n  return proto.types.ConfChangeProgress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.ConfChangeProgress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.ConfChangeProgress}\n */\nproto.types.ConfChangeProgress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ConfChangeState} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setErr(value);\n      break;\n    case 3:\n      var value = new proto.types.MemberAttr;\n      reader.readMessage(value,proto.types.MemberAttr.deserializeBinaryFromReader);\n      msg.addMembers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.ConfChangeProgress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.ConfChangeProgress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.ConfChangeProgress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.ConfChangeProgress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getErr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getMembersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.types.MemberAttr.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ConfChangeState State = 1;\n * @return {!proto.types.ConfChangeState}\n */\nproto.types.ConfChangeProgress.prototype.getState = function() {\n  return /** @type {!proto.types.ConfChangeState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ConfChangeState} value */\nproto.types.ConfChangeProgress.prototype.setState = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional string Err = 2;\n * @return {string}\n */\nproto.types.ConfChangeProgress.prototype.getErr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.ConfChangeProgress.prototype.setErr = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated MemberAttr Members = 3;\n * @return {!Array<!proto.types.MemberAttr>}\n */\nproto.types.ConfChangeProgress.prototype.getMembersList = function() {\n  return /** @type{!Array<!proto.types.MemberAttr>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.types.MemberAttr, 3));\n};\n\n\n/** @param {!Array<!proto.types.MemberAttr>} value */\nproto.types.ConfChangeProgress.prototype.setMembersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.types.MemberAttr=} opt_value\n * @param {number=} opt_index\n * @return {!proto.types.MemberAttr}\n */\nproto.types.ConfChangeProgress.prototype.addMembers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.types.MemberAttr, opt_index);\n};\n\n\nproto.types.ConfChangeProgress.prototype.clearMembersList = function() {\n  this.setMembersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.types.SnapshotResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.types.SnapshotResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.types.SnapshotResponse.displayName = 'proto.types.SnapshotResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.types.SnapshotResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.types.SnapshotResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.types.SnapshotResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.SnapshotResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.types.SnapshotResponse}\n */\nproto.types.SnapshotResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.types.SnapshotResponse;\n  return proto.types.SnapshotResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.types.SnapshotResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.types.SnapshotResponse}\n */\nproto.types.SnapshotResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.types.ResultStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.types.SnapshotResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.types.SnapshotResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.types.SnapshotResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.types.SnapshotResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResultStatus status = 1;\n * @return {!proto.types.ResultStatus}\n */\nproto.types.SnapshotResponse.prototype.getStatus = function() {\n  return /** @type {!proto.types.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.types.ResultStatus} value */\nproto.types.SnapshotResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.types.SnapshotResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.types.SnapshotResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.types.MembershipChangeType = {\n  ADD_MEMBER: 0,\n  REMOVE_MEMBER: 1\n};\n\n/**\n * @enum {number}\n */\nproto.types.ConfChangeState = {\n  CONF_CHANGE_STATE_PROPOSED: 0,\n  CONF_CHANGE_STATE_SAVED: 1,\n  CONF_CHANGE_STATE_APPLIED: 2\n};\n\ngoog.object.extend(exports, proto.types);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"96f75936707a0fe61356c29854b3a7b82d65bfa4","contentHash":"d06b91d34ce99eace3a6534ed7748bc53f3353dec4fa859c374bf56f9f357238"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/transactions/utils.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/transactions/utils.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":111}},"2":{"start":{"line":1,"column":111},"end":{"line":1,"column":147}},"3":{"start":{"line":1,"column":161},"end":{"line":1,"column":186}},"4":{"start":{"line":2,"column":14},"end":{"line":2,"column":31}},"5":{"start":{"line":5,"column":2},"end":{"line":5,"column":59}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":43}}},"fnMap":{"0":{"name":"encodeTxHash","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":29},"end":{"line":6,"column":1}},"line":4},"1":{"name":"decodeTxHash","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":21}},"loc":{"start":{"line":8,"column":34},"end":{"line":10,"column":1}},"line":8}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":243,"6":129},"f":{"0":243,"1":129},"b":{},"inputSourceMap":{"version":3,"sources":["utils.ts"],"names":["encodeTxHash","bytes","base58","encode","Buffer","from","decodeTxHash","bs58string","decode"],"mappings":"mJAAA;AACA;;AAEO,SAASA,YAAT,CAAsBC,KAAtB,EAA0D;AAC7D,SAAOC,eAAOC,MAAP,CAAcC,eAAOC,IAAP,CAAYJ,KAAZ,CAAd,CAAP;AACH;;AAEM,SAASK,YAAT,CAAsBC,UAAtB,EAAkD;AACrD,SAAOL,eAAOM,MAAP,CAAcD,UAAd,CAAP;AACH","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/transactions","sourcesContent":["import { base58 } from '@herajs/common';\nimport { Buffer } from 'buffer';\n\nexport function encodeTxHash(bytes: Buffer | Uint8Array): string {\n    return base58.encode(Buffer.from(bytes));\n}\n\nexport function decodeTxHash(bs58string: string): Buffer {\n    return base58.decode(bs58string);\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eff65637fb84f464060d0db0380668bd99927bb0","contentHash":"d396202c21b2647f302eb94e2484469979326b6ab6106659c2bd0846c1124923"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/errors.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/errors.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":109}},"2":{"start":{"line":1,"column":148},"end":{"line":1,"column":192}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["errors.ts"],"names":["TransactionError","Error"],"mappings":"6GAAO,MAAMA,gBAAN,SAA+BC,KAA/B,CAAqC,E","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src","sourcesContent":["export class TransactionError extends Error {}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"20bb685389708b98f1ab1f5413bad13c8d5c5b19","contentHash":"c303b68ed99fd8e16c044183f480d91807307a04e950459a836ea7f1c4a3e787"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/accounts/index.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/accounts/index.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":1,"column":114},"end":{"line":1,"column":143}},"3":{"start":{"line":2,"column":18},"end":{"line":2,"column":51}},"4":{"start":{"line":4,"column":11},"end":{"line":4,"column":58}},"5":{"start":{"line":5,"column":13},"end":{"line":5,"column":45}},"6":{"start":{"line":6,"column":15},"end":{"line":6,"column":67}},"7":{"start":{"line":7,"column":17},"end":{"line":7,"column":67}},"8":{"start":{"line":8,"column":14},"end":{"line":8,"column":33}},"9":{"start":{"line":8,"column":72},"end":{"line":8,"column":126}},"10":{"start":{"line":8,"column":170},"end":{"line":8,"column":317}},"11":{"start":{"line":8,"column":187},"end":{"line":8,"column":291}},"12":{"start":{"line":8,"column":299},"end":{"line":8,"column":316}},"13":{"start":{"line":8,"column":317},"end":{"line":8,"column":328}},"14":{"start":{"line":18,"column":22},"end":{"line":18,"column":62}},"15":{"start":{"line":18,"column":62},"end":{"line":18,"column":101}},"16":{"start":{"line":19,"column":4},"end":{"line":19,"column":31}},"17":{"start":{"line":20,"column":4},"end":{"line":20,"column":23}},"18":{"start":{"line":29,"column":4},"end":{"line":44,"column":7}},"19":{"start":{"line":30,"column":23},"end":{"line":30,"column":45}},"20":{"start":{"line":31,"column":6},"end":{"line":31,"column":41}},"21":{"start":{"line":32,"column":6},"end":{"line":43,"column":7}},"22":{"start":{"line":33,"column":8},"end":{"line":40,"column":11}},"23":{"start":{"line":34,"column":10},"end":{"line":39,"column":11}},"24":{"start":{"line":35,"column":12},"end":{"line":35,"column":24}},"25":{"start":{"line":37,"column":35},"end":{"line":37,"column":56}},"26":{"start":{"line":38,"column":12},"end":{"line":38,"column":58}},"27":{"start":{"line":42,"column":8},"end":{"line":42,"column":26}},"28":{"start":{"line":52,"column":4},"end":{"line":67,"column":7}},"29":{"start":{"line":53,"column":20},"end":{"line":53,"column":39}},"30":{"start":{"line":54,"column":6},"end":{"line":66,"column":7}},"31":{"start":{"line":55,"column":8},"end":{"line":63,"column":11}},"32":{"start":{"line":56,"column":10},"end":{"line":62,"column":11}},"33":{"start":{"line":57,"column":12},"end":{"line":57,"column":24}},"34":{"start":{"line":59,"column":29},"end":{"line":59,"column":50}},"35":{"start":{"line":60,"column":30},"end":{"line":60,"column":102}},"36":{"start":{"line":60,"column":54},"end":{"line":60,"column":101}},"37":{"start":{"line":61,"column":12},"end":{"line":61,"column":31}},"38":{"start":{"line":65,"column":8},"end":{"line":65,"column":26}},"39":{"start":{"line":77,"column":4},"end":{"line":97,"column":7}},"40":{"start":{"line":78,"column":22},"end":{"line":78,"column":47}},"41":{"start":{"line":79,"column":6},"end":{"line":79,"column":66}},"42":{"start":{"line":81,"column":23},"end":{"line":81,"column":45}},"43":{"start":{"line":82,"column":6},"end":{"line":82,"column":41}},"44":{"start":{"line":83,"column":6},"end":{"line":83,"column":35}},"45":{"start":{"line":85,"column":6},"end":{"line":96,"column":7}},"46":{"start":{"line":86,"column":8},"end":{"line":93,"column":11}},"47":{"start":{"line":87,"column":10},"end":{"line":92,"column":11}},"48":{"start":{"line":88,"column":12},"end":{"line":88,"column":24}},"49":{"start":{"line":90,"column":35},"end":{"line":90,"column":56}},"50":{"start":{"line":91,"column":12},"end":{"line":91,"column":58}},"51":{"start":{"line":95,"column":8},"end":{"line":95,"column":26}},"52":{"start":{"line":107,"column":4},"end":{"line":127,"column":7}},"53":{"start":{"line":108,"column":22},"end":{"line":108,"column":47}},"54":{"start":{"line":109,"column":6},"end":{"line":109,"column":66}},"55":{"start":{"line":111,"column":23},"end":{"line":111,"column":45}},"56":{"start":{"line":112,"column":6},"end":{"line":112,"column":41}},"57":{"start":{"line":113,"column":6},"end":{"line":113,"column":35}},"58":{"start":{"line":115,"column":6},"end":{"line":126,"column":7}},"59":{"start":{"line":116,"column":8},"end":{"line":123,"column":11}},"60":{"start":{"line":117,"column":10},"end":{"line":122,"column":11}},"61":{"start":{"line":118,"column":12},"end":{"line":118,"column":24}},"62":{"start":{"line":120,"column":35},"end":{"line":120,"column":56}},"63":{"start":{"line":121,"column":12},"end":{"line":121,"column":58}},"64":{"start":{"line":125,"column":8},"end":{"line":125,"column":26}},"65":{"start":{"line":137,"column":15},"end":{"line":137,"column":72}},"66":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"67":{"start":{"line":139,"column":6},"end":{"line":139,"column":41}},"68":{"start":{"line":141,"column":4},"end":{"line":148,"column":7}},"69":{"start":{"line":142,"column":18},"end":{"line":142,"column":35}},"70":{"start":{"line":143,"column":6},"end":{"line":145,"column":7}},"71":{"start":{"line":144,"column":8},"end":{"line":144,"column":89}},"72":{"start":{"line":147,"column":6},"end":{"line":147,"column":61}},"73":{"start":{"line":157,"column":15},"end":{"line":157,"column":72}},"74":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"75":{"start":{"line":159,"column":6},"end":{"line":159,"column":41}},"76":{"start":{"line":161,"column":4},"end":{"line":161,"column":145}},"77":{"start":{"line":161,"column":112},"end":{"line":161,"column":143}},"78":{"start":{"line":165,"column":0},"end":{"line":165,"column":8}},"79":{"start":{"line":165,"column":9},"end":{"line":165,"column":36}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":8,"column":43},"end":{"line":8,"column":65}},"loc":{"start":{"line":8,"column":71},"end":{"line":8,"column":127}},"line":8},"1":{"name":"_defineProperty","decl":{"start":{"line":8,"column":136},"end":{"line":8,"column":151}},"loc":{"start":{"line":8,"column":169},"end":{"line":8,"column":329}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":21},"end":{"line":21,"column":3}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":2},"end":{"line":28,"column":3}},"loc":{"start":{"line":28,"column":21},"end":{"line":45,"column":3}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":23},"end":{"line":29,"column":24}},"loc":{"start":{"line":29,"column":44},"end":{"line":44,"column":5}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":51},"end":{"line":33,"column":52}},"loc":{"start":{"line":33,"column":65},"end":{"line":40,"column":9}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":2},"end":{"line":51,"column":3}},"loc":{"start":{"line":51,"column":8},"end":{"line":68,"column":3}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":52,"column":23},"end":{"line":52,"column":24}},"loc":{"start":{"line":52,"column":44},"end":{"line":67,"column":5}},"line":52},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":46},"end":{"line":55,"column":47}},"loc":{"start":{"line":55,"column":60},"end":{"line":63,"column":9}},"line":55},"9":{"name":"(anonymous_9)","decl":{"start":{"line":60,"column":43},"end":{"line":60,"column":44}},"loc":{"start":{"line":60,"column":54},"end":{"line":60,"column":101}},"line":60},"10":{"name":"(anonymous_10)","decl":{"start":{"line":76,"column":2},"end":{"line":76,"column":3}},"loc":{"start":{"line":76,"column":30},"end":{"line":98,"column":3}},"line":76},"11":{"name":"(anonymous_11)","decl":{"start":{"line":77,"column":23},"end":{"line":77,"column":24}},"loc":{"start":{"line":77,"column":44},"end":{"line":97,"column":5}},"line":77},"12":{"name":"(anonymous_12)","decl":{"start":{"line":86,"column":51},"end":{"line":86,"column":52}},"loc":{"start":{"line":86,"column":65},"end":{"line":93,"column":9}},"line":86},"13":{"name":"(anonymous_13)","decl":{"start":{"line":106,"column":2},"end":{"line":106,"column":3}},"loc":{"start":{"line":106,"column":28},"end":{"line":128,"column":3}},"line":106},"14":{"name":"(anonymous_14)","decl":{"start":{"line":107,"column":23},"end":{"line":107,"column":24}},"loc":{"start":{"line":107,"column":44},"end":{"line":127,"column":5}},"line":107},"15":{"name":"(anonymous_15)","decl":{"start":{"line":116,"column":49},"end":{"line":116,"column":50}},"loc":{"start":{"line":116,"column":63},"end":{"line":123,"column":9}},"line":116},"16":{"name":"(anonymous_16)","decl":{"start":{"line":136,"column":2},"end":{"line":136,"column":3}},"loc":{"start":{"line":136,"column":23},"end":{"line":149,"column":3}},"line":136},"17":{"name":"(anonymous_17)","decl":{"start":{"line":141,"column":100},"end":{"line":141,"column":101}},"loc":{"start":{"line":141,"column":110},"end":{"line":148,"column":5}},"line":141},"18":{"name":"(anonymous_18)","decl":{"start":{"line":156,"column":2},"end":{"line":156,"column":3}},"loc":{"start":{"line":156,"column":23},"end":{"line":162,"column":3}},"line":156},"19":{"name":"(anonymous_19)","decl":{"start":{"line":161,"column":100},"end":{"line":161,"column":101}},"loc":{"start":{"line":161,"column":112},"end":{"line":161,"column":143}},"line":161}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":79},"end":{"line":8,"column":125}},"type":"cond-expr","locations":[{"start":{"line":8,"column":103},"end":{"line":8,"column":106}},{"start":{"line":8,"column":109},"end":{"line":8,"column":125}}],"line":8},"1":{"loc":{"start":{"line":8,"column":79},"end":{"line":8,"column":100}},"type":"binary-expr","locations":[{"start":{"line":8,"column":79},"end":{"line":8,"column":82}},{"start":{"line":8,"column":86},"end":{"line":8,"column":100}}],"line":8},"2":{"loc":{"start":{"line":8,"column":170},"end":{"line":8,"column":317}},"type":"if","locations":[{"start":{"line":8,"column":170},"end":{"line":8,"column":317}},{"start":{"line":8,"column":170},"end":{"line":8,"column":317}}],"line":8},"3":{"loc":{"start":{"line":34,"column":10},"end":{"line":39,"column":11}},"type":"if","locations":[{"start":{"line":34,"column":10},"end":{"line":39,"column":11}},{"start":{"line":34,"column":10},"end":{"line":39,"column":11}}],"line":34},"4":{"loc":{"start":{"line":56,"column":10},"end":{"line":62,"column":11}},"type":"if","locations":[{"start":{"line":56,"column":10},"end":{"line":62,"column":11}},{"start":{"line":56,"column":10},"end":{"line":62,"column":11}}],"line":56},"5":{"loc":{"start":{"line":87,"column":10},"end":{"line":92,"column":11}},"type":"if","locations":[{"start":{"line":87,"column":10},"end":{"line":92,"column":11}},{"start":{"line":87,"column":10},"end":{"line":92,"column":11}}],"line":87},"6":{"loc":{"start":{"line":117,"column":10},"end":{"line":122,"column":11}},"type":"if","locations":[{"start":{"line":117,"column":10},"end":{"line":122,"column":11}},{"start":{"line":117,"column":10},"end":{"line":122,"column":11}}],"line":117},"7":{"loc":{"start":{"line":137,"column":15},"end":{"line":137,"column":72}},"type":"cond-expr","locations":[{"start":{"line":137,"column":45},"end":{"line":137,"column":48}},{"start":{"line":137,"column":51},"end":{"line":137,"column":72}}],"line":137},"8":{"loc":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},{"start":{"line":138,"column":4},"end":{"line":140,"column":5}}],"line":138},"9":{"loc":{"start":{"line":138,"column":8},"end":{"line":138,"column":66}},"type":"binary-expr","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":39}},{"start":{"line":138,"column":43},"end":{"line":138,"column":66}}],"line":138},"10":{"loc":{"start":{"line":143,"column":6},"end":{"line":145,"column":7}},"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":145,"column":7}},{"start":{"line":143,"column":6},"end":{"line":145,"column":7}}],"line":143},"11":{"loc":{"start":{"line":143,"column":10},"end":{"line":143,"column":33}},"type":"binary-expr","locations":[{"start":{"line":143,"column":10},"end":{"line":143,"column":19}},{"start":{"line":143,"column":23},"end":{"line":143,"column":33}}],"line":143},"12":{"loc":{"start":{"line":157,"column":15},"end":{"line":157,"column":72}},"type":"cond-expr","locations":[{"start":{"line":157,"column":45},"end":{"line":157,"column":48}},{"start":{"line":157,"column":51},"end":{"line":157,"column":72}}],"line":157},"13":{"loc":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},{"start":{"line":158,"column":4},"end":{"line":160,"column":5}}],"line":158},"14":{"loc":{"start":{"line":158,"column":8},"end":{"line":158,"column":66}},"type":"binary-expr","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":39}},{"start":{"line":158,"column":43},"end":{"line":158,"column":66}}],"line":158}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":12,"11":0,"12":12,"13":12,"14":6,"15":6,"16":6,"17":6,"18":24,"19":24,"20":24,"21":24,"22":24,"23":24,"24":0,"25":24,"26":24,"27":0,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":1,"35":1,"36":264,"37":1,"38":0,"39":25,"40":25,"41":25,"42":25,"43":25,"44":25,"45":25,"46":25,"47":25,"48":0,"49":25,"50":25,"51":0,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":0,"62":1,"63":1,"64":0,"65":10,"66":10,"67":0,"68":10,"69":10,"70":10,"71":1,"72":9,"73":26,"74":26,"75":0,"76":26,"77":26,"78":1,"79":1},"f":{"0":3,"1":12,"2":6,"3":24,"4":24,"5":24,"6":1,"7":1,"8":1,"9":264,"10":25,"11":25,"12":25,"13":1,"14":1,"15":1,"16":10,"17":10,"18":26,"19":26},"b":{"0":[3,0],"1":[3,3],"2":[0,12],"3":[0,24],"4":[0,1],"5":[0,25],"6":[0,1],"7":[0,10],"8":[0,10],"9":[10,10],"10":[1,9],"11":[10,1],"12":[0,26],"13":[0,26],"14":[26,26]},"inputSourceMap":{"version":3,"sources":["index.ts"],"names":["Accounts","constructor","aergo","client","create","passphrase","Promise","resolve","reject","personal","Personal","setPassphrase","createAccount","err","rsp","createdAddress","getAddress_asU8","Address","exception","get","empty","Empty","getAccounts","accounts","getAccountsList","addresses","map","account","unlock","address","Account","setAddress","asBytes","setAccount","unlockAccount","lock","lockAccount","sendTransaction","_tx","tx","Tx","limit","defaultLimit","sendTX","toGrpc","then","result","obj","toObject","error","detail","Error","getHash_asU8","signTransaction","signTX","signedtx","fromGrpc"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/accounts","sourcesContent":["import { Personal, Empty, CommitResult } from '../../types/rpc_pb';\nimport { Account } from '../../types/account_pb';\nimport { Tx as GrpcTx } from '../../types/blockchain_pb';\nimport Tx from '../models/tx';\nimport { encodeTxHash } from '../transactions/utils';\nimport Address from '../models/address';\nimport promisify from '../promisify.js';\nimport { errorMessageForCode } from '../utils';\nimport { TxBody } from '@herajs/common';\n\n/**\n * Accounts controller. It is exposed at `aergoClient.accounts`.\n */\nclass Accounts {\n    client: any;\n    aergo: any;\n\n    constructor (aergo) {\n        this.client = aergo.client;\n        this.aergo = aergo;\n    }\n    \n    /**\n     * Create a new account in the node.\n     * @param {string} passphrase \n     * @returns {Promise<Address>} newly created account address\n     */\n    create (passphrase: string): Promise<Address> {\n        return new Promise((resolve, reject) => {\n            const personal = new Personal();\n            personal.setPassphrase(passphrase);\n            try {\n                this.client.client.createAccount(personal, (err, rsp) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        const createdAddress = rsp.getAddress_asU8();\n                        resolve(new Address(createdAddress));\n                    }\n                });\n            } catch (exception) {\n                reject(exception);\n            }\n        });\n    }\n\n    /**\n     * Get list of accounts.\n     * @returns {Promise<Address[]>} list of account addresses\n     */\n    get (): Promise<Address[]> {\n        return new Promise((resolve, reject) => {\n            const empty = new Empty();\n            try {\n                this.client.client.getAccounts(empty, (err, rsp) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        const accounts = rsp.getAccountsList();\n                        const addresses = accounts.map(account => new Address(account.getAddress_asU8()));\n                        resolve(addresses);\n                    }\n                });\n            } catch (exception) {\n                reject(exception);\n            }\n        });\n    }\n\n    /**\n     * Unlock account.\n     * @param {Address|string} address \n     * @param {Address|string} passphrase \n     * @returns {Promise<Address>} unlocked account address\n     */\n    unlock (address: Address|string, passphrase: string): Promise<Address> {\n        return new Promise((resolve, reject) => {\n            const account = new Account();\n            account.setAddress((new Address(address)).asBytes());\n\n            const personal = new Personal();\n            personal.setPassphrase(passphrase);\n            personal.setAccount(account);\n\n            try {\n                this.client.client.unlockAccount(personal, (err, rsp) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        const createdAddress = rsp.getAddress_asU8();\n                        resolve(new Address(createdAddress));\n                    }\n                });\n            } catch (exception) {\n                reject(exception);\n            }\n        });\n    }\n\n    /**\n     * Lock account.\n     * @param {Address|string} address \n     * @param {Address|string} passphrase \n     * @returns {Promise<Address>} locked account address\n     */\n    lock (address: Address|string, passphrase: string): Promise<Address> {\n        return new Promise((resolve, reject) => {\n            const account = new Account();\n            account.setAddress((new Address(address)).asBytes());\n\n            const personal = new Personal();\n            personal.setPassphrase(passphrase);\n            personal.setAccount(account);\n\n            try {\n                this.client.client.lockAccount(personal, (err, rsp) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        const createdAddress = rsp.getAddress_asU8();\n                        resolve(new Address(createdAddress));\n                    }\n                });\n            } catch (exception) {\n                reject(exception);\n            }\n        });\n    }\n\n    /**\n     * Convenience method to send transaction from account.\n     * This method automatically retrieves the nonce, signs the transaction, and sends it to the network.\n     * @param {Tx} tx transaction data\n     * @returns {Promise<string>} transaction hash\n     */\n    sendTransaction(_tx: TxBody | Tx): Promise<string> {\n        const tx = (_tx instanceof Tx) ? _tx : new Tx(_tx);\n        if (typeof tx.limit === 'undefined' && this.aergo.defaultLimit) {\n            tx.limit = this.aergo.defaultLimit;\n        }\n        return promisify(this.client.client.sendTX, this.client.client)(tx.toGrpc()).then((result: CommitResult) => {\n            const obj = result.toObject();\n            if (obj.error && obj.detail) {\n                throw new Error(errorMessageForCode(obj.error) + ': ' + obj.detail);\n            }\n    \n            return encodeTxHash(result.getHash_asU8());\n        });\n    }\n\n    /**\n     * Sign transaction.\n     * @param {Tx} tx transaction data\n     * @returns {Promise<Tx>} transaction data including signature\n     */\n    signTransaction(_tx: Tx | TxBody): Promise<Tx> {\n        const tx = (_tx instanceof Tx) ? _tx : new Tx(_tx);\n        if (typeof tx.limit === 'undefined' && this.aergo.defaultLimit) {\n            tx.limit = this.aergo.defaultLimit;\n        }\n        return promisify(this.client.client.signTX, this.client.client)(tx.toGrpc()).then((signedtx: GrpcTx) => Tx.fromGrpc(signedtx));\n    }\n}\n\nexport default Accounts;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c24a506417966f4c4751266c757db34eaf49e9f0","contentHash":"cce0ec404768b28d811ff61a31dc820b43c3091dad365d6fedbb417961d3f40b"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/tx.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/tx.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":119}},"2":{"start":{"line":1,"column":140},"end":{"line":1,"column":176}},"3":{"start":{"line":2,"column":13},"end":{"line":2,"column":45}},"4":{"start":{"line":3,"column":15},"end":{"line":3,"column":59}},"5":{"start":{"line":4,"column":14},"end":{"line":4,"column":39}},"6":{"start":{"line":5,"column":14},"end":{"line":5,"column":31}},"7":{"start":{"line":5,"column":70},"end":{"line":5,"column":124}},"8":{"start":{"line":5,"column":168},"end":{"line":5,"column":315}},"9":{"start":{"line":5,"column":185},"end":{"line":5,"column":289}},"10":{"start":{"line":5,"column":297},"end":{"line":5,"column":314}},"11":{"start":{"line":5,"column":315},"end":{"line":5,"column":326}},"12":{"start":{"line":10,"column":2},"end":{"line":14,"column":3}},"13":{"start":{"line":11,"column":4},"end":{"line":11,"column":60}},"14":{"start":{"line":13,"column":4},"end":{"line":13,"column":55}},"15":{"start":{"line":41,"column":21},"end":{"line":41,"column":59}},"16":{"start":{"line":41,"column":59},"end":{"line":41,"column":98}},"17":{"start":{"line":41,"column":98},"end":{"line":41,"column":136}},"18":{"start":{"line":41,"column":136},"end":{"line":41,"column":172}},"19":{"start":{"line":41,"column":172},"end":{"line":41,"column":212}},"20":{"start":{"line":41,"column":212},"end":{"line":41,"column":253}},"21":{"start":{"line":41,"column":253},"end":{"line":41,"column":291}},"22":{"start":{"line":41,"column":291},"end":{"line":41,"column":329}},"23":{"start":{"line":41,"column":329},"end":{"line":41,"column":368}},"24":{"start":{"line":41,"column":368},"end":{"line":41,"column":407}},"25":{"start":{"line":41,"column":407},"end":{"line":41,"column":452}},"26":{"start":{"line":42,"column":4},"end":{"line":42,"column":30}},"27":{"start":{"line":43,"column":4},"end":{"line":43,"column":55}},"28":{"start":{"line":44,"column":4},"end":{"line":44,"column":53}},"29":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"30":{"start":{"line":46,"column":6},"end":{"line":46,"column":35}},"31":{"start":{"line":51,"column":4},"end":{"line":51,"column":41}},"32":{"start":{"line":55,"column":17},"end":{"line":55,"column":37}},"33":{"start":{"line":56,"column":17},"end":{"line":56,"column":57}},"34":{"start":{"line":57,"column":4},"end":{"line":57,"column":50}},"35":{"start":{"line":57,"column":15},"end":{"line":57,"column":50}},"36":{"start":{"line":58,"column":4},"end":{"line":69,"column":64}},"37":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"38":{"start":{"line":78,"column":6},"end":{"line":78,"column":28}},"39":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"40":{"start":{"line":81,"column":6},"end":{"line":81,"column":32}},"41":{"start":{"line":83,"column":4},"end":{"line":83,"column":26}},"42":{"start":{"line":87,"column":22},"end":{"line":87,"column":49}},"43":{"start":{"line":89,"column":4},"end":{"line":89,"column":49}},"44":{"start":{"line":90,"column":4},"end":{"line":90,"column":35}},"45":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"46":{"start":{"line":93,"column":6},"end":{"line":93,"column":73}},"47":{"start":{"line":95,"column":4},"end":{"line":95,"column":68}},"48":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"49":{"start":{"line":98,"column":6},"end":{"line":98,"column":70}},"50":{"start":{"line":101,"column":4},"end":{"line":101,"column":64}},"51":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"52":{"start":{"line":104,"column":6},"end":{"line":104,"column":67}},"53":{"start":{"line":107,"column":4},"end":{"line":107,"column":43}},"54":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"55":{"start":{"line":110,"column":6},"end":{"line":110,"column":62}},"56":{"start":{"line":113,"column":4},"end":{"line":117,"column":5}},"57":{"start":{"line":114,"column":6},"end":{"line":114,"column":66}},"58":{"start":{"line":115,"column":11},"end":{"line":117,"column":5}},"59":{"start":{"line":116,"column":6},"end":{"line":116,"column":35}},"60":{"start":{"line":119,"column":4},"end":{"line":124,"column":5}},"61":{"start":{"line":120,"column":18},"end":{"line":122,"column":60}},"62":{"start":{"line":123,"column":6},"end":{"line":123,"column":27}},"63":{"start":{"line":125,"column":4},"end":{"line":125,"column":60}},"64":{"start":{"line":127,"column":18},"end":{"line":127,"column":41}},"65":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"66":{"start":{"line":129,"column":6},"end":{"line":129,"column":44}},"67":{"start":{"line":132,"column":4},"end":{"line":132,"column":29}},"68":{"start":{"line":133,"column":4},"end":{"line":133,"column":17}},"69":{"start":{"line":134,"column":4},"end":{"line":134,"column":25}},"70":{"start":{"line":134,"column":25},"end":{"line":134,"column":76}},"71":{"start":{"line":137,"column":49},"end":{"line":137,"column":64}},"72":{"start":{"line":137,"column":64},"end":{"line":137,"column":102}},"73":{"start":{"line":137,"column":102},"end":{"line":137,"column":140}},"74":{"start":{"line":137,"column":142},"end":{"line":137,"column":170}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":5,"column":41},"end":{"line":5,"column":63}},"loc":{"start":{"line":5,"column":69},"end":{"line":5,"column":125}},"line":5},"1":{"name":"_defineProperty","decl":{"start":{"line":5,"column":134},"end":{"line":5,"column":149}},"loc":{"start":{"line":5,"column":167},"end":{"line":5,"column":327}},"line":5},"2":{"name":"bufferOrB58","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":20}},"loc":{"start":{"line":9,"column":28},"end":{"line":15,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":20},"end":{"line":48,"column":3}},"line":41},"4":{"name":"(anonymous_4)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":25},"end":{"line":52,"column":3}},"line":50},"5":{"name":"(anonymous_5)","decl":{"start":{"line":54,"column":2},"end":{"line":54,"column":3}},"loc":{"start":{"line":54,"column":30},"end":{"line":71,"column":3}},"line":54},"6":{"name":"(anonymous_6)","decl":{"start":{"line":76,"column":2},"end":{"line":76,"column":3}},"loc":{"start":{"line":76,"column":14},"end":{"line":84,"column":3}},"line":76},"7":{"name":"(anonymous_7)","decl":{"start":{"line":86,"column":2},"end":{"line":86,"column":3}},"loc":{"start":{"line":86,"column":11},"end":{"line":134,"column":3}},"line":86},"8":{"name":"(anonymous_8)","decl":{"start":{"line":137,"column":27},"end":{"line":137,"column":28}},"loc":{"start":{"line":137,"column":48},"end":{"line":137,"column":141}},"line":137}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":77},"end":{"line":5,"column":123}},"type":"cond-expr","locations":[{"start":{"line":5,"column":101},"end":{"line":5,"column":104}},{"start":{"line":5,"column":107},"end":{"line":5,"column":123}}],"line":5},"1":{"loc":{"start":{"line":5,"column":77},"end":{"line":5,"column":98}},"type":"binary-expr","locations":[{"start":{"line":5,"column":77},"end":{"line":5,"column":80}},{"start":{"line":5,"column":84},"end":{"line":5,"column":98}}],"line":5},"2":{"loc":{"start":{"line":5,"column":168},"end":{"line":5,"column":315}},"type":"if","locations":[{"start":{"line":5,"column":168},"end":{"line":5,"column":315}},{"start":{"line":5,"column":168},"end":{"line":5,"column":315}}],"line":5},"3":{"loc":{"start":{"line":10,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":14,"column":3}},{"start":{"line":10,"column":2},"end":{"line":14,"column":3}}],"line":10},"4":{"loc":{"start":{"line":43,"column":37},"end":{"line":43,"column":53}},"type":"binary-expr","locations":[{"start":{"line":43,"column":37},"end":{"line":43,"column":48}},{"start":{"line":43,"column":52},"end":{"line":43,"column":53}}],"line":43},"5":{"loc":{"start":{"line":44,"column":36},"end":{"line":44,"column":51}},"type":"binary-expr","locations":[{"start":{"line":44,"column":36},"end":{"line":44,"column":46}},{"start":{"line":44,"column":50},"end":{"line":44,"column":51}}],"line":44},"6":{"loc":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},{"start":{"line":45,"column":4},"end":{"line":47,"column":5}}],"line":45},"7":{"loc":{"start":{"line":57,"column":4},"end":{"line":57,"column":50}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":50}},{"start":{"line":57,"column":4},"end":{"line":57,"column":50}}],"line":57},"8":{"loc":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},{"start":{"line":77,"column":4},"end":{"line":79,"column":5}}],"line":77},"9":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{"line":80,"column":4},"end":{"line":82,"column":5}}],"line":80},"10":{"loc":{"start":{"line":80,"column":8},"end":{"line":80,"column":78}},"type":"binary-expr","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":39}},{"start":{"line":80,"column":43},"end":{"line":80,"column":78}}],"line":80},"11":{"loc":{"start":{"line":89,"column":22},"end":{"line":89,"column":47}},"type":"cond-expr","locations":[{"start":{"line":89,"column":34},"end":{"line":89,"column":43}},{"start":{"line":89,"column":46},"end":{"line":89,"column":47}}],"line":89},"12":{"loc":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},{"start":{"line":92,"column":4},"end":{"line":94,"column":5}}],"line":92},"13":{"loc":{"start":{"line":92,"column":8},"end":{"line":92,"column":54}},"type":"binary-expr","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":40}},{"start":{"line":92,"column":44},"end":{"line":92,"column":54}}],"line":92},"14":{"loc":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},{"start":{"line":97,"column":4},"end":{"line":99,"column":5}}],"line":97},"15":{"loc":{"start":{"line":97,"column":8},"end":{"line":97,"column":58}},"type":"binary-expr","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":38}},{"start":{"line":97,"column":42},"end":{"line":97,"column":58}}],"line":97},"16":{"loc":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},{"start":{"line":103,"column":4},"end":{"line":105,"column":5}}],"line":103},"17":{"loc":{"start":{"line":107,"column":26},"end":{"line":107,"column":41}},"type":"binary-expr","locations":[{"start":{"line":107,"column":26},"end":{"line":107,"column":36}},{"start":{"line":107,"column":40},"end":{"line":107,"column":41}}],"line":107},"18":{"loc":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},{"start":{"line":109,"column":4},"end":{"line":111,"column":5}}],"line":109},"19":{"loc":{"start":{"line":113,"column":4},"end":{"line":117,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":117,"column":5}},{"start":{"line":113,"column":4},"end":{"line":117,"column":5}}],"line":113},"20":{"loc":{"start":{"line":115,"column":11},"end":{"line":117,"column":5}},"type":"if","locations":[{"start":{"line":115,"column":11},"end":{"line":117,"column":5}},{"start":{"line":115,"column":11},"end":{"line":117,"column":5}}],"line":115},"21":{"loc":{"start":{"line":119,"column":4},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":124,"column":5}},{"start":{"line":119,"column":4},"end":{"line":124,"column":5}}],"line":119},"22":{"loc":{"start":{"line":119,"column":8},"end":{"line":119,"column":68}},"type":"binary-expr","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":47}},{"start":{"line":119,"column":51},"end":{"line":119,"column":68}}],"line":119},"23":{"loc":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},{"start":{"line":128,"column":4},"end":{"line":130,"column":5}}],"line":128}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1585,"9":0,"10":1585,"11":1585,"12":98,"13":97,"14":1,"15":144,"16":144,"17":144,"18":144,"19":144,"20":144,"21":144,"22":144,"23":144,"24":144,"25":144,"26":144,"27":144,"28":144,"29":144,"30":134,"31":206,"32":103,"33":103,"34":103,"35":0,"36":103,"37":134,"38":1,"39":133,"40":0,"41":133,"42":67,"43":67,"44":67,"45":67,"46":0,"47":67,"48":67,"49":66,"50":67,"51":67,"52":67,"53":67,"54":67,"55":34,"56":67,"57":31,"58":36,"59":0,"60":67,"61":0,"62":0,"63":67,"64":67,"65":67,"66":31,"67":67,"68":67,"69":1,"70":1,"71":0,"72":0,"73":0,"74":1},"f":{"0":1,"1":1585,"2":98,"3":144,"4":206,"5":103,"6":134,"7":67,"8":0},"b":{"0":[1,0],"1":[1,1],"2":[0,1585],"3":[97,1],"4":[144,3],"5":[144,41],"6":[134,10],"7":[0,103],"8":[1,133],"9":[0,133],"10":[133,133],"11":[6,61],"12":[0,67],"13":[67,67],"14":[66,1],"15":[67,67],"16":[67,0],"17":[67,67],"18":[34,33],"19":[31,36],"20":[0,36],"21":[0,67],"22":[67,67],"23":[31,36]},"inputSourceMap":{"version":3,"sources":["tx.ts"],"names":["bufferOrB58","input","Uint8Array","from","Buffer","Tx","constructor","data","Object","assign","amount","Amount","price","type","inferType","encodeHash","buf","fromGrpc","grpcObject","body","getBody","hash","getHash_asU8","Error","nonce","getNonce","Address","getAccount_asU8","to","getRecipient_asU8","getAmount_asU8","payload","getPayload_asU8","sign","getSign_asB64","getType","limit","getGaslimit","getGasprice_asU8","chainIdHash","getChainidhash_asU8","Type","DEPLOY","GOVERNANCE","NORMAL","toGrpc","msgtxbody","GrpcTxBody","setType","setNonce","setAccount","asBytes","setRecipient","setAmount","setGasprice","setGaslimit","setPayload","setSign","msg","setChainidhash","msgtx","GrpcTx","setHash","setBody","TxType","SignedTx"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import { TxBody as GrpcTxBody, Tx as GrpcTx, TxType, TxTypeMap } from '../../types/blockchain_pb';\nimport { encodeTxHash, decodeTxHash } from '../transactions/utils';\nimport Address from './address';\nimport { Amount, TxBody } from '@herajs/common';\nimport { Buffer } from 'buffer';\n\ntype TxTypeValue = TxTypeMap[keyof TxTypeMap];\n\nfunction bufferOrB58(input: string | Buffer | Uint8Array): Uint8Array {\n    if (typeof input === 'string') {\n        return Uint8Array.from(decodeTxHash(input));\n    } else {\n        return Uint8Array.from(Buffer.from(input));\n    }\n}\n\n/**\n * Class for converting transaction data to and from network representation.\n * You usually don't need to interact with this class manually, you can pass simple JSON objects.\n * This class is used when passing transaction data to client methods.\n */\nexport default class Tx {\n    /**\n     * Map of tx types.\n     * Use as Tx.Type.NORMAL, Tx.Type.GOVERNANCE, Tx.Type.REDEPLOY, Tx.Type.FEEDELEGATION\n     */\n    static readonly Type = TxType;\n\n    hash?: string /*bytes*/;\n    nonce!: number /*uint64*/;\n    from!: Address | string /*bytes*/;\n    to!: Address | string | null /*bytes*/;\n    amount!: Amount /*bytes*/;\n    payload?: Uint8Array | string /*bytes*/;\n    sign?: string /*bytes*/;\n    type?: TxTypeValue /*uint32*/;\n    limit?: number /*uint64*/;\n    price!: Amount /*uint64*/;\n    chainIdHash!: string /*bytes*/;\n\n    constructor(data: TxBody) {\n        Object.assign(this, data);\n        this.amount = new Amount(this.amount as any || 0);\n        this.price = new Amount(this.price as any || 0);\n        if (!this.type) {\n            this.type = this.inferType();\n        }\n    }\n\n    static encodeHash(buf: Uint8Array): string {\n        return encodeTxHash(buf);\n    }\n\n    static fromGrpc(grpcObject: GrpcTx): Tx {\n        const body = grpcObject.getBody();\n        const hash = Tx.encodeHash(grpcObject.getHash_asU8()); \n        if (!body) throw new Error('tx missing body');\n        return new Tx({\n            hash,\n            nonce: body.getNonce(),\n            from: new Address(body.getAccount_asU8()),\n            to: new Address(body.getRecipient_asU8()),\n            amount: new Amount(body.getAmount_asU8()),\n            payload: body.getPayload_asU8(),\n            sign: body.getSign_asB64(),\n            type: body.getType(),\n            limit: body.getGaslimit(),\n            price: new Amount(body.getGasprice_asU8()),\n            chainIdHash: Tx.encodeHash(body.getChainidhash_asU8())\n        });\n    }\n\n    /**\n     * Infer a tx type based on body. Can be overriden by exlicitly passing type.\n     */\n    private inferType(): TxTypeValue {\n        if (!this.to) {\n            return Tx.Type.DEPLOY;\n        }\n        if (`${this.to}` === 'aergo.system' || `${this.to}` === 'aergo.enterprise') {\n            return Tx.Type.GOVERNANCE;\n        }\n        return Tx.Type.NORMAL;\n    }\n\n    toGrpc(): GrpcTx {\n        const msgtxbody = new GrpcTxBody();\n\n        msgtxbody.setType(this.type ? this.type : 0);\n        msgtxbody.setNonce(this.nonce);\n\n        if (typeof this.from === 'undefined' || !this.from) {\n            throw new Error('Missing required transaction parameter \\'from\\'');\n        }\n        msgtxbody.setAccount((new Address(this.from)).asBytes());\n\n        if (typeof this.to !== 'undefined' && this.to !== null) {\n            msgtxbody.setRecipient((new Address(this.to)).asBytes());\n        }\n\n        msgtxbody.setAmount(Uint8Array.from(this.amount.asBytes()));\n\n        if (typeof this.price !== 'undefined') {\n            msgtxbody.setGasprice(Uint8Array.from(this.price.asBytes()));\n        }\n\n        msgtxbody.setGaslimit(this.limit || 0);\n\n        if (this.payload != null) {\n            msgtxbody.setPayload(Buffer.from(this.payload as any));\n        }\n\n        if (typeof this.sign === 'string') {\n            msgtxbody.setSign(Buffer.from(this.sign, 'base64'));\n        } else if (this.sign) {\n            msgtxbody.setSign(this.sign);\n        }\n\n        if (typeof this.chainIdHash === 'undefined' || !this.chainIdHash) {\n            const msg = 'Missing required transaction parameter \\'chainIdHash\\'. ' +\n                        'Use aergoClient.getChainIdHash() to retrieve from connected node, ' +\n                        'or hard-code for increased security and performance.';\n            throw new Error(msg);\n        }\n        msgtxbody.setChainidhash(bufferOrB58(this.chainIdHash));\n\n        const msgtx = new GrpcTx();\n        if (this.hash != null) {\n            msgtx.setHash(bufferOrB58(this.hash));\n        }\n\n        msgtx.setBody(msgtxbody);\n        return msgtx;\n    }\n}\n\nexport class SignedTx extends Tx {\n    sign: string;\n    hash: string;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ce1413079717de06564cf1f4815fd96b580313e1","contentHash":"d10c8f0f39139d216bc5c83bec5e5ea9eceeba1314e3af16b1338f3da4745b4d"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/address.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/address.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":183}},"2":{"start":{"line":1,"column":155},"end":{"line":1,"column":178}},"3":{"start":{"line":1,"column":183},"end":{"line":1,"column":208}},"4":{"start":{"line":1,"column":222},"end":{"line":1,"column":247}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":15}},"6":{"start":{"line":5,"column":16},"end":{"line":5,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":142},"end":{"line":1,"column":143}},"loc":{"start":{"line":1,"column":154},"end":{"line":1,"column":179}},"line":1}},"branchMap":{},"s":{"0":1,"1":1,"2":19,"3":1,"4":1,"5":1,"6":1},"f":{"0":19},"b":{},"inputSourceMap":{"version":3,"sources":["address.ts"],"names":["Address"],"mappings":"gNAAA,wC;;;;AAIeA,e","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import { Address } from '@herajs/common'; \n\nexport type AddressInput = ConstructorParameters<typeof Address>[0];\nexport { Address };\nexport default Address;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aec47f86360d58ddca50ad66abea93627a35a9a6","contentHash":"62ea5cfa7e618f6a86e00dd0ee6442d718b0ee50ae95e6c4d2d138c6cb494df8"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/index.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/index.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":184}},"2":{"start":{"line":1,"column":155},"end":{"line":1,"column":179}},"3":{"start":{"line":1,"column":184},"end":{"line":1,"column":290}},"4":{"start":{"line":1,"column":263},"end":{"line":1,"column":285}},"5":{"start":{"line":1,"column":290},"end":{"line":1,"column":395}},"6":{"start":{"line":1,"column":368},"end":{"line":1,"column":390}},"7":{"start":{"line":1,"column":395},"end":{"line":1,"column":516}},"8":{"start":{"line":1,"column":481},"end":{"line":1,"column":511}},"9":{"start":{"line":1,"column":516},"end":{"line":1,"column":629}},"10":{"start":{"line":1,"column":598},"end":{"line":1,"column":624}},"11":{"start":{"line":1,"column":629},"end":{"line":1,"column":740}},"12":{"start":{"line":1,"column":710},"end":{"line":1,"column":735}},"13":{"start":{"line":1,"column":740},"end":{"line":1,"column":845}},"14":{"start":{"line":1,"column":818},"end":{"line":1,"column":840}},"15":{"start":{"line":1,"column":845},"end":{"line":1,"column":960}},"16":{"start":{"line":1,"column":928},"end":{"line":1,"column":955}},"17":{"start":{"line":1,"column":960},"end":{"line":1,"column":1063}},"18":{"start":{"line":1,"column":1037},"end":{"line":1,"column":1058}},"19":{"start":{"line":1,"column":1063},"end":{"line":1,"column":1168}},"20":{"start":{"line":1,"column":1141},"end":{"line":1,"column":1163}},"21":{"start":{"line":1,"column":1168},"end":{"line":1,"column":1293}},"22":{"start":{"line":1,"column":1256},"end":{"line":1,"column":1288}},"23":{"start":{"line":1,"column":1293},"end":{"line":1,"column":1392}},"24":{"start":{"line":1,"column":1368},"end":{"line":1,"column":1387}},"25":{"start":{"line":1,"column":1407},"end":{"line":1,"column":1451}},"26":{"start":{"line":2,"column":14},"end":{"line":2,"column":39}},"27":{"start":{"line":3,"column":13},"end":{"line":3,"column":55}},"28":{"start":{"line":4,"column":21},"end":{"line":4,"column":71}},"29":{"start":{"line":5,"column":17},"end":{"line":5,"column":63}},"30":{"start":{"line":6,"column":16},"end":{"line":6,"column":61}},"31":{"start":{"line":7,"column":13},"end":{"line":7,"column":55}},"32":{"start":{"line":8,"column":18},"end":{"line":8,"column":65}},"33":{"start":{"line":9,"column":12},"end":{"line":9,"column":53}},"34":{"start":{"line":10,"column":13},"end":{"line":10,"column":55}},"35":{"start":{"line":11,"column":23},"end":{"line":11,"column":75}},"36":{"start":{"line":12,"column":10},"end":{"line":12,"column":49}},"37":{"start":{"line":12,"column":88},"end":{"line":12,"column":142}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":142},"end":{"line":1,"column":143}},"loc":{"start":{"line":1,"column":154},"end":{"line":1,"column":180}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":1,"column":250},"end":{"line":1,"column":251}},"loc":{"start":{"line":1,"column":262},"end":{"line":1,"column":286}},"line":1},"2":{"name":"(anonymous_2)","decl":{"start":{"line":1,"column":355},"end":{"line":1,"column":356}},"loc":{"start":{"line":1,"column":367},"end":{"line":1,"column":391}},"line":1},"3":{"name":"(anonymous_3)","decl":{"start":{"line":1,"column":468},"end":{"line":1,"column":469}},"loc":{"start":{"line":1,"column":480},"end":{"line":1,"column":512}},"line":1},"4":{"name":"(anonymous_4)","decl":{"start":{"line":1,"column":585},"end":{"line":1,"column":586}},"loc":{"start":{"line":1,"column":597},"end":{"line":1,"column":625}},"line":1},"5":{"name":"(anonymous_5)","decl":{"start":{"line":1,"column":697},"end":{"line":1,"column":698}},"loc":{"start":{"line":1,"column":709},"end":{"line":1,"column":736}},"line":1},"6":{"name":"(anonymous_6)","decl":{"start":{"line":1,"column":805},"end":{"line":1,"column":806}},"loc":{"start":{"line":1,"column":817},"end":{"line":1,"column":841}},"line":1},"7":{"name":"(anonymous_7)","decl":{"start":{"line":1,"column":915},"end":{"line":1,"column":916}},"loc":{"start":{"line":1,"column":927},"end":{"line":1,"column":956}},"line":1},"8":{"name":"(anonymous_8)","decl":{"start":{"line":1,"column":1024},"end":{"line":1,"column":1025}},"loc":{"start":{"line":1,"column":1036},"end":{"line":1,"column":1059}},"line":1},"9":{"name":"(anonymous_9)","decl":{"start":{"line":1,"column":1128},"end":{"line":1,"column":1129}},"loc":{"start":{"line":1,"column":1140},"end":{"line":1,"column":1164}},"line":1},"10":{"name":"(anonymous_10)","decl":{"start":{"line":1,"column":1243},"end":{"line":1,"column":1244}},"loc":{"start":{"line":1,"column":1255},"end":{"line":1,"column":1289}},"line":1},"11":{"name":"(anonymous_11)","decl":{"start":{"line":1,"column":1355},"end":{"line":1,"column":1356}},"loc":{"start":{"line":1,"column":1367},"end":{"line":1,"column":1388}},"line":1},"12":{"name":"_interopRequireDefault","decl":{"start":{"line":12,"column":59},"end":{"line":12,"column":81}},"loc":{"start":{"line":12,"column":87},"end":{"line":12,"column":143}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":95},"end":{"line":12,"column":141}},"type":"cond-expr","locations":[{"start":{"line":12,"column":119},"end":{"line":12,"column":122}},{"start":{"line":12,"column":125},"end":{"line":12,"column":141}}],"line":12},"1":{"loc":{"start":{"line":12,"column":95},"end":{"line":12,"column":116}},"type":"binary-expr","locations":[{"start":{"line":12,"column":95},"end":{"line":12,"column":98}},{"start":{"line":12,"column":102},"end":{"line":12,"column":116}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":70,"7":1,"8":5,"9":1,"10":8,"11":1,"12":0,"13":1,"14":5,"15":1,"16":4,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":38,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":11},"f":{"0":0,"1":0,"2":70,"3":5,"4":8,"5":0,"6":5,"7":4,"8":1,"9":1,"10":1,"11":38,"12":11},"b":{"0":[11,0],"1":[11,11]},"inputSourceMap":{"version":3,"sources":["index.ts"],"names":[],"mappings":"g3CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["export { default as Address } from './address';\nexport { Amount } from '@herajs/common';\nexport { default as Block } from './block';\nexport { default as BlockMetadata } from './blockmetadata';\nexport { default as ChainInfo } from './chaininfo';\nexport { default as Contract } from './contract';\nexport { default as Event } from './event';\nexport { default as FilterInfo } from './filterinfo';\nexport { default as Peer } from './peer';\nexport { default as State } from './state';\nexport { default as StateQueryProof } from './statequeryproof';\nexport { default as Tx } from './tx';"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"134338cfad40fa76b6ebd42bf450f6728d9a4fba","contentHash":"edf000c34a72b8ea50e33748e94dc897d882e4156ecfa4c41e07090e96eb1de1"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/block.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/block.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":1,"column":110},"end":{"line":1,"column":125}},"3":{"start":{"line":3,"column":15},"end":{"line":3,"column":59}},"4":{"start":{"line":4,"column":14},"end":{"line":4,"column":39}},"5":{"start":{"line":5,"column":14},"end":{"line":5,"column":31}},"6":{"start":{"line":5,"column":70},"end":{"line":5,"column":124}},"7":{"start":{"line":5,"column":178},"end":{"line":5,"column":197}},"8":{"start":{"line":5,"column":198},"end":{"line":5,"column":443}},"9":{"start":{"line":5,"column":247},"end":{"line":5,"column":283}},"10":{"start":{"line":5,"column":284},"end":{"line":5,"column":411}},"11":{"start":{"line":5,"column":304},"end":{"line":5,"column":411}},"12":{"start":{"line":5,"column":345},"end":{"line":5,"column":408}},"13":{"start":{"line":5,"column":411},"end":{"line":5,"column":442}},"14":{"start":{"line":5,"column":443},"end":{"line":5,"column":455}},"15":{"start":{"line":5,"column":488},"end":{"line":5,"column":959}},"16":{"start":{"line":5,"column":501},"end":{"line":5,"column":502}},"17":{"start":{"line":5,"column":545},"end":{"line":5,"column":585}},"18":{"start":{"line":5,"column":586},"end":{"line":5,"column":958}},"19":{"start":{"line":5,"column":598},"end":{"line":5,"column":697}},"20":{"start":{"line":5,"column":652},"end":{"line":5,"column":694}},"21":{"start":{"line":5,"column":704},"end":{"line":5,"column":958}},"22":{"start":{"line":5,"column":743},"end":{"line":5,"column":817}},"23":{"start":{"line":5,"column":825},"end":{"line":5,"column":957}},"24":{"start":{"line":5,"column":873},"end":{"line":5,"column":954}},"25":{"start":{"line":5,"column":959},"end":{"line":5,"column":973}},"26":{"start":{"line":5,"column":1017},"end":{"line":5,"column":1164}},"27":{"start":{"line":5,"column":1034},"end":{"line":5,"column":1138}},"28":{"start":{"line":5,"column":1146},"end":{"line":5,"column":1163}},"29":{"start":{"line":5,"column":1164},"end":{"line":5,"column":1175}},"30":{"start":{"line":31,"column":21},"end":{"line":31,"column":59}},"31":{"start":{"line":31,"column":59},"end":{"line":31,"column":99}},"32":{"start":{"line":31,"column":99},"end":{"line":31,"column":137}},"33":{"start":{"line":32,"column":4},"end":{"line":32,"column":30}},"34":{"start":{"line":36,"column":16},"end":{"line":36,"column":37}},"35":{"start":{"line":37,"column":18},"end":{"line":37,"column":20}},"36":{"start":{"line":38,"column":17},"end":{"line":38,"column":37}},"37":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"38":{"start":{"line":40,"column":6},"end":{"line":40,"column":71}},"39":{"start":{"line":40,"column":44},"end":{"line":40,"column":69}},"40":{"start":{"line":42,"column":19},"end":{"line":42,"column":41}},"41":{"start":{"line":43,"column":4},"end":{"line":61,"column":21}},"42":{"start":{"line":66,"column":4},"end":{"line":66,"column":39}},"43":{"start":{"line":69,"column":4},"end":{"line":69,"column":61}},"44":{"start":{"line":72,"column":4},"end":{"line":72,"column":45}},"45":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"46":{"start":{"line":76,"column":6},"end":{"line":76,"column":46}},"47":{"start":{"line":78,"column":4},"end":{"line":78,"column":33}},"48":{"start":{"line":81,"column":4},"end":{"line":81,"column":37}},"49":{"start":{"line":82,"column":4},"end":{"line":82,"column":28}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":5,"column":41},"end":{"line":5,"column":63}},"loc":{"start":{"line":5,"column":69},"end":{"line":5,"column":125}},"line":5},"1":{"name":"ownKeys","decl":{"start":{"line":5,"column":134},"end":{"line":5,"column":141}},"loc":{"start":{"line":5,"column":166},"end":{"line":5,"column":456}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":329},"end":{"line":5,"column":330}},"loc":{"start":{"line":5,"column":344},"end":{"line":5,"column":409}},"line":5},"3":{"name":"_objectSpread","decl":{"start":{"line":5,"column":465},"end":{"line":5,"column":478}},"loc":{"start":{"line":5,"column":487},"end":{"line":5,"column":974}},"line":5},"4":{"name":"(anonymous_4)","decl":{"start":{"line":5,"column":636},"end":{"line":5,"column":637}},"loc":{"start":{"line":5,"column":651},"end":{"line":5,"column":695}},"line":5},"5":{"name":"(anonymous_5)","decl":{"start":{"line":5,"column":857},"end":{"line":5,"column":858}},"loc":{"start":{"line":5,"column":872},"end":{"line":5,"column":955}},"line":5},"6":{"name":"_defineProperty","decl":{"start":{"line":5,"column":983},"end":{"line":5,"column":998}},"loc":{"start":{"line":5,"column":1016},"end":{"line":5,"column":1176}},"line":5},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":2},"end":{"line":31,"column":3}},"loc":{"start":{"line":31,"column":20},"end":{"line":33,"column":3}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":35,"column":2},"end":{"line":35,"column":3}},"loc":{"start":{"line":35,"column":30},"end":{"line":64,"column":3}},"line":35},"9":{"name":"(anonymous_9)","decl":{"start":{"line":40,"column":38},"end":{"line":40,"column":39}},"loc":{"start":{"line":40,"column":44},"end":{"line":40,"column":69}},"line":40},"10":{"name":"(anonymous_10)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":11},"end":{"line":67,"column":3}},"line":65},"11":{"name":"(anonymous_11)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":27},"end":{"line":70,"column":3}},"line":68},"12":{"name":"(anonymous_12)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":32},"end":{"line":73,"column":3}},"line":71},"13":{"name":"(anonymous_13)","decl":{"start":{"line":74,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":74,"column":30},"end":{"line":79,"column":3}},"line":74},"14":{"name":"(anonymous_14)","decl":{"start":{"line":80,"column":2},"end":{"line":80,"column":3}},"loc":{"start":{"line":80,"column":19},"end":{"line":82,"column":3}},"line":80}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":77},"end":{"line":5,"column":123}},"type":"cond-expr","locations":[{"start":{"line":5,"column":101},"end":{"line":5,"column":104}},{"start":{"line":5,"column":107},"end":{"line":5,"column":123}}],"line":5},"1":{"loc":{"start":{"line":5,"column":77},"end":{"line":5,"column":98}},"type":"binary-expr","locations":[{"start":{"line":5,"column":77},"end":{"line":5,"column":80}},{"start":{"line":5,"column":84},"end":{"line":5,"column":98}}],"line":5},"2":{"loc":{"start":{"line":5,"column":198},"end":{"line":5,"column":443}},"type":"if","locations":[{"start":{"line":5,"column":198},"end":{"line":5,"column":443}},{"start":{"line":5,"column":198},"end":{"line":5,"column":443}}],"line":5},"3":{"loc":{"start":{"line":5,"column":284},"end":{"line":5,"column":411}},"type":"if","locations":[{"start":{"line":5,"column":284},"end":{"line":5,"column":411}},{"start":{"line":5,"column":284},"end":{"line":5,"column":411}}],"line":5},"4":{"loc":{"start":{"line":5,"column":545},"end":{"line":5,"column":585}},"type":"cond-expr","locations":[{"start":{"line":5,"column":568},"end":{"line":5,"column":580}},{"start":{"line":5,"column":583},"end":{"line":5,"column":585}}],"line":5},"5":{"loc":{"start":{"line":5,"column":586},"end":{"line":5,"column":958}},"type":"if","locations":[{"start":{"line":5,"column":586},"end":{"line":5,"column":958}},{"start":{"line":5,"column":586},"end":{"line":5,"column":958}}],"line":5},"6":{"loc":{"start":{"line":5,"column":704},"end":{"line":5,"column":958}},"type":"if","locations":[{"start":{"line":5,"column":704},"end":{"line":5,"column":958}},{"start":{"line":5,"column":704},"end":{"line":5,"column":958}}],"line":5},"7":{"loc":{"start":{"line":5,"column":1017},"end":{"line":5,"column":1164}},"type":"if","locations":[{"start":{"line":5,"column":1017},"end":{"line":5,"column":1164}},{"start":{"line":5,"column":1017},"end":{"line":5,"column":1164}}],"line":5},"8":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{"line":39,"column":4},"end":{"line":41,"column":5}}],"line":39},"9":{"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":24}},"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":16}},{"start":{"line":39,"column":20},"end":{"line":39,"column":24}}],"line":39},"10":{"loc":{"start":{"line":45,"column":14},"end":{"line":59,"column":15}},"type":"cond-expr","locations":[{"start":{"line":45,"column":23},"end":{"line":58,"column":74}},{"start":{"line":59,"column":6},"end":{"line":59,"column":15}}],"line":45},"11":{"loc":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},{"start":{"line":75,"column":4},"end":{"line":77,"column":5}}],"line":75},"12":{"loc":{"start":{"line":75,"column":8},"end":{"line":75,"column":61}},"type":"binary-expr","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":20}},{"start":{"line":75,"column":24},"end":{"line":75,"column":61}}],"line":75}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":37,"8":37,"9":37,"10":37,"11":37,"12":0,"13":37,"14":37,"15":37,"16":37,"17":74,"18":74,"19":37,"20":444,"21":37,"22":37,"23":0,"24":0,"25":37,"26":555,"27":0,"28":555,"29":555,"30":37,"31":37,"32":37,"33":37,"34":37,"35":37,"36":37,"37":37,"38":7,"39":64,"40":37,"41":37,"42":0,"43":285,"44":11,"45":0,"46":0,"47":0,"48":0,"49":1},"f":{"0":1,"1":37,"2":0,"3":37,"4":444,"5":0,"6":555,"7":37,"8":37,"9":64,"10":0,"11":285,"12":11,"13":0,"14":0},"b":{"0":[1,0],"1":[1,1],"2":[37,0],"3":[37,0],"4":[74,0],"5":[37,37],"6":[37,0],"7":[0,555],"8":[7,30],"9":[37,7],"10":[37,0],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"sources":["block.ts"],"names":["Block","constructor","data","Object","assign","fromGrpc","grpcObject","obj","toObject","txsList","body","getBody","getTxsList","map","tx","SignedTx","header","getHeader","hash","encodeHash","getHash_asU8","blockno","getBlockno","timestamp","getTimestamp","confirms","getConfirms","sign","getSign","chainid","Buffer","from","getChainid_asU8","toString","prevblockhash","getPrevblockhash_asU8","blocksroothash","getBlocksroothash_asU8","txsroothash","getTxsroothash_asU8","receiptsroothash","getReceiptsroothash_asU8","coinbaseaccount","Address","getCoinbaseaccount_asU8","pubkey","getPubkey_asU8","rewardaccount","getConsensus_asU8","undefined","toGrpc","Error","bytes","base58","encode","decodeHash","bs58string","decode","getVoteReward","block","isEmpty","Amount","voteReward"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import { SignedTx } from './tx';\nimport { Block as GrpcBlock } from '../../types/blockchain_pb';\nimport Address from './address';\nimport { Amount, base58 } from '@herajs/common';\nimport { Buffer } from 'buffer';\n\nexport interface BlockHeader {\n    chainid: string;\n    prevblockhash: string;\n    blockno: number;\n    timestamp: number;\n    blocksroothash: string;\n    txsroothash: string;\n    receiptsroothash: string;\n    confirms: number;\n    pubkey: string;\n    sign: Uint8Array | string;\n    coinbaseaccount: Address;\n    rewardaccount: Address;\n}\n\nexport interface BlockBody {\n    txsList: SignedTx[];\n}\n\nexport default class Block {\n    hash!: string;\n    header!: BlockHeader;\n    body!: BlockBody;\n\n    constructor(data: Partial<Block>) {\n        Object.assign(this, data);\n    }\n\n    static fromGrpc(grpcObject: GrpcBlock): Block {\n        const obj = grpcObject.toObject();\n        let txsList: SignedTx[] = [];\n        const body = grpcObject.getBody();\n        if (obj.body && body) {\n            txsList = body.getTxsList().map(tx => SignedTx.fromGrpc(tx)) as SignedTx[];\n        }\n        const header = grpcObject.getHeader();\n        return new Block({\n            hash: Block.encodeHash(grpcObject.getHash_asU8()),\n            header: header ? {\n                ...obj.header,\n                blockno: header.getBlockno(),\n                timestamp: header.getTimestamp(),\n                confirms: header.getConfirms(),\n                sign: header.getSign(),\n                chainid: Buffer.from(header.getChainid_asU8()).toString('utf8'),\n                prevblockhash: Block.encodeHash(header.getPrevblockhash_asU8()),\n                blocksroothash: Block.encodeHash(header.getBlocksroothash_asU8()),\n                txsroothash: Block.encodeHash(header.getTxsroothash_asU8()),\n                receiptsroothash: Block.encodeHash(header.getReceiptsroothash_asU8()),\n                coinbaseaccount: new Address(header.getCoinbaseaccount_asU8()),\n                pubkey: Block.encodeHash(header.getPubkey_asU8()),\n                rewardaccount: new Address(header.getConsensus_asU8()),\n            } : undefined,\n            body: {\n                txsList,\n            },\n        });\n    }\n    toGrpc(): never {\n        throw new Error('Not implemented');\n    }\n    static encodeHash(bytes: Uint8Array): string {\n        return base58.encode(Buffer.from(bytes));\n    }\n    static decodeHash(bs58string: string): Uint8Array {\n        return base58.decode(bs58string);\n    }\n    static getVoteReward(block: { header?: BlockHeader }): Amount {\n        if (block.header && !block.header.rewardaccount.isEmpty()) {\n            return new Amount('0.16 aergo');\n        }\n        return new Amount(0);\n    }\n    get voteReward(): Amount {\n        return Block.getVoteReward(this);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"edbbfef688acb319e518f5dd226b5c39b7fe0173","contentHash":"6088b2b824cc10d1ae42a0dad53f6237f878125d4a527a0f437d0b0ec018db8a"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/blockmetadata.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/blockmetadata.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":2,"column":15},"end":{"line":2,"column":59}},"3":{"start":{"line":3,"column":13},"end":{"line":3,"column":55}},"4":{"start":{"line":4,"column":14},"end":{"line":4,"column":31}},"5":{"start":{"line":4,"column":70},"end":{"line":4,"column":124}},"6":{"start":{"line":4,"column":178},"end":{"line":4,"column":197}},"7":{"start":{"line":4,"column":198},"end":{"line":4,"column":443}},"8":{"start":{"line":4,"column":247},"end":{"line":4,"column":283}},"9":{"start":{"line":4,"column":284},"end":{"line":4,"column":411}},"10":{"start":{"line":4,"column":304},"end":{"line":4,"column":411}},"11":{"start":{"line":4,"column":345},"end":{"line":4,"column":408}},"12":{"start":{"line":4,"column":411},"end":{"line":4,"column":442}},"13":{"start":{"line":4,"column":443},"end":{"line":4,"column":455}},"14":{"start":{"line":4,"column":488},"end":{"line":4,"column":959}},"15":{"start":{"line":4,"column":501},"end":{"line":4,"column":502}},"16":{"start":{"line":4,"column":545},"end":{"line":4,"column":585}},"17":{"start":{"line":4,"column":586},"end":{"line":4,"column":958}},"18":{"start":{"line":4,"column":598},"end":{"line":4,"column":697}},"19":{"start":{"line":4,"column":652},"end":{"line":4,"column":694}},"20":{"start":{"line":4,"column":704},"end":{"line":4,"column":958}},"21":{"start":{"line":4,"column":743},"end":{"line":4,"column":817}},"22":{"start":{"line":4,"column":825},"end":{"line":4,"column":957}},"23":{"start":{"line":4,"column":873},"end":{"line":4,"column":954}},"24":{"start":{"line":4,"column":959},"end":{"line":4,"column":973}},"25":{"start":{"line":4,"column":1017},"end":{"line":4,"column":1164}},"26":{"start":{"line":4,"column":1034},"end":{"line":4,"column":1138}},"27":{"start":{"line":4,"column":1146},"end":{"line":4,"column":1163}},"28":{"start":{"line":4,"column":1164},"end":{"line":4,"column":1175}},"29":{"start":{"line":13,"column":21},"end":{"line":13,"column":59}},"30":{"start":{"line":13,"column":59},"end":{"line":13,"column":99}},"31":{"start":{"line":13,"column":99},"end":{"line":13,"column":140}},"32":{"start":{"line":13,"column":140},"end":{"line":13,"column":178}},"33":{"start":{"line":14,"column":4},"end":{"line":14,"column":30}},"34":{"start":{"line":18,"column":16},"end":{"line":18,"column":37}},"35":{"start":{"line":19,"column":19},"end":{"line":19,"column":41}},"36":{"start":{"line":20,"column":4},"end":{"line":38,"column":24}},"37":{"start":{"line":42,"column":4},"end":{"line":42,"column":39}},"38":{"start":{"line":45,"column":4},"end":{"line":45,"column":46}},"39":{"start":{"line":46,"column":4},"end":{"line":46,"column":36}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":4,"column":41},"end":{"line":4,"column":63}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":125}},"line":4},"1":{"name":"ownKeys","decl":{"start":{"line":4,"column":134},"end":{"line":4,"column":141}},"loc":{"start":{"line":4,"column":166},"end":{"line":4,"column":456}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":4,"column":329},"end":{"line":4,"column":330}},"loc":{"start":{"line":4,"column":344},"end":{"line":4,"column":409}},"line":4},"3":{"name":"_objectSpread","decl":{"start":{"line":4,"column":465},"end":{"line":4,"column":478}},"loc":{"start":{"line":4,"column":487},"end":{"line":4,"column":974}},"line":4},"4":{"name":"(anonymous_4)","decl":{"start":{"line":4,"column":636},"end":{"line":4,"column":637}},"loc":{"start":{"line":4,"column":651},"end":{"line":4,"column":695}},"line":4},"5":{"name":"(anonymous_5)","decl":{"start":{"line":4,"column":857},"end":{"line":4,"column":858}},"loc":{"start":{"line":4,"column":872},"end":{"line":4,"column":955}},"line":4},"6":{"name":"_defineProperty","decl":{"start":{"line":4,"column":983},"end":{"line":4,"column":998}},"loc":{"start":{"line":4,"column":1016},"end":{"line":4,"column":1176}},"line":4},"7":{"name":"(anonymous_7)","decl":{"start":{"line":13,"column":2},"end":{"line":13,"column":3}},"loc":{"start":{"line":13,"column":20},"end":{"line":15,"column":3}},"line":13},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":2},"end":{"line":17,"column":3}},"loc":{"start":{"line":17,"column":30},"end":{"line":40,"column":3}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":11},"end":{"line":43,"column":3}},"line":41},"10":{"name":"(anonymous_10)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":19},"end":{"line":46,"column":3}},"line":44}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":77},"end":{"line":4,"column":123}},"type":"cond-expr","locations":[{"start":{"line":4,"column":101},"end":{"line":4,"column":104}},{"start":{"line":4,"column":107},"end":{"line":4,"column":123}}],"line":4},"1":{"loc":{"start":{"line":4,"column":77},"end":{"line":4,"column":98}},"type":"binary-expr","locations":[{"start":{"line":4,"column":77},"end":{"line":4,"column":80}},{"start":{"line":4,"column":84},"end":{"line":4,"column":98}}],"line":4},"2":{"loc":{"start":{"line":4,"column":198},"end":{"line":4,"column":443}},"type":"if","locations":[{"start":{"line":4,"column":198},"end":{"line":4,"column":443}},{"start":{"line":4,"column":198},"end":{"line":4,"column":443}}],"line":4},"3":{"loc":{"start":{"line":4,"column":284},"end":{"line":4,"column":411}},"type":"if","locations":[{"start":{"line":4,"column":284},"end":{"line":4,"column":411}},{"start":{"line":4,"column":284},"end":{"line":4,"column":411}}],"line":4},"4":{"loc":{"start":{"line":4,"column":545},"end":{"line":4,"column":585}},"type":"cond-expr","locations":[{"start":{"line":4,"column":568},"end":{"line":4,"column":580}},{"start":{"line":4,"column":583},"end":{"line":4,"column":585}}],"line":4},"5":{"loc":{"start":{"line":4,"column":586},"end":{"line":4,"column":958}},"type":"if","locations":[{"start":{"line":4,"column":586},"end":{"line":4,"column":958}},{"start":{"line":4,"column":586},"end":{"line":4,"column":958}}],"line":4},"6":{"loc":{"start":{"line":4,"column":704},"end":{"line":4,"column":958}},"type":"if","locations":[{"start":{"line":4,"column":704},"end":{"line":4,"column":958}},{"start":{"line":4,"column":704},"end":{"line":4,"column":958}}],"line":4},"7":{"loc":{"start":{"line":4,"column":1017},"end":{"line":4,"column":1164}},"type":"if","locations":[{"start":{"line":4,"column":1017},"end":{"line":4,"column":1164}},{"start":{"line":4,"column":1017},"end":{"line":4,"column":1164}}],"line":4},"8":{"loc":{"start":{"line":22,"column":14},"end":{"line":36,"column":15}},"type":"cond-expr","locations":[{"start":{"line":22,"column":23},"end":{"line":35,"column":74}},{"start":{"line":36,"column":6},"end":{"line":36,"column":15}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":5,"7":5,"8":5,"9":5,"10":5,"11":0,"12":5,"13":5,"14":5,"15":5,"16":10,"17":10,"18":5,"19":60,"20":5,"21":5,"22":0,"23":0,"24":5,"25":80,"26":0,"27":80,"28":80,"29":5,"30":5,"31":5,"32":5,"33":5,"34":5,"35":5,"36":5,"37":0,"38":0,"39":1},"f":{"0":2,"1":5,"2":0,"3":5,"4":60,"5":0,"6":80,"7":5,"8":5,"9":0,"10":0},"b":{"0":[2,0],"1":[2,2],"2":[5,0],"3":[5,0],"4":[10,0],"5":[5,5],"6":[5,0],"7":[0,80],"8":[5,0]},"inputSourceMap":{"version":3,"sources":["blockmetadata.ts"],"names":["BlockMetadata","constructor","data","Object","assign","fromGrpc","grpcObject","obj","toObject","header","getHeader","hash","Block","encodeHash","getHash_asU8","blockno","getBlockno","timestamp","getTimestamp","confirms","getConfirms","sign","getSign","chainid","Buffer","from","getChainid_asU8","toString","prevblockhash","getPrevblockhash_asU8","blocksroothash","getBlocksroothash_asU8","txsroothash","getTxsroothash_asU8","receiptsroothash","getReceiptsroothash_asU8","coinbaseaccount","Address","getCoinbaseaccount_asU8","pubkey","getPubkey_asU8","rewardaccount","getConsensus_asU8","undefined","txcount","size","toGrpc","Error","voteReward","getVoteReward"],"mappings":";AACA;AACA;AACA,gC;;;AAGe,MAAMA,aAAN,CAAoB;;;;;;AAM/BC,EAAAA,WAAW,CAACC,IAAD,EAA+B;AACtCC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACH;;AAED,SAAOG,QAAP,CAAgBC,UAAhB,EAA8D;AAC1D,UAAMC,GAAG,GAAGD,UAAU,CAACE,QAAX,EAAZ;AACA,UAAMC,MAAM,GAAGH,UAAU,CAACI,SAAX,EAAf;AACA,WAAO,IAAIV,aAAJ,CAAkB;AACrBW,MAAAA,IAAI,EAAEC,eAAMC,UAAN,CAAiBP,UAAU,CAACQ,YAAX,EAAjB,CADe;AAErBL,MAAAA,MAAM,EAAEA,MAAM;AACPF,MAAAA,GAAG,CAACE,MADG;AAEVM,QAAAA,OAAO,EAAEN,MAAM,CAACO,UAAP,EAFC;AAGVC,QAAAA,SAAS,EAAER,MAAM,CAACS,YAAP,EAHD;AAIVC,QAAAA,QAAQ,EAAEV,MAAM,CAACW,WAAP,EAJA;AAKVC,QAAAA,IAAI,EAAEZ,MAAM,CAACa,OAAP,EALI;AAMVC,QAAAA,OAAO,EAAEC,eAAOC,IAAP,CAAYhB,MAAM,CAACiB,eAAP,EAAZ,EAAsCC,QAAtC,CAA+C,MAA/C,CANC;AAOVC,QAAAA,aAAa,EAAEhB,eAAMC,UAAN,CAAiBJ,MAAM,CAACoB,qBAAP,EAAjB,CAPL;AAQVC,QAAAA,cAAc,EAAElB,eAAMC,UAAN,CAAiBJ,MAAM,CAACsB,sBAAP,EAAjB,CARN;AASVC,QAAAA,WAAW,EAAEpB,eAAMC,UAAN,CAAiBJ,MAAM,CAACwB,mBAAP,EAAjB,CATH;AAUVC,QAAAA,gBAAgB,EAAEtB,eAAMC,UAAN,CAAiBJ,MAAM,CAAC0B,wBAAP,EAAjB,CAVR;AAWVC,QAAAA,eAAe,EAAE,IAAIC,gBAAJ,CAAY5B,MAAM,CAAC6B,uBAAP,EAAZ,CAXP;AAYVC,QAAAA,MAAM,EAAE3B,eAAMC,UAAN,CAAiBJ,MAAM,CAAC+B,cAAP,EAAjB,CAZE;AAaVC,QAAAA,aAAa,EAAE,IAAIJ,gBAAJ,CAAY5B,MAAM,CAACiC,iBAAP,EAAZ,CAbL;AAcVC,MAAAA,SAhBiB;AAiBrBC,MAAAA,OAAO,EAAErC,GAAG,CAACqC,OAjBQ;AAkBrBC,MAAAA,IAAI,EAAEtC,GAAG,CAACsC,IAlBW,EAAlB,CAAP;;AAoBH;AACDC,EAAAA,MAAM,GAAU;AACZ,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;AACD,MAAIC,UAAJ,GAAyB;AACrB,WAAOpC,eAAMqC,aAAN,CAAoB,IAApB,CAAP;AACH,GAvC8B,C","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import { BlockMetadata as GrpcBlockMetadata } from '../../types/rpc_pb';\nimport Address from './address';\nimport Block, { BlockHeader } from './block';\nimport { Buffer } from 'buffer';\nimport { Amount } from '@herajs/common';\n\nexport default class BlockMetadata {\n    hash!: string;\n    header!: BlockHeader;\n    txcount!: number;\n    size!: number;\n\n    constructor(data: Partial<BlockMetadata>) {\n        Object.assign(this, data);\n    }\n\n    static fromGrpc(grpcObject: GrpcBlockMetadata): BlockMetadata {\n        const obj = grpcObject.toObject();\n        const header = grpcObject.getHeader();\n        return new BlockMetadata({\n            hash: Block.encodeHash(grpcObject.getHash_asU8()),\n            header: header ? {\n                ...obj.header,\n                blockno: header.getBlockno(),\n                timestamp: header.getTimestamp(),\n                confirms: header.getConfirms(),\n                sign: header.getSign(),\n                chainid: Buffer.from(header.getChainid_asU8()).toString('utf8'),\n                prevblockhash: Block.encodeHash(header.getPrevblockhash_asU8()),\n                blocksroothash: Block.encodeHash(header.getBlocksroothash_asU8()),\n                txsroothash: Block.encodeHash(header.getTxsroothash_asU8()),\n                receiptsroothash: Block.encodeHash(header.getReceiptsroothash_asU8()),\n                coinbaseaccount: new Address(header.getCoinbaseaccount_asU8()),\n                pubkey: Block.encodeHash(header.getPubkey_asU8()),\n                rewardaccount: new Address(header.getConsensus_asU8()),\n            } : undefined,\n            txcount: obj.txcount,\n            size: obj.size,\n        });\n    }\n    toGrpc(): never {\n        throw new Error('Not implemented');\n    }\n    get voteReward(): Amount {\n        return Block.getVoteReward(this);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a28e4dd4d3411b9b0f0a0c0e6c109d7c35f60008","contentHash":"8388910c5d82e829cb21d9146af58e79efaaeee0722c06f244ffe25701efd1fa"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/chaininfo.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/chaininfo.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":2,"column":14},"end":{"line":2,"column":39}},"3":{"start":{"line":2,"column":83},"end":{"line":2,"column":230}},"4":{"start":{"line":2,"column":100},"end":{"line":2,"column":204}},"5":{"start":{"line":2,"column":212},"end":{"line":2,"column":229}},"6":{"start":{"line":2,"column":230},"end":{"line":2,"column":241}},"7":{"start":{"line":23,"column":21},"end":{"line":23,"column":62}},"8":{"start":{"line":23,"column":62},"end":{"line":23,"column":104}},"9":{"start":{"line":23,"column":104},"end":{"line":23,"column":150}},"10":{"start":{"line":23,"column":150},"end":{"line":23,"column":193}},"11":{"start":{"line":23,"column":193},"end":{"line":23,"column":241}},"12":{"start":{"line":23,"column":241},"end":{"line":23,"column":287}},"13":{"start":{"line":23,"column":287},"end":{"line":23,"column":329}},"14":{"start":{"line":23,"column":329},"end":{"line":23,"column":372}},"15":{"start":{"line":23,"column":372},"end":{"line":23,"column":422}},"16":{"start":{"line":23,"column":422},"end":{"line":23,"column":468}},"17":{"start":{"line":24,"column":4},"end":{"line":24,"column":30}},"18":{"start":{"line":28,"column":20},"end":{"line":28,"column":38}},"19":{"start":{"line":29,"column":4},"end":{"line":46,"column":77}},"20":{"start":{"line":51,"column":4},"end":{"line":51,"column":39}},"21":{"start":{"line":52,"column":4},"end":{"line":52,"column":32}}},"fnMap":{"0":{"name":"_defineProperty","decl":{"start":{"line":2,"column":49},"end":{"line":2,"column":64}},"loc":{"start":{"line":2,"column":82},"end":{"line":2,"column":242}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":20},"end":{"line":25,"column":3}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":30},"end":{"line":48,"column":3}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":11},"end":{"line":52,"column":3}},"line":50}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":83},"end":{"line":2,"column":230}},"type":"if","locations":[{"start":{"line":2,"column":83},"end":{"line":2,"column":230}},{"start":{"line":2,"column":83},"end":{"line":2,"column":230}}],"line":2},"1":{"loc":{"start":{"line":30,"column":15},"end":{"line":36,"column":79}},"type":"cond-expr","locations":[{"start":{"line":30,"column":25},"end":{"line":34,"column":43}},{"start":{"line":35,"column":6},"end":{"line":36,"column":79}}],"line":30}},"s":{"0":1,"1":1,"2":1,"3":80,"4":0,"5":80,"6":80,"7":8,"8":8,"9":8,"10":8,"11":8,"12":8,"13":8,"14":8,"15":8,"16":8,"17":8,"18":8,"19":8,"20":0,"21":1},"f":{"0":80,"1":8,"2":8,"3":0},"b":{"0":[0,80],"1":[8,0]},"inputSourceMap":{"version":3,"sources":["chaininfo.ts"],"names":["ChainInfo","constructor","data","Object","assign","fromGrpc","grpcObject","chainid","getId","magic","getMagic","public","getPublic","mainnet","getMainnet","consensus","getConsensus","bpnumber","getBpnumber","maxblocksize","getMaxblocksize","maxtokens","Amount","getMaxtokens_asU8","stakingminimum","getStakingminimum_asU8","stakingtotal","getTotalstaking_asU8","gasprice","getGasprice_asU8","nameprice","getNameprice_asU8","totalvotingpower","getTotalvotingpower_asU8","votingreward","getVotingreward_asU8","toGrpc","Error"],"mappings":";AACA,wC;;;;;;;;;AASe,MAAMA,SAAN,CAAgB;;;;;;;;;;;;AAY3BC,EAAAA,WAAW,CAACC,IAAD,EAA2B;AAClCC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACH;;AAED,SAAOG,QAAP,CAAgBC,UAAhB,EAAsD;AAClD,UAAMC,OAAO,GAAGD,UAAU,CAACE,KAAX,EAAhB;AACA,WAAO,IAAIR,SAAJ,CAAc;AACjBO,MAAAA,OAAO,EAAEA,OAAO,GAAG;AACfE,QAAAA,KAAK,EAAEF,OAAO,CAACG,QAAR,EADQ;AAEfC,QAAAA,MAAM,EAAEJ,OAAO,CAACK,SAAR,EAFO;AAGfC,QAAAA,OAAO,EAAEN,OAAO,CAACO,UAAR,EAHM;AAIfC,QAAAA,SAAS,EAAER,OAAO,CAACS,YAAR,EAJI,EAAH;AAKZ;AACAP,QAAAA,KAAK,EAAE,SADP,EACkBE,MAAM,EAAE,KAD1B,EACiCE,OAAO,EAAE,KAD1C,EACiDE,SAAS,EAAE,SAD5D,EANa;;AASjBE,MAAAA,QAAQ,EAAEX,UAAU,CAACY,WAAX,EATO;AAUjBC,MAAAA,YAAY,EAAEb,UAAU,CAACc,eAAX,EAVG;AAWjBC,MAAAA,SAAS,EAAE,IAAIC,cAAJ,CAAWhB,UAAU,CAACiB,iBAAX,EAAX,CAXM;AAYjBC,MAAAA,cAAc,EAAE,IAAIF,cAAJ,CAAWhB,UAAU,CAACmB,sBAAX,EAAX,CAZC;AAajBC,MAAAA,YAAY,EAAE,IAAIJ,cAAJ,CAAWhB,UAAU,CAACqB,oBAAX,EAAX,CAbG;AAcjBC,MAAAA,QAAQ,EAAE,IAAIN,cAAJ,CAAWhB,UAAU,CAACuB,gBAAX,EAAX,CAdO;AAejBC,MAAAA,SAAS,EAAE,IAAIR,cAAJ,CAAWhB,UAAU,CAACyB,iBAAX,EAAX,CAfM;AAgBjBC,MAAAA,gBAAgB,EAAE,IAAIV,cAAJ,CAAWhB,UAAU,CAAC2B,wBAAX,EAAX,CAhBD;AAiBjBC,MAAAA,YAAY,EAAE,IAAIZ,cAAJ,CAAWhB,UAAU,CAAC6B,oBAAX,EAAX,CAjBG,EAAd,CAAP;;AAmBH;;AAEDC,EAAAA,MAAM,GAAU;AACZ,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH,GAzC0B,C","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import { ChainInfo as GrpcChainInfo } from '../../types/rpc_pb';\nimport { Amount } from '@herajs/common';\n\nexport interface ChainId {\n    magic: string;\n    public: boolean;\n    mainnet: boolean;\n    consensus: string;\n}\n\nexport default class ChainInfo {\n    chainid!: ChainId;\n    bpnumber!: number;\n    maxblocksize!: number;\n    maxtokens!: Amount;\n    stakingminimum!: Amount;\n    stakingtotal!: Amount;\n    gasprice!: Amount;\n    nameprice!: Amount;\n    totalvotingpower!: Amount;\n    votingreward!: Amount;\n\n    constructor(data: Partial<ChainInfo>) {\n        Object.assign(this, data);\n    }\n\n    static fromGrpc(grpcObject: GrpcChainInfo): ChainInfo {\n        const chainid = grpcObject.getId();\n        return new ChainInfo({\n            chainid: chainid ? {\n                magic: chainid.getMagic(),\n                public: chainid.getPublic(),\n                mainnet: chainid.getMainnet(),\n                consensus: chainid.getConsensus()\n            } : {\n                magic: 'unknown', public: false, mainnet: false, consensus: 'unknown',\n            },\n            bpnumber: grpcObject.getBpnumber(),\n            maxblocksize: grpcObject.getMaxblocksize(),\n            maxtokens: new Amount(grpcObject.getMaxtokens_asU8()),\n            stakingminimum: new Amount(grpcObject.getStakingminimum_asU8()),\n            stakingtotal: new Amount(grpcObject.getTotalstaking_asU8()),\n            gasprice: new Amount(grpcObject.getGasprice_asU8()),\n            nameprice: new Amount(grpcObject.getNameprice_asU8()),\n            totalvotingpower: new Amount(grpcObject.getTotalvotingpower_asU8()),\n            votingreward: new Amount(grpcObject.getVotingreward_asU8()),\n        });\n    }\n\n    toGrpc(): never {\n        throw new Error('Not implemented');\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"65f00f8720e8ed3e191016135066e661b56b15d4","contentHash":"38450e0468fe82c38620b4e3075b59530978dfb8f9638f69e0e1c0b04897d62d"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/contract.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/contract.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":144}},"2":{"start":{"line":1,"column":158},"end":{"line":1,"column":183}},"3":{"start":{"line":2,"column":10},"end":{"line":2,"column":49}},"4":{"start":{"line":3,"column":21},"end":{"line":3,"column":57}},"5":{"start":{"line":4,"column":8},"end":{"line":4,"column":67}},"6":{"start":{"line":4,"column":106},"end":{"line":4,"column":160}},"7":{"start":{"line":4,"column":214},"end":{"line":4,"column":233}},"8":{"start":{"line":4,"column":234},"end":{"line":4,"column":479}},"9":{"start":{"line":4,"column":283},"end":{"line":4,"column":319}},"10":{"start":{"line":4,"column":320},"end":{"line":4,"column":447}},"11":{"start":{"line":4,"column":340},"end":{"line":4,"column":447}},"12":{"start":{"line":4,"column":381},"end":{"line":4,"column":444}},"13":{"start":{"line":4,"column":447},"end":{"line":4,"column":478}},"14":{"start":{"line":4,"column":479},"end":{"line":4,"column":491}},"15":{"start":{"line":4,"column":524},"end":{"line":4,"column":995}},"16":{"start":{"line":4,"column":537},"end":{"line":4,"column":538}},"17":{"start":{"line":4,"column":581},"end":{"line":4,"column":621}},"18":{"start":{"line":4,"column":622},"end":{"line":4,"column":994}},"19":{"start":{"line":4,"column":634},"end":{"line":4,"column":733}},"20":{"start":{"line":4,"column":688},"end":{"line":4,"column":730}},"21":{"start":{"line":4,"column":740},"end":{"line":4,"column":994}},"22":{"start":{"line":4,"column":779},"end":{"line":4,"column":853}},"23":{"start":{"line":4,"column":861},"end":{"line":4,"column":993}},"24":{"start":{"line":4,"column":909},"end":{"line":4,"column":990}},"25":{"start":{"line":4,"column":995},"end":{"line":4,"column":1009}},"26":{"start":{"line":4,"column":1053},"end":{"line":4,"column":1200}},"27":{"start":{"line":4,"column":1070},"end":{"line":4,"column":1174}},"28":{"start":{"line":4,"column":1182},"end":{"line":4,"column":1199}},"29":{"start":{"line":4,"column":1200},"end":{"line":4,"column":1211}},"30":{"start":{"line":28,"column":51},"end":{"line":28,"column":95}},"31":{"start":{"line":28,"column":95},"end":{"line":28,"column":133}},"32":{"start":{"line":28,"column":133},"end":{"line":28,"column":183}},"33":{"start":{"line":29,"column":4},"end":{"line":29,"column":33}},"34":{"start":{"line":30,"column":4},"end":{"line":30,"column":21}},"35":{"start":{"line":31,"column":4},"end":{"line":31,"column":45}},"36":{"start":{"line":52,"column":20},"end":{"line":54,"column":24}},"37":{"start":{"line":56,"column":4},"end":{"line":56,"column":112}},"38":{"start":{"line":56,"column":40},"end":{"line":56,"column":112}},"39":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"40":{"start":{"line":58,"column":6},"end":{"line":58,"column":111}},"41":{"start":{"line":60,"column":4},"end":{"line":65,"column":15}},"42":{"start":{"line":84,"column":4},"end":{"line":86,"column":24}},"43":{"start":{"line":91,"column":14},"end":{"line":91,"column":40}},"44":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"45":{"start":{"line":93,"column":6},"end":{"line":93,"column":74}},"46":{"start":{"line":95,"column":4},"end":{"line":95,"column":104}},"47":{"start":{"line":96,"column":4},"end":{"line":96,"column":85}},"48":{"start":{"line":97,"column":4},"end":{"line":97,"column":13}},"49":{"start":{"line":112,"column":8},"end":{"line":112,"column":44}},"50":{"start":{"line":119,"column":64},"end":{"line":119,"column":114}},"51":{"start":{"line":119,"column":114},"end":{"line":119,"column":159}},"52":{"start":{"line":119,"column":159},"end":{"line":119,"column":197}},"53":{"start":{"line":119,"column":197},"end":{"line":119,"column":241}},"54":{"start":{"line":120,"column":4},"end":{"line":120,"column":45}},"55":{"start":{"line":121,"column":4},"end":{"line":121,"column":35}},"56":{"start":{"line":122,"column":4},"end":{"line":122,"column":42}},"57":{"start":{"line":123,"column":4},"end":{"line":123,"column":21}},"58":{"start":{"line":127,"column":14},"end":{"line":127,"column":45}},"59":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"60":{"start":{"line":129,"column":6},"end":{"line":129,"column":74}},"61":{"start":{"line":131,"column":4},"end":{"line":131,"column":66}},"62":{"start":{"line":132,"column":24},"end":{"line":135,"column":6}},"63":{"start":{"line":133,"column":18},"end":{"line":133,"column":66}},"64":{"start":{"line":134,"column":6},"end":{"line":134,"column":68}},"65":{"start":{"line":136,"column":4},"end":{"line":136,"column":38}},"66":{"start":{"line":137,"column":4},"end":{"line":137,"column":37}},"67":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"68":{"start":{"line":139,"column":6},"end":{"line":139,"column":44}},"69":{"start":{"line":141,"column":4},"end":{"line":141,"column":13}},"70":{"start":{"line":160,"column":8},"end":{"line":160,"column":40}},"71":{"start":{"line":166,"column":21},"end":{"line":166,"column":59}},"72":{"start":{"line":166,"column":59},"end":{"line":166,"column":100}},"73":{"start":{"line":166,"column":100},"end":{"line":166,"column":143}},"74":{"start":{"line":167,"column":4},"end":{"line":167,"column":30}},"75":{"start":{"line":169,"column":4},"end":{"line":169,"column":24}},"76":{"start":{"line":172,"column":6},"end":{"line":172,"column":26}},"77":{"start":{"line":176,"column":4},"end":{"line":181,"column":11}},"78":{"start":{"line":178,"column":8},"end":{"line":178,"column":56}},"79":{"start":{"line":178,"column":38},"end":{"line":178,"column":56}},"80":{"start":{"line":179,"column":8},"end":{"line":179,"column":64}},"81":{"start":{"line":179,"column":36},"end":{"line":179,"column":64}},"82":{"start":{"line":180,"column":8},"end":{"line":180,"column":25}},"83":{"start":{"line":191,"column":20},"end":{"line":191,"column":54}},"84":{"start":{"line":192,"column":4},"end":{"line":193,"column":23}},"85":{"start":{"line":203,"column":21},"end":{"line":203,"column":37}},"86":{"start":{"line":204,"column":4},"end":{"line":204,"column":33}},"87":{"start":{"line":205,"column":4},"end":{"line":205,"column":20}},"88":{"start":{"line":214,"column":21},"end":{"line":214,"column":37}},"89":{"start":{"line":215,"column":4},"end":{"line":215,"column":26}},"90":{"start":{"line":216,"column":4},"end":{"line":216,"column":20}},"91":{"start":{"line":225,"column":4},"end":{"line":225,"column":48}},"92":{"start":{"line":226,"column":4},"end":{"line":226,"column":16}},"93":{"start":{"line":235,"column":4},"end":{"line":237,"column":5}},"94":{"start":{"line":236,"column":6},"end":{"line":236,"column":94}},"95":{"start":{"line":236,"column":53},"end":{"line":236,"column":93}},"96":{"start":{"line":238,"column":4},"end":{"line":238,"column":16}},"97":{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},"98":{"start":{"line":248,"column":6},"end":{"line":248,"column":62}},"99":{"start":{"line":251,"column":16},"end":{"line":251,"column":77}},"100":{"start":{"line":252,"column":4},"end":{"line":255,"column":5}},"101":{"start":{"line":253,"column":26},"end":{"line":253,"column":59}},"102":{"start":{"line":254,"column":6},"end":{"line":254,"column":58}},"103":{"start":{"line":256,"column":4},"end":{"line":256,"column":43}},"104":{"start":{"line":267,"column":6},"end":{"line":267,"column":114}},"105":{"start":{"line":269,"column":21},"end":{"line":269,"column":83}},"106":{"start":{"line":271,"column":4},"end":{"line":271,"column":60}},"107":{"start":{"line":275,"column":16},"end":{"line":275,"column":88}},"108":{"start":{"line":276,"column":4},"end":{"line":276,"column":43}},"109":{"start":{"line":280,"column":4},"end":{"line":280,"column":62}},"110":{"start":{"line":284,"column":0},"end":{"line":284,"column":8}},"111":{"start":{"line":284,"column":9},"end":{"line":284,"column":36}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":4,"column":77},"end":{"line":4,"column":99}},"loc":{"start":{"line":4,"column":105},"end":{"line":4,"column":161}},"line":4},"1":{"name":"ownKeys","decl":{"start":{"line":4,"column":170},"end":{"line":4,"column":177}},"loc":{"start":{"line":4,"column":202},"end":{"line":4,"column":492}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":4,"column":365},"end":{"line":4,"column":366}},"loc":{"start":{"line":4,"column":380},"end":{"line":4,"column":445}},"line":4},"3":{"name":"_objectSpread","decl":{"start":{"line":4,"column":501},"end":{"line":4,"column":514}},"loc":{"start":{"line":4,"column":523},"end":{"line":4,"column":1010}},"line":4},"4":{"name":"(anonymous_4)","decl":{"start":{"line":4,"column":672},"end":{"line":4,"column":673}},"loc":{"start":{"line":4,"column":687},"end":{"line":4,"column":731}},"line":4},"5":{"name":"(anonymous_5)","decl":{"start":{"line":4,"column":893},"end":{"line":4,"column":894}},"loc":{"start":{"line":4,"column":908},"end":{"line":4,"column":991}},"line":4},"6":{"name":"_defineProperty","decl":{"start":{"line":4,"column":1019},"end":{"line":4,"column":1034}},"loc":{"start":{"line":4,"column":1052},"end":{"line":4,"column":1212}},"line":4},"7":{"name":"(anonymous_7)","decl":{"start":{"line":28,"column":2},"end":{"line":28,"column":3}},"loc":{"start":{"line":28,"column":50},"end":{"line":32,"column":3}},"line":28},"8":{"name":"(anonymous_8)","decl":{"start":{"line":51,"column":2},"end":{"line":51,"column":3}},"loc":{"start":{"line":51,"column":27},"end":{"line":67,"column":3}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":16},"end":{"line":88,"column":3}},"line":83},"10":{"name":"(anonymous_10)","decl":{"start":{"line":90,"column":2},"end":{"line":90,"column":3}},"loc":{"start":{"line":90,"column":11},"end":{"line":98,"column":3}},"line":90},"11":{"name":"(anonymous_11)","decl":{"start":{"line":119,"column":2},"end":{"line":119,"column":3}},"loc":{"start":{"line":119,"column":63},"end":{"line":124,"column":3}},"line":119},"12":{"name":"(anonymous_12)","decl":{"start":{"line":126,"column":2},"end":{"line":126,"column":3}},"loc":{"start":{"line":126,"column":11},"end":{"line":142,"column":3}},"line":126},"13":{"name":"(anonymous_13)","decl":{"start":{"line":132,"column":45},"end":{"line":132,"column":46}},"loc":{"start":{"line":132,"column":52},"end":{"line":135,"column":5}},"line":132},"14":{"name":"(anonymous_14)","decl":{"start":{"line":166,"column":2},"end":{"line":166,"column":3}},"loc":{"start":{"line":166,"column":20},"end":{"line":183,"column":3}},"line":166},"15":{"name":"isNotProxied","decl":{"start":{"line":171,"column":13},"end":{"line":171,"column":25}},"loc":{"start":{"line":171,"column":38},"end":{"line":173,"column":5}},"line":171},"16":{"name":"(anonymous_16)","decl":{"start":{"line":177,"column":6},"end":{"line":177,"column":7}},"loc":{"start":{"line":177,"column":22},"end":{"line":181,"column":7}},"line":177},"17":{"name":"(anonymous_17)","decl":{"start":{"line":190,"column":2},"end":{"line":190,"column":3}},"loc":{"start":{"line":190,"column":33},"end":{"line":195,"column":3}},"line":190},"18":{"name":"(anonymous_18)","decl":{"start":{"line":202,"column":2},"end":{"line":202,"column":3}},"loc":{"start":{"line":202,"column":28},"end":{"line":206,"column":3}},"line":202},"19":{"name":"(anonymous_19)","decl":{"start":{"line":213,"column":2},"end":{"line":213,"column":3}},"loc":{"start":{"line":213,"column":22},"end":{"line":217,"column":3}},"line":213},"20":{"name":"(anonymous_20)","decl":{"start":{"line":224,"column":2},"end":{"line":224,"column":3}},"loc":{"start":{"line":224,"column":22},"end":{"line":227,"column":3}},"line":224},"21":{"name":"(anonymous_21)","decl":{"start":{"line":234,"column":2},"end":{"line":234,"column":3}},"loc":{"start":{"line":234,"column":15},"end":{"line":239,"column":3}},"line":234},"22":{"name":"(anonymous_22)","decl":{"start":{"line":236,"column":40},"end":{"line":236,"column":41}},"loc":{"start":{"line":236,"column":53},"end":{"line":236,"column":93}},"line":236},"23":{"name":"(anonymous_23)","decl":{"start":{"line":246,"column":2},"end":{"line":246,"column":3}},"loc":{"start":{"line":246,"column":18},"end":{"line":257,"column":3}},"line":246},"24":{"name":"(anonymous_24)","decl":{"start":{"line":265,"column":2},"end":{"line":265,"column":3}},"loc":{"start":{"line":265,"column":37},"end":{"line":272,"column":3}},"line":265},"25":{"name":"isBufferLike","decl":{"start":{"line":266,"column":13},"end":{"line":266,"column":25}},"loc":{"start":{"line":266,"column":31},"end":{"line":268,"column":5}},"line":266},"26":{"name":"(anonymous_26)","decl":{"start":{"line":274,"column":2},"end":{"line":274,"column":3}},"loc":{"start":{"line":274,"column":31},"end":{"line":277,"column":3}},"line":274},"27":{"name":"(anonymous_27)","decl":{"start":{"line":279,"column":2},"end":{"line":279,"column":3}},"loc":{"start":{"line":279,"column":35},"end":{"line":281,"column":3}},"line":279}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":113},"end":{"line":4,"column":159}},"type":"cond-expr","locations":[{"start":{"line":4,"column":137},"end":{"line":4,"column":140}},{"start":{"line":4,"column":143},"end":{"line":4,"column":159}}],"line":4},"1":{"loc":{"start":{"line":4,"column":113},"end":{"line":4,"column":134}},"type":"binary-expr","locations":[{"start":{"line":4,"column":113},"end":{"line":4,"column":116}},{"start":{"line":4,"column":120},"end":{"line":4,"column":134}}],"line":4},"2":{"loc":{"start":{"line":4,"column":234},"end":{"line":4,"column":479}},"type":"if","locations":[{"start":{"line":4,"column":234},"end":{"line":4,"column":479}},{"start":{"line":4,"column":234},"end":{"line":4,"column":479}}],"line":4},"3":{"loc":{"start":{"line":4,"column":320},"end":{"line":4,"column":447}},"type":"if","locations":[{"start":{"line":4,"column":320},"end":{"line":4,"column":447}},{"start":{"line":4,"column":320},"end":{"line":4,"column":447}}],"line":4},"4":{"loc":{"start":{"line":4,"column":581},"end":{"line":4,"column":621}},"type":"cond-expr","locations":[{"start":{"line":4,"column":604},"end":{"line":4,"column":616}},{"start":{"line":4,"column":619},"end":{"line":4,"column":621}}],"line":4},"5":{"loc":{"start":{"line":4,"column":622},"end":{"line":4,"column":994}},"type":"if","locations":[{"start":{"line":4,"column":622},"end":{"line":4,"column":994}},{"start":{"line":4,"column":622},"end":{"line":4,"column":994}}],"line":4},"6":{"loc":{"start":{"line":4,"column":740},"end":{"line":4,"column":994}},"type":"if","locations":[{"start":{"line":4,"column":740},"end":{"line":4,"column":994}},{"start":{"line":4,"column":740},"end":{"line":4,"column":994}}],"line":4},"7":{"loc":{"start":{"line":4,"column":1053},"end":{"line":4,"column":1200}},"type":"if","locations":[{"start":{"line":4,"column":1053},"end":{"line":4,"column":1200}},{"start":{"line":4,"column":1053},"end":{"line":4,"column":1200}}],"line":4},"8":{"loc":{"start":{"line":56,"column":4},"end":{"line":56,"column":112}},"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":112}},{"start":{"line":56,"column":4},"end":{"line":56,"column":112}}],"line":56},"9":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{"line":57,"column":4},"end":{"line":59,"column":5}}],"line":57},"10":{"loc":{"start":{"line":57,"column":8},"end":{"line":57,"column":90}},"type":"binary-expr","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":40}},{"start":{"line":57,"column":44},"end":{"line":57,"column":59}},{"start":{"line":57,"column":63},"end":{"line":57,"column":90}}],"line":57},"11":{"loc":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},{"start":{"line":92,"column":4},"end":{"line":94,"column":5}}],"line":92},"12":{"loc":{"start":{"line":122,"column":22},"end":{"line":122,"column":41}},"type":"binary-expr","locations":[{"start":{"line":122,"column":22},"end":{"line":122,"column":32}},{"start":{"line":122,"column":36},"end":{"line":122,"column":41}}],"line":122},"13":{"loc":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},{"start":{"line":128,"column":4},"end":{"line":130,"column":5}}],"line":128},"14":{"loc":{"start":{"line":133,"column":18},"end":{"line":133,"column":66}},"type":"cond-expr","locations":[{"start":{"line":133,"column":44},"end":{"line":133,"column":60}},{"start":{"line":133,"column":63},"end":{"line":133,"column":66}}],"line":133},"15":{"loc":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},{"start":{"line":138,"column":4},"end":{"line":140,"column":5}}],"line":138},"16":{"loc":{"start":{"line":178,"column":8},"end":{"line":178,"column":56}},"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":56}},{"start":{"line":178,"column":8},"end":{"line":178,"column":56}}],"line":178},"17":{"loc":{"start":{"line":179,"column":8},"end":{"line":179,"column":64}},"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":64}},{"start":{"line":179,"column":8},"end":{"line":179,"column":64}}],"line":179},"18":{"loc":{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},{"start":{"line":247,"column":4},"end":{"line":249,"column":5}}],"line":247},"19":{"loc":{"start":{"line":247,"column":8},"end":{"line":247,"column":39}},"type":"binary-expr","locations":[{"start":{"line":247,"column":8},"end":{"line":247,"column":18}},{"start":{"line":247,"column":22},"end":{"line":247,"column":39}}],"line":247},"20":{"loc":{"start":{"line":252,"column":4},"end":{"line":255,"column":5}},"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":255,"column":5}},{"start":{"line":252,"column":4},"end":{"line":255,"column":5}}],"line":252},"21":{"loc":{"start":{"line":267,"column":13},"end":{"line":267,"column":113}},"type":"binary-expr","locations":[{"start":{"line":267,"column":13},"end":{"line":267,"column":35}},{"start":{"line":267,"column":39},"end":{"line":267,"column":65}},{"start":{"line":267,"column":69},"end":{"line":267,"column":83}},{"start":{"line":267,"column":87},"end":{"line":267,"column":113}}],"line":267},"22":{"loc":{"start":{"line":269,"column":21},"end":{"line":269,"column":83}},"type":"cond-expr","locations":[{"start":{"line":269,"column":70},"end":{"line":269,"column":76}},{"start":{"line":269,"column":79},"end":{"line":269,"column":83}}],"line":269},"23":{"loc":{"start":{"line":269,"column":21},"end":{"line":269,"column":67}},"type":"binary-expr","locations":[{"start":{"line":269,"column":21},"end":{"line":269,"column":45}},{"start":{"line":269,"column":49},"end":{"line":269,"column":67}}],"line":269}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":4,"8":4,"9":4,"10":4,"11":4,"12":0,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":4,"20":8,"21":0,"22":0,"23":0,"24":0,"25":4,"26":86,"27":0,"28":86,"29":86,"30":8,"31":8,"32":8,"33":8,"34":8,"35":8,"36":6,"37":6,"38":0,"39":6,"40":2,"41":4,"42":2,"43":2,"44":2,"45":0,"46":2,"47":2,"48":2,"49":1,"50":6,"51":6,"52":6,"53":6,"54":6,"55":6,"56":6,"57":6,"58":6,"59":6,"60":0,"61":6,"62":6,"63":8,"64":8,"65":6,"66":6,"67":6,"68":0,"69":6,"70":1,"71":10,"72":10,"73":10,"74":10,"75":10,"76":91,"77":10,"78":91,"79":82,"80":9,"81":9,"82":0,"83":1,"84":1,"85":1,"86":1,"87":1,"88":8,"89":8,"90":8,"91":9,"92":9,"93":9,"94":27,"95":8,"96":9,"97":1,"98":0,"99":1,"100":1,"101":1,"102":1,"103":0,"104":3,"105":6,"106":6,"107":0,"108":0,"109":1,"110":1,"111":1},"f":{"0":2,"1":4,"2":0,"3":4,"4":8,"5":0,"6":86,"7":8,"8":6,"9":2,"10":2,"11":6,"12":6,"13":8,"14":10,"15":91,"16":91,"17":1,"18":1,"19":8,"20":9,"21":9,"22":8,"23":1,"24":6,"25":3,"26":0,"27":1},"b":{"0":[1,1],"1":[2,2],"2":[4,0],"3":[4,0],"4":[4,0],"5":[4,0],"6":[0,0],"7":[0,86],"8":[0,6],"9":[2,4],"10":[6,5,4],"11":[0,2],"12":[6,6],"13":[0,6],"14":[4,4],"15":[0,6],"16":[82,9],"17":[9,0],"18":[0,1],"19":[1,1],"20":[1,0],"21":[3,2,2,2],"22":[5,1],"23":[6,3]},"inputSourceMap":{"version":3,"sources":["contract.ts"],"names":["FunctionCall","constructor","contractInstance","definition","args","asTransaction","extraArgs","payload","JSON","stringify","Name","name","Args","address","Error","from","length","to","amount","Amount","type","Tx","Type","CALL","asQueryInfo","toGrpc","q","Query","setContractaddress","Uint8Array","Address","asBytes","setQueryinfo","Buffer","StateQuery","storageKeys","compressed","root","GrpcStateQuery","map","key","buf","update","digest","setStoragekeysList","setCompressed","setRoot","Contract","data","Object","assign","functions","isNotProxied","obj","field","Proxy","get","undefined","fromCode","bs58checkCode","decoded","decodeCode","code","atAddress","contract","setAddress","fromAbi","abi","loadAbi","asPayload","len","argsDecoded","concat","queryState","keys","isBufferLike","arr","keyArray","encodeCode","byteArray","constants","ADDRESS_PREFIXES","CONTRACT","base58check","encode","decode","slice"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import { Address, Amount, constants, fromNumber, base58check } from '@herajs/common';\nimport Tx from './tx';\nimport { Function, StateQuery as GrpcStateQuery, Query, ABI } from '../../types/blockchain_pb';\nimport sha256 from 'hash.js/lib/hash/sha/256';\n\ntype _PrimitiveType = string | number | boolean;\nexport type PrimitiveType = _PrimitiveType | _PrimitiveType[];\n\ntype BufferLike = number[] | Uint8Array | Buffer;\n\ninterface QueryInfo {\n    Name: string;\n    Args: PrimitiveType[];\n}\n\nexport type Abi = Partial<ABI.AsObject> & { functions: any; state_variables: any };\n\n/**\n * Data structure for contract function calls.\n * You should not need to build these yourself, they are returned from contract instance functions and\n * can be passed to the client.\n */\nexport class FunctionCall {\n    definition: Function.AsObject;\n    args: PrimitiveType[];\n    contractInstance: Contract;\n\n    constructor(contractInstance: Contract, definition: Function.AsObject, args: PrimitiveType[]) {\n        this.definition = definition;\n        this.args = args;\n        this.contractInstance = contractInstance;\n    }\n\n    /**\n     * Generate transaction object that can be passed to :meth:`aergoClient.accounts.sendTrasaction`\n     * \n     * .. code-block:: javascript\n     * \n     *     import { Contract } from '@herajs/client';\n     *     const contract = Contract.fromAbi(abi).atAddress(address);\n     *     const functionCall = contract.someAbiFunction();\n     *     aergo.accounts.sendTransaction(functionCall.asTransaction({\n     *         from: myAddress\n     *     })).then(result => {\n     *         console.log(result);\n     *     })\n     * @param {obj} extraArgs\n     * @param {string} extraArgs.from set from address for the transaction\n     * @return {obj} transaction data\n     */\n    asTransaction(extraArgs: Partial<Tx> & Pick<Tx, 'from'>): Partial<Tx> {\n        const payload = JSON.stringify({\n            Name: this.definition.name,\n            Args: this.args,\n        });\n        if (!this.contractInstance.address) throw new Error('Set address of contract before creating transactions');\n        if (typeof extraArgs === 'undefined' || !extraArgs.from || extraArgs.from.length === 0) {\n            throw new Error('Missing required transaction parameter \\'from\\'. Call with asTransaction({from: ...})');\n        }\n        return {\n            to: this.contractInstance.address,\n            payload,\n            amount: new Amount('0 aer'),\n            type: Tx.Type.CALL,\n            ...extraArgs\n        };\n    }\n    /**\n     * Generate query info that can be passed to the API.\n     * You usually do not need to call this function yourself, :meth:`AergoClient.queryContract` takes care of that.\n     * \n     * .. code-block:: javascript\n     * \n     *     import { Contract } from '@herajs/client';\n     *     const contract = Contract.fromAbi(abi).atAddress(address);\n     *     const functionCall = contract.someAbiFunction();\n     *     aergo.queryContract(functionCall).then(result => {\n     *         console.log(result);\n     *     })\n     * \n     * @return {obj} queryInfo data\n     */\n    asQueryInfo(): QueryInfo {\n        return {\n            Name: this.definition.name,\n            Args: this.args\n        };\n    }\n\n    toGrpc(): Query {\n        const q = new Query();\n        if (!this.contractInstance.address) {\n            throw new Error('set contract address before creating state query');\n        }\n        q.setContractaddress(Uint8Array.from((new Address(this.contractInstance.address)).asBytes()));\n        q.setQueryinfo(Uint8Array.from(Buffer.from(JSON.stringify(this.asQueryInfo()))));\n        return q;\n    }\n}\n\n/**\n * Query contract state directlty without using ABI methods.\n * \n * .. code-block:: javascript\n * \n *     import { Contract } from '@herajs/client';\n *     const contract = Contract.fromAbi(abi).atAddress(address);\n *     const query = contract.queryState('stateVariableName');\n *     aergo.queryContractState(query).then(result => {\n *         console.log(result);\n *     })\n */\nexport class StateQuery {\n    contractInstance: Contract;\n    storageKeys: string[] | BufferLike[];\n    root: Uint8Array | undefined;\n    compressed: boolean;\n\n    constructor(contractInstance: Contract, storageKeys: string[] | BufferLike[], compressed?: boolean, root?: Uint8Array) {\n        this.contractInstance = contractInstance;\n        this.storageKeys = storageKeys;\n        this.compressed = compressed || false;\n        this.root = root;\n    }\n\n    toGrpc(): GrpcStateQuery {\n        const q = new GrpcStateQuery();\n        if (!this.contractInstance.address) {\n            throw new Error('set contract address before creating state query');\n        }\n        q.setContractaddress(this.contractInstance.address.asBytes());\n        const storageKeys = (this.storageKeys as any[]).map((key: string | BufferLike) => {\n            const buf = typeof key === 'string' ? Buffer.from(key) : key;\n            return Uint8Array.from(sha256().update(buf).digest());\n        });\n        q.setStoragekeysList(storageKeys);\n        q.setCompressed(this.compressed);\n        if (this.root) {\n            q.setRoot(Uint8Array.from(this.root));\n        }\n        return q;\n    }\n}\n\n/**\n * Smart contract interface.\n * You usually instantiante this class by using one of the static methods.\n * Most of the instance methods return the contract so they can be chained.\n * When an ABI is loaded, its functions will be added to the instance and can be called directly.\n * ABI functions return `FunctionCall` objects that can be queried or called.\n * \n * .. code-block:: javascript\n * \n *     import { Contract } from '@herajs/client';\n *     const contract = Contract.fromAbi(abi).setAddress(address);\n *     aergo.queryContract(contract.someAbiFunction()).then(result => {\n *         console.log(result);\n *     })\n * \n */\nclass Contract {\n    code?: Buffer;\n    address?: Address;\n    functions: Record<string, (...args: PrimitiveType[]) => FunctionCall>;\n\n    constructor(data: Partial<Contract>) {\n        Object.assign(this, data);\n\n        this.functions = {};\n\n        function isNotProxied(obj: Contract, field: string): field is keyof Contract {\n            return field in obj;\n        }\n\n        // This class acts as a proxy that passes ABI method calls\n        return new Proxy(this, {\n            get(obj, field: keyof Contract | string) {\n                if (isNotProxied(obj, field)) return obj[field];\n                if (field in obj.functions) return obj.functions[field];\n                return undefined;\n            }\n        });\n    }\n\n    /**\n     * Create contract instance from code\n     * @param {string} bs58checkCode base58-check encoded code\n     * @return {Contract} contract instance\n     */\n    static fromCode(bs58checkCode: string): Contract {\n        const decoded = Contract.decodeCode(bs58checkCode);\n        return new Contract({\n            code: decoded\n        });\n    }\n\n    /**\n     * Create contract instance and set address\n     * @param {Address} address \n     * @return {Contract} contract instance \n     */\n    static atAddress(address: Address): Contract {\n        const contract = new Contract({});\n        contract.setAddress(address);\n        return contract;\n    }\n\n    /**\n     * Create contract instance from ABI\n     * @param {obj} abi parsed JSON ABI\n     * @return {Contract} contract instance\n     */\n    static fromAbi(abi: Abi): Contract {\n        const contract = new Contract({});\n        contract.loadAbi(abi);\n        return contract;\n    }\n\n    /**\n     * Set address of contract instance\n     * @param {Address|string} address \n     * @return {Contract} contract instance\n     */\n    setAddress(address: Address|string): Contract {\n        this.address = new Address(address);\n        return this;\n    }\n\n    /**\n     * Load contract ABI\n     * @param {obj} abi parsed JSON ABI\n     * @return {Contract} contract instance\n     */\n    loadAbi(abi: Abi): Contract {\n        for (const definition of abi.functions) {\n            this.functions[definition.name] = (...args: PrimitiveType[]) => new FunctionCall(this, definition, args);\n        }\n        return this;\n    }\n\n    /**\n     * Return contract code as payload for transaction\n     * @param {args}\n     * @return {Buffer} a byte buffer\n     */\n    asPayload(args?: PrimitiveType[]): Buffer {\n        if (!this.code || !this.code.length) {\n            throw new Error('Code is required to generate payload');\n        }\n        // First 4 bytes are the length of code (incl. ABI)\n        const len = Buffer.from(fromNumber(4 + this.code.length, 4));\n        if (typeof args !== 'undefined') {\n            const argsDecoded = Buffer.from(JSON.stringify(args));\n            return Buffer.concat([len, this.code, argsDecoded]);\n        }\n        return Buffer.concat([len, this.code]);\n    }\n\n    /**\n     * Create query object to query contract state.\n     * @param keys list of keys, either strings or Buffer-like byte arrays\n     * @param compressed return compressed proof (default: false)\n     * @param root root hash\n     */\n    queryState(keys: string | BufferLike | string[] | BufferLike[], compressed?: boolean, root?: Uint8Array): StateQuery {\n        function isBufferLike(arr: string[] | BufferLike | BufferLike[]): arr is BufferLike {\n            return keys instanceof Buffer || keys instanceof Uint8Array || arr.length > 0 && typeof arr[0] === 'number';\n        }\n        const keyArray = (typeof keys === 'string' || isBufferLike(keys)) ? [keys] : keys;\n        // `as any` is needed b/c https://github.com/microsoft/TypeScript/issues/14107#issuecomment-483995795\n        return new StateQuery(this, keyArray as any, compressed, root);\n    }\n\n    static encodeCode(byteArray: Buffer): string {\n        const buf = Buffer.from([constants.ADDRESS_PREFIXES.CONTRACT, ...byteArray]);\n        return base58check.encode(buf);\n    }\n\n    static decodeCode(bs58checkCode: string): Buffer {\n        return base58check.decode(bs58checkCode).slice(1);\n    }\n}\n\nexport default Contract;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2122b0999d85d8da6814ef84505114fe6e00157b","contentHash":"7ef5c2dc49c8e44e768752020b1d82e7cd08ca6210094412d7946563fe10fcfd"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/event.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/event.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":1,"column":115},"end":{"line":1,"column":159}},"3":{"start":{"line":2,"column":13},"end":{"line":2,"column":55}},"4":{"start":{"line":2,"column":94},"end":{"line":2,"column":148}},"5":{"start":{"line":2,"column":192},"end":{"line":2,"column":339}},"6":{"start":{"line":2,"column":209},"end":{"line":2,"column":313}},"7":{"start":{"line":2,"column":321},"end":{"line":2,"column":338}},"8":{"start":{"line":2,"column":339},"end":{"line":2,"column":350}},"9":{"start":{"line":16,"column":21},"end":{"line":16,"column":62}},"10":{"start":{"line":16,"column":62},"end":{"line":16,"column":100}},"11":{"start":{"line":16,"column":100},"end":{"line":16,"column":143}},"12":{"start":{"line":16,"column":143},"end":{"line":16,"column":185}},"13":{"start":{"line":16,"column":185},"end":{"line":16,"column":228}},"14":{"start":{"line":16,"column":228},"end":{"line":16,"column":268}},"15":{"start":{"line":16,"column":268},"end":{"line":16,"column":309}},"16":{"start":{"line":16,"column":309},"end":{"line":16,"column":348}},"17":{"start":{"line":17,"column":4},"end":{"line":17,"column":30}},"18":{"start":{"line":18,"column":4},"end":{"line":18,"column":54}},"19":{"start":{"line":21,"column":4},"end":{"line":29,"column":42}},"20":{"start":{"line":33,"column":4},"end":{"line":33,"column":39}},"21":{"start":{"line":34,"column":4},"end":{"line":34,"column":28}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":2,"column":65},"end":{"line":2,"column":87}},"loc":{"start":{"line":2,"column":93},"end":{"line":2,"column":149}},"line":2},"1":{"name":"_defineProperty","decl":{"start":{"line":2,"column":158},"end":{"line":2,"column":173}},"loc":{"start":{"line":2,"column":191},"end":{"line":2,"column":351}},"line":2},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":2},"end":{"line":16,"column":3}},"loc":{"start":{"line":16,"column":20},"end":{"line":19,"column":3}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":2},"end":{"line":20,"column":3}},"loc":{"start":{"line":20,"column":30},"end":{"line":31,"column":3}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":11},"end":{"line":34,"column":3}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":101},"end":{"line":2,"column":147}},"type":"cond-expr","locations":[{"start":{"line":2,"column":125},"end":{"line":2,"column":128}},{"start":{"line":2,"column":131},"end":{"line":2,"column":147}}],"line":2},"1":{"loc":{"start":{"line":2,"column":101},"end":{"line":2,"column":122}},"type":"binary-expr","locations":[{"start":{"line":2,"column":101},"end":{"line":2,"column":104}},{"start":{"line":2,"column":108},"end":{"line":2,"column":122}}],"line":2},"2":{"loc":{"start":{"line":2,"column":192},"end":{"line":2,"column":339}},"type":"if","locations":[{"start":{"line":2,"column":192},"end":{"line":2,"column":339}},{"start":{"line":2,"column":192},"end":{"line":2,"column":339}}],"line":2}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":40,"6":0,"7":40,"8":40,"9":5,"10":5,"11":5,"12":5,"13":5,"14":5,"15":5,"16":5,"17":5,"18":5,"19":5,"20":0,"21":1},"f":{"0":2,"1":40,"2":5,"3":5,"4":0},"b":{"0":[2,0],"1":[2,2],"2":[0,40]},"inputSourceMap":{"version":3,"sources":["event.ts"],"names":["Event","constructor","data","Object","assign","address","Address","fromGrpc","grpcObject","args","JSON","parse","getJsonargs","getContractaddress_asU8","eventName","getEventname","blockhash","Block","encodeHash","getBlockhash_asU8","txhash","getTxhash_asU8","txidx","getTxindex","eventidx","getEventidx","blockno","getBlockno","toGrpc","Error"],"mappings":"oGAAA;AACA,wD;;;;AAIe,MAAMA,KAAN,CAAY;;;;;;;;;;AAUvBC,EAAAA,WAAW,CAACC,IAAD,EAAuB;AAC9BC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACA,SAAKG,OAAL,GAAe,IAAIC,gBAAJ,CAAY,KAAKD,OAAjB,CAAf;AACH;AACD,SAAOE,QAAP,CAAgBC,UAAhB,EAA8C;AAC1C,WAAO,IAAIR,KAAJ,CAAU;AACbS,MAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACI,WAAX,EAAX,CADO;AAEbP,MAAAA,OAAO,EAAE,IAAIC,gBAAJ,CAAYE,UAAU,CAACK,uBAAX,EAAZ,CAFI;AAGbC,MAAAA,SAAS,EAAEN,UAAU,CAACO,YAAX,EAHE;AAIbC,MAAAA,SAAS,EAAEC,eAAMC,UAAN,CAAiBV,UAAU,CAACW,iBAAX,EAAjB,CAJE;AAKbC,MAAAA,MAAM,EAAEH,eAAMC,UAAN,CAAiBV,UAAU,CAACa,cAAX,EAAjB,CALK;AAMbC,MAAAA,KAAK,EAAEd,UAAU,CAACe,UAAX,EANM;AAObC,MAAAA,QAAQ,EAAEhB,UAAU,CAACiB,WAAX,EAPG;AAQbC,MAAAA,OAAO,EAAElB,UAAU,CAACmB,UAAX,EARI,EAAV,CAAP;;AAUH;AACDC,EAAAA,MAAM,GAAU;AACZ,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH,GA5BsB,C","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import Address from './address';\nimport Block from './block';\nimport { Event as GrpcEvent } from '../../types/blockchain_pb';\nimport { PrimitiveType } from './contract';\n\nexport default class Event {\n    address!: Address;\n    args!: PrimitiveType[];\n    eventName!: string;\n    eventidx!: number;\n    blockhash!: string;\n    txhash!: string;\n    blockno!: number;\n    txidx!: number;\n\n    constructor(data: Partial<Event>) {\n        Object.assign(this, data);\n        this.address = new Address(this.address as any);\n    }\n    static fromGrpc(grpcObject: GrpcEvent): Event {\n        return new Event({\n            args: JSON.parse(grpcObject.getJsonargs()),\n            address: new Address(grpcObject.getContractaddress_asU8()),\n            eventName: grpcObject.getEventname(),\n            blockhash: Block.encodeHash(grpcObject.getBlockhash_asU8()),\n            txhash: Block.encodeHash(grpcObject.getTxhash_asU8()),\n            txidx: grpcObject.getTxindex(),\n            eventidx: grpcObject.getEventidx(),\n            blockno: grpcObject.getBlockno(),\n        });\n    }\n    toGrpc(): never {\n        throw new Error('Not implemented');\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"02a8dd286383f1ec38542aed22ac198d6bf48713","contentHash":"07aebc5ff72261ff8497a05215a7420c50ae40e3f8e6405345d6a1308e08e088"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/filterinfo.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/filterinfo.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":1,"column":115},"end":{"line":1,"column":159}},"3":{"start":{"line":2,"column":21},"end":{"line":2,"column":57}},"4":{"start":{"line":4,"column":14},"end":{"line":4,"column":31}},"5":{"start":{"line":4,"column":70},"end":{"line":4,"column":124}},"6":{"start":{"line":4,"column":168},"end":{"line":4,"column":315}},"7":{"start":{"line":4,"column":185},"end":{"line":4,"column":289}},"8":{"start":{"line":4,"column":297},"end":{"line":4,"column":314}},"9":{"start":{"line":4,"column":315},"end":{"line":4,"column":326}},"10":{"start":{"line":7,"column":2},"end":{"line":7,"column":28}},"11":{"start":{"line":18,"column":21},"end":{"line":18,"column":62}},"12":{"start":{"line":18,"column":62},"end":{"line":18,"column":100}},"13":{"start":{"line":18,"column":100},"end":{"line":18,"column":143}},"14":{"start":{"line":18,"column":143},"end":{"line":18,"column":181}},"15":{"start":{"line":18,"column":181},"end":{"line":18,"column":217}},"16":{"start":{"line":18,"column":217},"end":{"line":18,"column":253}},"17":{"start":{"line":19,"column":4},"end":{"line":19,"column":30}},"18":{"start":{"line":20,"column":4},"end":{"line":20,"column":54}},"19":{"start":{"line":23,"column":4},"end":{"line":29,"column":36}},"20":{"start":{"line":33,"column":15},"end":{"line":33,"column":46}},"21":{"start":{"line":34,"column":4},"end":{"line":34,"column":50}},"22":{"start":{"line":35,"column":4},"end":{"line":54,"column":5}},"23":{"start":{"line":40,"column":22},"end":{"line":40,"column":24}},"24":{"start":{"line":41,"column":6},"end":{"line":51,"column":7}},"25":{"start":{"line":42,"column":8},"end":{"line":45,"column":20}},"26":{"start":{"line":43,"column":10},"end":{"line":43,"column":32}},"27":{"start":{"line":44,"column":10},"end":{"line":44,"column":21}},"28":{"start":{"line":47,"column":8},"end":{"line":50,"column":20}},"29":{"start":{"line":48,"column":10},"end":{"line":48,"column":32}},"30":{"start":{"line":49,"column":10},"end":{"line":49,"column":21}},"31":{"start":{"line":52,"column":25},"end":{"line":52,"column":50}},"32":{"start":{"line":53,"column":6},"end":{"line":53,"column":55}},"33":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"34":{"start":{"line":56,"column":6},"end":{"line":56,"column":38}},"35":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"36":{"start":{"line":59,"column":6},"end":{"line":59,"column":38}},"37":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"38":{"start":{"line":62,"column":6},"end":{"line":62,"column":34}},"39":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"40":{"start":{"line":65,"column":6},"end":{"line":65,"column":28}},"41":{"start":{"line":67,"column":4},"end":{"line":67,"column":14}},"42":{"start":{"line":68,"column":4},"end":{"line":68,"column":33}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":4,"column":41},"end":{"line":4,"column":63}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":125}},"line":4},"1":{"name":"_defineProperty","decl":{"start":{"line":4,"column":134},"end":{"line":4,"column":149}},"loc":{"start":{"line":4,"column":167},"end":{"line":4,"column":327}},"line":4},"2":{"name":"isArgMap","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":17}},"loc":{"start":{"line":6,"column":23},"end":{"line":8,"column":1}},"line":6},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":20},"end":{"line":21,"column":3}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":2},"end":{"line":22,"column":3}},"loc":{"start":{"line":22,"column":30},"end":{"line":31,"column":3}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":11},"end":{"line":68,"column":3}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":49},"end":{"line":42,"column":50}},"loc":{"start":{"line":42,"column":72},"end":{"line":45,"column":9}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":47,"column":37},"end":{"line":47,"column":38}},"loc":{"start":{"line":47,"column":58},"end":{"line":50,"column":9}},"line":47}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":77},"end":{"line":4,"column":123}},"type":"cond-expr","locations":[{"start":{"line":4,"column":101},"end":{"line":4,"column":104}},{"start":{"line":4,"column":107},"end":{"line":4,"column":123}}],"line":4},"1":{"loc":{"start":{"line":4,"column":77},"end":{"line":4,"column":98}},"type":"binary-expr","locations":[{"start":{"line":4,"column":77},"end":{"line":4,"column":80}},{"start":{"line":4,"column":84},"end":{"line":4,"column":98}}],"line":4},"2":{"loc":{"start":{"line":4,"column":168},"end":{"line":4,"column":315}},"type":"if","locations":[{"start":{"line":4,"column":168},"end":{"line":4,"column":315}},{"start":{"line":4,"column":168},"end":{"line":4,"column":315}}],"line":4},"3":{"loc":{"start":{"line":35,"column":4},"end":{"line":54,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":54,"column":5}},{"start":{"line":35,"column":4},"end":{"line":54,"column":5}}],"line":35},"4":{"loc":{"start":{"line":41,"column":6},"end":{"line":51,"column":7}},"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":51,"column":7}},{"start":{"line":41,"column":6},"end":{"line":51,"column":7}}],"line":41},"5":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{"line":55,"column":4},"end":{"line":57,"column":5}}],"line":55},"6":{"loc":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},{"start":{"line":58,"column":4},"end":{"line":60,"column":5}}],"line":58},"7":{"loc":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},{"start":{"line":61,"column":4},"end":{"line":63,"column":5}}],"line":61},"8":{"loc":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},{"start":{"line":64,"column":4},"end":{"line":66,"column":5}}],"line":64}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":24,"7":0,"8":24,"9":24,"10":2,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":0,"20":4,"21":4,"22":4,"23":2,"24":2,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":2,"32":2,"33":4,"34":0,"35":4,"36":3,"37":4,"38":0,"39":4,"40":4,"41":4,"42":1},"f":{"0":1,"1":24,"2":2,"3":4,"4":0,"5":4,"6":1,"7":1},"b":{"0":[1,0],"1":[1,1],"2":[0,24],"3":[2,2],"4":[1,1],"5":[0,4],"6":[3,1],"7":[0,4],"8":[4,0]},"inputSourceMap":{"version":3,"sources":["filterinfo.ts"],"names":["isArgMap","obj","Map","FilterInfo","constructor","data","Object","assign","address","Address","fromGrpc","grpcObject","args","JSON","parse","Buffer","from","getArgfilter_asU8","toString","getContractaddress_asU8","eventName","getEventname","blockfrom","getBlockfrom","blockto","getBlockto","desc","getDesc","toGrpc","fi","GrpcFilterInfo","setContractaddress","asBytes","argsAsObj","argsObj","Array","reduce","idx","value","argsAsJson","stringify","setArgfilter","setEventname","setBlockfrom","setBlockto","setDesc"],"mappings":"oGAAA;AACA;;AAEA,gC;;AAEA,SAASA,QAAT,CAAkBC,GAAlB,EAAwE;AACpE,SAAOA,GAAG,YAAYC,GAAtB;AACH;;AAEc,MAAMC,UAAN,CAAiB;;;;;;;;AAQ5BC,EAAAA,WAAW,CAACC,IAAD,EAA4B,8JAJlB,CAIkB,mCAHpB,CAGoB,gCAFtB,IAEsB;AACnCC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACA,SAAKG,OAAL,GAAe,IAAIC,gBAAJ,CAAY,KAAKD,OAAjB,CAAf;AACH;AACD,SAAOE,QAAP,CAAgBC,UAAhB,EAAwD;AACpD,WAAO,IAAIR,UAAJ,CAAe;AAClBS,MAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,eAAOC,IAAP,CAAYL,UAAU,CAACM,iBAAX,EAAZ,EAA4CC,QAA5C,EAAX,CADY;AAElBV,MAAAA,OAAO,EAAE,IAAIC,gBAAJ,CAAYE,UAAU,CAACQ,uBAAX,EAAZ,CAFS;AAGlBC,MAAAA,SAAS,EAAET,UAAU,CAACU,YAAX,EAHO;AAIlBC,MAAAA,SAAS,EAAEX,UAAU,CAACY,YAAX,EAJO;AAKlBC,MAAAA,OAAO,EAAEb,UAAU,CAACc,UAAX,EALS;AAMlBC,MAAAA,IAAI,EAAEf,UAAU,CAACgB,OAAX,EANY,EAAf,CAAP;;AAQH;AACDC,EAAAA,MAAM,GAAmB;AACrB,UAAMC,EAAE,GAAG,IAAIC,yBAAJ,EAAX;AACAD,IAAAA,EAAE,CAACE,kBAAH,CAAsB,KAAKvB,OAAL,CAAawB,OAAb,EAAtB;AACA,QAAI,KAAKpB,IAAT,EAAe;AACX;AACA;AACA;AACA,UAAIqB,SAAJ;AACA,YAAMC,OAA4B,GAAG,EAArC;AACA,UAAIlC,QAAQ,CAAC,KAAKY,IAAN,CAAZ,EAAyB;AACrBqB,QAAAA,SAAS,GAAGE,KAAK,CAACnB,IAAN,CAAW,KAAKJ,IAAhB,EAAsBwB,MAAtB,CAA6B,CAACnC,GAAD,EAAM,CAACoC,GAAD,EAAMC,KAAN,CAAN,KAAuB;AAC5DrC,UAAAA,GAAG,CAAC,KAAGoC,GAAJ,CAAH,GAAcC,KAAd;AACA,iBAAOrC,GAAP;AACH,SAHW,EAGTiC,OAHS,CAAZ;AAIH,OALD,MAKO;AACHD,QAAAA,SAAS,GAAG,KAAKrB,IAAL,CAAUwB,MAAV,CAAiB,CAACnC,GAAD,EAAMqC,KAAN,EAAaD,GAAb,KAAqB;AAC9CpC,UAAAA,GAAG,CAAC,KAAGoC,GAAJ,CAAH,GAAcC,KAAd;AACA,iBAAOrC,GAAP;AACH,SAHW,EAGTiC,OAHS,CAAZ;AAIH;AACD,YAAMK,UAAU,GAAG1B,IAAI,CAAC2B,SAAL,CAAeP,SAAf,CAAnB;AACAJ,MAAAA,EAAE,CAACY,YAAH,CAAgB1B,eAAOC,IAAP,CAAYuB,UAAZ,CAAhB;AACH;AACD,QAAI,KAAKnB,SAAT,EAAoB;AAChBS,MAAAA,EAAE,CAACa,YAAH,CAAgB,KAAKtB,SAArB;AACH;AACD,QAAI,KAAKE,SAAT,EAAoB;AAChBO,MAAAA,EAAE,CAACc,YAAH,CAAgB,KAAKrB,SAArB;AACH;AACD,QAAI,KAAKE,OAAT,EAAkB;AACdK,MAAAA,EAAE,CAACe,UAAH,CAAc,KAAKpB,OAAnB;AACH;AACD,QAAI,KAAKE,IAAT,EAAe;AACXG,MAAAA,EAAE,CAACgB,OAAH,CAAW,KAAKnB,IAAhB;AACH;AACD,WAAOG,EAAP;AACH,GA1D2B,C","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import Address from './address';\nimport { FilterInfo as GrpcFilterInfo } from '../../types/blockchain_pb';\nimport { PrimitiveType } from './contract';\nimport { Buffer } from 'buffer';\n\nfunction isArgMap(obj: any): obj is Map<number | string, PrimitiveType> {\n    return obj instanceof Map;\n}\n\nexport default class FilterInfo {\n    address!: Address;\n    args?: PrimitiveType[] | Map<number | string, PrimitiveType>;\n    eventName?: string;\n    blockfrom?: number = 0;\n    blockto?: number = 0;\n    desc?: boolean = true;\n\n    constructor(data: Partial<FilterInfo>) {\n        Object.assign(this, data);\n        this.address = new Address(this.address as any);\n    }\n    static fromGrpc(grpcObject: GrpcFilterInfo): FilterInfo {\n        return new FilterInfo({\n            args: JSON.parse(Buffer.from(grpcObject.getArgfilter_asU8()).toString()),\n            address: new Address(grpcObject.getContractaddress_asU8()),\n            eventName: grpcObject.getEventname(),\n            blockfrom: grpcObject.getBlockfrom(),\n            blockto: grpcObject.getBlockto(),\n            desc: grpcObject.getDesc()\n        });\n    }\n    toGrpc(): GrpcFilterInfo {\n        const fi = new GrpcFilterInfo();\n        fi.setContractaddress(this.address.asBytes());\n        if (this.args) {\n            // The RPC handler only understands maps, not simple arrays\n            // The advantage of this is that you can query positional arguments directly\n            // Herajs supports both, so pass args either as a Map([[idx, value]]) or 0-indexed array [value]\n            let argsAsObj;\n            const argsObj: Record<string, any> = {};\n            if (isArgMap(this.args)) {\n                argsAsObj = Array.from(this.args).reduce((obj, [idx, value]) => {\n                    obj[''+idx] = value;\n                    return obj;\n                }, argsObj);\n            } else {\n                argsAsObj = this.args.reduce((obj, value, idx) => {\n                    obj[''+idx] = value;\n                    return obj;\n                }, argsObj);\n            }\n            const argsAsJson = JSON.stringify(argsAsObj);\n            fi.setArgfilter(Buffer.from(argsAsJson));\n        }\n        if (this.eventName) {\n            fi.setEventname(this.eventName);\n        }\n        if (this.blockfrom) {\n            fi.setBlockfrom(this.blockfrom);\n        }\n        if (this.blockto) {\n            fi.setBlockto(this.blockto);\n        }\n        if (this.desc) {\n            fi.setDesc(this.desc);\n        }\n        return fi;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1dd73bc4c55e7d6accbfcbd0e334bd157fbdd125","contentHash":"83bbe39d25e1c17f8531d5f7e812e8e87ed39f808a47a66f1d3404bb5619779f"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/peer.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/peer.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":95}},"2":{"start":{"line":1,"column":95},"end":{"line":1,"column":120}},"3":{"start":{"line":1,"column":134},"end":{"line":1,"column":159}},"4":{"start":{"line":3,"column":15},"end":{"line":3,"column":45}},"5":{"start":{"line":4,"column":13},"end":{"line":4,"column":55}},"6":{"start":{"line":4,"column":94},"end":{"line":4,"column":148}},"7":{"start":{"line":4,"column":202},"end":{"line":4,"column":221}},"8":{"start":{"line":4,"column":222},"end":{"line":4,"column":467}},"9":{"start":{"line":4,"column":271},"end":{"line":4,"column":307}},"10":{"start":{"line":4,"column":308},"end":{"line":4,"column":435}},"11":{"start":{"line":4,"column":328},"end":{"line":4,"column":435}},"12":{"start":{"line":4,"column":369},"end":{"line":4,"column":432}},"13":{"start":{"line":4,"column":435},"end":{"line":4,"column":466}},"14":{"start":{"line":4,"column":467},"end":{"line":4,"column":479}},"15":{"start":{"line":4,"column":512},"end":{"line":4,"column":983}},"16":{"start":{"line":4,"column":525},"end":{"line":4,"column":526}},"17":{"start":{"line":4,"column":569},"end":{"line":4,"column":609}},"18":{"start":{"line":4,"column":610},"end":{"line":4,"column":982}},"19":{"start":{"line":4,"column":622},"end":{"line":4,"column":721}},"20":{"start":{"line":4,"column":676},"end":{"line":4,"column":718}},"21":{"start":{"line":4,"column":728},"end":{"line":4,"column":982}},"22":{"start":{"line":4,"column":767},"end":{"line":4,"column":841}},"23":{"start":{"line":4,"column":849},"end":{"line":4,"column":981}},"24":{"start":{"line":4,"column":897},"end":{"line":4,"column":978}},"25":{"start":{"line":4,"column":983},"end":{"line":4,"column":997}},"26":{"start":{"line":4,"column":1041},"end":{"line":4,"column":1188}},"27":{"start":{"line":4,"column":1058},"end":{"line":4,"column":1162}},"28":{"start":{"line":4,"column":1170},"end":{"line":4,"column":1187}},"29":{"start":{"line":4,"column":1188},"end":{"line":4,"column":1199}},"30":{"start":{"line":9,"column":2},"end":{"line":9,"column":24}},"31":{"start":{"line":17,"column":21},"end":{"line":17,"column":67}},"32":{"start":{"line":18,"column":4},"end":{"line":18,"column":30}},"33":{"start":{"line":21,"column":16},"end":{"line":21,"column":37}},"34":{"start":{"line":22,"column":22},"end":{"line":22,"column":47}},"35":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"36":{"start":{"line":24,"column":6},"end":{"line":24,"column":89}},"37":{"start":{"line":26,"column":20},"end":{"line":26,"column":43}},"38":{"start":{"line":27,"column":4},"end":{"line":33,"column":5}},"39":{"start":{"line":29,"column":6},"end":{"line":31,"column":80}},"40":{"start":{"line":34,"column":4},"end":{"line":34,"column":25}},"41":{"start":{"line":37,"column":18},"end":{"line":37,"column":27}},"42":{"start":{"line":38,"column":16},"end":{"line":38,"column":73}},"43":{"start":{"line":38,"column":40},"end":{"line":38,"column":72}},"44":{"start":{"line":39,"column":4},"end":{"line":39,"column":21}},"45":{"start":{"line":42,"column":4},"end":{"line":42,"column":39}},"46":{"start":{"line":43,"column":4},"end":{"line":43,"column":27}},"47":{"start":{"line":43,"column":27},"end":{"line":43,"column":76}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":4,"column":65},"end":{"line":4,"column":87}},"loc":{"start":{"line":4,"column":93},"end":{"line":4,"column":149}},"line":4},"1":{"name":"ownKeys","decl":{"start":{"line":4,"column":158},"end":{"line":4,"column":165}},"loc":{"start":{"line":4,"column":190},"end":{"line":4,"column":480}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":4,"column":353},"end":{"line":4,"column":354}},"loc":{"start":{"line":4,"column":368},"end":{"line":4,"column":433}},"line":4},"3":{"name":"_objectSpread","decl":{"start":{"line":4,"column":489},"end":{"line":4,"column":502}},"loc":{"start":{"line":4,"column":511},"end":{"line":4,"column":998}},"line":4},"4":{"name":"(anonymous_4)","decl":{"start":{"line":4,"column":660},"end":{"line":4,"column":661}},"loc":{"start":{"line":4,"column":675},"end":{"line":4,"column":719}},"line":4},"5":{"name":"(anonymous_5)","decl":{"start":{"line":4,"column":881},"end":{"line":4,"column":882}},"loc":{"start":{"line":4,"column":896},"end":{"line":4,"column":979}},"line":4},"6":{"name":"_defineProperty","decl":{"start":{"line":4,"column":1007},"end":{"line":4,"column":1022}},"loc":{"start":{"line":4,"column":1040},"end":{"line":4,"column":1200}},"line":4},"7":{"name":"keys","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":13}},"loc":{"start":{"line":8,"column":17},"end":{"line":10,"column":1}},"line":8},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":2},"end":{"line":17,"column":3}},"loc":{"start":{"line":17,"column":20},"end":{"line":19,"column":3}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":2},"end":{"line":20,"column":3}},"loc":{"start":{"line":20,"column":30},"end":{"line":35,"column":3}},"line":20},"10":{"name":"(anonymous_10)","decl":{"start":{"line":36,"column":2},"end":{"line":36,"column":3}},"loc":{"start":{"line":36,"column":26},"end":{"line":40,"column":3}},"line":36},"11":{"name":"(anonymous_11)","decl":{"start":{"line":38,"column":33},"end":{"line":38,"column":34}},"loc":{"start":{"line":38,"column":40},"end":{"line":38,"column":72}},"line":38},"12":{"name":"(anonymous_12)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":11},"end":{"line":43,"column":3}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":101},"end":{"line":4,"column":147}},"type":"cond-expr","locations":[{"start":{"line":4,"column":125},"end":{"line":4,"column":128}},{"start":{"line":4,"column":131},"end":{"line":4,"column":147}}],"line":4},"1":{"loc":{"start":{"line":4,"column":101},"end":{"line":4,"column":122}},"type":"binary-expr","locations":[{"start":{"line":4,"column":101},"end":{"line":4,"column":104}},{"start":{"line":4,"column":108},"end":{"line":4,"column":122}}],"line":4},"2":{"loc":{"start":{"line":4,"column":222},"end":{"line":4,"column":467}},"type":"if","locations":[{"start":{"line":4,"column":222},"end":{"line":4,"column":467}},{"start":{"line":4,"column":222},"end":{"line":4,"column":467}}],"line":4},"3":{"loc":{"start":{"line":4,"column":308},"end":{"line":4,"column":435}},"type":"if","locations":[{"start":{"line":4,"column":308},"end":{"line":4,"column":435}},{"start":{"line":4,"column":308},"end":{"line":4,"column":435}}],"line":4},"4":{"loc":{"start":{"line":4,"column":569},"end":{"line":4,"column":609}},"type":"cond-expr","locations":[{"start":{"line":4,"column":592},"end":{"line":4,"column":604}},{"start":{"line":4,"column":607},"end":{"line":4,"column":609}}],"line":4},"5":{"loc":{"start":{"line":4,"column":610},"end":{"line":4,"column":982}},"type":"if","locations":[{"start":{"line":4,"column":610},"end":{"line":4,"column":982}},{"start":{"line":4,"column":610},"end":{"line":4,"column":982}}],"line":4},"6":{"loc":{"start":{"line":4,"column":728},"end":{"line":4,"column":982}},"type":"if","locations":[{"start":{"line":4,"column":728},"end":{"line":4,"column":982}},{"start":{"line":4,"column":728},"end":{"line":4,"column":982}}],"line":4},"7":{"loc":{"start":{"line":4,"column":1041},"end":{"line":4,"column":1188}},"type":"if","locations":[{"start":{"line":4,"column":1041},"end":{"line":4,"column":1188}},{"start":{"line":4,"column":1041},"end":{"line":4,"column":1188}}],"line":4},"8":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{"line":23,"column":4},"end":{"line":25,"column":5}}],"line":23},"9":{"loc":{"start":{"line":23,"column":8},"end":{"line":23,"column":34}},"type":"binary-expr","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":17}},{"start":{"line":23,"column":21},"end":{"line":23,"column":34}}],"line":23},"10":{"loc":{"start":{"line":27,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":33,"column":5}},{"start":{"line":27,"column":4},"end":{"line":33,"column":5}}],"line":27},"11":{"loc":{"start":{"line":39,"column":11},"end":{"line":39,"column":20}},"type":"binary-expr","locations":[{"start":{"line":39,"column":11},"end":{"line":39,"column":14}},{"start":{"line":39,"column":18},"end":{"line":39,"column":20}}],"line":39}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":1,"16":1,"17":2,"18":2,"19":1,"20":7,"21":1,"22":1,"23":0,"24":0,"25":1,"26":9,"27":0,"28":9,"29":9,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":2,"44":1,"45":0,"46":1,"47":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":7,"5":0,"6":9,"7":1,"8":1,"9":1,"10":1,"11":2,"12":0},"b":{"0":[1,0],"1":[1,1],"2":[1,0],"3":[1,0],"4":[2,0],"5":[1,1],"6":[1,0],"7":[0,9],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0]},"inputSourceMap":{"version":3,"sources":["peer.ts"],"names":["keys","o","Object","Peer","constructor","data","assign","fromGrpc","grpcObject","obj","toObject","bestblock","getBestblock","blockhash","Block","encodeHash","getBlockhash_asU8","address","getAddress","peerid","base58","encode","Buffer","from","getPeerid_asU8","acceptedroleLabel","roles","Role","key","find","acceptedrole","toGrpc","Error","PeerRole"],"mappings":"wHAAA;;AAEA;AACA,wD;;;;AAIO,SAASA,IAAT,CAAiBC,CAAjB,EAAoC;AACvC,SAAOC,MAAM,CAACF,IAAP,CAAYC,CAAZ,CAAP;AACH;;AAEc,MAAME,IAAN,CAAW;;;;;AAKtBC,EAAAA,WAAW,CAACC,IAAD,EAAsB;AAC7BH,IAAAA,MAAM,CAACI,MAAP,CAAc,IAAd,EAAoBD,IAApB;AACH;AACD,SAAOE,QAAP,CAAgBC,UAAhB,EAA4C;AACxC,UAAMC,GAAsB,GAAGD,UAAU,CAACE,QAAX,EAA/B;AACA,UAAMC,SAAS,GAAGH,UAAU,CAACI,YAAX,EAAlB;AACA,QAAID,SAAS,IAAIF,GAAG,CAACE,SAArB,EAAgC;AAC5BF,MAAAA,GAAG,CAACE,SAAJ,CAAcE,SAAd,GAA0BC,eAAMC,UAAN,CAAiBJ,SAAS,CAACK,iBAAV,EAAjB,CAA1B;AACH;AACD,UAAMC,OAAO,GAAGT,UAAU,CAACU,UAAX,EAAhB;AACA,QAAID,OAAJ,EAAa;AACT;AACAR,MAAAA,GAAG,CAACQ,OAAJ;AACOR,MAAAA,GAAG,CAACQ,OADX;AAEIE,QAAAA,MAAM,EAAEC,eAAOC,MAAP,CAAcC,MAAM,CAACC,IAAP,CAAYN,OAAO,CAACO,cAAR,EAAZ,CAAd,CAFZ;;AAIH;AACD,WAAO,IAAIrB,IAAJ,CAASM,GAAT,CAAP;AACH;AACD,MAAIgB,iBAAJ,GAAgC;AAC5B,UAAMC,KAAK,GAAGvB,IAAI,CAACwB,IAAnB;AACA,UAAMC,GAAG,GAAG5B,IAAI,CAAC0B,KAAD,CAAJ,CAAYG,IAAZ,CAAiBD,GAAG,IAAIF,KAAK,CAACE,GAAD,CAAL,KAAe,KAAKE,YAA5C,CAAZ;AACA,WAAOF,GAAG,IAAI,EAAd;AACH;AACDG,EAAAA,MAAM,GAAU;AACZ,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH,GA/BqB,C,uCAAL7B,I,UACM8B,iB","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import { base58 } from '@herajs/common';\nimport { Peer as GrpcPeer } from '../../types/rpc_pb';\nimport { PeerRole, PeerRoleMap } from '../../types/node_pb';\nimport Block from './block';\n\ntype RoleValue = PeerRoleMap[keyof PeerRoleMap];\n\nexport function keys<O>(o: O): (keyof O)[] {\n    return Object.keys(o) as (keyof O)[];\n}\n\nexport default class Peer {\n    static readonly Role = PeerRole;\n\n    acceptedrole!: RoleValue;\n\n    constructor(data: Partial<Peer>) {\n        Object.assign(this, data);\n    }\n    static fromGrpc(grpcObject: GrpcPeer): Peer {\n        const obj: GrpcPeer.AsObject = grpcObject.toObject();\n        const bestblock = grpcObject.getBestblock();\n        if (bestblock && obj.bestblock) {\n            obj.bestblock.blockhash = Block.encodeHash(bestblock.getBlockhash_asU8());\n        }\n        const address = grpcObject.getAddress();\n        if (address) {\n            // @ts-ignore\n            obj.address = {\n                ...obj.address,\n                peerid: base58.encode(Buffer.from(address.getPeerid_asU8())),\n            };\n        }\n        return new Peer(obj as Partial<Peer>);\n    }\n    get acceptedroleLabel(): string {\n        const roles = Peer.Role;\n        const key = keys(roles).find(key => roles[key] === this.acceptedrole);\n        return key || '';\n    }\n    toGrpc(): never {\n        throw new Error('Not implemented');\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"16fe51486590d663b90a866b35858ba267e18630","contentHash":"37dd5ee0210c1b07866c1e3c2edc52b2cde7c60c2b1ee50428a37be179edb9fd"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/state.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/state.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":2,"column":14},"end":{"line":2,"column":39}},"3":{"start":{"line":2,"column":83},"end":{"line":2,"column":230}},"4":{"start":{"line":2,"column":100},"end":{"line":2,"column":204}},"5":{"start":{"line":2,"column":212},"end":{"line":2,"column":229}},"6":{"start":{"line":2,"column":230},"end":{"line":2,"column":241}},"7":{"start":{"line":11,"column":21},"end":{"line":11,"column":60}},"8":{"start":{"line":11,"column":60},"end":{"line":11,"column":101}},"9":{"start":{"line":11,"column":101},"end":{"line":11,"column":143}},"10":{"start":{"line":11,"column":143},"end":{"line":11,"column":188}},"11":{"start":{"line":11,"column":188},"end":{"line":11,"column":238}},"12":{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},"13":{"start":{"line":16,"column":4},"end":{"line":21,"column":60}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":39}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":28}}},"fnMap":{"0":{"name":"_defineProperty","decl":{"start":{"line":2,"column":49},"end":{"line":2,"column":64}},"loc":{"start":{"line":2,"column":82},"end":{"line":2,"column":242}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":2},"end":{"line":11,"column":3}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":3}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":30},"end":{"line":23,"column":3}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":2},"end":{"line":25,"column":3}},"loc":{"start":{"line":25,"column":11},"end":{"line":27,"column":3}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":83},"end":{"line":2,"column":230}},"type":"if","locations":[{"start":{"line":2,"column":83},"end":{"line":2,"column":230}},{"start":{"line":2,"column":83},"end":{"line":2,"column":230}}],"line":2}},"s":{"0":1,"1":1,"2":1,"3":10,"4":0,"5":10,"6":10,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":0,"15":1},"f":{"0":10,"1":2,"2":2,"3":0},"b":{"0":[0,10]},"inputSourceMap":{"version":3,"sources":["state.ts"],"names":["State","constructor","data","Object","assign","fromGrpc","grpcObject","nonce","getNonce","balance","Amount","getBalance_asU8","codehash","getCodehash_asB64","storageroot","getStorageroot_asB64","sqlrecoverypoint","getSqlrecoverypoint","toGrpc","Error"],"mappings":";AACA,wC;;AAEe,MAAMA,KAAN,CAAY;;;;;;;AAOvBC,EAAAA,WAAW,CAACC,IAAD,EAAuB;AAC9BC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACH;;AAED,SAAOG,QAAP,CAAgBC,UAAhB,EAA8C;AAC1C,WAAO,IAAIN,KAAJ,CAAU;AACbO,MAAAA,KAAK,EAAED,UAAU,CAACE,QAAX,EADM;AAEbC,MAAAA,OAAO,EAAE,IAAIC,cAAJ,CAAWJ,UAAU,CAACK,eAAX,EAAX,CAFI;AAGbC,MAAAA,QAAQ,EAAEN,UAAU,CAACO,iBAAX,EAHG;AAIbC,MAAAA,WAAW,EAAER,UAAU,CAACS,oBAAX,EAJA;AAKbC,MAAAA,gBAAgB,EAAEV,UAAU,CAACW,mBAAX,EALL,EAAV,CAAP;;AAOH;;AAEDC,EAAAA,MAAM,GAAU;AACZ,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH,GAvBsB,C","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import { State as GrpcState } from '../../types/blockchain_pb';\nimport { Amount } from '@herajs/common';\n\nexport default class State {\n    nonce!: number;\n    balance!: Amount;\n    codehash!: string;\n    storageroot!: string;\n    sqlrecoverypoint!: number;\n\n    constructor(data: Partial<State>) {\n        Object.assign(this, data);\n    }\n\n    static fromGrpc(grpcObject: GrpcState): State {\n        return new State({\n            nonce: grpcObject.getNonce(),\n            balance: new Amount(grpcObject.getBalance_asU8()),\n            codehash: grpcObject.getCodehash_asB64(),\n            storageroot: grpcObject.getStorageroot_asB64(),\n            sqlrecoverypoint: grpcObject.getSqlrecoverypoint()\n        });\n    }\n\n    toGrpc(): never {\n        throw new Error('not implemented');\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"741edb4f433290f2f7606bd86b2641efe8c2c83b","contentHash":"9a33071e1b01698f52e3d51c8022a1c90d49ee1c49b0455fbfd824e8c4aa5c17"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/statequeryproof.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models/statequeryproof.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":6,"column":13},"end":{"line":6,"column":55}},"3":{"start":{"line":6,"column":94},"end":{"line":6,"column":148}},"4":{"start":{"line":6,"column":192},"end":{"line":6,"column":339}},"5":{"start":{"line":6,"column":209},"end":{"line":6,"column":313}},"6":{"start":{"line":6,"column":321},"end":{"line":6,"column":338}},"7":{"start":{"line":6,"column":339},"end":{"line":6,"column":350}},"8":{"start":{"line":23,"column":21},"end":{"line":23,"column":64}},"9":{"start":{"line":23,"column":64},"end":{"line":23,"column":101}},"10":{"start":{"line":23,"column":101},"end":{"line":23,"column":140}},"11":{"start":{"line":23,"column":140},"end":{"line":23,"column":182}},"12":{"start":{"line":23,"column":182},"end":{"line":23,"column":224}},"13":{"start":{"line":23,"column":224},"end":{"line":23,"column":264}},"14":{"start":{"line":23,"column":264},"end":{"line":23,"column":304}},"15":{"start":{"line":23,"column":304},"end":{"line":23,"column":347}},"16":{"start":{"line":24,"column":4},"end":{"line":24,"column":30}},"17":{"start":{"line":28,"column":21},"end":{"line":28,"column":47}},"18":{"start":{"line":29,"column":16},"end":{"line":29,"column":25}},"19":{"start":{"line":30,"column":4},"end":{"line":36,"column":5}},"20":{"start":{"line":31,"column":6},"end":{"line":35,"column":7}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":61}},"22":{"start":{"line":34,"column":8},"end":{"line":34,"column":21}},"23":{"start":{"line":38,"column":4},"end":{"line":46,"column":55}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":39}},"25":{"start":{"line":64,"column":21},"end":{"line":64,"column":60}},"26":{"start":{"line":64,"column":60},"end":{"line":64,"column":103}},"27":{"start":{"line":64,"column":103},"end":{"line":64,"column":140}},"28":{"start":{"line":64,"column":140},"end":{"line":64,"column":182}},"29":{"start":{"line":64,"column":182},"end":{"line":64,"column":224}},"30":{"start":{"line":64,"column":224},"end":{"line":64,"column":264}},"31":{"start":{"line":64,"column":264},"end":{"line":64,"column":304}},"32":{"start":{"line":64,"column":304},"end":{"line":64,"column":347}},"33":{"start":{"line":65,"column":4},"end":{"line":65,"column":30}},"34":{"start":{"line":69,"column":18},"end":{"line":69,"column":39}},"35":{"start":{"line":70,"column":4},"end":{"line":78,"column":55}},"36":{"start":{"line":82,"column":4},"end":{"line":82,"column":39}},"37":{"start":{"line":90,"column":21},"end":{"line":90,"column":68}},"38":{"start":{"line":90,"column":68},"end":{"line":90,"column":111}},"39":{"start":{"line":91,"column":4},"end":{"line":91,"column":30}},"40":{"start":{"line":95,"column":26},"end":{"line":95,"column":55}},"41":{"start":{"line":96,"column":4},"end":{"line":100,"column":12}},"42":{"start":{"line":99,"column":8},"end":{"line":99,"column":53}},"43":{"start":{"line":104,"column":4},"end":{"line":104,"column":39}},"44":{"start":{"line":105,"column":4},"end":{"line":105,"column":38}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":6,"column":65},"end":{"line":6,"column":87}},"loc":{"start":{"line":6,"column":93},"end":{"line":6,"column":149}},"line":6},"1":{"name":"_defineProperty","decl":{"start":{"line":6,"column":158},"end":{"line":6,"column":173}},"loc":{"start":{"line":6,"column":191},"end":{"line":6,"column":351}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":20},"end":{"line":25,"column":3}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":30},"end":{"line":48,"column":3}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":49,"column":2},"end":{"line":49,"column":3}},"loc":{"start":{"line":49,"column":11},"end":{"line":51,"column":3}},"line":49},"5":{"name":"(anonymous_5)","decl":{"start":{"line":64,"column":2},"end":{"line":64,"column":3}},"loc":{"start":{"line":64,"column":20},"end":{"line":66,"column":3}},"line":64},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":30},"end":{"line":80,"column":3}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":81,"column":2},"end":{"line":81,"column":3}},"loc":{"start":{"line":81,"column":11},"end":{"line":83,"column":3}},"line":81},"8":{"name":"(anonymous_8)","decl":{"start":{"line":90,"column":2},"end":{"line":90,"column":3}},"loc":{"start":{"line":90,"column":20},"end":{"line":92,"column":3}},"line":90},"9":{"name":"(anonymous_9)","decl":{"start":{"line":94,"column":2},"end":{"line":94,"column":3}},"loc":{"start":{"line":94,"column":30},"end":{"line":102,"column":3}},"line":94},"10":{"name":"(anonymous_10)","decl":{"start":{"line":98,"column":51},"end":{"line":98,"column":52}},"loc":{"start":{"line":98,"column":65},"end":{"line":100,"column":7}},"line":98},"11":{"name":"(anonymous_11)","decl":{"start":{"line":103,"column":2},"end":{"line":103,"column":3}},"loc":{"start":{"line":103,"column":11},"end":{"line":105,"column":3}},"line":103}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":101},"end":{"line":6,"column":147}},"type":"cond-expr","locations":[{"start":{"line":6,"column":125},"end":{"line":6,"column":128}},{"start":{"line":6,"column":131},"end":{"line":6,"column":147}}],"line":6},"1":{"loc":{"start":{"line":6,"column":101},"end":{"line":6,"column":122}},"type":"binary-expr","locations":[{"start":{"line":6,"column":101},"end":{"line":6,"column":104}},{"start":{"line":6,"column":108},"end":{"line":6,"column":122}}],"line":6},"2":{"loc":{"start":{"line":6,"column":192},"end":{"line":6,"column":339}},"type":"if","locations":[{"start":{"line":6,"column":192},"end":{"line":6,"column":339}},{"start":{"line":6,"column":192},"end":{"line":6,"column":339}}],"line":6},"3":{"loc":{"start":{"line":30,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":36,"column":5}},{"start":{"line":30,"column":4},"end":{"line":36,"column":5}}],"line":30},"4":{"loc":{"start":{"line":31,"column":6},"end":{"line":35,"column":7}},"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":35,"column":7}},{"start":{"line":31,"column":6},"end":{"line":35,"column":7}}],"line":31},"5":{"loc":{"start":{"line":71,"column":13},"end":{"line":71,"column":63}},"type":"cond-expr","locations":[{"start":{"line":71,"column":21},"end":{"line":71,"column":51}},{"start":{"line":71,"column":54},"end":{"line":71,"column":63}}],"line":71},"6":{"loc":{"start":{"line":97,"column":21},"end":{"line":97,"column":85}},"type":"cond-expr","locations":[{"start":{"line":97,"column":37},"end":{"line":97,"column":73}},{"start":{"line":97,"column":76},"end":{"line":97,"column":85}}],"line":97}},"s":{"0":1,"1":1,"2":1,"3":1,"4":34,"5":0,"6":34,"7":34,"8":3,"9":3,"10":3,"11":3,"12":3,"13":3,"14":3,"15":3,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":0,"23":3,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":1,"38":1,"39":1,"40":1,"41":1,"42":3,"43":0,"44":1},"f":{"0":1,"1":34,"2":3,"3":3,"4":0,"5":1,"6":1,"7":0,"8":1,"9":1,"10":3,"11":0},"b":{"0":[1,0],"1":[1,1],"2":[0,34],"3":[3,0],"4":[3,0],"5":[1,0],"6":[1,0]},"inputSourceMap":{"version":3,"sources":["statequeryproof.ts"],"names":["ContractVarProof","constructor","data","Object","assign","fromGrpc","grpcObject","valueRaw","getValue_asU8","value","undefined","getInclusion","length","JSON","parse","Buffer","from","toString","inclusion","key","getKey_asU8","proofKey","getProofkey_asU8","proofVal","getProofval_asU8","bitmap","getBitmap_asU8","height","getHeight","auditPath","getAuditpathList_asU8","toGrpc","Error","AccountProof","state","getState","State","StateQueryProof","contractProof","getContractproof","varProofs","getVarproofsList","map"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/models","sourcesContent":["import {\n    StateQueryProof as GrpcStateQueryProof,\n    ContractVarProof as GrpcContractVarProof,\n    AccountProof as GrpcAccountProof,\n} from '../../types/blockchain_pb';\nimport State from './state';\n\nexport type BasicType = number | string | boolean | null;\nexport interface JsonData {\n    [prop: string]: BasicType | BasicType[] | JsonData[] | JsonData;\n}\n\nclass ContractVarProof {\n    inclusion!: boolean;\n    key!: Uint8Array;\n    value?: JsonData | BasicType;\n    proofKey!: Uint8Array;\n    proofVal!: Uint8Array;\n    bitmap!: Uint8Array;\n    height!: number;\n    auditPath!: Uint8Array[];\n    \n    constructor(data: Partial<ContractVarProof>) {\n        Object.assign(this, data);\n    }\n    \n    static fromGrpc(grpcObject: GrpcContractVarProof): ContractVarProof {\n        const valueRaw = grpcObject.getValue_asU8();\n        let value = undefined;\n        if (grpcObject.getInclusion()) {\n            if (valueRaw.length > 0) {\n                value = JSON.parse(Buffer.from(valueRaw).toString());\n            } else {\n                value = null;\n            }\n        }\n        \n        return new ContractVarProof({\n            inclusion: grpcObject.getInclusion(),\n            key: grpcObject.getKey_asU8(),\n            value,\n            proofKey: grpcObject.getProofkey_asU8(),\n            proofVal: grpcObject.getProofval_asU8(),\n            bitmap: grpcObject.getBitmap_asU8(),\n            height: grpcObject.getHeight(),\n            auditPath: grpcObject.getAuditpathList_asU8(),\n        });\n    }\n    toGrpc(): never {\n        throw new Error('Not implemented');\n    }\n}\n\nclass AccountProof {\n    state!: State;\n    inclusion!: boolean;\n    key!: Uint8Array;\n    proofKey!: Uint8Array;\n    proofVal!: Uint8Array;\n    bitmap!: Uint8Array;\n    height!: number;\n    auditPath!: Uint8Array[];\n    \n    constructor(data: Partial<AccountProof>) {\n        Object.assign(this, data);\n    }\n    \n    static fromGrpc(grpcObject: GrpcAccountProof): AccountProof {\n        const state = grpcObject.getState();\n        return new AccountProof({\n            state: state ? State.fromGrpc(state) : undefined,\n            inclusion: grpcObject.getInclusion(),\n            key: grpcObject.getKey_asU8(),\n            proofKey: grpcObject.getProofkey_asU8(),\n            proofVal: grpcObject.getProofval_asU8(),\n            bitmap: grpcObject.getBitmap_asU8(),\n            height: grpcObject.getHeight(),\n            auditPath: grpcObject.getAuditpathList_asU8(),\n        });\n    }\n    toGrpc(): never {\n        throw new Error('Not implemented');\n    }\n}\n\nexport default class StateQueryProof {\n    contractProof!: ContractVarProof;\n    varProofs!: ContractVarProof[];\n    \n    constructor(data: Partial<StateQueryProof>) {\n        Object.assign(this, data);\n    }\n    \n    static fromGrpc(grpcObject: GrpcStateQueryProof): StateQueryProof {\n        const contractProof = grpcObject.getContractproof();\n        return new StateQueryProof({\n            contractProof: contractProof ? AccountProof.fromGrpc(contractProof) : undefined,\n            varProofs: grpcObject.getVarproofsList().map((grpcObject) => {\n                return ContractVarProof.fromGrpc(grpcObject);\n            })\n        });\n    }\n    toGrpc(): never {\n        throw new Error('Not implemented');\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1f1a027fa2911e6679800c94ea53ee6587b68252","contentHash":"385cd7f9f7e3bc95a26c29955d3ef6dd0fefde92c26f7180693e76408e8e4e76"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/providers/grpc.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/providers/grpc.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":1,"column":119},"end":{"line":1,"column":153}},"3":{"start":{"line":2,"column":12},"end":{"line":2,"column":51}},"4":{"start":{"line":2,"column":90},"end":{"line":2,"column":144}},"5":{"start":{"line":2,"column":198},"end":{"line":2,"column":217}},"6":{"start":{"line":2,"column":218},"end":{"line":2,"column":463}},"7":{"start":{"line":2,"column":267},"end":{"line":2,"column":303}},"8":{"start":{"line":2,"column":304},"end":{"line":2,"column":431}},"9":{"start":{"line":2,"column":324},"end":{"line":2,"column":431}},"10":{"start":{"line":2,"column":365},"end":{"line":2,"column":428}},"11":{"start":{"line":2,"column":431},"end":{"line":2,"column":462}},"12":{"start":{"line":2,"column":463},"end":{"line":2,"column":475}},"13":{"start":{"line":2,"column":508},"end":{"line":2,"column":979}},"14":{"start":{"line":2,"column":521},"end":{"line":2,"column":522}},"15":{"start":{"line":2,"column":565},"end":{"line":2,"column":605}},"16":{"start":{"line":2,"column":606},"end":{"line":2,"column":978}},"17":{"start":{"line":2,"column":618},"end":{"line":2,"column":717}},"18":{"start":{"line":2,"column":672},"end":{"line":2,"column":714}},"19":{"start":{"line":2,"column":724},"end":{"line":2,"column":978}},"20":{"start":{"line":2,"column":763},"end":{"line":2,"column":837}},"21":{"start":{"line":2,"column":845},"end":{"line":2,"column":977}},"22":{"start":{"line":2,"column":893},"end":{"line":2,"column":974}},"23":{"start":{"line":2,"column":979},"end":{"line":2,"column":993}},"24":{"start":{"line":2,"column":1037},"end":{"line":2,"column":1184}},"25":{"start":{"line":2,"column":1054},"end":{"line":2,"column":1158}},"26":{"start":{"line":2,"column":1166},"end":{"line":2,"column":1183}},"27":{"start":{"line":2,"column":1184},"end":{"line":2,"column":1195}},"28":{"start":{"line":24,"column":28},"end":{"line":24,"column":68}},"29":{"start":{"line":24,"column":68},"end":{"line":24,"column":108}},"30":{"start":{"line":25,"column":4},"end":{"line":27,"column":12}},"31":{"start":{"line":29,"column":22},"end":{"line":29,"column":64}},"32":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"33":{"start":{"line":31,"column":6},"end":{"line":31,"column":102}},"34":{"start":{"line":33,"column":4},"end":{"line":33,"column":118}},"35":{"start":{"line":37,"column":4},"end":{"line":38,"column":30}},"36":{"start":{"line":43,"column":0},"end":{"line":43,"column":12}},"37":{"start":{"line":43,"column":13},"end":{"line":43,"column":40}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":2,"column":61},"end":{"line":2,"column":83}},"loc":{"start":{"line":2,"column":89},"end":{"line":2,"column":145}},"line":2},"1":{"name":"ownKeys","decl":{"start":{"line":2,"column":154},"end":{"line":2,"column":161}},"loc":{"start":{"line":2,"column":186},"end":{"line":2,"column":476}},"line":2},"2":{"name":"(anonymous_2)","decl":{"start":{"line":2,"column":349},"end":{"line":2,"column":350}},"loc":{"start":{"line":2,"column":364},"end":{"line":2,"column":429}},"line":2},"3":{"name":"_objectSpread","decl":{"start":{"line":2,"column":485},"end":{"line":2,"column":498}},"loc":{"start":{"line":2,"column":507},"end":{"line":2,"column":994}},"line":2},"4":{"name":"(anonymous_4)","decl":{"start":{"line":2,"column":656},"end":{"line":2,"column":657}},"loc":{"start":{"line":2,"column":671},"end":{"line":2,"column":715}},"line":2},"5":{"name":"(anonymous_5)","decl":{"start":{"line":2,"column":877},"end":{"line":2,"column":878}},"loc":{"start":{"line":2,"column":892},"end":{"line":2,"column":975}},"line":2},"6":{"name":"_defineProperty","decl":{"start":{"line":2,"column":1003},"end":{"line":2,"column":1018}},"loc":{"start":{"line":2,"column":1036},"end":{"line":2,"column":1196}},"line":2},"7":{"name":"(anonymous_7)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":27},"end":{"line":34,"column":3}},"line":24},"8":{"name":"(anonymous_8)","decl":{"start":{"line":36,"column":2},"end":{"line":36,"column":3}},"loc":{"start":{"line":36,"column":22},"end":{"line":40,"column":3}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":97},"end":{"line":2,"column":143}},"type":"cond-expr","locations":[{"start":{"line":2,"column":121},"end":{"line":2,"column":124}},{"start":{"line":2,"column":127},"end":{"line":2,"column":143}}],"line":2},"1":{"loc":{"start":{"line":2,"column":97},"end":{"line":2,"column":118}},"type":"binary-expr","locations":[{"start":{"line":2,"column":97},"end":{"line":2,"column":100}},{"start":{"line":2,"column":104},"end":{"line":2,"column":118}}],"line":2},"2":{"loc":{"start":{"line":2,"column":218},"end":{"line":2,"column":463}},"type":"if","locations":[{"start":{"line":2,"column":218},"end":{"line":2,"column":463}},{"start":{"line":2,"column":218},"end":{"line":2,"column":463}}],"line":2},"3":{"loc":{"start":{"line":2,"column":304},"end":{"line":2,"column":431}},"type":"if","locations":[{"start":{"line":2,"column":304},"end":{"line":2,"column":431}},{"start":{"line":2,"column":304},"end":{"line":2,"column":431}}],"line":2},"4":{"loc":{"start":{"line":2,"column":565},"end":{"line":2,"column":605}},"type":"cond-expr","locations":[{"start":{"line":2,"column":588},"end":{"line":2,"column":600}},{"start":{"line":2,"column":603},"end":{"line":2,"column":605}}],"line":2},"5":{"loc":{"start":{"line":2,"column":606},"end":{"line":2,"column":978}},"type":"if","locations":[{"start":{"line":2,"column":606},"end":{"line":2,"column":978}},{"start":{"line":2,"column":606},"end":{"line":2,"column":978}}],"line":2},"6":{"loc":{"start":{"line":2,"column":724},"end":{"line":2,"column":978}},"type":"if","locations":[{"start":{"line":2,"column":724},"end":{"line":2,"column":978}},{"start":{"line":2,"column":724},"end":{"line":2,"column":978}}],"line":2},"7":{"loc":{"start":{"line":2,"column":1037},"end":{"line":2,"column":1184}},"type":"if","locations":[{"start":{"line":2,"column":1037},"end":{"line":2,"column":1184}},{"start":{"line":2,"column":1037},"end":{"line":2,"column":1184}}],"line":2},"8":{"loc":{"start":{"line":24,"column":14},"end":{"line":24,"column":25}},"type":"default-arg","locations":[{"start":{"line":24,"column":23},"end":{"line":24,"column":25}}],"line":24},"9":{"loc":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},{"start":{"line":30,"column":4},"end":{"line":32,"column":5}}],"line":30}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":14,"6":14,"7":14,"8":14,"9":14,"10":0,"11":14,"12":14,"13":7,"14":7,"15":21,"16":21,"17":14,"18":10,"19":7,"20":7,"21":0,"22":0,"23":7,"24":24,"25":3,"26":21,"27":24,"28":7,"29":7,"30":7,"31":7,"32":7,"33":2,"34":5,"35":7,"36":1,"37":1},"f":{"0":1,"1":14,"2":0,"3":7,"4":10,"5":0,"6":24,"7":7,"8":7},"b":{"0":[0,1],"1":[1,1],"2":[14,0],"3":[14,0],"4":[21,0],"5":[14,7],"6":[7,0],"7":[3,21],"8":[4],"9":[2,5]},"inputSourceMap":{"version":3,"sources":["grpc.ts"],"names":["GrpcProvider","constructor","config","defaultConfig","urlScheme","url","match","Error","client","AergoRPCServiceClient","grpc","credentials","createInsecure"],"mappings":"oGAAA;AACA,oD;;;;;;AAMA;;;;AAIA,MAAMA,YAAN,CAAmB;;;;AAIf;;;;;;;;AAQAC,EAAAA,WAAW,CAACC,MAA0B,GAAG,EAA9B,EAAkC;AACzC,SAAKA,MAAL;AACO,SAAKC,aADZ;AAEOD,IAAAA,MAFP;;AAIA,UAAME,SAAS,GAAG,KAAKF,MAAL,CAAYG,GAAZ,CAAgBC,KAAhB,CAAsB,mBAAtB,CAAlB;AACA,QAAIF,SAAJ,EAAe;AACX,YAAM,IAAIG,KAAJ,CAAW,+DAA8DH,SAAS,CAAC,CAAD,CAAI,GAAtF,CAAN;AACH;AACD,SAAKI,MAAL,GAAc,IAAIC,kCAAJ,CAA0B,KAAKP,MAAL,CAAYG,GAAtC,EAA2CK,cAAKC,WAAL,CAAiBC,cAAjB,EAA3C,CAAd;AACH;;AAED,MAAIT,aAAJ,GAAwC;AACpC,WAAO;AACHE,MAAAA,GAAG,EAAE,gBADF,EAAP;;AAGH,GA5Bc,C;;;AA+BJL,Y","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/providers","sourcesContent":["import { AergoRPCServiceClient } from '../../types/rpc_grpc_pb';\nimport grpc from 'grpc';\n\ninterface GrpcProviderConfig {\n    url?: string;\n}\n\n/**\n * Provider for standard GRPC connections over HTTP2.\n * This is only compatible with Node.js environments.\n */\nclass GrpcProvider {\n    client: any;\n    config: any;\n\n    /**\n     * .. code-block:: javascript\n     * \n     *     import { GrpcProvider } from '@herajs/client';\n     *     const provider = new GrpcProvider({url: 'localhost:7845'});\n     * \n     * @param {GrpcProviderConfig} config\n     */\n    constructor(config: GrpcProviderConfig = {}) {\n        this.config = {\n            ...this.defaultConfig,\n            ...config\n        };\n        const urlScheme = this.config.url.match(/^([a-z0-9]+):\\/\\//);\n        if (urlScheme) {\n            throw new Error(`URL for GrpcProvider should be provided without scheme (not ${urlScheme[1]})`);\n        }\n        this.client = new AergoRPCServiceClient(this.config.url, grpc.credentials.createInsecure()); \n    }\n\n    get defaultConfig(): GrpcProviderConfig {\n        return {\n            url: 'localhost:7845'\n        };\n    }\n}\n\nexport default GrpcProvider;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6c36835f2ae82b5e1dff8a45bed4c6e7b533a2de","contentHash":"6c9bfc43fa03d2e04c190bb04f8fa45efef182333f6f7de604242ced1e91b92e"},"/Users/paulgrau/projects/aergo/herajs/packages/client/types/rpc_grpc_pb.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/types/rpc_grpc_pb.js","statementMap":{"0":{"start":{"line":4,"column":11},"end":{"line":4,"column":26}},"1":{"start":{"line":5,"column":13},"end":{"line":5,"column":35}},"2":{"start":{"line":6,"column":20},"end":{"line":6,"column":49}},"3":{"start":{"line":7,"column":17},"end":{"line":7,"column":43}},"4":{"start":{"line":8,"column":14},"end":{"line":8,"column":37}},"5":{"start":{"line":9,"column":13},"end":{"line":9,"column":35}},"6":{"start":{"line":10,"column":16},"end":{"line":10,"column":41}},"7":{"start":{"line":11,"column":14},"end":{"line":11,"column":37}},"8":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":59}},"10":{"start":{"line":17,"column":2},"end":{"line":17,"column":44}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":73}},"12":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":63}},"14":{"start":{"line":28,"column":2},"end":{"line":28,"column":44}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":74}},"16":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":70}},"18":{"start":{"line":39,"column":2},"end":{"line":39,"column":44}},"19":{"start":{"line":43,"column":2},"end":{"line":43,"column":77}},"20":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"21":{"start":{"line":48,"column":4},"end":{"line":48,"column":70}},"22":{"start":{"line":50,"column":2},"end":{"line":50,"column":44}},"23":{"start":{"line":54,"column":2},"end":{"line":54,"column":77}},"24":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"25":{"start":{"line":59,"column":4},"end":{"line":59,"column":67}},"26":{"start":{"line":61,"column":2},"end":{"line":61,"column":44}},"27":{"start":{"line":65,"column":2},"end":{"line":65,"column":78}},"28":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"29":{"start":{"line":70,"column":4},"end":{"line":70,"column":68}},"30":{"start":{"line":72,"column":2},"end":{"line":72,"column":44}},"31":{"start":{"line":76,"column":2},"end":{"line":76,"column":82}},"32":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"33":{"start":{"line":81,"column":4},"end":{"line":81,"column":71}},"34":{"start":{"line":83,"column":2},"end":{"line":83,"column":44}},"35":{"start":{"line":87,"column":2},"end":{"line":87,"column":78}},"36":{"start":{"line":91,"column":2},"end":{"line":93,"column":3}},"37":{"start":{"line":92,"column":4},"end":{"line":92,"column":61}},"38":{"start":{"line":94,"column":2},"end":{"line":94,"column":44}},"39":{"start":{"line":98,"column":2},"end":{"line":98,"column":75}},"40":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"41":{"start":{"line":103,"column":4},"end":{"line":103,"column":70}},"42":{"start":{"line":105,"column":2},"end":{"line":105,"column":44}},"43":{"start":{"line":109,"column":2},"end":{"line":109,"column":77}},"44":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"45":{"start":{"line":114,"column":4},"end":{"line":114,"column":71}},"46":{"start":{"line":116,"column":2},"end":{"line":116,"column":44}},"47":{"start":{"line":120,"column":2},"end":{"line":120,"column":78}},"48":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"49":{"start":{"line":125,"column":4},"end":{"line":125,"column":71}},"50":{"start":{"line":127,"column":2},"end":{"line":127,"column":44}},"51":{"start":{"line":131,"column":2},"end":{"line":131,"column":78}},"52":{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},"53":{"start":{"line":136,"column":4},"end":{"line":136,"column":69}},"54":{"start":{"line":138,"column":2},"end":{"line":138,"column":44}},"55":{"start":{"line":142,"column":2},"end":{"line":142,"column":76}},"56":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"57":{"start":{"line":147,"column":4},"end":{"line":147,"column":73}},"58":{"start":{"line":149,"column":2},"end":{"line":149,"column":44}},"59":{"start":{"line":153,"column":2},"end":{"line":153,"column":80}},"60":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"61":{"start":{"line":158,"column":4},"end":{"line":158,"column":72}},"62":{"start":{"line":160,"column":2},"end":{"line":160,"column":44}},"63":{"start":{"line":164,"column":2},"end":{"line":164,"column":79}},"64":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"65":{"start":{"line":169,"column":4},"end":{"line":169,"column":65}},"66":{"start":{"line":171,"column":2},"end":{"line":171,"column":44}},"67":{"start":{"line":175,"column":2},"end":{"line":175,"column":72}},"68":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"69":{"start":{"line":180,"column":4},"end":{"line":180,"column":66}},"70":{"start":{"line":182,"column":2},"end":{"line":182,"column":44}},"71":{"start":{"line":186,"column":2},"end":{"line":186,"column":73}},"72":{"start":{"line":190,"column":2},"end":{"line":192,"column":3}},"73":{"start":{"line":191,"column":4},"end":{"line":191,"column":68}},"74":{"start":{"line":193,"column":2},"end":{"line":193,"column":44}},"75":{"start":{"line":197,"column":2},"end":{"line":197,"column":75}},"76":{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},"77":{"start":{"line":202,"column":4},"end":{"line":202,"column":72}},"78":{"start":{"line":204,"column":2},"end":{"line":204,"column":44}},"79":{"start":{"line":208,"column":2},"end":{"line":208,"column":79}},"80":{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},"81":{"start":{"line":213,"column":4},"end":{"line":213,"column":74}},"82":{"start":{"line":215,"column":2},"end":{"line":215,"column":44}},"83":{"start":{"line":219,"column":2},"end":{"line":219,"column":82}},"84":{"start":{"line":223,"column":2},"end":{"line":225,"column":3}},"85":{"start":{"line":224,"column":4},"end":{"line":224,"column":69}},"86":{"start":{"line":226,"column":2},"end":{"line":226,"column":44}},"87":{"start":{"line":230,"column":2},"end":{"line":230,"column":76}},"88":{"start":{"line":234,"column":2},"end":{"line":236,"column":3}},"89":{"start":{"line":235,"column":4},"end":{"line":235,"column":61}},"90":{"start":{"line":237,"column":2},"end":{"line":237,"column":44}},"91":{"start":{"line":241,"column":2},"end":{"line":241,"column":68}},"92":{"start":{"line":245,"column":2},"end":{"line":247,"column":3}},"93":{"start":{"line":246,"column":4},"end":{"line":246,"column":72}},"94":{"start":{"line":248,"column":2},"end":{"line":248,"column":44}},"95":{"start":{"line":252,"column":2},"end":{"line":252,"column":79}},"96":{"start":{"line":256,"column":2},"end":{"line":258,"column":3}},"97":{"start":{"line":257,"column":4},"end":{"line":257,"column":75}},"98":{"start":{"line":259,"column":2},"end":{"line":259,"column":44}},"99":{"start":{"line":263,"column":2},"end":{"line":263,"column":82}},"100":{"start":{"line":267,"column":2},"end":{"line":269,"column":3}},"101":{"start":{"line":268,"column":4},"end":{"line":268,"column":61}},"102":{"start":{"line":270,"column":2},"end":{"line":270,"column":44}},"103":{"start":{"line":274,"column":2},"end":{"line":274,"column":75}},"104":{"start":{"line":278,"column":2},"end":{"line":280,"column":3}},"105":{"start":{"line":279,"column":4},"end":{"line":279,"column":65}},"106":{"start":{"line":281,"column":2},"end":{"line":281,"column":44}},"107":{"start":{"line":285,"column":2},"end":{"line":285,"column":72}},"108":{"start":{"line":289,"column":2},"end":{"line":291,"column":3}},"109":{"start":{"line":290,"column":4},"end":{"line":290,"column":66}},"110":{"start":{"line":292,"column":2},"end":{"line":292,"column":44}},"111":{"start":{"line":296,"column":2},"end":{"line":296,"column":80}},"112":{"start":{"line":300,"column":2},"end":{"line":302,"column":3}},"113":{"start":{"line":301,"column":4},"end":{"line":301,"column":68}},"114":{"start":{"line":303,"column":2},"end":{"line":303,"column":44}},"115":{"start":{"line":307,"column":2},"end":{"line":307,"column":75}},"116":{"start":{"line":311,"column":2},"end":{"line":313,"column":3}},"117":{"start":{"line":312,"column":4},"end":{"line":312,"column":65}},"118":{"start":{"line":314,"column":2},"end":{"line":314,"column":44}},"119":{"start":{"line":318,"column":2},"end":{"line":318,"column":72}},"120":{"start":{"line":322,"column":2},"end":{"line":324,"column":3}},"121":{"start":{"line":323,"column":4},"end":{"line":323,"column":66}},"122":{"start":{"line":325,"column":2},"end":{"line":325,"column":44}},"123":{"start":{"line":329,"column":2},"end":{"line":329,"column":73}},"124":{"start":{"line":333,"column":2},"end":{"line":335,"column":3}},"125":{"start":{"line":334,"column":4},"end":{"line":334,"column":72}},"126":{"start":{"line":336,"column":2},"end":{"line":336,"column":44}},"127":{"start":{"line":340,"column":2},"end":{"line":340,"column":80}},"128":{"start":{"line":344,"column":2},"end":{"line":346,"column":3}},"129":{"start":{"line":345,"column":4},"end":{"line":345,"column":77}},"130":{"start":{"line":347,"column":2},"end":{"line":347,"column":44}},"131":{"start":{"line":351,"column":2},"end":{"line":351,"column":85}},"132":{"start":{"line":355,"column":2},"end":{"line":357,"column":3}},"133":{"start":{"line":356,"column":4},"end":{"line":356,"column":63}},"134":{"start":{"line":358,"column":2},"end":{"line":358,"column":44}},"135":{"start":{"line":362,"column":2},"end":{"line":362,"column":73}},"136":{"start":{"line":366,"column":2},"end":{"line":368,"column":3}},"137":{"start":{"line":367,"column":4},"end":{"line":367,"column":70}},"138":{"start":{"line":369,"column":2},"end":{"line":369,"column":44}},"139":{"start":{"line":373,"column":2},"end":{"line":373,"column":80}},"140":{"start":{"line":377,"column":2},"end":{"line":379,"column":3}},"141":{"start":{"line":378,"column":4},"end":{"line":378,"column":60}},"142":{"start":{"line":380,"column":2},"end":{"line":380,"column":44}},"143":{"start":{"line":384,"column":2},"end":{"line":384,"column":67}},"144":{"start":{"line":388,"column":2},"end":{"line":390,"column":3}},"145":{"start":{"line":389,"column":4},"end":{"line":389,"column":64}},"146":{"start":{"line":391,"column":2},"end":{"line":391,"column":44}},"147":{"start":{"line":395,"column":2},"end":{"line":395,"column":71}},"148":{"start":{"line":399,"column":2},"end":{"line":401,"column":3}},"149":{"start":{"line":400,"column":4},"end":{"line":400,"column":63}},"150":{"start":{"line":402,"column":2},"end":{"line":402,"column":44}},"151":{"start":{"line":406,"column":2},"end":{"line":406,"column":70}},"152":{"start":{"line":410,"column":2},"end":{"line":412,"column":3}},"153":{"start":{"line":411,"column":4},"end":{"line":411,"column":64}},"154":{"start":{"line":413,"column":2},"end":{"line":413,"column":44}},"155":{"start":{"line":417,"column":2},"end":{"line":417,"column":71}},"156":{"start":{"line":421,"column":2},"end":{"line":423,"column":3}},"157":{"start":{"line":422,"column":4},"end":{"line":422,"column":67}},"158":{"start":{"line":424,"column":2},"end":{"line":424,"column":44}},"159":{"start":{"line":428,"column":2},"end":{"line":428,"column":74}},"160":{"start":{"line":432,"column":2},"end":{"line":434,"column":3}},"161":{"start":{"line":433,"column":4},"end":{"line":433,"column":64}},"162":{"start":{"line":435,"column":2},"end":{"line":435,"column":44}},"163":{"start":{"line":439,"column":2},"end":{"line":439,"column":71}},"164":{"start":{"line":443,"column":2},"end":{"line":445,"column":3}},"165":{"start":{"line":444,"column":4},"end":{"line":444,"column":61}},"166":{"start":{"line":446,"column":2},"end":{"line":446,"column":44}},"167":{"start":{"line":450,"column":2},"end":{"line":450,"column":75}},"168":{"start":{"line":454,"column":2},"end":{"line":456,"column":3}},"169":{"start":{"line":455,"column":4},"end":{"line":455,"column":63}},"170":{"start":{"line":457,"column":2},"end":{"line":457,"column":44}},"171":{"start":{"line":461,"column":2},"end":{"line":461,"column":77}},"172":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"173":{"start":{"line":466,"column":4},"end":{"line":466,"column":66}},"174":{"start":{"line":468,"column":2},"end":{"line":468,"column":44}},"175":{"start":{"line":472,"column":2},"end":{"line":472,"column":73}},"176":{"start":{"line":476,"column":2},"end":{"line":478,"column":3}},"177":{"start":{"line":477,"column":4},"end":{"line":477,"column":67}},"178":{"start":{"line":479,"column":2},"end":{"line":479,"column":44}},"179":{"start":{"line":483,"column":2},"end":{"line":483,"column":74}},"180":{"start":{"line":487,"column":2},"end":{"line":489,"column":3}},"181":{"start":{"line":488,"column":4},"end":{"line":488,"column":63}},"182":{"start":{"line":490,"column":2},"end":{"line":490,"column":44}},"183":{"start":{"line":494,"column":2},"end":{"line":494,"column":70}},"184":{"start":{"line":498,"column":2},"end":{"line":500,"column":3}},"185":{"start":{"line":499,"column":4},"end":{"line":499,"column":61}},"186":{"start":{"line":501,"column":2},"end":{"line":501,"column":44}},"187":{"start":{"line":505,"column":2},"end":{"line":505,"column":75}},"188":{"start":{"line":509,"column":2},"end":{"line":511,"column":3}},"189":{"start":{"line":510,"column":4},"end":{"line":510,"column":66}},"190":{"start":{"line":512,"column":2},"end":{"line":512,"column":44}},"191":{"start":{"line":516,"column":2},"end":{"line":516,"column":80}},"192":{"start":{"line":520,"column":2},"end":{"line":522,"column":3}},"193":{"start":{"line":521,"column":4},"end":{"line":521,"column":71}},"194":{"start":{"line":523,"column":2},"end":{"line":523,"column":44}},"195":{"start":{"line":527,"column":2},"end":{"line":527,"column":85}},"196":{"start":{"line":531,"column":2},"end":{"line":533,"column":3}},"197":{"start":{"line":532,"column":4},"end":{"line":532,"column":58}},"198":{"start":{"line":534,"column":2},"end":{"line":534,"column":44}},"199":{"start":{"line":538,"column":2},"end":{"line":538,"column":72}},"200":{"start":{"line":542,"column":2},"end":{"line":544,"column":3}},"201":{"start":{"line":543,"column":4},"end":{"line":543,"column":65}},"202":{"start":{"line":545,"column":2},"end":{"line":545,"column":44}},"203":{"start":{"line":549,"column":2},"end":{"line":549,"column":79}},"204":{"start":{"line":553,"column":2},"end":{"line":555,"column":3}},"205":{"start":{"line":554,"column":4},"end":{"line":554,"column":62}},"206":{"start":{"line":556,"column":2},"end":{"line":556,"column":44}},"207":{"start":{"line":560,"column":2},"end":{"line":560,"column":76}},"208":{"start":{"line":564,"column":2},"end":{"line":566,"column":3}},"209":{"start":{"line":565,"column":4},"end":{"line":565,"column":68}},"210":{"start":{"line":567,"column":2},"end":{"line":567,"column":44}},"211":{"start":{"line":571,"column":2},"end":{"line":571,"column":75}},"212":{"start":{"line":575,"column":2},"end":{"line":577,"column":3}},"213":{"start":{"line":576,"column":4},"end":{"line":576,"column":64}},"214":{"start":{"line":578,"column":2},"end":{"line":578,"column":44}},"215":{"start":{"line":582,"column":2},"end":{"line":582,"column":71}},"216":{"start":{"line":586,"column":2},"end":{"line":588,"column":3}},"217":{"start":{"line":587,"column":4},"end":{"line":587,"column":66}},"218":{"start":{"line":589,"column":2},"end":{"line":589,"column":44}},"219":{"start":{"line":593,"column":2},"end":{"line":593,"column":73}},"220":{"start":{"line":600,"column":29},"end":{"line":1103,"column":65}},"221":{"start":{"line":1107,"column":0},"end":{"line":1107,"column":90}}},"fnMap":{"0":{"name":"serialize_types_ABI","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":28}},"loc":{"start":{"line":13,"column":34},"end":{"line":18,"column":1}},"line":13},"1":{"name":"deserialize_types_ABI","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":30}},"loc":{"start":{"line":20,"column":43},"end":{"line":22,"column":1}},"line":20},"2":{"name":"serialize_types_Account","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":32}},"loc":{"start":{"line":24,"column":38},"end":{"line":29,"column":1}},"line":24},"3":{"name":"deserialize_types_Account","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":34}},"loc":{"start":{"line":31,"column":47},"end":{"line":33,"column":1}},"line":31},"4":{"name":"serialize_types_AccountAddress","decl":{"start":{"line":35,"column":9},"end":{"line":35,"column":39}},"loc":{"start":{"line":35,"column":45},"end":{"line":40,"column":1}},"line":35},"5":{"name":"deserialize_types_AccountAddress","decl":{"start":{"line":42,"column":9},"end":{"line":42,"column":41}},"loc":{"start":{"line":42,"column":54},"end":{"line":44,"column":1}},"line":42},"6":{"name":"serialize_types_AccountAndRoot","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":39}},"loc":{"start":{"line":46,"column":45},"end":{"line":51,"column":1}},"line":46},"7":{"name":"deserialize_types_AccountAndRoot","decl":{"start":{"line":53,"column":9},"end":{"line":53,"column":41}},"loc":{"start":{"line":53,"column":54},"end":{"line":55,"column":1}},"line":53},"8":{"name":"serialize_types_AccountList","decl":{"start":{"line":57,"column":9},"end":{"line":57,"column":36}},"loc":{"start":{"line":57,"column":42},"end":{"line":62,"column":1}},"line":57},"9":{"name":"deserialize_types_AccountList","decl":{"start":{"line":64,"column":9},"end":{"line":64,"column":38}},"loc":{"start":{"line":64,"column":51},"end":{"line":66,"column":1}},"line":64},"10":{"name":"serialize_types_AccountProof","decl":{"start":{"line":68,"column":9},"end":{"line":68,"column":37}},"loc":{"start":{"line":68,"column":43},"end":{"line":73,"column":1}},"line":68},"11":{"name":"deserialize_types_AccountProof","decl":{"start":{"line":75,"column":9},"end":{"line":75,"column":39}},"loc":{"start":{"line":75,"column":52},"end":{"line":77,"column":1}},"line":75},"12":{"name":"serialize_types_AccountVoteInfo","decl":{"start":{"line":79,"column":9},"end":{"line":79,"column":40}},"loc":{"start":{"line":79,"column":46},"end":{"line":84,"column":1}},"line":79},"13":{"name":"deserialize_types_AccountVoteInfo","decl":{"start":{"line":86,"column":9},"end":{"line":86,"column":42}},"loc":{"start":{"line":86,"column":55},"end":{"line":88,"column":1}},"line":86},"14":{"name":"serialize_types_Block","decl":{"start":{"line":90,"column":9},"end":{"line":90,"column":30}},"loc":{"start":{"line":90,"column":36},"end":{"line":95,"column":1}},"line":90},"15":{"name":"deserialize_types_Block","decl":{"start":{"line":97,"column":9},"end":{"line":97,"column":32}},"loc":{"start":{"line":97,"column":45},"end":{"line":99,"column":1}},"line":97},"16":{"name":"serialize_types_BlockBodyPaged","decl":{"start":{"line":101,"column":9},"end":{"line":101,"column":39}},"loc":{"start":{"line":101,"column":45},"end":{"line":106,"column":1}},"line":101},"17":{"name":"deserialize_types_BlockBodyPaged","decl":{"start":{"line":108,"column":9},"end":{"line":108,"column":41}},"loc":{"start":{"line":108,"column":54},"end":{"line":110,"column":1}},"line":108},"18":{"name":"serialize_types_BlockBodyParams","decl":{"start":{"line":112,"column":9},"end":{"line":112,"column":40}},"loc":{"start":{"line":112,"column":46},"end":{"line":117,"column":1}},"line":112},"19":{"name":"deserialize_types_BlockBodyParams","decl":{"start":{"line":119,"column":9},"end":{"line":119,"column":42}},"loc":{"start":{"line":119,"column":55},"end":{"line":121,"column":1}},"line":119},"20":{"name":"serialize_types_BlockHeaderList","decl":{"start":{"line":123,"column":9},"end":{"line":123,"column":40}},"loc":{"start":{"line":123,"column":46},"end":{"line":128,"column":1}},"line":123},"21":{"name":"deserialize_types_BlockHeaderList","decl":{"start":{"line":130,"column":9},"end":{"line":130,"column":42}},"loc":{"start":{"line":130,"column":55},"end":{"line":132,"column":1}},"line":130},"22":{"name":"serialize_types_BlockMetadata","decl":{"start":{"line":134,"column":9},"end":{"line":134,"column":38}},"loc":{"start":{"line":134,"column":44},"end":{"line":139,"column":1}},"line":134},"23":{"name":"deserialize_types_BlockMetadata","decl":{"start":{"line":141,"column":9},"end":{"line":141,"column":40}},"loc":{"start":{"line":141,"column":53},"end":{"line":143,"column":1}},"line":141},"24":{"name":"serialize_types_BlockMetadataList","decl":{"start":{"line":145,"column":9},"end":{"line":145,"column":42}},"loc":{"start":{"line":145,"column":48},"end":{"line":150,"column":1}},"line":145},"25":{"name":"deserialize_types_BlockMetadataList","decl":{"start":{"line":152,"column":9},"end":{"line":152,"column":44}},"loc":{"start":{"line":152,"column":57},"end":{"line":154,"column":1}},"line":152},"26":{"name":"serialize_types_BlockchainStatus","decl":{"start":{"line":156,"column":9},"end":{"line":156,"column":41}},"loc":{"start":{"line":156,"column":47},"end":{"line":161,"column":1}},"line":156},"27":{"name":"deserialize_types_BlockchainStatus","decl":{"start":{"line":163,"column":9},"end":{"line":163,"column":43}},"loc":{"start":{"line":163,"column":56},"end":{"line":165,"column":1}},"line":163},"28":{"name":"serialize_types_ChainInfo","decl":{"start":{"line":167,"column":9},"end":{"line":167,"column":34}},"loc":{"start":{"line":167,"column":40},"end":{"line":172,"column":1}},"line":167},"29":{"name":"deserialize_types_ChainInfo","decl":{"start":{"line":174,"column":9},"end":{"line":174,"column":36}},"loc":{"start":{"line":174,"column":49},"end":{"line":176,"column":1}},"line":174},"30":{"name":"serialize_types_ChainStats","decl":{"start":{"line":178,"column":9},"end":{"line":178,"column":35}},"loc":{"start":{"line":178,"column":41},"end":{"line":183,"column":1}},"line":178},"31":{"name":"deserialize_types_ChainStats","decl":{"start":{"line":185,"column":9},"end":{"line":185,"column":37}},"loc":{"start":{"line":185,"column":50},"end":{"line":187,"column":1}},"line":185},"32":{"name":"serialize_types_CommitResult","decl":{"start":{"line":189,"column":9},"end":{"line":189,"column":37}},"loc":{"start":{"line":189,"column":43},"end":{"line":194,"column":1}},"line":189},"33":{"name":"deserialize_types_CommitResult","decl":{"start":{"line":196,"column":9},"end":{"line":196,"column":39}},"loc":{"start":{"line":196,"column":52},"end":{"line":198,"column":1}},"line":196},"34":{"name":"serialize_types_CommitResultList","decl":{"start":{"line":200,"column":9},"end":{"line":200,"column":41}},"loc":{"start":{"line":200,"column":47},"end":{"line":205,"column":1}},"line":200},"35":{"name":"deserialize_types_CommitResultList","decl":{"start":{"line":207,"column":9},"end":{"line":207,"column":43}},"loc":{"start":{"line":207,"column":56},"end":{"line":209,"column":1}},"line":207},"36":{"name":"serialize_types_ConfChangeProgress","decl":{"start":{"line":211,"column":9},"end":{"line":211,"column":43}},"loc":{"start":{"line":211,"column":49},"end":{"line":216,"column":1}},"line":211},"37":{"name":"deserialize_types_ConfChangeProgress","decl":{"start":{"line":218,"column":9},"end":{"line":218,"column":45}},"loc":{"start":{"line":218,"column":58},"end":{"line":220,"column":1}},"line":218},"38":{"name":"serialize_types_ConsensusInfo","decl":{"start":{"line":222,"column":9},"end":{"line":222,"column":38}},"loc":{"start":{"line":222,"column":44},"end":{"line":227,"column":1}},"line":222},"39":{"name":"deserialize_types_ConsensusInfo","decl":{"start":{"line":229,"column":9},"end":{"line":229,"column":40}},"loc":{"start":{"line":229,"column":53},"end":{"line":231,"column":1}},"line":229},"40":{"name":"serialize_types_Empty","decl":{"start":{"line":233,"column":9},"end":{"line":233,"column":30}},"loc":{"start":{"line":233,"column":36},"end":{"line":238,"column":1}},"line":233},"41":{"name":"deserialize_types_Empty","decl":{"start":{"line":240,"column":9},"end":{"line":240,"column":32}},"loc":{"start":{"line":240,"column":45},"end":{"line":242,"column":1}},"line":240},"42":{"name":"serialize_types_EnterpriseConfig","decl":{"start":{"line":244,"column":9},"end":{"line":244,"column":41}},"loc":{"start":{"line":244,"column":47},"end":{"line":249,"column":1}},"line":244},"43":{"name":"deserialize_types_EnterpriseConfig","decl":{"start":{"line":251,"column":9},"end":{"line":251,"column":43}},"loc":{"start":{"line":251,"column":56},"end":{"line":253,"column":1}},"line":251},"44":{"name":"serialize_types_EnterpriseConfigKey","decl":{"start":{"line":255,"column":9},"end":{"line":255,"column":44}},"loc":{"start":{"line":255,"column":50},"end":{"line":260,"column":1}},"line":255},"45":{"name":"deserialize_types_EnterpriseConfigKey","decl":{"start":{"line":262,"column":9},"end":{"line":262,"column":46}},"loc":{"start":{"line":262,"column":59},"end":{"line":264,"column":1}},"line":262},"46":{"name":"serialize_types_Event","decl":{"start":{"line":266,"column":9},"end":{"line":266,"column":30}},"loc":{"start":{"line":266,"column":36},"end":{"line":271,"column":1}},"line":266},"47":{"name":"deserialize_types_Event","decl":{"start":{"line":273,"column":9},"end":{"line":273,"column":32}},"loc":{"start":{"line":273,"column":45},"end":{"line":275,"column":1}},"line":273},"48":{"name":"serialize_types_EventList","decl":{"start":{"line":277,"column":9},"end":{"line":277,"column":34}},"loc":{"start":{"line":277,"column":40},"end":{"line":282,"column":1}},"line":277},"49":{"name":"deserialize_types_EventList","decl":{"start":{"line":284,"column":9},"end":{"line":284,"column":36}},"loc":{"start":{"line":284,"column":49},"end":{"line":286,"column":1}},"line":284},"50":{"name":"serialize_types_FilterInfo","decl":{"start":{"line":288,"column":9},"end":{"line":288,"column":35}},"loc":{"start":{"line":288,"column":41},"end":{"line":293,"column":1}},"line":288},"51":{"name":"deserialize_types_FilterInfo","decl":{"start":{"line":295,"column":9},"end":{"line":295,"column":37}},"loc":{"start":{"line":295,"column":50},"end":{"line":297,"column":1}},"line":295},"52":{"name":"serialize_types_ImportFormat","decl":{"start":{"line":299,"column":9},"end":{"line":299,"column":37}},"loc":{"start":{"line":299,"column":43},"end":{"line":304,"column":1}},"line":299},"53":{"name":"deserialize_types_ImportFormat","decl":{"start":{"line":306,"column":9},"end":{"line":306,"column":39}},"loc":{"start":{"line":306,"column":52},"end":{"line":308,"column":1}},"line":306},"54":{"name":"serialize_types_KeyParams","decl":{"start":{"line":310,"column":9},"end":{"line":310,"column":34}},"loc":{"start":{"line":310,"column":40},"end":{"line":315,"column":1}},"line":310},"55":{"name":"deserialize_types_KeyParams","decl":{"start":{"line":317,"column":9},"end":{"line":317,"column":36}},"loc":{"start":{"line":317,"column":49},"end":{"line":319,"column":1}},"line":317},"56":{"name":"serialize_types_ListParams","decl":{"start":{"line":321,"column":9},"end":{"line":321,"column":35}},"loc":{"start":{"line":321,"column":41},"end":{"line":326,"column":1}},"line":321},"57":{"name":"deserialize_types_ListParams","decl":{"start":{"line":328,"column":9},"end":{"line":328,"column":37}},"loc":{"start":{"line":328,"column":50},"end":{"line":330,"column":1}},"line":328},"58":{"name":"serialize_types_MembershipChange","decl":{"start":{"line":332,"column":9},"end":{"line":332,"column":41}},"loc":{"start":{"line":332,"column":47},"end":{"line":337,"column":1}},"line":332},"59":{"name":"deserialize_types_MembershipChange","decl":{"start":{"line":339,"column":9},"end":{"line":339,"column":43}},"loc":{"start":{"line":339,"column":56},"end":{"line":341,"column":1}},"line":339},"60":{"name":"serialize_types_MembershipChangeReply","decl":{"start":{"line":343,"column":9},"end":{"line":343,"column":46}},"loc":{"start":{"line":343,"column":52},"end":{"line":348,"column":1}},"line":343},"61":{"name":"deserialize_types_MembershipChangeReply","decl":{"start":{"line":350,"column":9},"end":{"line":350,"column":48}},"loc":{"start":{"line":350,"column":61},"end":{"line":352,"column":1}},"line":350},"62":{"name":"serialize_types_Metrics","decl":{"start":{"line":354,"column":9},"end":{"line":354,"column":32}},"loc":{"start":{"line":354,"column":38},"end":{"line":359,"column":1}},"line":354},"63":{"name":"deserialize_types_Metrics","decl":{"start":{"line":361,"column":9},"end":{"line":361,"column":34}},"loc":{"start":{"line":361,"column":47},"end":{"line":363,"column":1}},"line":361},"64":{"name":"serialize_types_MetricsRequest","decl":{"start":{"line":365,"column":9},"end":{"line":365,"column":39}},"loc":{"start":{"line":365,"column":45},"end":{"line":370,"column":1}},"line":365},"65":{"name":"deserialize_types_MetricsRequest","decl":{"start":{"line":372,"column":9},"end":{"line":372,"column":41}},"loc":{"start":{"line":372,"column":54},"end":{"line":374,"column":1}},"line":372},"66":{"name":"serialize_types_Name","decl":{"start":{"line":376,"column":9},"end":{"line":376,"column":29}},"loc":{"start":{"line":376,"column":35},"end":{"line":381,"column":1}},"line":376},"67":{"name":"deserialize_types_Name","decl":{"start":{"line":383,"column":9},"end":{"line":383,"column":31}},"loc":{"start":{"line":383,"column":44},"end":{"line":385,"column":1}},"line":383},"68":{"name":"serialize_types_NameInfo","decl":{"start":{"line":387,"column":9},"end":{"line":387,"column":33}},"loc":{"start":{"line":387,"column":39},"end":{"line":392,"column":1}},"line":387},"69":{"name":"deserialize_types_NameInfo","decl":{"start":{"line":394,"column":9},"end":{"line":394,"column":35}},"loc":{"start":{"line":394,"column":48},"end":{"line":396,"column":1}},"line":394},"70":{"name":"serialize_types_NodeReq","decl":{"start":{"line":398,"column":9},"end":{"line":398,"column":32}},"loc":{"start":{"line":398,"column":38},"end":{"line":403,"column":1}},"line":398},"71":{"name":"deserialize_types_NodeReq","decl":{"start":{"line":405,"column":9},"end":{"line":405,"column":34}},"loc":{"start":{"line":405,"column":47},"end":{"line":407,"column":1}},"line":405},"72":{"name":"serialize_types_PeerList","decl":{"start":{"line":409,"column":9},"end":{"line":409,"column":33}},"loc":{"start":{"line":409,"column":39},"end":{"line":414,"column":1}},"line":409},"73":{"name":"deserialize_types_PeerList","decl":{"start":{"line":416,"column":9},"end":{"line":416,"column":35}},"loc":{"start":{"line":416,"column":48},"end":{"line":418,"column":1}},"line":416},"74":{"name":"serialize_types_PeersParams","decl":{"start":{"line":420,"column":9},"end":{"line":420,"column":36}},"loc":{"start":{"line":420,"column":42},"end":{"line":425,"column":1}},"line":420},"75":{"name":"deserialize_types_PeersParams","decl":{"start":{"line":427,"column":9},"end":{"line":427,"column":38}},"loc":{"start":{"line":427,"column":51},"end":{"line":429,"column":1}},"line":427},"76":{"name":"serialize_types_Personal","decl":{"start":{"line":431,"column":9},"end":{"line":431,"column":33}},"loc":{"start":{"line":431,"column":39},"end":{"line":436,"column":1}},"line":431},"77":{"name":"deserialize_types_Personal","decl":{"start":{"line":438,"column":9},"end":{"line":438,"column":35}},"loc":{"start":{"line":438,"column":48},"end":{"line":440,"column":1}},"line":438},"78":{"name":"serialize_types_Query","decl":{"start":{"line":442,"column":9},"end":{"line":442,"column":30}},"loc":{"start":{"line":442,"column":36},"end":{"line":447,"column":1}},"line":442},"79":{"name":"deserialize_types_Query","decl":{"start":{"line":449,"column":9},"end":{"line":449,"column":32}},"loc":{"start":{"line":449,"column":45},"end":{"line":451,"column":1}},"line":449},"80":{"name":"serialize_types_Receipt","decl":{"start":{"line":453,"column":9},"end":{"line":453,"column":32}},"loc":{"start":{"line":453,"column":38},"end":{"line":458,"column":1}},"line":453},"81":{"name":"deserialize_types_Receipt","decl":{"start":{"line":460,"column":9},"end":{"line":460,"column":34}},"loc":{"start":{"line":460,"column":47},"end":{"line":462,"column":1}},"line":460},"82":{"name":"serialize_types_ServerInfo","decl":{"start":{"line":464,"column":9},"end":{"line":464,"column":35}},"loc":{"start":{"line":464,"column":41},"end":{"line":469,"column":1}},"line":464},"83":{"name":"deserialize_types_ServerInfo","decl":{"start":{"line":471,"column":9},"end":{"line":471,"column":37}},"loc":{"start":{"line":471,"column":50},"end":{"line":473,"column":1}},"line":471},"84":{"name":"serialize_types_SingleBytes","decl":{"start":{"line":475,"column":9},"end":{"line":475,"column":36}},"loc":{"start":{"line":475,"column":42},"end":{"line":480,"column":1}},"line":475},"85":{"name":"deserialize_types_SingleBytes","decl":{"start":{"line":482,"column":9},"end":{"line":482,"column":38}},"loc":{"start":{"line":482,"column":51},"end":{"line":484,"column":1}},"line":482},"86":{"name":"serialize_types_Staking","decl":{"start":{"line":486,"column":9},"end":{"line":486,"column":32}},"loc":{"start":{"line":486,"column":38},"end":{"line":491,"column":1}},"line":486},"87":{"name":"deserialize_types_Staking","decl":{"start":{"line":493,"column":9},"end":{"line":493,"column":34}},"loc":{"start":{"line":493,"column":47},"end":{"line":495,"column":1}},"line":493},"88":{"name":"serialize_types_State","decl":{"start":{"line":497,"column":9},"end":{"line":497,"column":30}},"loc":{"start":{"line":497,"column":36},"end":{"line":502,"column":1}},"line":497},"89":{"name":"deserialize_types_State","decl":{"start":{"line":504,"column":9},"end":{"line":504,"column":32}},"loc":{"start":{"line":504,"column":45},"end":{"line":506,"column":1}},"line":504},"90":{"name":"serialize_types_StateQuery","decl":{"start":{"line":508,"column":9},"end":{"line":508,"column":35}},"loc":{"start":{"line":508,"column":41},"end":{"line":513,"column":1}},"line":508},"91":{"name":"deserialize_types_StateQuery","decl":{"start":{"line":515,"column":9},"end":{"line":515,"column":37}},"loc":{"start":{"line":515,"column":50},"end":{"line":517,"column":1}},"line":515},"92":{"name":"serialize_types_StateQueryProof","decl":{"start":{"line":519,"column":9},"end":{"line":519,"column":40}},"loc":{"start":{"line":519,"column":46},"end":{"line":524,"column":1}},"line":519},"93":{"name":"deserialize_types_StateQueryProof","decl":{"start":{"line":526,"column":9},"end":{"line":526,"column":42}},"loc":{"start":{"line":526,"column":55},"end":{"line":528,"column":1}},"line":526},"94":{"name":"serialize_types_Tx","decl":{"start":{"line":530,"column":9},"end":{"line":530,"column":27}},"loc":{"start":{"line":530,"column":33},"end":{"line":535,"column":1}},"line":530},"95":{"name":"deserialize_types_Tx","decl":{"start":{"line":537,"column":9},"end":{"line":537,"column":29}},"loc":{"start":{"line":537,"column":42},"end":{"line":539,"column":1}},"line":537},"96":{"name":"serialize_types_TxInBlock","decl":{"start":{"line":541,"column":9},"end":{"line":541,"column":34}},"loc":{"start":{"line":541,"column":40},"end":{"line":546,"column":1}},"line":541},"97":{"name":"deserialize_types_TxInBlock","decl":{"start":{"line":548,"column":9},"end":{"line":548,"column":36}},"loc":{"start":{"line":548,"column":49},"end":{"line":550,"column":1}},"line":548},"98":{"name":"serialize_types_TxList","decl":{"start":{"line":552,"column":9},"end":{"line":552,"column":31}},"loc":{"start":{"line":552,"column":37},"end":{"line":557,"column":1}},"line":552},"99":{"name":"deserialize_types_TxList","decl":{"start":{"line":559,"column":9},"end":{"line":559,"column":33}},"loc":{"start":{"line":559,"column":46},"end":{"line":561,"column":1}},"line":559},"100":{"name":"serialize_types_VerifyResult","decl":{"start":{"line":563,"column":9},"end":{"line":563,"column":37}},"loc":{"start":{"line":563,"column":43},"end":{"line":568,"column":1}},"line":563},"101":{"name":"deserialize_types_VerifyResult","decl":{"start":{"line":570,"column":9},"end":{"line":570,"column":39}},"loc":{"start":{"line":570,"column":52},"end":{"line":572,"column":1}},"line":570},"102":{"name":"serialize_types_VoteList","decl":{"start":{"line":574,"column":9},"end":{"line":574,"column":33}},"loc":{"start":{"line":574,"column":39},"end":{"line":579,"column":1}},"line":574},"103":{"name":"deserialize_types_VoteList","decl":{"start":{"line":581,"column":9},"end":{"line":581,"column":35}},"loc":{"start":{"line":581,"column":48},"end":{"line":583,"column":1}},"line":581},"104":{"name":"serialize_types_VoteParams","decl":{"start":{"line":585,"column":9},"end":{"line":585,"column":35}},"loc":{"start":{"line":585,"column":41},"end":{"line":590,"column":1}},"line":585},"105":{"name":"deserialize_types_VoteParams","decl":{"start":{"line":592,"column":9},"end":{"line":592,"column":37}},"loc":{"start":{"line":592,"column":50},"end":{"line":594,"column":1}},"line":592}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},{"start":{"line":14,"column":2},"end":{"line":16,"column":3}}],"line":14},"1":{"loc":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},{"start":{"line":25,"column":2},"end":{"line":27,"column":3}}],"line":25},"2":{"loc":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},{"start":{"line":36,"column":2},"end":{"line":38,"column":3}}],"line":36},"3":{"loc":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},{"start":{"line":47,"column":2},"end":{"line":49,"column":3}}],"line":47},"4":{"loc":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},{"start":{"line":58,"column":2},"end":{"line":60,"column":3}}],"line":58},"5":{"loc":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},{"start":{"line":69,"column":2},"end":{"line":71,"column":3}}],"line":69},"6":{"loc":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},{"start":{"line":80,"column":2},"end":{"line":82,"column":3}}],"line":80},"7":{"loc":{"start":{"line":91,"column":2},"end":{"line":93,"column":3}},"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":93,"column":3}},{"start":{"line":91,"column":2},"end":{"line":93,"column":3}}],"line":91},"8":{"loc":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},{"start":{"line":102,"column":2},"end":{"line":104,"column":3}}],"line":102},"9":{"loc":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},{"start":{"line":113,"column":2},"end":{"line":115,"column":3}}],"line":113},"10":{"loc":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},{"start":{"line":124,"column":2},"end":{"line":126,"column":3}}],"line":124},"11":{"loc":{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},{"start":{"line":135,"column":2},"end":{"line":137,"column":3}}],"line":135},"12":{"loc":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},{"start":{"line":146,"column":2},"end":{"line":148,"column":3}}],"line":146},"13":{"loc":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},{"start":{"line":157,"column":2},"end":{"line":159,"column":3}}],"line":157},"14":{"loc":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},{"start":{"line":168,"column":2},"end":{"line":170,"column":3}}],"line":168},"15":{"loc":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},{"start":{"line":179,"column":2},"end":{"line":181,"column":3}}],"line":179},"16":{"loc":{"start":{"line":190,"column":2},"end":{"line":192,"column":3}},"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":192,"column":3}},{"start":{"line":190,"column":2},"end":{"line":192,"column":3}}],"line":190},"17":{"loc":{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},{"start":{"line":201,"column":2},"end":{"line":203,"column":3}}],"line":201},"18":{"loc":{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},{"start":{"line":212,"column":2},"end":{"line":214,"column":3}}],"line":212},"19":{"loc":{"start":{"line":223,"column":2},"end":{"line":225,"column":3}},"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":225,"column":3}},{"start":{"line":223,"column":2},"end":{"line":225,"column":3}}],"line":223},"20":{"loc":{"start":{"line":234,"column":2},"end":{"line":236,"column":3}},"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":236,"column":3}},{"start":{"line":234,"column":2},"end":{"line":236,"column":3}}],"line":234},"21":{"loc":{"start":{"line":245,"column":2},"end":{"line":247,"column":3}},"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":247,"column":3}},{"start":{"line":245,"column":2},"end":{"line":247,"column":3}}],"line":245},"22":{"loc":{"start":{"line":256,"column":2},"end":{"line":258,"column":3}},"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":258,"column":3}},{"start":{"line":256,"column":2},"end":{"line":258,"column":3}}],"line":256},"23":{"loc":{"start":{"line":267,"column":2},"end":{"line":269,"column":3}},"type":"if","locations":[{"start":{"line":267,"column":2},"end":{"line":269,"column":3}},{"start":{"line":267,"column":2},"end":{"line":269,"column":3}}],"line":267},"24":{"loc":{"start":{"line":278,"column":2},"end":{"line":280,"column":3}},"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":280,"column":3}},{"start":{"line":278,"column":2},"end":{"line":280,"column":3}}],"line":278},"25":{"loc":{"start":{"line":289,"column":2},"end":{"line":291,"column":3}},"type":"if","locations":[{"start":{"line":289,"column":2},"end":{"line":291,"column":3}},{"start":{"line":289,"column":2},"end":{"line":291,"column":3}}],"line":289},"26":{"loc":{"start":{"line":300,"column":2},"end":{"line":302,"column":3}},"type":"if","locations":[{"start":{"line":300,"column":2},"end":{"line":302,"column":3}},{"start":{"line":300,"column":2},"end":{"line":302,"column":3}}],"line":300},"27":{"loc":{"start":{"line":311,"column":2},"end":{"line":313,"column":3}},"type":"if","locations":[{"start":{"line":311,"column":2},"end":{"line":313,"column":3}},{"start":{"line":311,"column":2},"end":{"line":313,"column":3}}],"line":311},"28":{"loc":{"start":{"line":322,"column":2},"end":{"line":324,"column":3}},"type":"if","locations":[{"start":{"line":322,"column":2},"end":{"line":324,"column":3}},{"start":{"line":322,"column":2},"end":{"line":324,"column":3}}],"line":322},"29":{"loc":{"start":{"line":333,"column":2},"end":{"line":335,"column":3}},"type":"if","locations":[{"start":{"line":333,"column":2},"end":{"line":335,"column":3}},{"start":{"line":333,"column":2},"end":{"line":335,"column":3}}],"line":333},"30":{"loc":{"start":{"line":344,"column":2},"end":{"line":346,"column":3}},"type":"if","locations":[{"start":{"line":344,"column":2},"end":{"line":346,"column":3}},{"start":{"line":344,"column":2},"end":{"line":346,"column":3}}],"line":344},"31":{"loc":{"start":{"line":355,"column":2},"end":{"line":357,"column":3}},"type":"if","locations":[{"start":{"line":355,"column":2},"end":{"line":357,"column":3}},{"start":{"line":355,"column":2},"end":{"line":357,"column":3}}],"line":355},"32":{"loc":{"start":{"line":366,"column":2},"end":{"line":368,"column":3}},"type":"if","locations":[{"start":{"line":366,"column":2},"end":{"line":368,"column":3}},{"start":{"line":366,"column":2},"end":{"line":368,"column":3}}],"line":366},"33":{"loc":{"start":{"line":377,"column":2},"end":{"line":379,"column":3}},"type":"if","locations":[{"start":{"line":377,"column":2},"end":{"line":379,"column":3}},{"start":{"line":377,"column":2},"end":{"line":379,"column":3}}],"line":377},"34":{"loc":{"start":{"line":388,"column":2},"end":{"line":390,"column":3}},"type":"if","locations":[{"start":{"line":388,"column":2},"end":{"line":390,"column":3}},{"start":{"line":388,"column":2},"end":{"line":390,"column":3}}],"line":388},"35":{"loc":{"start":{"line":399,"column":2},"end":{"line":401,"column":3}},"type":"if","locations":[{"start":{"line":399,"column":2},"end":{"line":401,"column":3}},{"start":{"line":399,"column":2},"end":{"line":401,"column":3}}],"line":399},"36":{"loc":{"start":{"line":410,"column":2},"end":{"line":412,"column":3}},"type":"if","locations":[{"start":{"line":410,"column":2},"end":{"line":412,"column":3}},{"start":{"line":410,"column":2},"end":{"line":412,"column":3}}],"line":410},"37":{"loc":{"start":{"line":421,"column":2},"end":{"line":423,"column":3}},"type":"if","locations":[{"start":{"line":421,"column":2},"end":{"line":423,"column":3}},{"start":{"line":421,"column":2},"end":{"line":423,"column":3}}],"line":421},"38":{"loc":{"start":{"line":432,"column":2},"end":{"line":434,"column":3}},"type":"if","locations":[{"start":{"line":432,"column":2},"end":{"line":434,"column":3}},{"start":{"line":432,"column":2},"end":{"line":434,"column":3}}],"line":432},"39":{"loc":{"start":{"line":443,"column":2},"end":{"line":445,"column":3}},"type":"if","locations":[{"start":{"line":443,"column":2},"end":{"line":445,"column":3}},{"start":{"line":443,"column":2},"end":{"line":445,"column":3}}],"line":443},"40":{"loc":{"start":{"line":454,"column":2},"end":{"line":456,"column":3}},"type":"if","locations":[{"start":{"line":454,"column":2},"end":{"line":456,"column":3}},{"start":{"line":454,"column":2},"end":{"line":456,"column":3}}],"line":454},"41":{"loc":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},{"start":{"line":465,"column":2},"end":{"line":467,"column":3}}],"line":465},"42":{"loc":{"start":{"line":476,"column":2},"end":{"line":478,"column":3}},"type":"if","locations":[{"start":{"line":476,"column":2},"end":{"line":478,"column":3}},{"start":{"line":476,"column":2},"end":{"line":478,"column":3}}],"line":476},"43":{"loc":{"start":{"line":487,"column":2},"end":{"line":489,"column":3}},"type":"if","locations":[{"start":{"line":487,"column":2},"end":{"line":489,"column":3}},{"start":{"line":487,"column":2},"end":{"line":489,"column":3}}],"line":487},"44":{"loc":{"start":{"line":498,"column":2},"end":{"line":500,"column":3}},"type":"if","locations":[{"start":{"line":498,"column":2},"end":{"line":500,"column":3}},{"start":{"line":498,"column":2},"end":{"line":500,"column":3}}],"line":498},"45":{"loc":{"start":{"line":509,"column":2},"end":{"line":511,"column":3}},"type":"if","locations":[{"start":{"line":509,"column":2},"end":{"line":511,"column":3}},{"start":{"line":509,"column":2},"end":{"line":511,"column":3}}],"line":509},"46":{"loc":{"start":{"line":520,"column":2},"end":{"line":522,"column":3}},"type":"if","locations":[{"start":{"line":520,"column":2},"end":{"line":522,"column":3}},{"start":{"line":520,"column":2},"end":{"line":522,"column":3}}],"line":520},"47":{"loc":{"start":{"line":531,"column":2},"end":{"line":533,"column":3}},"type":"if","locations":[{"start":{"line":531,"column":2},"end":{"line":533,"column":3}},{"start":{"line":531,"column":2},"end":{"line":533,"column":3}}],"line":531},"48":{"loc":{"start":{"line":542,"column":2},"end":{"line":544,"column":3}},"type":"if","locations":[{"start":{"line":542,"column":2},"end":{"line":544,"column":3}},{"start":{"line":542,"column":2},"end":{"line":544,"column":3}}],"line":542},"49":{"loc":{"start":{"line":553,"column":2},"end":{"line":555,"column":3}},"type":"if","locations":[{"start":{"line":553,"column":2},"end":{"line":555,"column":3}},{"start":{"line":553,"column":2},"end":{"line":555,"column":3}}],"line":553},"50":{"loc":{"start":{"line":564,"column":2},"end":{"line":566,"column":3}},"type":"if","locations":[{"start":{"line":564,"column":2},"end":{"line":566,"column":3}},{"start":{"line":564,"column":2},"end":{"line":566,"column":3}}],"line":564},"51":{"loc":{"start":{"line":575,"column":2},"end":{"line":577,"column":3}},"type":"if","locations":[{"start":{"line":575,"column":2},"end":{"line":577,"column":3}},{"start":{"line":575,"column":2},"end":{"line":577,"column":3}}],"line":575},"52":{"loc":{"start":{"line":586,"column":2},"end":{"line":588,"column":3}},"type":"if","locations":[{"start":{"line":586,"column":2},"end":{"line":588,"column":3}},{"start":{"line":586,"column":2},"end":{"line":588,"column":3}}],"line":586}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":2,"12":0,"13":0,"14":0,"15":50,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":7,"40":0,"41":0,"42":0,"43":3,"44":3,"45":0,"46":3,"47":0,"48":0,"49":0,"50":0,"51":3,"52":0,"53":0,"54":0,"55":5,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":6,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":10,"76":0,"77":0,"78":0,"79":29,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":12,"89":0,"90":12,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":3,"108":4,"109":0,"110":4,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":1,"119":0,"120":3,"121":0,"122":3,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":1,"148":2,"149":0,"150":2,"151":0,"152":0,"153":0,"154":0,"155":1,"156":1,"157":0,"158":1,"159":0,"160":50,"161":0,"162":50,"163":0,"164":2,"165":0,"166":2,"167":0,"168":0,"169":0,"170":0,"171":6,"172":0,"173":0,"174":0,"175":1,"176":52,"177":0,"178":52,"179":4,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":3,"188":6,"189":0,"190":6,"191":0,"192":0,"193":0,"194":0,"195":6,"196":36,"197":0,"198":36,"199":33,"200":0,"201":0,"202":0,"203":4,"204":29,"205":0,"206":29,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":1,"221":1},"f":{"0":0,"1":2,"2":0,"3":50,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":7,"16":0,"17":3,"18":3,"19":0,"20":0,"21":3,"22":0,"23":5,"24":0,"25":0,"26":0,"27":6,"28":0,"29":1,"30":0,"31":0,"32":0,"33":10,"34":0,"35":29,"36":0,"37":0,"38":0,"39":1,"40":12,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":3,"50":4,"51":0,"52":0,"53":0,"54":1,"55":0,"56":3,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":1,"70":2,"71":0,"72":0,"73":1,"74":1,"75":0,"76":50,"77":0,"78":2,"79":0,"80":0,"81":6,"82":0,"83":1,"84":52,"85":4,"86":0,"87":0,"88":0,"89":3,"90":6,"91":0,"92":0,"93":6,"94":36,"95":33,"96":0,"97":4,"98":29,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,3],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,12],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,4],"26":[0,0],"27":[0,1],"28":[0,3],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,1],"34":[0,0],"35":[0,2],"36":[0,0],"37":[0,1],"38":[0,50],"39":[0,2],"40":[0,0],"41":[0,0],"42":[0,52],"43":[0,0],"44":[0,0],"45":[0,6],"46":[0,0],"47":[0,36],"48":[0,0],"49":[0,29],"50":[0,0],"51":[0,0],"52":[0,0]},"inputSourceMap":{"version":3,"sources":["rpc_grpc_pb.js"],"names":["grpc","require","rpc_pb","blockchain_pb","account_pb","node_pb","p2p_pb","metric_pb","raft_pb","serialize_types_ABI","arg","ABI","Error","Buffer","from","serializeBinary","deserialize_types_ABI","buffer_arg","deserializeBinary","Uint8Array","serialize_types_Account","Account","deserialize_types_Account","serialize_types_AccountAddress","AccountAddress","deserialize_types_AccountAddress","serialize_types_AccountAndRoot","AccountAndRoot","deserialize_types_AccountAndRoot","serialize_types_AccountList","AccountList","deserialize_types_AccountList","serialize_types_AccountProof","AccountProof","deserialize_types_AccountProof","serialize_types_AccountVoteInfo","AccountVoteInfo","deserialize_types_AccountVoteInfo","serialize_types_Block","Block","deserialize_types_Block","serialize_types_BlockBodyPaged","BlockBodyPaged","deserialize_types_BlockBodyPaged","serialize_types_BlockBodyParams","BlockBodyParams","deserialize_types_BlockBodyParams","serialize_types_BlockHeaderList","BlockHeaderList","deserialize_types_BlockHeaderList","serialize_types_BlockMetadata","BlockMetadata","deserialize_types_BlockMetadata","serialize_types_BlockMetadataList","BlockMetadataList","deserialize_types_BlockMetadataList","serialize_types_BlockchainStatus","BlockchainStatus","deserialize_types_BlockchainStatus","serialize_types_ChainInfo","ChainInfo","deserialize_types_ChainInfo","serialize_types_ChainStats","ChainStats","deserialize_types_ChainStats","serialize_types_CommitResult","CommitResult","deserialize_types_CommitResult","serialize_types_CommitResultList","CommitResultList","deserialize_types_CommitResultList","serialize_types_ConfChangeProgress","ConfChangeProgress","deserialize_types_ConfChangeProgress","serialize_types_ConsensusInfo","ConsensusInfo","deserialize_types_ConsensusInfo","serialize_types_Empty","Empty","deserialize_types_Empty","serialize_types_EnterpriseConfig","EnterpriseConfig","deserialize_types_EnterpriseConfig","serialize_types_EnterpriseConfigKey","EnterpriseConfigKey","deserialize_types_EnterpriseConfigKey","serialize_types_Event","Event","deserialize_types_Event","serialize_types_EventList","EventList","deserialize_types_EventList","serialize_types_FilterInfo","FilterInfo","deserialize_types_FilterInfo","serialize_types_ImportFormat","ImportFormat","deserialize_types_ImportFormat","serialize_types_KeyParams","KeyParams","deserialize_types_KeyParams","serialize_types_ListParams","ListParams","deserialize_types_ListParams","serialize_types_MembershipChange","MembershipChange","deserialize_types_MembershipChange","serialize_types_MembershipChangeReply","MembershipChangeReply","deserialize_types_MembershipChangeReply","serialize_types_Metrics","Metrics","deserialize_types_Metrics","serialize_types_MetricsRequest","MetricsRequest","deserialize_types_MetricsRequest","serialize_types_Name","Name","deserialize_types_Name","serialize_types_NameInfo","NameInfo","deserialize_types_NameInfo","serialize_types_NodeReq","NodeReq","deserialize_types_NodeReq","serialize_types_PeerList","PeerList","deserialize_types_PeerList","serialize_types_PeersParams","PeersParams","deserialize_types_PeersParams","serialize_types_Personal","Personal","deserialize_types_Personal","serialize_types_Query","Query","deserialize_types_Query","serialize_types_Receipt","Receipt","deserialize_types_Receipt","serialize_types_ServerInfo","ServerInfo","deserialize_types_ServerInfo","serialize_types_SingleBytes","SingleBytes","deserialize_types_SingleBytes","serialize_types_Staking","Staking","deserialize_types_Staking","serialize_types_State","State","deserialize_types_State","serialize_types_StateQuery","StateQuery","deserialize_types_StateQuery","serialize_types_StateQueryProof","StateQueryProof","deserialize_types_StateQueryProof","serialize_types_Tx","Tx","deserialize_types_Tx","serialize_types_TxInBlock","TxInBlock","deserialize_types_TxInBlock","serialize_types_TxList","TxList","deserialize_types_TxList","serialize_types_VerifyResult","VerifyResult","deserialize_types_VerifyResult","serialize_types_VoteList","VoteList","deserialize_types_VoteList","serialize_types_VoteParams","VoteParams","deserialize_types_VoteParams","AergoRPCServiceService","exports","nodeState","path","requestStream","responseStream","requestType","responseType","requestSerialize","requestDeserialize","responseSerialize","responseDeserialize","metric","blockchain","getChainInfo","chainStat","listBlockHeaders","listBlockMetadata","listBlockStream","listBlockMetadataStream","getBlock","getBlockMetadata","getBlockBody","getTX","getBlockTX","getReceipt","getABI","sendTX","signTX","verifyTX","commitTX","getState","getStateAndProof","createAccount","getAccounts","lockAccount","unlockAccount","importAccount","exportAccount","queryContract","queryContractState","getPeers","getVotes","getAccountVotes","getStaking","getNameInfo","listEventStream","listEvents","getServerInfo","getConsensusInfo","changeMembership","getEnterpriseConfig","getConfChangeProgress","AergoRPCServiceClient","makeGenericClientConstructor"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/types","sourcesContent":["// GENERATED CODE -- DO NOT EDIT!\n\n'use strict';\nvar grpc = require('grpc');\nvar rpc_pb = require('./rpc_pb.js');\nvar blockchain_pb = require('./blockchain_pb.js');\nvar account_pb = require('./account_pb.js');\nvar node_pb = require('./node_pb.js');\nvar p2p_pb = require('./p2p_pb.js');\nvar metric_pb = require('./metric_pb.js');\nvar raft_pb = require('./raft_pb.js');\n\nfunction serialize_types_ABI(arg) {\n  if (!(arg instanceof blockchain_pb.ABI)) {\n    throw new Error('Expected argument of type types.ABI');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_ABI(buffer_arg) {\n  return blockchain_pb.ABI.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Account(arg) {\n  if (!(arg instanceof account_pb.Account)) {\n    throw new Error('Expected argument of type types.Account');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Account(buffer_arg) {\n  return account_pb.Account.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_AccountAddress(arg) {\n  if (!(arg instanceof rpc_pb.AccountAddress)) {\n    throw new Error('Expected argument of type types.AccountAddress');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_AccountAddress(buffer_arg) {\n  return rpc_pb.AccountAddress.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_AccountAndRoot(arg) {\n  if (!(arg instanceof rpc_pb.AccountAndRoot)) {\n    throw new Error('Expected argument of type types.AccountAndRoot');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_AccountAndRoot(buffer_arg) {\n  return rpc_pb.AccountAndRoot.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_AccountList(arg) {\n  if (!(arg instanceof account_pb.AccountList)) {\n    throw new Error('Expected argument of type types.AccountList');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_AccountList(buffer_arg) {\n  return account_pb.AccountList.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_AccountProof(arg) {\n  if (!(arg instanceof blockchain_pb.AccountProof)) {\n    throw new Error('Expected argument of type types.AccountProof');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_AccountProof(buffer_arg) {\n  return blockchain_pb.AccountProof.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_AccountVoteInfo(arg) {\n  if (!(arg instanceof rpc_pb.AccountVoteInfo)) {\n    throw new Error('Expected argument of type types.AccountVoteInfo');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_AccountVoteInfo(buffer_arg) {\n  return rpc_pb.AccountVoteInfo.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Block(arg) {\n  if (!(arg instanceof blockchain_pb.Block)) {\n    throw new Error('Expected argument of type types.Block');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Block(buffer_arg) {\n  return blockchain_pb.Block.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_BlockBodyPaged(arg) {\n  if (!(arg instanceof rpc_pb.BlockBodyPaged)) {\n    throw new Error('Expected argument of type types.BlockBodyPaged');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_BlockBodyPaged(buffer_arg) {\n  return rpc_pb.BlockBodyPaged.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_BlockBodyParams(arg) {\n  if (!(arg instanceof rpc_pb.BlockBodyParams)) {\n    throw new Error('Expected argument of type types.BlockBodyParams');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_BlockBodyParams(buffer_arg) {\n  return rpc_pb.BlockBodyParams.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_BlockHeaderList(arg) {\n  if (!(arg instanceof rpc_pb.BlockHeaderList)) {\n    throw new Error('Expected argument of type types.BlockHeaderList');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_BlockHeaderList(buffer_arg) {\n  return rpc_pb.BlockHeaderList.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_BlockMetadata(arg) {\n  if (!(arg instanceof rpc_pb.BlockMetadata)) {\n    throw new Error('Expected argument of type types.BlockMetadata');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_BlockMetadata(buffer_arg) {\n  return rpc_pb.BlockMetadata.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_BlockMetadataList(arg) {\n  if (!(arg instanceof rpc_pb.BlockMetadataList)) {\n    throw new Error('Expected argument of type types.BlockMetadataList');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_BlockMetadataList(buffer_arg) {\n  return rpc_pb.BlockMetadataList.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_BlockchainStatus(arg) {\n  if (!(arg instanceof rpc_pb.BlockchainStatus)) {\n    throw new Error('Expected argument of type types.BlockchainStatus');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_BlockchainStatus(buffer_arg) {\n  return rpc_pb.BlockchainStatus.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_ChainInfo(arg) {\n  if (!(arg instanceof rpc_pb.ChainInfo)) {\n    throw new Error('Expected argument of type types.ChainInfo');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_ChainInfo(buffer_arg) {\n  return rpc_pb.ChainInfo.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_ChainStats(arg) {\n  if (!(arg instanceof rpc_pb.ChainStats)) {\n    throw new Error('Expected argument of type types.ChainStats');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_ChainStats(buffer_arg) {\n  return rpc_pb.ChainStats.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_CommitResult(arg) {\n  if (!(arg instanceof rpc_pb.CommitResult)) {\n    throw new Error('Expected argument of type types.CommitResult');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_CommitResult(buffer_arg) {\n  return rpc_pb.CommitResult.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_CommitResultList(arg) {\n  if (!(arg instanceof rpc_pb.CommitResultList)) {\n    throw new Error('Expected argument of type types.CommitResultList');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_CommitResultList(buffer_arg) {\n  return rpc_pb.CommitResultList.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_ConfChangeProgress(arg) {\n  if (!(arg instanceof raft_pb.ConfChangeProgress)) {\n    throw new Error('Expected argument of type types.ConfChangeProgress');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_ConfChangeProgress(buffer_arg) {\n  return raft_pb.ConfChangeProgress.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_ConsensusInfo(arg) {\n  if (!(arg instanceof rpc_pb.ConsensusInfo)) {\n    throw new Error('Expected argument of type types.ConsensusInfo');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_ConsensusInfo(buffer_arg) {\n  return rpc_pb.ConsensusInfo.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Empty(arg) {\n  if (!(arg instanceof rpc_pb.Empty)) {\n    throw new Error('Expected argument of type types.Empty');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Empty(buffer_arg) {\n  return rpc_pb.Empty.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_EnterpriseConfig(arg) {\n  if (!(arg instanceof rpc_pb.EnterpriseConfig)) {\n    throw new Error('Expected argument of type types.EnterpriseConfig');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_EnterpriseConfig(buffer_arg) {\n  return rpc_pb.EnterpriseConfig.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_EnterpriseConfigKey(arg) {\n  if (!(arg instanceof rpc_pb.EnterpriseConfigKey)) {\n    throw new Error('Expected argument of type types.EnterpriseConfigKey');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_EnterpriseConfigKey(buffer_arg) {\n  return rpc_pb.EnterpriseConfigKey.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Event(arg) {\n  if (!(arg instanceof blockchain_pb.Event)) {\n    throw new Error('Expected argument of type types.Event');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Event(buffer_arg) {\n  return blockchain_pb.Event.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_EventList(arg) {\n  if (!(arg instanceof rpc_pb.EventList)) {\n    throw new Error('Expected argument of type types.EventList');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_EventList(buffer_arg) {\n  return rpc_pb.EventList.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_FilterInfo(arg) {\n  if (!(arg instanceof blockchain_pb.FilterInfo)) {\n    throw new Error('Expected argument of type types.FilterInfo');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_FilterInfo(buffer_arg) {\n  return blockchain_pb.FilterInfo.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_ImportFormat(arg) {\n  if (!(arg instanceof rpc_pb.ImportFormat)) {\n    throw new Error('Expected argument of type types.ImportFormat');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_ImportFormat(buffer_arg) {\n  return rpc_pb.ImportFormat.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_KeyParams(arg) {\n  if (!(arg instanceof rpc_pb.KeyParams)) {\n    throw new Error('Expected argument of type types.KeyParams');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_KeyParams(buffer_arg) {\n  return rpc_pb.KeyParams.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_ListParams(arg) {\n  if (!(arg instanceof rpc_pb.ListParams)) {\n    throw new Error('Expected argument of type types.ListParams');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_ListParams(buffer_arg) {\n  return rpc_pb.ListParams.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_MembershipChange(arg) {\n  if (!(arg instanceof raft_pb.MembershipChange)) {\n    throw new Error('Expected argument of type types.MembershipChange');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_MembershipChange(buffer_arg) {\n  return raft_pb.MembershipChange.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_MembershipChangeReply(arg) {\n  if (!(arg instanceof raft_pb.MembershipChangeReply)) {\n    throw new Error('Expected argument of type types.MembershipChangeReply');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_MembershipChangeReply(buffer_arg) {\n  return raft_pb.MembershipChangeReply.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Metrics(arg) {\n  if (!(arg instanceof metric_pb.Metrics)) {\n    throw new Error('Expected argument of type types.Metrics');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Metrics(buffer_arg) {\n  return metric_pb.Metrics.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_MetricsRequest(arg) {\n  if (!(arg instanceof metric_pb.MetricsRequest)) {\n    throw new Error('Expected argument of type types.MetricsRequest');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_MetricsRequest(buffer_arg) {\n  return metric_pb.MetricsRequest.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Name(arg) {\n  if (!(arg instanceof rpc_pb.Name)) {\n    throw new Error('Expected argument of type types.Name');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Name(buffer_arg) {\n  return rpc_pb.Name.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_NameInfo(arg) {\n  if (!(arg instanceof rpc_pb.NameInfo)) {\n    throw new Error('Expected argument of type types.NameInfo');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_NameInfo(buffer_arg) {\n  return rpc_pb.NameInfo.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_NodeReq(arg) {\n  if (!(arg instanceof rpc_pb.NodeReq)) {\n    throw new Error('Expected argument of type types.NodeReq');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_NodeReq(buffer_arg) {\n  return rpc_pb.NodeReq.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_PeerList(arg) {\n  if (!(arg instanceof rpc_pb.PeerList)) {\n    throw new Error('Expected argument of type types.PeerList');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_PeerList(buffer_arg) {\n  return rpc_pb.PeerList.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_PeersParams(arg) {\n  if (!(arg instanceof rpc_pb.PeersParams)) {\n    throw new Error('Expected argument of type types.PeersParams');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_PeersParams(buffer_arg) {\n  return rpc_pb.PeersParams.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Personal(arg) {\n  if (!(arg instanceof rpc_pb.Personal)) {\n    throw new Error('Expected argument of type types.Personal');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Personal(buffer_arg) {\n  return rpc_pb.Personal.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Query(arg) {\n  if (!(arg instanceof blockchain_pb.Query)) {\n    throw new Error('Expected argument of type types.Query');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Query(buffer_arg) {\n  return blockchain_pb.Query.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Receipt(arg) {\n  if (!(arg instanceof blockchain_pb.Receipt)) {\n    throw new Error('Expected argument of type types.Receipt');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Receipt(buffer_arg) {\n  return blockchain_pb.Receipt.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_ServerInfo(arg) {\n  if (!(arg instanceof rpc_pb.ServerInfo)) {\n    throw new Error('Expected argument of type types.ServerInfo');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_ServerInfo(buffer_arg) {\n  return rpc_pb.ServerInfo.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_SingleBytes(arg) {\n  if (!(arg instanceof rpc_pb.SingleBytes)) {\n    throw new Error('Expected argument of type types.SingleBytes');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_SingleBytes(buffer_arg) {\n  return rpc_pb.SingleBytes.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Staking(arg) {\n  if (!(arg instanceof rpc_pb.Staking)) {\n    throw new Error('Expected argument of type types.Staking');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Staking(buffer_arg) {\n  return rpc_pb.Staking.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_State(arg) {\n  if (!(arg instanceof blockchain_pb.State)) {\n    throw new Error('Expected argument of type types.State');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_State(buffer_arg) {\n  return blockchain_pb.State.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_StateQuery(arg) {\n  if (!(arg instanceof blockchain_pb.StateQuery)) {\n    throw new Error('Expected argument of type types.StateQuery');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_StateQuery(buffer_arg) {\n  return blockchain_pb.StateQuery.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_StateQueryProof(arg) {\n  if (!(arg instanceof blockchain_pb.StateQueryProof)) {\n    throw new Error('Expected argument of type types.StateQueryProof');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_StateQueryProof(buffer_arg) {\n  return blockchain_pb.StateQueryProof.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_Tx(arg) {\n  if (!(arg instanceof blockchain_pb.Tx)) {\n    throw new Error('Expected argument of type types.Tx');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_Tx(buffer_arg) {\n  return blockchain_pb.Tx.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_TxInBlock(arg) {\n  if (!(arg instanceof blockchain_pb.TxInBlock)) {\n    throw new Error('Expected argument of type types.TxInBlock');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_TxInBlock(buffer_arg) {\n  return blockchain_pb.TxInBlock.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_TxList(arg) {\n  if (!(arg instanceof blockchain_pb.TxList)) {\n    throw new Error('Expected argument of type types.TxList');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_TxList(buffer_arg) {\n  return blockchain_pb.TxList.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_VerifyResult(arg) {\n  if (!(arg instanceof rpc_pb.VerifyResult)) {\n    throw new Error('Expected argument of type types.VerifyResult');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_VerifyResult(buffer_arg) {\n  return rpc_pb.VerifyResult.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_VoteList(arg) {\n  if (!(arg instanceof rpc_pb.VoteList)) {\n    throw new Error('Expected argument of type types.VoteList');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_VoteList(buffer_arg) {\n  return rpc_pb.VoteList.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\nfunction serialize_types_VoteParams(arg) {\n  if (!(arg instanceof rpc_pb.VoteParams)) {\n    throw new Error('Expected argument of type types.VoteParams');\n  }\n  return Buffer.from(arg.serializeBinary());\n}\n\nfunction deserialize_types_VoteParams(buffer_arg) {\n  return rpc_pb.VoteParams.deserializeBinary(new Uint8Array(buffer_arg));\n}\n\n\n// *\n// AergoRPCService is the main RPC service providing endpoints to interact \n// with the node and blockchain. If not otherwise noted, methods are unary requests.\nvar AergoRPCServiceService = exports.AergoRPCServiceService = {\n  // Returns the current state of this node\n  nodeState: {\n    path: '/types.AergoRPCService/NodeState',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.NodeReq,\n    responseType: rpc_pb.SingleBytes,\n    requestSerialize: serialize_types_NodeReq,\n    requestDeserialize: deserialize_types_NodeReq,\n    responseSerialize: serialize_types_SingleBytes,\n    responseDeserialize: deserialize_types_SingleBytes,\n  },\n  // Returns node metrics according to request \n  metric: {\n    path: '/types.AergoRPCService/Metric',\n    requestStream: false,\n    responseStream: false,\n    requestType: metric_pb.MetricsRequest,\n    responseType: metric_pb.Metrics,\n    requestSerialize: serialize_types_MetricsRequest,\n    requestDeserialize: deserialize_types_MetricsRequest,\n    responseSerialize: serialize_types_Metrics,\n    responseDeserialize: deserialize_types_Metrics,\n  },\n  // Returns current blockchain status (best block's height and hash)\n  blockchain: {\n    path: '/types.AergoRPCService/Blockchain',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Empty,\n    responseType: rpc_pb.BlockchainStatus,\n    requestSerialize: serialize_types_Empty,\n    requestDeserialize: deserialize_types_Empty,\n    responseSerialize: serialize_types_BlockchainStatus,\n    responseDeserialize: deserialize_types_BlockchainStatus,\n  },\n  // Returns current blockchain's basic information\n  getChainInfo: {\n    path: '/types.AergoRPCService/GetChainInfo',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Empty,\n    responseType: rpc_pb.ChainInfo,\n    requestSerialize: serialize_types_Empty,\n    requestDeserialize: deserialize_types_Empty,\n    responseSerialize: serialize_types_ChainInfo,\n    responseDeserialize: deserialize_types_ChainInfo,\n  },\n  // Returns current chain statistics\n  chainStat: {\n    path: '/types.AergoRPCService/ChainStat',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Empty,\n    responseType: rpc_pb.ChainStats,\n    requestSerialize: serialize_types_Empty,\n    requestDeserialize: deserialize_types_Empty,\n    responseSerialize: serialize_types_ChainStats,\n    responseDeserialize: deserialize_types_ChainStats,\n  },\n  // Returns list of Blocks without body according to request\n  listBlockHeaders: {\n    path: '/types.AergoRPCService/ListBlockHeaders',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.ListParams,\n    responseType: rpc_pb.BlockHeaderList,\n    requestSerialize: serialize_types_ListParams,\n    requestDeserialize: deserialize_types_ListParams,\n    responseSerialize: serialize_types_BlockHeaderList,\n    responseDeserialize: deserialize_types_BlockHeaderList,\n  },\n  // Returns list of block metadata (hash, header, and number of transactions) according to request\n  listBlockMetadata: {\n    path: '/types.AergoRPCService/ListBlockMetadata',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.ListParams,\n    responseType: rpc_pb.BlockMetadataList,\n    requestSerialize: serialize_types_ListParams,\n    requestDeserialize: deserialize_types_ListParams,\n    responseSerialize: serialize_types_BlockMetadataList,\n    responseDeserialize: deserialize_types_BlockMetadataList,\n  },\n  // Returns a stream of new blocks as they get added to the blockchain\n  listBlockStream: {\n    path: '/types.AergoRPCService/ListBlockStream',\n    requestStream: false,\n    responseStream: true,\n    requestType: rpc_pb.Empty,\n    responseType: blockchain_pb.Block,\n    requestSerialize: serialize_types_Empty,\n    requestDeserialize: deserialize_types_Empty,\n    responseSerialize: serialize_types_Block,\n    responseDeserialize: deserialize_types_Block,\n  },\n  // Returns a stream of new block's metadata as they get added to the blockchain\n  listBlockMetadataStream: {\n    path: '/types.AergoRPCService/ListBlockMetadataStream',\n    requestStream: false,\n    responseStream: true,\n    requestType: rpc_pb.Empty,\n    responseType: rpc_pb.BlockMetadata,\n    requestSerialize: serialize_types_Empty,\n    requestDeserialize: deserialize_types_Empty,\n    responseSerialize: serialize_types_BlockMetadata,\n    responseDeserialize: deserialize_types_BlockMetadata,\n  },\n  // Return a single block incl. header and body, queried by hash or number\n  getBlock: {\n    path: '/types.AergoRPCService/GetBlock',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.SingleBytes,\n    responseType: blockchain_pb.Block,\n    requestSerialize: serialize_types_SingleBytes,\n    requestDeserialize: deserialize_types_SingleBytes,\n    responseSerialize: serialize_types_Block,\n    responseDeserialize: deserialize_types_Block,\n  },\n  // Return a single block's metdata (hash, header, and number of transactions), queried by hash or number\n  getBlockMetadata: {\n    path: '/types.AergoRPCService/GetBlockMetadata',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.SingleBytes,\n    responseType: rpc_pb.BlockMetadata,\n    requestSerialize: serialize_types_SingleBytes,\n    requestDeserialize: deserialize_types_SingleBytes,\n    responseSerialize: serialize_types_BlockMetadata,\n    responseDeserialize: deserialize_types_BlockMetadata,\n  },\n  // Return a single block's body, queried by hash or number and list parameters\n  getBlockBody: {\n    path: '/types.AergoRPCService/GetBlockBody',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.BlockBodyParams,\n    responseType: rpc_pb.BlockBodyPaged,\n    requestSerialize: serialize_types_BlockBodyParams,\n    requestDeserialize: deserialize_types_BlockBodyParams,\n    responseSerialize: serialize_types_BlockBodyPaged,\n    responseDeserialize: deserialize_types_BlockBodyPaged,\n  },\n  // Return a single transaction, queried by transaction hash\n  getTX: {\n    path: '/types.AergoRPCService/GetTX',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.SingleBytes,\n    responseType: blockchain_pb.Tx,\n    requestSerialize: serialize_types_SingleBytes,\n    requestDeserialize: deserialize_types_SingleBytes,\n    responseSerialize: serialize_types_Tx,\n    responseDeserialize: deserialize_types_Tx,\n  },\n  // Return information about transaction in block, queried by transaction hash\n  getBlockTX: {\n    path: '/types.AergoRPCService/GetBlockTX',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.SingleBytes,\n    responseType: blockchain_pb.TxInBlock,\n    requestSerialize: serialize_types_SingleBytes,\n    requestDeserialize: deserialize_types_SingleBytes,\n    responseSerialize: serialize_types_TxInBlock,\n    responseDeserialize: deserialize_types_TxInBlock,\n  },\n  // Return transaction receipt, queried by transaction hash\n  getReceipt: {\n    path: '/types.AergoRPCService/GetReceipt',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.SingleBytes,\n    responseType: blockchain_pb.Receipt,\n    requestSerialize: serialize_types_SingleBytes,\n    requestDeserialize: deserialize_types_SingleBytes,\n    responseSerialize: serialize_types_Receipt,\n    responseDeserialize: deserialize_types_Receipt,\n  },\n  // Return ABI stored at contract address\n  getABI: {\n    path: '/types.AergoRPCService/GetABI',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.SingleBytes,\n    responseType: blockchain_pb.ABI,\n    requestSerialize: serialize_types_SingleBytes,\n    requestDeserialize: deserialize_types_SingleBytes,\n    responseSerialize: serialize_types_ABI,\n    responseDeserialize: deserialize_types_ABI,\n  },\n  // Sign and send a transaction from an unlocked account\n  sendTX: {\n    path: '/types.AergoRPCService/SendTX',\n    requestStream: false,\n    responseStream: false,\n    requestType: blockchain_pb.Tx,\n    responseType: rpc_pb.CommitResult,\n    requestSerialize: serialize_types_Tx,\n    requestDeserialize: deserialize_types_Tx,\n    responseSerialize: serialize_types_CommitResult,\n    responseDeserialize: deserialize_types_CommitResult,\n  },\n  // Sign transaction with unlocked account\n  signTX: {\n    path: '/types.AergoRPCService/SignTX',\n    requestStream: false,\n    responseStream: false,\n    requestType: blockchain_pb.Tx,\n    responseType: blockchain_pb.Tx,\n    requestSerialize: serialize_types_Tx,\n    requestDeserialize: deserialize_types_Tx,\n    responseSerialize: serialize_types_Tx,\n    responseDeserialize: deserialize_types_Tx,\n  },\n  // Verify validity of transaction\n  verifyTX: {\n    path: '/types.AergoRPCService/VerifyTX',\n    requestStream: false,\n    responseStream: false,\n    requestType: blockchain_pb.Tx,\n    responseType: rpc_pb.VerifyResult,\n    requestSerialize: serialize_types_Tx,\n    requestDeserialize: deserialize_types_Tx,\n    responseSerialize: serialize_types_VerifyResult,\n    responseDeserialize: deserialize_types_VerifyResult,\n  },\n  // Commit a signed transaction\n  commitTX: {\n    path: '/types.AergoRPCService/CommitTX',\n    requestStream: false,\n    responseStream: false,\n    requestType: blockchain_pb.TxList,\n    responseType: rpc_pb.CommitResultList,\n    requestSerialize: serialize_types_TxList,\n    requestDeserialize: deserialize_types_TxList,\n    responseSerialize: serialize_types_CommitResultList,\n    responseDeserialize: deserialize_types_CommitResultList,\n  },\n  // Return state of account\n  getState: {\n    path: '/types.AergoRPCService/GetState',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.SingleBytes,\n    responseType: blockchain_pb.State,\n    requestSerialize: serialize_types_SingleBytes,\n    requestDeserialize: deserialize_types_SingleBytes,\n    responseSerialize: serialize_types_State,\n    responseDeserialize: deserialize_types_State,\n  },\n  // Return state of account, including merkle proof\n  getStateAndProof: {\n    path: '/types.AergoRPCService/GetStateAndProof',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.AccountAndRoot,\n    responseType: blockchain_pb.AccountProof,\n    requestSerialize: serialize_types_AccountAndRoot,\n    requestDeserialize: deserialize_types_AccountAndRoot,\n    responseSerialize: serialize_types_AccountProof,\n    responseDeserialize: deserialize_types_AccountProof,\n  },\n  // Create a new account in this node\n  createAccount: {\n    path: '/types.AergoRPCService/CreateAccount',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Personal,\n    responseType: account_pb.Account,\n    requestSerialize: serialize_types_Personal,\n    requestDeserialize: deserialize_types_Personal,\n    responseSerialize: serialize_types_Account,\n    responseDeserialize: deserialize_types_Account,\n  },\n  // Return list of accounts in this node\n  getAccounts: {\n    path: '/types.AergoRPCService/GetAccounts',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Empty,\n    responseType: account_pb.AccountList,\n    requestSerialize: serialize_types_Empty,\n    requestDeserialize: deserialize_types_Empty,\n    responseSerialize: serialize_types_AccountList,\n    responseDeserialize: deserialize_types_AccountList,\n  },\n  // Lock account in this node\n  lockAccount: {\n    path: '/types.AergoRPCService/LockAccount',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Personal,\n    responseType: account_pb.Account,\n    requestSerialize: serialize_types_Personal,\n    requestDeserialize: deserialize_types_Personal,\n    responseSerialize: serialize_types_Account,\n    responseDeserialize: deserialize_types_Account,\n  },\n  // Unlock account in this node\n  unlockAccount: {\n    path: '/types.AergoRPCService/UnlockAccount',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Personal,\n    responseType: account_pb.Account,\n    requestSerialize: serialize_types_Personal,\n    requestDeserialize: deserialize_types_Personal,\n    responseSerialize: serialize_types_Account,\n    responseDeserialize: deserialize_types_Account,\n  },\n  // Import account to this node\n  importAccount: {\n    path: '/types.AergoRPCService/ImportAccount',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.ImportFormat,\n    responseType: account_pb.Account,\n    requestSerialize: serialize_types_ImportFormat,\n    requestDeserialize: deserialize_types_ImportFormat,\n    responseSerialize: serialize_types_Account,\n    responseDeserialize: deserialize_types_Account,\n  },\n  // Export account stored in this node\n  exportAccount: {\n    path: '/types.AergoRPCService/ExportAccount',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Personal,\n    responseType: rpc_pb.SingleBytes,\n    requestSerialize: serialize_types_Personal,\n    requestDeserialize: deserialize_types_Personal,\n    responseSerialize: serialize_types_SingleBytes,\n    responseDeserialize: deserialize_types_SingleBytes,\n  },\n  // Query a contract method\n  queryContract: {\n    path: '/types.AergoRPCService/QueryContract',\n    requestStream: false,\n    responseStream: false,\n    requestType: blockchain_pb.Query,\n    responseType: rpc_pb.SingleBytes,\n    requestSerialize: serialize_types_Query,\n    requestDeserialize: deserialize_types_Query,\n    responseSerialize: serialize_types_SingleBytes,\n    responseDeserialize: deserialize_types_SingleBytes,\n  },\n  // Query contract state\n  queryContractState: {\n    path: '/types.AergoRPCService/QueryContractState',\n    requestStream: false,\n    responseStream: false,\n    requestType: blockchain_pb.StateQuery,\n    responseType: blockchain_pb.StateQueryProof,\n    requestSerialize: serialize_types_StateQuery,\n    requestDeserialize: deserialize_types_StateQuery,\n    responseSerialize: serialize_types_StateQueryProof,\n    responseDeserialize: deserialize_types_StateQueryProof,\n  },\n  // Return list of peers of this node and their state\n  getPeers: {\n    path: '/types.AergoRPCService/GetPeers',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.PeersParams,\n    responseType: rpc_pb.PeerList,\n    requestSerialize: serialize_types_PeersParams,\n    requestDeserialize: deserialize_types_PeersParams,\n    responseSerialize: serialize_types_PeerList,\n    responseDeserialize: deserialize_types_PeerList,\n  },\n  // Return result of vote\n  getVotes: {\n    path: '/types.AergoRPCService/GetVotes',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.VoteParams,\n    responseType: rpc_pb.VoteList,\n    requestSerialize: serialize_types_VoteParams,\n    requestDeserialize: deserialize_types_VoteParams,\n    responseSerialize: serialize_types_VoteList,\n    responseDeserialize: deserialize_types_VoteList,\n  },\n  // Return staking, voting info for account\n  getAccountVotes: {\n    path: '/types.AergoRPCService/GetAccountVotes',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.AccountAddress,\n    responseType: rpc_pb.AccountVoteInfo,\n    requestSerialize: serialize_types_AccountAddress,\n    requestDeserialize: deserialize_types_AccountAddress,\n    responseSerialize: serialize_types_AccountVoteInfo,\n    responseDeserialize: deserialize_types_AccountVoteInfo,\n  },\n  // Return staking information\n  getStaking: {\n    path: '/types.AergoRPCService/GetStaking',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.AccountAddress,\n    responseType: rpc_pb.Staking,\n    requestSerialize: serialize_types_AccountAddress,\n    requestDeserialize: deserialize_types_AccountAddress,\n    responseSerialize: serialize_types_Staking,\n    responseDeserialize: deserialize_types_Staking,\n  },\n  // Return name information\n  getNameInfo: {\n    path: '/types.AergoRPCService/GetNameInfo',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Name,\n    responseType: rpc_pb.NameInfo,\n    requestSerialize: serialize_types_Name,\n    requestDeserialize: deserialize_types_Name,\n    responseSerialize: serialize_types_NameInfo,\n    responseDeserialize: deserialize_types_NameInfo,\n  },\n  // Returns a stream of event as they get added to the blockchain\n  listEventStream: {\n    path: '/types.AergoRPCService/ListEventStream',\n    requestStream: false,\n    responseStream: true,\n    requestType: blockchain_pb.FilterInfo,\n    responseType: blockchain_pb.Event,\n    requestSerialize: serialize_types_FilterInfo,\n    requestDeserialize: deserialize_types_FilterInfo,\n    responseSerialize: serialize_types_Event,\n    responseDeserialize: deserialize_types_Event,\n  },\n  // Returns list of event\n  listEvents: {\n    path: '/types.AergoRPCService/ListEvents',\n    requestStream: false,\n    responseStream: false,\n    requestType: blockchain_pb.FilterInfo,\n    responseType: rpc_pb.EventList,\n    requestSerialize: serialize_types_FilterInfo,\n    requestDeserialize: deserialize_types_FilterInfo,\n    responseSerialize: serialize_types_EventList,\n    responseDeserialize: deserialize_types_EventList,\n  },\n  // Returns configs and statuses of server\n  getServerInfo: {\n    path: '/types.AergoRPCService/GetServerInfo',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.KeyParams,\n    responseType: rpc_pb.ServerInfo,\n    requestSerialize: serialize_types_KeyParams,\n    requestDeserialize: deserialize_types_KeyParams,\n    responseSerialize: serialize_types_ServerInfo,\n    responseDeserialize: deserialize_types_ServerInfo,\n  },\n  // Returns status of consensus and bps\n  getConsensusInfo: {\n    path: '/types.AergoRPCService/GetConsensusInfo',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.Empty,\n    responseType: rpc_pb.ConsensusInfo,\n    requestSerialize: serialize_types_Empty,\n    requestDeserialize: deserialize_types_Empty,\n    responseSerialize: serialize_types_ConsensusInfo,\n    responseDeserialize: deserialize_types_ConsensusInfo,\n  },\n  // Add & remove member of raft cluster\n  changeMembership: {\n    path: '/types.AergoRPCService/ChangeMembership',\n    requestStream: false,\n    responseStream: false,\n    requestType: raft_pb.MembershipChange,\n    responseType: raft_pb.MembershipChangeReply,\n    requestSerialize: serialize_types_MembershipChange,\n    requestDeserialize: deserialize_types_MembershipChange,\n    responseSerialize: serialize_types_MembershipChangeReply,\n    responseDeserialize: deserialize_types_MembershipChangeReply,\n  },\n  // Returns enterprise config\n  getEnterpriseConfig: {\n    path: '/types.AergoRPCService/GetEnterpriseConfig',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.EnterpriseConfigKey,\n    responseType: rpc_pb.EnterpriseConfig,\n    requestSerialize: serialize_types_EnterpriseConfigKey,\n    requestDeserialize: deserialize_types_EnterpriseConfigKey,\n    responseSerialize: serialize_types_EnterpriseConfig,\n    responseDeserialize: deserialize_types_EnterpriseConfig,\n  },\n  // Return a status of changeCluster enterprise tx,  queried by requestID\n  getConfChangeProgress: {\n    path: '/types.AergoRPCService/GetConfChangeProgress',\n    requestStream: false,\n    responseStream: false,\n    requestType: rpc_pb.SingleBytes,\n    responseType: raft_pb.ConfChangeProgress,\n    requestSerialize: serialize_types_SingleBytes,\n    requestDeserialize: deserialize_types_SingleBytes,\n    responseSerialize: serialize_types_ConfChangeProgress,\n    responseDeserialize: deserialize_types_ConfChangeProgress,\n  },\n};\n\nexports.AergoRPCServiceClient = grpc.makeGenericClientConstructor(AergoRPCServiceService);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bc8d0cbfa4ba175a74591974e4c141a4178bdf6d","contentHash":"fdb038c674a10f8e33b77cf896cd0400277bbcdd8c515a38494ac42dcc747715"},"/Users/paulgrau/projects/aergo/herajs/packages/client/src/providers/grpc-web-node.ts":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/providers/grpc-web-node.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":75}},"1":{"start":{"line":1,"column":75},"end":{"line":1,"column":100}},"2":{"start":{"line":1,"column":123},"end":{"line":1,"column":161}},"3":{"start":{"line":2,"column":32},"end":{"line":2,"column":87}},"4":{"start":{"line":2,"column":141},"end":{"line":2,"column":160}},"5":{"start":{"line":2,"column":161},"end":{"line":2,"column":406}},"6":{"start":{"line":2,"column":210},"end":{"line":2,"column":246}},"7":{"start":{"line":2,"column":247},"end":{"line":2,"column":374}},"8":{"start":{"line":2,"column":267},"end":{"line":2,"column":374}},"9":{"start":{"line":2,"column":308},"end":{"line":2,"column":371}},"10":{"start":{"line":2,"column":374},"end":{"line":2,"column":405}},"11":{"start":{"line":2,"column":406},"end":{"line":2,"column":418}},"12":{"start":{"line":2,"column":451},"end":{"line":2,"column":922}},"13":{"start":{"line":2,"column":464},"end":{"line":2,"column":465}},"14":{"start":{"line":2,"column":508},"end":{"line":2,"column":548}},"15":{"start":{"line":2,"column":549},"end":{"line":2,"column":921}},"16":{"start":{"line":2,"column":561},"end":{"line":2,"column":660}},"17":{"start":{"line":2,"column":615},"end":{"line":2,"column":657}},"18":{"start":{"line":2,"column":667},"end":{"line":2,"column":921}},"19":{"start":{"line":2,"column":706},"end":{"line":2,"column":780}},"20":{"start":{"line":2,"column":788},"end":{"line":2,"column":920}},"21":{"start":{"line":2,"column":836},"end":{"line":2,"column":917}},"22":{"start":{"line":2,"column":922},"end":{"line":2,"column":936}},"23":{"start":{"line":2,"column":980},"end":{"line":2,"column":1127}},"24":{"start":{"line":2,"column":997},"end":{"line":2,"column":1101}},"25":{"start":{"line":2,"column":1109},"end":{"line":2,"column":1126}},"26":{"start":{"line":2,"column":1127},"end":{"line":2,"column":1138}},"27":{"start":{"line":26,"column":28},"end":{"line":26,"column":68}},"28":{"start":{"line":26,"column":68},"end":{"line":26,"column":108}},"29":{"start":{"line":27,"column":4},"end":{"line":29,"column":12}},"30":{"start":{"line":31,"column":20},"end":{"line":32,"column":69}},"31":{"start":{"line":34,"column":4},"end":{"line":34,"column":87}},"32":{"start":{"line":38,"column":4},"end":{"line":39,"column":37}},"33":{"start":{"line":44,"column":0},"end":{"line":44,"column":19}},"34":{"start":{"line":44,"column":20},"end":{"line":44,"column":47}}},"fnMap":{"0":{"name":"ownKeys","decl":{"start":{"line":2,"column":97},"end":{"line":2,"column":104}},"loc":{"start":{"line":2,"column":129},"end":{"line":2,"column":419}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":2,"column":292},"end":{"line":2,"column":293}},"loc":{"start":{"line":2,"column":307},"end":{"line":2,"column":372}},"line":2},"2":{"name":"_objectSpread","decl":{"start":{"line":2,"column":428},"end":{"line":2,"column":441}},"loc":{"start":{"line":2,"column":450},"end":{"line":2,"column":937}},"line":2},"3":{"name":"(anonymous_3)","decl":{"start":{"line":2,"column":599},"end":{"line":2,"column":600}},"loc":{"start":{"line":2,"column":614},"end":{"line":2,"column":658}},"line":2},"4":{"name":"(anonymous_4)","decl":{"start":{"line":2,"column":820},"end":{"line":2,"column":821}},"loc":{"start":{"line":2,"column":835},"end":{"line":2,"column":918}},"line":2},"5":{"name":"_defineProperty","decl":{"start":{"line":2,"column":946},"end":{"line":2,"column":961}},"loc":{"start":{"line":2,"column":979},"end":{"line":2,"column":1139}},"line":2},"6":{"name":"(anonymous_6)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":27},"end":{"line":35,"column":3}},"line":26},"7":{"name":"(anonymous_7)","decl":{"start":{"line":37,"column":2},"end":{"line":37,"column":3}},"loc":{"start":{"line":37,"column":22},"end":{"line":41,"column":3}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":161},"end":{"line":2,"column":406}},"type":"if","locations":[{"start":{"line":2,"column":161},"end":{"line":2,"column":406}},{"start":{"line":2,"column":161},"end":{"line":2,"column":406}}],"line":2},"1":{"loc":{"start":{"line":2,"column":247},"end":{"line":2,"column":374}},"type":"if","locations":[{"start":{"line":2,"column":247},"end":{"line":2,"column":374}},{"start":{"line":2,"column":247},"end":{"line":2,"column":374}}],"line":2},"2":{"loc":{"start":{"line":2,"column":508},"end":{"line":2,"column":548}},"type":"cond-expr","locations":[{"start":{"line":2,"column":531},"end":{"line":2,"column":543}},{"start":{"line":2,"column":546},"end":{"line":2,"column":548}}],"line":2},"3":{"loc":{"start":{"line":2,"column":549},"end":{"line":2,"column":921}},"type":"if","locations":[{"start":{"line":2,"column":549},"end":{"line":2,"column":921}},{"start":{"line":2,"column":549},"end":{"line":2,"column":921}}],"line":2},"4":{"loc":{"start":{"line":2,"column":667},"end":{"line":2,"column":921}},"type":"if","locations":[{"start":{"line":2,"column":667},"end":{"line":2,"column":921}},{"start":{"line":2,"column":667},"end":{"line":2,"column":921}}],"line":2},"5":{"loc":{"start":{"line":2,"column":980},"end":{"line":2,"column":1127}},"type":"if","locations":[{"start":{"line":2,"column":980},"end":{"line":2,"column":1127}},{"start":{"line":2,"column":980},"end":{"line":2,"column":1127}}],"line":2},"6":{"loc":{"start":{"line":26,"column":14},"end":{"line":26,"column":25}},"type":"default-arg","locations":[{"start":{"line":26,"column":23},"end":{"line":26,"column":25}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":2,"7":2,"8":2,"9":0,"10":2,"11":2,"12":1,"13":1,"14":3,"15":3,"16":2,"17":2,"18":1,"19":1,"20":0,"21":0,"22":1,"23":4,"24":1,"25":3,"26":4,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1},"f":{"0":2,"1":0,"2":1,"3":2,"4":0,"5":4,"6":1,"7":1},"b":{"0":[2,0],"1":[2,0],"2":[3,0],"3":[2,1],"4":[1,0],"5":[1,3],"6":[0]},"inputSourceMap":{"version":3,"sources":["grpc-web-node.ts"],"names":["GrpcWebNodeProvider","constructor","config","defaultConfig","options","transport","client","AergoRPCServiceClient","url"],"mappings":"oGAAA;AACA,wF;;;;;;AAMA;;;;;;AAMA,MAAMA,mBAAN,CAA0B;;;;AAItB;;;;;;;;AAQAC,EAAAA,WAAW,CAACC,MAA6B,GAAG,EAAjC,EAAqC;AAC5C,SAAKA,MAAL;AACO,SAAKC,aADZ;AAEOD,IAAAA,MAFP;;AAIA,UAAME,OAAO,GAAG;AACZC,MAAAA,SAAS,EAAE,kDADC,EAAhB;;AAGA,SAAKC,MAAL,GAAc,IAAIC,sCAAJ,CAA0B,KAAKL,MAAL,CAAYM,GAAtC,EAA2CJ,OAA3C,CAAd;AACH;;AAED,MAAID,aAAJ,GAA2C;AACvC,WAAO;AACHK,MAAAA,GAAG,EAAE,uBADF,EAAP;;AAGH,GA3BqB,C;;;AA8BXR,mB","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/src/providers","sourcesContent":["import { AergoRPCServiceClient } from '../../types/rpc_grpc_web_pb';\nimport { NodeHttpTransport } from '@improbable-eng/grpc-web-node-http-transport';\n\ninterface GrpcWebProviderConfig {\n    url?: string;\n}\n\n/**\n * Provider for GRPC-WEB connections over HTTP.\n * This is compatible with Node.js environments.\n * Streaming methods are not supported.\n * This is mostly for testing, for productiomn use use GrpcWebProvider or GrpcProvider.\n */\nclass GrpcWebNodeProvider {\n    client: any;\n    config: GrpcWebProviderConfig;\n\n    /**\n     * .. code-block:: javascript\n     * \n     *     import { GrpcWebNodeProvider } from '@herajs/client';\n     *     const provider = new GrpcWebProvider({url: 'http://localhost:7845'});\n     * \n     * @param {GrpcWebProviderConfig} config\n     */\n    constructor(config: GrpcWebProviderConfig = {}) {\n        this.config = {\n            ...this.defaultConfig,\n            ...config\n        };\n        const options = {\n            transport: NodeHttpTransport()\n        };\n        this.client = new AergoRPCServiceClient(this.config.url, options);\n    }\n\n    get defaultConfig(): GrpcWebProviderConfig {\n        return {\n            url: 'http://localhost:7845'\n        };\n    }\n}\n\nexport default GrpcWebNodeProvider;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4fd2eb376f98716ec165ee26a60d7edd641a8867","contentHash":"53cbfcabef9ac366675e96cd51248ae388925da3f6a798ca34d0bf02270e6b78"},"/Users/paulgrau/projects/aergo/herajs/packages/client/types/rpc_grpc_web_pb.js":{"path":"/Users/paulgrau/projects/aergo/herajs/packages/client/types/rpc_grpc_web_pb.js","statementMap":{"0":{"start":{"line":4,"column":13},"end":{"line":4,"column":32}},"1":{"start":{"line":5,"column":20},"end":{"line":5,"column":46}},"2":{"start":{"line":6,"column":17},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":16},"end":{"line":7,"column":38}},"4":{"start":{"line":8,"column":14},"end":{"line":8,"column":34}},"5":{"start":{"line":9,"column":11},"end":{"line":9,"column":51}},"6":{"start":{"line":11,"column":22},"end":{"line":15,"column":3}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":56}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":25}},"9":{"start":{"line":17,"column":0},"end":{"line":23,"column":37}},"10":{"start":{"line":26,"column":0},"end":{"line":32,"column":36}},"11":{"start":{"line":35,"column":0},"end":{"line":41,"column":42}},"12":{"start":{"line":44,"column":0},"end":{"line":50,"column":35}},"13":{"start":{"line":53,"column":0},"end":{"line":59,"column":36}},"14":{"start":{"line":62,"column":0},"end":{"line":68,"column":41}},"15":{"start":{"line":71,"column":0},"end":{"line":77,"column":43}},"16":{"start":{"line":80,"column":0},"end":{"line":86,"column":38}},"17":{"start":{"line":89,"column":0},"end":{"line":95,"column":39}},"18":{"start":{"line":98,"column":0},"end":{"line":104,"column":38}},"19":{"start":{"line":107,"column":0},"end":{"line":113,"column":39}},"20":{"start":{"line":116,"column":0},"end":{"line":122,"column":40}},"21":{"start":{"line":125,"column":0},"end":{"line":131,"column":35}},"22":{"start":{"line":134,"column":0},"end":{"line":140,"column":42}},"23":{"start":{"line":143,"column":0},"end":{"line":149,"column":40}},"24":{"start":{"line":152,"column":0},"end":{"line":158,"column":36}},"25":{"start":{"line":161,"column":0},"end":{"line":167,"column":38}},"26":{"start":{"line":170,"column":0},"end":{"line":176,"column":35}},"27":{"start":{"line":179,"column":0},"end":{"line":185,"column":38}},"28":{"start":{"line":188,"column":0},"end":{"line":194,"column":42}},"29":{"start":{"line":197,"column":0},"end":{"line":203,"column":38}},"30":{"start":{"line":206,"column":0},"end":{"line":212,"column":45}},"31":{"start":{"line":215,"column":0},"end":{"line":221,"column":37}},"32":{"start":{"line":224,"column":0},"end":{"line":230,"column":41}},"33":{"start":{"line":233,"column":0},"end":{"line":239,"column":37}},"34":{"start":{"line":242,"column":0},"end":{"line":248,"column":37}},"35":{"start":{"line":251,"column":0},"end":{"line":257,"column":37}},"36":{"start":{"line":260,"column":0},"end":{"line":266,"column":37}},"37":{"start":{"line":269,"column":0},"end":{"line":275,"column":37}},"38":{"start":{"line":278,"column":0},"end":{"line":284,"column":48}},"39":{"start":{"line":287,"column":0},"end":{"line":293,"column":34}},"40":{"start":{"line":296,"column":0},"end":{"line":302,"column":34}},"41":{"start":{"line":305,"column":0},"end":{"line":311,"column":41}},"42":{"start":{"line":314,"column":0},"end":{"line":320,"column":33}},"43":{"start":{"line":323,"column":0},"end":{"line":329,"column":34}},"44":{"start":{"line":332,"column":0},"end":{"line":338,"column":38}},"45":{"start":{"line":341,"column":0},"end":{"line":347,"column":35}},"46":{"start":{"line":350,"column":0},"end":{"line":356,"column":36}},"47":{"start":{"line":359,"column":0},"end":{"line":365,"column":39}},"48":{"start":{"line":368,"column":0},"end":{"line":374,"column":48}},"49":{"start":{"line":377,"column":0},"end":{"line":383,"column":42}},"50":{"start":{"line":386,"column":0},"end":{"line":392,"column":45}},"51":{"start":{"line":395,"column":0},"end":{"line":395,"column":42}},"52":{"start":{"line":398,"column":2},"end":{"line":398,"column":33}},"53":{"start":{"line":399,"column":2},"end":{"line":399,"column":31}},"54":{"start":{"line":402,"column":0},"end":{"line":431,"column":2}},"55":{"start":{"line":403,"column":2},"end":{"line":405,"column":3}},"56":{"start":{"line":404,"column":4},"end":{"line":404,"column":28}},"57":{"start":{"line":406,"column":15},"end":{"line":423,"column":8}},"58":{"start":{"line":413,"column":6},"end":{"line":422,"column":7}},"59":{"start":{"line":414,"column":8},"end":{"line":421,"column":9}},"60":{"start":{"line":415,"column":20},"end":{"line":415,"column":53}},"61":{"start":{"line":416,"column":10},"end":{"line":416,"column":37}},"62":{"start":{"line":417,"column":10},"end":{"line":417,"column":43}},"63":{"start":{"line":418,"column":10},"end":{"line":418,"column":30}},"64":{"start":{"line":420,"column":10},"end":{"line":420,"column":43}},"65":{"start":{"line":425,"column":2},"end":{"line":429,"column":8}},"66":{"start":{"line":427,"column":6},"end":{"line":427,"column":22}},"67":{"start":{"line":428,"column":6},"end":{"line":428,"column":21}},"68":{"start":{"line":433,"column":0},"end":{"line":462,"column":2}},"69":{"start":{"line":434,"column":2},"end":{"line":436,"column":3}},"70":{"start":{"line":435,"column":4},"end":{"line":435,"column":28}},"71":{"start":{"line":437,"column":15},"end":{"line":454,"column":8}},"72":{"start":{"line":444,"column":6},"end":{"line":453,"column":7}},"73":{"start":{"line":445,"column":8},"end":{"line":452,"column":9}},"74":{"start":{"line":446,"column":20},"end":{"line":446,"column":53}},"75":{"start":{"line":447,"column":10},"end":{"line":447,"column":37}},"76":{"start":{"line":448,"column":10},"end":{"line":448,"column":43}},"77":{"start":{"line":449,"column":10},"end":{"line":449,"column":30}},"78":{"start":{"line":451,"column":10},"end":{"line":451,"column":43}},"79":{"start":{"line":456,"column":2},"end":{"line":460,"column":8}},"80":{"start":{"line":458,"column":6},"end":{"line":458,"column":22}},"81":{"start":{"line":459,"column":6},"end":{"line":459,"column":21}},"82":{"start":{"line":464,"column":0},"end":{"line":493,"column":2}},"83":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"84":{"start":{"line":466,"column":4},"end":{"line":466,"column":28}},"85":{"start":{"line":468,"column":15},"end":{"line":485,"column":8}},"86":{"start":{"line":475,"column":6},"end":{"line":484,"column":7}},"87":{"start":{"line":476,"column":8},"end":{"line":483,"column":9}},"88":{"start":{"line":477,"column":20},"end":{"line":477,"column":53}},"89":{"start":{"line":478,"column":10},"end":{"line":478,"column":37}},"90":{"start":{"line":479,"column":10},"end":{"line":479,"column":43}},"91":{"start":{"line":480,"column":10},"end":{"line":480,"column":30}},"92":{"start":{"line":482,"column":10},"end":{"line":482,"column":43}},"93":{"start":{"line":487,"column":2},"end":{"line":491,"column":8}},"94":{"start":{"line":489,"column":6},"end":{"line":489,"column":22}},"95":{"start":{"line":490,"column":6},"end":{"line":490,"column":21}},"96":{"start":{"line":495,"column":0},"end":{"line":524,"column":2}},"97":{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},"98":{"start":{"line":497,"column":4},"end":{"line":497,"column":28}},"99":{"start":{"line":499,"column":15},"end":{"line":516,"column":8}},"100":{"start":{"line":506,"column":6},"end":{"line":515,"column":7}},"101":{"start":{"line":507,"column":8},"end":{"line":514,"column":9}},"102":{"start":{"line":508,"column":20},"end":{"line":508,"column":53}},"103":{"start":{"line":509,"column":10},"end":{"line":509,"column":37}},"104":{"start":{"line":510,"column":10},"end":{"line":510,"column":43}},"105":{"start":{"line":511,"column":10},"end":{"line":511,"column":30}},"106":{"start":{"line":513,"column":10},"end":{"line":513,"column":43}},"107":{"start":{"line":518,"column":2},"end":{"line":522,"column":8}},"108":{"start":{"line":520,"column":6},"end":{"line":520,"column":22}},"109":{"start":{"line":521,"column":6},"end":{"line":521,"column":21}},"110":{"start":{"line":526,"column":0},"end":{"line":555,"column":2}},"111":{"start":{"line":527,"column":2},"end":{"line":529,"column":3}},"112":{"start":{"line":528,"column":4},"end":{"line":528,"column":28}},"113":{"start":{"line":530,"column":15},"end":{"line":547,"column":8}},"114":{"start":{"line":537,"column":6},"end":{"line":546,"column":7}},"115":{"start":{"line":538,"column":8},"end":{"line":545,"column":9}},"116":{"start":{"line":539,"column":20},"end":{"line":539,"column":53}},"117":{"start":{"line":540,"column":10},"end":{"line":540,"column":37}},"118":{"start":{"line":541,"column":10},"end":{"line":541,"column":43}},"119":{"start":{"line":542,"column":10},"end":{"line":542,"column":30}},"120":{"start":{"line":544,"column":10},"end":{"line":544,"column":43}},"121":{"start":{"line":549,"column":2},"end":{"line":553,"column":8}},"122":{"start":{"line":551,"column":6},"end":{"line":551,"column":22}},"123":{"start":{"line":552,"column":6},"end":{"line":552,"column":21}},"124":{"start":{"line":557,"column":0},"end":{"line":586,"column":2}},"125":{"start":{"line":558,"column":2},"end":{"line":560,"column":3}},"126":{"start":{"line":559,"column":4},"end":{"line":559,"column":28}},"127":{"start":{"line":561,"column":15},"end":{"line":578,"column":8}},"128":{"start":{"line":568,"column":6},"end":{"line":577,"column":7}},"129":{"start":{"line":569,"column":8},"end":{"line":576,"column":9}},"130":{"start":{"line":570,"column":20},"end":{"line":570,"column":53}},"131":{"start":{"line":571,"column":10},"end":{"line":571,"column":37}},"132":{"start":{"line":572,"column":10},"end":{"line":572,"column":43}},"133":{"start":{"line":573,"column":10},"end":{"line":573,"column":30}},"134":{"start":{"line":575,"column":10},"end":{"line":575,"column":43}},"135":{"start":{"line":580,"column":2},"end":{"line":584,"column":8}},"136":{"start":{"line":582,"column":6},"end":{"line":582,"column":22}},"137":{"start":{"line":583,"column":6},"end":{"line":583,"column":21}},"138":{"start":{"line":588,"column":0},"end":{"line":617,"column":2}},"139":{"start":{"line":589,"column":2},"end":{"line":591,"column":3}},"140":{"start":{"line":590,"column":4},"end":{"line":590,"column":28}},"141":{"start":{"line":592,"column":15},"end":{"line":609,"column":8}},"142":{"start":{"line":599,"column":6},"end":{"line":608,"column":7}},"143":{"start":{"line":600,"column":8},"end":{"line":607,"column":9}},"144":{"start":{"line":601,"column":20},"end":{"line":601,"column":53}},"145":{"start":{"line":602,"column":10},"end":{"line":602,"column":37}},"146":{"start":{"line":603,"column":10},"end":{"line":603,"column":43}},"147":{"start":{"line":604,"column":10},"end":{"line":604,"column":30}},"148":{"start":{"line":606,"column":10},"end":{"line":606,"column":43}},"149":{"start":{"line":611,"column":2},"end":{"line":615,"column":8}},"150":{"start":{"line":613,"column":6},"end":{"line":613,"column":22}},"151":{"start":{"line":614,"column":6},"end":{"line":614,"column":21}},"152":{"start":{"line":619,"column":0},"end":{"line":656,"column":2}},"153":{"start":{"line":620,"column":18},"end":{"line":623,"column":16}},"154":{"start":{"line":625,"column":15},"end":{"line":644,"column":8}},"155":{"start":{"line":632,"column":6},"end":{"line":634,"column":9}},"156":{"start":{"line":633,"column":8},"end":{"line":633,"column":33}},"157":{"start":{"line":637,"column":6},"end":{"line":639,"column":9}},"158":{"start":{"line":638,"column":8},"end":{"line":638,"column":78}},"159":{"start":{"line":640,"column":6},"end":{"line":642,"column":9}},"160":{"start":{"line":641,"column":8},"end":{"line":641,"column":78}},"161":{"start":{"line":643,"column":6},"end":{"line":643,"column":23}},"162":{"start":{"line":646,"column":2},"end":{"line":654,"column":8}},"163":{"start":{"line":648,"column":6},"end":{"line":648,"column":36}},"164":{"start":{"line":649,"column":6},"end":{"line":649,"column":18}},"165":{"start":{"line":652,"column":6},"end":{"line":652,"column":23}},"166":{"start":{"line":653,"column":6},"end":{"line":653,"column":21}},"167":{"start":{"line":658,"column":0},"end":{"line":695,"column":2}},"168":{"start":{"line":659,"column":18},"end":{"line":662,"column":16}},"169":{"start":{"line":664,"column":15},"end":{"line":683,"column":8}},"170":{"start":{"line":671,"column":6},"end":{"line":673,"column":9}},"171":{"start":{"line":672,"column":8},"end":{"line":672,"column":33}},"172":{"start":{"line":676,"column":6},"end":{"line":678,"column":9}},"173":{"start":{"line":677,"column":8},"end":{"line":677,"column":78}},"174":{"start":{"line":679,"column":6},"end":{"line":681,"column":9}},"175":{"start":{"line":680,"column":8},"end":{"line":680,"column":78}},"176":{"start":{"line":682,"column":6},"end":{"line":682,"column":23}},"177":{"start":{"line":685,"column":2},"end":{"line":693,"column":8}},"178":{"start":{"line":687,"column":6},"end":{"line":687,"column":36}},"179":{"start":{"line":688,"column":6},"end":{"line":688,"column":18}},"180":{"start":{"line":691,"column":6},"end":{"line":691,"column":23}},"181":{"start":{"line":692,"column":6},"end":{"line":692,"column":21}},"182":{"start":{"line":697,"column":0},"end":{"line":726,"column":2}},"183":{"start":{"line":698,"column":2},"end":{"line":700,"column":3}},"184":{"start":{"line":699,"column":4},"end":{"line":699,"column":28}},"185":{"start":{"line":701,"column":15},"end":{"line":718,"column":8}},"186":{"start":{"line":708,"column":6},"end":{"line":717,"column":7}},"187":{"start":{"line":709,"column":8},"end":{"line":716,"column":9}},"188":{"start":{"line":710,"column":20},"end":{"line":710,"column":53}},"189":{"start":{"line":711,"column":10},"end":{"line":711,"column":37}},"190":{"start":{"line":712,"column":10},"end":{"line":712,"column":43}},"191":{"start":{"line":713,"column":10},"end":{"line":713,"column":30}},"192":{"start":{"line":715,"column":10},"end":{"line":715,"column":43}},"193":{"start":{"line":720,"column":2},"end":{"line":724,"column":8}},"194":{"start":{"line":722,"column":6},"end":{"line":722,"column":22}},"195":{"start":{"line":723,"column":6},"end":{"line":723,"column":21}},"196":{"start":{"line":728,"column":0},"end":{"line":757,"column":2}},"197":{"start":{"line":729,"column":2},"end":{"line":731,"column":3}},"198":{"start":{"line":730,"column":4},"end":{"line":730,"column":28}},"199":{"start":{"line":732,"column":15},"end":{"line":749,"column":8}},"200":{"start":{"line":739,"column":6},"end":{"line":748,"column":7}},"201":{"start":{"line":740,"column":8},"end":{"line":747,"column":9}},"202":{"start":{"line":741,"column":20},"end":{"line":741,"column":53}},"203":{"start":{"line":742,"column":10},"end":{"line":742,"column":37}},"204":{"start":{"line":743,"column":10},"end":{"line":743,"column":43}},"205":{"start":{"line":744,"column":10},"end":{"line":744,"column":30}},"206":{"start":{"line":746,"column":10},"end":{"line":746,"column":43}},"207":{"start":{"line":751,"column":2},"end":{"line":755,"column":8}},"208":{"start":{"line":753,"column":6},"end":{"line":753,"column":22}},"209":{"start":{"line":754,"column":6},"end":{"line":754,"column":21}},"210":{"start":{"line":759,"column":0},"end":{"line":788,"column":2}},"211":{"start":{"line":760,"column":2},"end":{"line":762,"column":3}},"212":{"start":{"line":761,"column":4},"end":{"line":761,"column":28}},"213":{"start":{"line":763,"column":15},"end":{"line":780,"column":8}},"214":{"start":{"line":770,"column":6},"end":{"line":779,"column":7}},"215":{"start":{"line":771,"column":8},"end":{"line":778,"column":9}},"216":{"start":{"line":772,"column":20},"end":{"line":772,"column":53}},"217":{"start":{"line":773,"column":10},"end":{"line":773,"column":37}},"218":{"start":{"line":774,"column":10},"end":{"line":774,"column":43}},"219":{"start":{"line":775,"column":10},"end":{"line":775,"column":30}},"220":{"start":{"line":777,"column":10},"end":{"line":777,"column":43}},"221":{"start":{"line":782,"column":2},"end":{"line":786,"column":8}},"222":{"start":{"line":784,"column":6},"end":{"line":784,"column":22}},"223":{"start":{"line":785,"column":6},"end":{"line":785,"column":21}},"224":{"start":{"line":790,"column":0},"end":{"line":819,"column":2}},"225":{"start":{"line":791,"column":2},"end":{"line":793,"column":3}},"226":{"start":{"line":792,"column":4},"end":{"line":792,"column":28}},"227":{"start":{"line":794,"column":15},"end":{"line":811,"column":8}},"228":{"start":{"line":801,"column":6},"end":{"line":810,"column":7}},"229":{"start":{"line":802,"column":8},"end":{"line":809,"column":9}},"230":{"start":{"line":803,"column":20},"end":{"line":803,"column":53}},"231":{"start":{"line":804,"column":10},"end":{"line":804,"column":37}},"232":{"start":{"line":805,"column":10},"end":{"line":805,"column":43}},"233":{"start":{"line":806,"column":10},"end":{"line":806,"column":30}},"234":{"start":{"line":808,"column":10},"end":{"line":808,"column":43}},"235":{"start":{"line":813,"column":2},"end":{"line":817,"column":8}},"236":{"start":{"line":815,"column":6},"end":{"line":815,"column":22}},"237":{"start":{"line":816,"column":6},"end":{"line":816,"column":21}},"238":{"start":{"line":821,"column":0},"end":{"line":850,"column":2}},"239":{"start":{"line":822,"column":2},"end":{"line":824,"column":3}},"240":{"start":{"line":823,"column":4},"end":{"line":823,"column":28}},"241":{"start":{"line":825,"column":15},"end":{"line":842,"column":8}},"242":{"start":{"line":832,"column":6},"end":{"line":841,"column":7}},"243":{"start":{"line":833,"column":8},"end":{"line":840,"column":9}},"244":{"start":{"line":834,"column":20},"end":{"line":834,"column":53}},"245":{"start":{"line":835,"column":10},"end":{"line":835,"column":37}},"246":{"start":{"line":836,"column":10},"end":{"line":836,"column":43}},"247":{"start":{"line":837,"column":10},"end":{"line":837,"column":30}},"248":{"start":{"line":839,"column":10},"end":{"line":839,"column":43}},"249":{"start":{"line":844,"column":2},"end":{"line":848,"column":8}},"250":{"start":{"line":846,"column":6},"end":{"line":846,"column":22}},"251":{"start":{"line":847,"column":6},"end":{"line":847,"column":21}},"252":{"start":{"line":852,"column":0},"end":{"line":881,"column":2}},"253":{"start":{"line":853,"column":2},"end":{"line":855,"column":3}},"254":{"start":{"line":854,"column":4},"end":{"line":854,"column":28}},"255":{"start":{"line":856,"column":15},"end":{"line":873,"column":8}},"256":{"start":{"line":863,"column":6},"end":{"line":872,"column":7}},"257":{"start":{"line":864,"column":8},"end":{"line":871,"column":9}},"258":{"start":{"line":865,"column":20},"end":{"line":865,"column":53}},"259":{"start":{"line":866,"column":10},"end":{"line":866,"column":37}},"260":{"start":{"line":867,"column":10},"end":{"line":867,"column":43}},"261":{"start":{"line":868,"column":10},"end":{"line":868,"column":30}},"262":{"start":{"line":870,"column":10},"end":{"line":870,"column":43}},"263":{"start":{"line":875,"column":2},"end":{"line":879,"column":8}},"264":{"start":{"line":877,"column":6},"end":{"line":877,"column":22}},"265":{"start":{"line":878,"column":6},"end":{"line":878,"column":21}},"266":{"start":{"line":883,"column":0},"end":{"line":912,"column":2}},"267":{"start":{"line":884,"column":2},"end":{"line":886,"column":3}},"268":{"start":{"line":885,"column":4},"end":{"line":885,"column":28}},"269":{"start":{"line":887,"column":15},"end":{"line":904,"column":8}},"270":{"start":{"line":894,"column":6},"end":{"line":903,"column":7}},"271":{"start":{"line":895,"column":8},"end":{"line":902,"column":9}},"272":{"start":{"line":896,"column":20},"end":{"line":896,"column":53}},"273":{"start":{"line":897,"column":10},"end":{"line":897,"column":37}},"274":{"start":{"line":898,"column":10},"end":{"line":898,"column":43}},"275":{"start":{"line":899,"column":10},"end":{"line":899,"column":30}},"276":{"start":{"line":901,"column":10},"end":{"line":901,"column":43}},"277":{"start":{"line":906,"column":2},"end":{"line":910,"column":8}},"278":{"start":{"line":908,"column":6},"end":{"line":908,"column":22}},"279":{"start":{"line":909,"column":6},"end":{"line":909,"column":21}},"280":{"start":{"line":914,"column":0},"end":{"line":943,"column":2}},"281":{"start":{"line":915,"column":2},"end":{"line":917,"column":3}},"282":{"start":{"line":916,"column":4},"end":{"line":916,"column":28}},"283":{"start":{"line":918,"column":15},"end":{"line":935,"column":8}},"284":{"start":{"line":925,"column":6},"end":{"line":934,"column":7}},"285":{"start":{"line":926,"column":8},"end":{"line":933,"column":9}},"286":{"start":{"line":927,"column":20},"end":{"line":927,"column":53}},"287":{"start":{"line":928,"column":10},"end":{"line":928,"column":37}},"288":{"start":{"line":929,"column":10},"end":{"line":929,"column":43}},"289":{"start":{"line":930,"column":10},"end":{"line":930,"column":30}},"290":{"start":{"line":932,"column":10},"end":{"line":932,"column":43}},"291":{"start":{"line":937,"column":2},"end":{"line":941,"column":8}},"292":{"start":{"line":939,"column":6},"end":{"line":939,"column":22}},"293":{"start":{"line":940,"column":6},"end":{"line":940,"column":21}},"294":{"start":{"line":945,"column":0},"end":{"line":974,"column":2}},"295":{"start":{"line":946,"column":2},"end":{"line":948,"column":3}},"296":{"start":{"line":947,"column":4},"end":{"line":947,"column":28}},"297":{"start":{"line":949,"column":15},"end":{"line":966,"column":8}},"298":{"start":{"line":956,"column":6},"end":{"line":965,"column":7}},"299":{"start":{"line":957,"column":8},"end":{"line":964,"column":9}},"300":{"start":{"line":958,"column":20},"end":{"line":958,"column":53}},"301":{"start":{"line":959,"column":10},"end":{"line":959,"column":37}},"302":{"start":{"line":960,"column":10},"end":{"line":960,"column":43}},"303":{"start":{"line":961,"column":10},"end":{"line":961,"column":30}},"304":{"start":{"line":963,"column":10},"end":{"line":963,"column":43}},"305":{"start":{"line":968,"column":2},"end":{"line":972,"column":8}},"306":{"start":{"line":970,"column":6},"end":{"line":970,"column":22}},"307":{"start":{"line":971,"column":6},"end":{"line":971,"column":21}},"308":{"start":{"line":976,"column":0},"end":{"line":1005,"column":2}},"309":{"start":{"line":977,"column":2},"end":{"line":979,"column":3}},"310":{"start":{"line":978,"column":4},"end":{"line":978,"column":28}},"311":{"start":{"line":980,"column":15},"end":{"line":997,"column":8}},"312":{"start":{"line":987,"column":6},"end":{"line":996,"column":7}},"313":{"start":{"line":988,"column":8},"end":{"line":995,"column":9}},"314":{"start":{"line":989,"column":20},"end":{"line":989,"column":53}},"315":{"start":{"line":990,"column":10},"end":{"line":990,"column":37}},"316":{"start":{"line":991,"column":10},"end":{"line":991,"column":43}},"317":{"start":{"line":992,"column":10},"end":{"line":992,"column":30}},"318":{"start":{"line":994,"column":10},"end":{"line":994,"column":43}},"319":{"start":{"line":999,"column":2},"end":{"line":1003,"column":8}},"320":{"start":{"line":1001,"column":6},"end":{"line":1001,"column":22}},"321":{"start":{"line":1002,"column":6},"end":{"line":1002,"column":21}},"322":{"start":{"line":1007,"column":0},"end":{"line":1036,"column":2}},"323":{"start":{"line":1008,"column":2},"end":{"line":1010,"column":3}},"324":{"start":{"line":1009,"column":4},"end":{"line":1009,"column":28}},"325":{"start":{"line":1011,"column":15},"end":{"line":1028,"column":8}},"326":{"start":{"line":1018,"column":6},"end":{"line":1027,"column":7}},"327":{"start":{"line":1019,"column":8},"end":{"line":1026,"column":9}},"328":{"start":{"line":1020,"column":20},"end":{"line":1020,"column":53}},"329":{"start":{"line":1021,"column":10},"end":{"line":1021,"column":37}},"330":{"start":{"line":1022,"column":10},"end":{"line":1022,"column":43}},"331":{"start":{"line":1023,"column":10},"end":{"line":1023,"column":30}},"332":{"start":{"line":1025,"column":10},"end":{"line":1025,"column":43}},"333":{"start":{"line":1030,"column":2},"end":{"line":1034,"column":8}},"334":{"start":{"line":1032,"column":6},"end":{"line":1032,"column":22}},"335":{"start":{"line":1033,"column":6},"end":{"line":1033,"column":21}},"336":{"start":{"line":1038,"column":0},"end":{"line":1067,"column":2}},"337":{"start":{"line":1039,"column":2},"end":{"line":1041,"column":3}},"338":{"start":{"line":1040,"column":4},"end":{"line":1040,"column":28}},"339":{"start":{"line":1042,"column":15},"end":{"line":1059,"column":8}},"340":{"start":{"line":1049,"column":6},"end":{"line":1058,"column":7}},"341":{"start":{"line":1050,"column":8},"end":{"line":1057,"column":9}},"342":{"start":{"line":1051,"column":20},"end":{"line":1051,"column":53}},"343":{"start":{"line":1052,"column":10},"end":{"line":1052,"column":37}},"344":{"start":{"line":1053,"column":10},"end":{"line":1053,"column":43}},"345":{"start":{"line":1054,"column":10},"end":{"line":1054,"column":30}},"346":{"start":{"line":1056,"column":10},"end":{"line":1056,"column":43}},"347":{"start":{"line":1061,"column":2},"end":{"line":1065,"column":8}},"348":{"start":{"line":1063,"column":6},"end":{"line":1063,"column":22}},"349":{"start":{"line":1064,"column":6},"end":{"line":1064,"column":21}},"350":{"start":{"line":1069,"column":0},"end":{"line":1098,"column":2}},"351":{"start":{"line":1070,"column":2},"end":{"line":1072,"column":3}},"352":{"start":{"line":1071,"column":4},"end":{"line":1071,"column":28}},"353":{"start":{"line":1073,"column":15},"end":{"line":1090,"column":8}},"354":{"start":{"line":1080,"column":6},"end":{"line":1089,"column":7}},"355":{"start":{"line":1081,"column":8},"end":{"line":1088,"column":9}},"356":{"start":{"line":1082,"column":20},"end":{"line":1082,"column":53}},"357":{"start":{"line":1083,"column":10},"end":{"line":1083,"column":37}},"358":{"start":{"line":1084,"column":10},"end":{"line":1084,"column":43}},"359":{"start":{"line":1085,"column":10},"end":{"line":1085,"column":30}},"360":{"start":{"line":1087,"column":10},"end":{"line":1087,"column":43}},"361":{"start":{"line":1092,"column":2},"end":{"line":1096,"column":8}},"362":{"start":{"line":1094,"column":6},"end":{"line":1094,"column":22}},"363":{"start":{"line":1095,"column":6},"end":{"line":1095,"column":21}},"364":{"start":{"line":1100,"column":0},"end":{"line":1129,"column":2}},"365":{"start":{"line":1101,"column":2},"end":{"line":1103,"column":3}},"366":{"start":{"line":1102,"column":4},"end":{"line":1102,"column":28}},"367":{"start":{"line":1104,"column":15},"end":{"line":1121,"column":8}},"368":{"start":{"line":1111,"column":6},"end":{"line":1120,"column":7}},"369":{"start":{"line":1112,"column":8},"end":{"line":1119,"column":9}},"370":{"start":{"line":1113,"column":20},"end":{"line":1113,"column":53}},"371":{"start":{"line":1114,"column":10},"end":{"line":1114,"column":37}},"372":{"start":{"line":1115,"column":10},"end":{"line":1115,"column":43}},"373":{"start":{"line":1116,"column":10},"end":{"line":1116,"column":30}},"374":{"start":{"line":1118,"column":10},"end":{"line":1118,"column":43}},"375":{"start":{"line":1123,"column":2},"end":{"line":1127,"column":8}},"376":{"start":{"line":1125,"column":6},"end":{"line":1125,"column":22}},"377":{"start":{"line":1126,"column":6},"end":{"line":1126,"column":21}},"378":{"start":{"line":1131,"column":0},"end":{"line":1160,"column":2}},"379":{"start":{"line":1132,"column":2},"end":{"line":1134,"column":3}},"380":{"start":{"line":1133,"column":4},"end":{"line":1133,"column":28}},"381":{"start":{"line":1135,"column":15},"end":{"line":1152,"column":8}},"382":{"start":{"line":1142,"column":6},"end":{"line":1151,"column":7}},"383":{"start":{"line":1143,"column":8},"end":{"line":1150,"column":9}},"384":{"start":{"line":1144,"column":20},"end":{"line":1144,"column":53}},"385":{"start":{"line":1145,"column":10},"end":{"line":1145,"column":37}},"386":{"start":{"line":1146,"column":10},"end":{"line":1146,"column":43}},"387":{"start":{"line":1147,"column":10},"end":{"line":1147,"column":30}},"388":{"start":{"line":1149,"column":10},"end":{"line":1149,"column":43}},"389":{"start":{"line":1154,"column":2},"end":{"line":1158,"column":8}},"390":{"start":{"line":1156,"column":6},"end":{"line":1156,"column":22}},"391":{"start":{"line":1157,"column":6},"end":{"line":1157,"column":21}},"392":{"start":{"line":1162,"column":0},"end":{"line":1191,"column":2}},"393":{"start":{"line":1163,"column":2},"end":{"line":1165,"column":3}},"394":{"start":{"line":1164,"column":4},"end":{"line":1164,"column":28}},"395":{"start":{"line":1166,"column":15},"end":{"line":1183,"column":8}},"396":{"start":{"line":1173,"column":6},"end":{"line":1182,"column":7}},"397":{"start":{"line":1174,"column":8},"end":{"line":1181,"column":9}},"398":{"start":{"line":1175,"column":20},"end":{"line":1175,"column":53}},"399":{"start":{"line":1176,"column":10},"end":{"line":1176,"column":37}},"400":{"start":{"line":1177,"column":10},"end":{"line":1177,"column":43}},"401":{"start":{"line":1178,"column":10},"end":{"line":1178,"column":30}},"402":{"start":{"line":1180,"column":10},"end":{"line":1180,"column":43}},"403":{"start":{"line":1185,"column":2},"end":{"line":1189,"column":8}},"404":{"start":{"line":1187,"column":6},"end":{"line":1187,"column":22}},"405":{"start":{"line":1188,"column":6},"end":{"line":1188,"column":21}},"406":{"start":{"line":1193,"column":0},"end":{"line":1222,"column":2}},"407":{"start":{"line":1194,"column":2},"end":{"line":1196,"column":3}},"408":{"start":{"line":1195,"column":4},"end":{"line":1195,"column":28}},"409":{"start":{"line":1197,"column":15},"end":{"line":1214,"column":8}},"410":{"start":{"line":1204,"column":6},"end":{"line":1213,"column":7}},"411":{"start":{"line":1205,"column":8},"end":{"line":1212,"column":9}},"412":{"start":{"line":1206,"column":20},"end":{"line":1206,"column":53}},"413":{"start":{"line":1207,"column":10},"end":{"line":1207,"column":37}},"414":{"start":{"line":1208,"column":10},"end":{"line":1208,"column":43}},"415":{"start":{"line":1209,"column":10},"end":{"line":1209,"column":30}},"416":{"start":{"line":1211,"column":10},"end":{"line":1211,"column":43}},"417":{"start":{"line":1216,"column":2},"end":{"line":1220,"column":8}},"418":{"start":{"line":1218,"column":6},"end":{"line":1218,"column":22}},"419":{"start":{"line":1219,"column":6},"end":{"line":1219,"column":21}},"420":{"start":{"line":1224,"column":0},"end":{"line":1253,"column":2}},"421":{"start":{"line":1225,"column":2},"end":{"line":1227,"column":3}},"422":{"start":{"line":1226,"column":4},"end":{"line":1226,"column":28}},"423":{"start":{"line":1228,"column":15},"end":{"line":1245,"column":8}},"424":{"start":{"line":1235,"column":6},"end":{"line":1244,"column":7}},"425":{"start":{"line":1236,"column":8},"end":{"line":1243,"column":9}},"426":{"start":{"line":1237,"column":20},"end":{"line":1237,"column":53}},"427":{"start":{"line":1238,"column":10},"end":{"line":1238,"column":37}},"428":{"start":{"line":1239,"column":10},"end":{"line":1239,"column":43}},"429":{"start":{"line":1240,"column":10},"end":{"line":1240,"column":30}},"430":{"start":{"line":1242,"column":10},"end":{"line":1242,"column":43}},"431":{"start":{"line":1247,"column":2},"end":{"line":1251,"column":8}},"432":{"start":{"line":1249,"column":6},"end":{"line":1249,"column":22}},"433":{"start":{"line":1250,"column":6},"end":{"line":1250,"column":21}},"434":{"start":{"line":1255,"column":0},"end":{"line":1284,"column":2}},"435":{"start":{"line":1256,"column":2},"end":{"line":1258,"column":3}},"436":{"start":{"line":1257,"column":4},"end":{"line":1257,"column":28}},"437":{"start":{"line":1259,"column":15},"end":{"line":1276,"column":8}},"438":{"start":{"line":1266,"column":6},"end":{"line":1275,"column":7}},"439":{"start":{"line":1267,"column":8},"end":{"line":1274,"column":9}},"440":{"start":{"line":1268,"column":20},"end":{"line":1268,"column":53}},"441":{"start":{"line":1269,"column":10},"end":{"line":1269,"column":37}},"442":{"start":{"line":1270,"column":10},"end":{"line":1270,"column":43}},"443":{"start":{"line":1271,"column":10},"end":{"line":1271,"column":30}},"444":{"start":{"line":1273,"column":10},"end":{"line":1273,"column":43}},"445":{"start":{"line":1278,"column":2},"end":{"line":1282,"column":8}},"446":{"start":{"line":1280,"column":6},"end":{"line":1280,"column":22}},"447":{"start":{"line":1281,"column":6},"end":{"line":1281,"column":21}},"448":{"start":{"line":1286,"column":0},"end":{"line":1315,"column":2}},"449":{"start":{"line":1287,"column":2},"end":{"line":1289,"column":3}},"450":{"start":{"line":1288,"column":4},"end":{"line":1288,"column":28}},"451":{"start":{"line":1290,"column":15},"end":{"line":1307,"column":8}},"452":{"start":{"line":1297,"column":6},"end":{"line":1306,"column":7}},"453":{"start":{"line":1298,"column":8},"end":{"line":1305,"column":9}},"454":{"start":{"line":1299,"column":20},"end":{"line":1299,"column":53}},"455":{"start":{"line":1300,"column":10},"end":{"line":1300,"column":37}},"456":{"start":{"line":1301,"column":10},"end":{"line":1301,"column":43}},"457":{"start":{"line":1302,"column":10},"end":{"line":1302,"column":30}},"458":{"start":{"line":1304,"column":10},"end":{"line":1304,"column":43}},"459":{"start":{"line":1309,"column":2},"end":{"line":1313,"column":8}},"460":{"start":{"line":1311,"column":6},"end":{"line":1311,"column":22}},"461":{"start":{"line":1312,"column":6},"end":{"line":1312,"column":21}},"462":{"start":{"line":1317,"column":0},"end":{"line":1346,"column":2}},"463":{"start":{"line":1318,"column":2},"end":{"line":1320,"column":3}},"464":{"start":{"line":1319,"column":4},"end":{"line":1319,"column":28}},"465":{"start":{"line":1321,"column":15},"end":{"line":1338,"column":8}},"466":{"start":{"line":1328,"column":6},"end":{"line":1337,"column":7}},"467":{"start":{"line":1329,"column":8},"end":{"line":1336,"column":9}},"468":{"start":{"line":1330,"column":20},"end":{"line":1330,"column":53}},"469":{"start":{"line":1331,"column":10},"end":{"line":1331,"column":37}},"470":{"start":{"line":1332,"column":10},"end":{"line":1332,"column":43}},"471":{"start":{"line":1333,"column":10},"end":{"line":1333,"column":30}},"472":{"start":{"line":1335,"column":10},"end":{"line":1335,"column":43}},"473":{"start":{"line":1340,"column":2},"end":{"line":1344,"column":8}},"474":{"start":{"line":1342,"column":6},"end":{"line":1342,"column":22}},"475":{"start":{"line":1343,"column":6},"end":{"line":1343,"column":21}},"476":{"start":{"line":1348,"column":0},"end":{"line":1377,"column":2}},"477":{"start":{"line":1349,"column":2},"end":{"line":1351,"column":3}},"478":{"start":{"line":1350,"column":4},"end":{"line":1350,"column":28}},"479":{"start":{"line":1352,"column":15},"end":{"line":1369,"column":8}},"480":{"start":{"line":1359,"column":6},"end":{"line":1368,"column":7}},"481":{"start":{"line":1360,"column":8},"end":{"line":1367,"column":9}},"482":{"start":{"line":1361,"column":20},"end":{"line":1361,"column":53}},"483":{"start":{"line":1362,"column":10},"end":{"line":1362,"column":37}},"484":{"start":{"line":1363,"column":10},"end":{"line":1363,"column":43}},"485":{"start":{"line":1364,"column":10},"end":{"line":1364,"column":30}},"486":{"start":{"line":1366,"column":10},"end":{"line":1366,"column":43}},"487":{"start":{"line":1371,"column":2},"end":{"line":1375,"column":8}},"488":{"start":{"line":1373,"column":6},"end":{"line":1373,"column":22}},"489":{"start":{"line":1374,"column":6},"end":{"line":1374,"column":21}},"490":{"start":{"line":1379,"column":0},"end":{"line":1408,"column":2}},"491":{"start":{"line":1380,"column":2},"end":{"line":1382,"column":3}},"492":{"start":{"line":1381,"column":4},"end":{"line":1381,"column":28}},"493":{"start":{"line":1383,"column":15},"end":{"line":1400,"column":8}},"494":{"start":{"line":1390,"column":6},"end":{"line":1399,"column":7}},"495":{"start":{"line":1391,"column":8},"end":{"line":1398,"column":9}},"496":{"start":{"line":1392,"column":20},"end":{"line":1392,"column":53}},"497":{"start":{"line":1393,"column":10},"end":{"line":1393,"column":37}},"498":{"start":{"line":1394,"column":10},"end":{"line":1394,"column":43}},"499":{"start":{"line":1395,"column":10},"end":{"line":1395,"column":30}},"500":{"start":{"line":1397,"column":10},"end":{"line":1397,"column":43}},"501":{"start":{"line":1402,"column":2},"end":{"line":1406,"column":8}},"502":{"start":{"line":1404,"column":6},"end":{"line":1404,"column":22}},"503":{"start":{"line":1405,"column":6},"end":{"line":1405,"column":21}},"504":{"start":{"line":1410,"column":0},"end":{"line":1439,"column":2}},"505":{"start":{"line":1411,"column":2},"end":{"line":1413,"column":3}},"506":{"start":{"line":1412,"column":4},"end":{"line":1412,"column":28}},"507":{"start":{"line":1414,"column":15},"end":{"line":1431,"column":8}},"508":{"start":{"line":1421,"column":6},"end":{"line":1430,"column":7}},"509":{"start":{"line":1422,"column":8},"end":{"line":1429,"column":9}},"510":{"start":{"line":1423,"column":20},"end":{"line":1423,"column":53}},"511":{"start":{"line":1424,"column":10},"end":{"line":1424,"column":37}},"512":{"start":{"line":1425,"column":10},"end":{"line":1425,"column":43}},"513":{"start":{"line":1426,"column":10},"end":{"line":1426,"column":30}},"514":{"start":{"line":1428,"column":10},"end":{"line":1428,"column":43}},"515":{"start":{"line":1433,"column":2},"end":{"line":1437,"column":8}},"516":{"start":{"line":1435,"column":6},"end":{"line":1435,"column":22}},"517":{"start":{"line":1436,"column":6},"end":{"line":1436,"column":21}},"518":{"start":{"line":1441,"column":0},"end":{"line":1470,"column":2}},"519":{"start":{"line":1442,"column":2},"end":{"line":1444,"column":3}},"520":{"start":{"line":1443,"column":4},"end":{"line":1443,"column":28}},"521":{"start":{"line":1445,"column":15},"end":{"line":1462,"column":8}},"522":{"start":{"line":1452,"column":6},"end":{"line":1461,"column":7}},"523":{"start":{"line":1453,"column":8},"end":{"line":1460,"column":9}},"524":{"start":{"line":1454,"column":20},"end":{"line":1454,"column":53}},"525":{"start":{"line":1455,"column":10},"end":{"line":1455,"column":37}},"526":{"start":{"line":1456,"column":10},"end":{"line":1456,"column":43}},"527":{"start":{"line":1457,"column":10},"end":{"line":1457,"column":30}},"528":{"start":{"line":1459,"column":10},"end":{"line":1459,"column":43}},"529":{"start":{"line":1464,"column":2},"end":{"line":1468,"column":8}},"530":{"start":{"line":1466,"column":6},"end":{"line":1466,"column":22}},"531":{"start":{"line":1467,"column":6},"end":{"line":1467,"column":21}},"532":{"start":{"line":1472,"column":0},"end":{"line":1501,"column":2}},"533":{"start":{"line":1473,"column":2},"end":{"line":1475,"column":3}},"534":{"start":{"line":1474,"column":4},"end":{"line":1474,"column":28}},"535":{"start":{"line":1476,"column":15},"end":{"line":1493,"column":8}},"536":{"start":{"line":1483,"column":6},"end":{"line":1492,"column":7}},"537":{"start":{"line":1484,"column":8},"end":{"line":1491,"column":9}},"538":{"start":{"line":1485,"column":20},"end":{"line":1485,"column":53}},"539":{"start":{"line":1486,"column":10},"end":{"line":1486,"column":37}},"540":{"start":{"line":1487,"column":10},"end":{"line":1487,"column":43}},"541":{"start":{"line":1488,"column":10},"end":{"line":1488,"column":30}},"542":{"start":{"line":1490,"column":10},"end":{"line":1490,"column":43}},"543":{"start":{"line":1495,"column":2},"end":{"line":1499,"column":8}},"544":{"start":{"line":1497,"column":6},"end":{"line":1497,"column":22}},"545":{"start":{"line":1498,"column":6},"end":{"line":1498,"column":21}},"546":{"start":{"line":1503,"column":0},"end":{"line":1540,"column":2}},"547":{"start":{"line":1504,"column":18},"end":{"line":1507,"column":16}},"548":{"start":{"line":1509,"column":15},"end":{"line":1528,"column":8}},"549":{"start":{"line":1516,"column":6},"end":{"line":1518,"column":9}},"550":{"start":{"line":1517,"column":8},"end":{"line":1517,"column":33}},"551":{"start":{"line":1521,"column":6},"end":{"line":1523,"column":9}},"552":{"start":{"line":1522,"column":8},"end":{"line":1522,"column":78}},"553":{"start":{"line":1524,"column":6},"end":{"line":1526,"column":9}},"554":{"start":{"line":1525,"column":8},"end":{"line":1525,"column":78}},"555":{"start":{"line":1527,"column":6},"end":{"line":1527,"column":23}},"556":{"start":{"line":1530,"column":2},"end":{"line":1538,"column":8}},"557":{"start":{"line":1532,"column":6},"end":{"line":1532,"column":36}},"558":{"start":{"line":1533,"column":6},"end":{"line":1533,"column":18}},"559":{"start":{"line":1536,"column":6},"end":{"line":1536,"column":23}},"560":{"start":{"line":1537,"column":6},"end":{"line":1537,"column":21}},"561":{"start":{"line":1542,"column":0},"end":{"line":1571,"column":2}},"562":{"start":{"line":1543,"column":2},"end":{"line":1545,"column":3}},"563":{"start":{"line":1544,"column":4},"end":{"line":1544,"column":28}},"564":{"start":{"line":1546,"column":15},"end":{"line":1563,"column":8}},"565":{"start":{"line":1553,"column":6},"end":{"line":1562,"column":7}},"566":{"start":{"line":1554,"column":8},"end":{"line":1561,"column":9}},"567":{"start":{"line":1555,"column":20},"end":{"line":1555,"column":53}},"568":{"start":{"line":1556,"column":10},"end":{"line":1556,"column":37}},"569":{"start":{"line":1557,"column":10},"end":{"line":1557,"column":43}},"570":{"start":{"line":1558,"column":10},"end":{"line":1558,"column":30}},"571":{"start":{"line":1560,"column":10},"end":{"line":1560,"column":43}},"572":{"start":{"line":1565,"column":2},"end":{"line":1569,"column":8}},"573":{"start":{"line":1567,"column":6},"end":{"line":1567,"column":22}},"574":{"start":{"line":1568,"column":6},"end":{"line":1568,"column":21}},"575":{"start":{"line":1573,"column":0},"end":{"line":1602,"column":2}},"576":{"start":{"line":1574,"column":2},"end":{"line":1576,"column":3}},"577":{"start":{"line":1575,"column":4},"end":{"line":1575,"column":28}},"578":{"start":{"line":1577,"column":15},"end":{"line":1594,"column":8}},"579":{"start":{"line":1584,"column":6},"end":{"line":1593,"column":7}},"580":{"start":{"line":1585,"column":8},"end":{"line":1592,"column":9}},"581":{"start":{"line":1586,"column":20},"end":{"line":1586,"column":53}},"582":{"start":{"line":1587,"column":10},"end":{"line":1587,"column":37}},"583":{"start":{"line":1588,"column":10},"end":{"line":1588,"column":43}},"584":{"start":{"line":1589,"column":10},"end":{"line":1589,"column":30}},"585":{"start":{"line":1591,"column":10},"end":{"line":1591,"column":43}},"586":{"start":{"line":1596,"column":2},"end":{"line":1600,"column":8}},"587":{"start":{"line":1598,"column":6},"end":{"line":1598,"column":22}},"588":{"start":{"line":1599,"column":6},"end":{"line":1599,"column":21}},"589":{"start":{"line":1604,"column":0},"end":{"line":1633,"column":2}},"590":{"start":{"line":1605,"column":2},"end":{"line":1607,"column":3}},"591":{"start":{"line":1606,"column":4},"end":{"line":1606,"column":28}},"592":{"start":{"line":1608,"column":15},"end":{"line":1625,"column":8}},"593":{"start":{"line":1615,"column":6},"end":{"line":1624,"column":7}},"594":{"start":{"line":1616,"column":8},"end":{"line":1623,"column":9}},"595":{"start":{"line":1617,"column":20},"end":{"line":1617,"column":53}},"596":{"start":{"line":1618,"column":10},"end":{"line":1618,"column":37}},"597":{"start":{"line":1619,"column":10},"end":{"line":1619,"column":43}},"598":{"start":{"line":1620,"column":10},"end":{"line":1620,"column":30}},"599":{"start":{"line":1622,"column":10},"end":{"line":1622,"column":43}},"600":{"start":{"line":1627,"column":2},"end":{"line":1631,"column":8}},"601":{"start":{"line":1629,"column":6},"end":{"line":1629,"column":22}},"602":{"start":{"line":1630,"column":6},"end":{"line":1630,"column":21}},"603":{"start":{"line":1635,"column":0},"end":{"line":1664,"column":2}},"604":{"start":{"line":1636,"column":2},"end":{"line":1638,"column":3}},"605":{"start":{"line":1637,"column":4},"end":{"line":1637,"column":28}},"606":{"start":{"line":1639,"column":15},"end":{"line":1656,"column":8}},"607":{"start":{"line":1646,"column":6},"end":{"line":1655,"column":7}},"608":{"start":{"line":1647,"column":8},"end":{"line":1654,"column":9}},"609":{"start":{"line":1648,"column":20},"end":{"line":1648,"column":53}},"610":{"start":{"line":1649,"column":10},"end":{"line":1649,"column":37}},"611":{"start":{"line":1650,"column":10},"end":{"line":1650,"column":43}},"612":{"start":{"line":1651,"column":10},"end":{"line":1651,"column":30}},"613":{"start":{"line":1653,"column":10},"end":{"line":1653,"column":43}},"614":{"start":{"line":1658,"column":2},"end":{"line":1662,"column":8}},"615":{"start":{"line":1660,"column":6},"end":{"line":1660,"column":22}},"616":{"start":{"line":1661,"column":6},"end":{"line":1661,"column":21}},"617":{"start":{"line":1666,"column":0},"end":{"line":1695,"column":2}},"618":{"start":{"line":1667,"column":2},"end":{"line":1669,"column":3}},"619":{"start":{"line":1668,"column":4},"end":{"line":1668,"column":28}},"620":{"start":{"line":1670,"column":15},"end":{"line":1687,"column":8}},"621":{"start":{"line":1677,"column":6},"end":{"line":1686,"column":7}},"622":{"start":{"line":1678,"column":8},"end":{"line":1685,"column":9}},"623":{"start":{"line":1679,"column":20},"end":{"line":1679,"column":53}},"624":{"start":{"line":1680,"column":10},"end":{"line":1680,"column":37}},"625":{"start":{"line":1681,"column":10},"end":{"line":1681,"column":43}},"626":{"start":{"line":1682,"column":10},"end":{"line":1682,"column":30}},"627":{"start":{"line":1684,"column":10},"end":{"line":1684,"column":43}},"628":{"start":{"line":1689,"column":2},"end":{"line":1693,"column":8}},"629":{"start":{"line":1691,"column":6},"end":{"line":1691,"column":22}},"630":{"start":{"line":1692,"column":6},"end":{"line":1692,"column":21}},"631":{"start":{"line":1697,"column":0},"end":{"line":1726,"column":2}},"632":{"start":{"line":1698,"column":2},"end":{"line":1700,"column":3}},"633":{"start":{"line":1699,"column":4},"end":{"line":1699,"column":28}},"634":{"start":{"line":1701,"column":15},"end":{"line":1718,"column":8}},"635":{"start":{"line":1708,"column":6},"end":{"line":1717,"column":7}},"636":{"start":{"line":1709,"column":8},"end":{"line":1716,"column":9}},"637":{"start":{"line":1710,"column":20},"end":{"line":1710,"column":53}},"638":{"start":{"line":1711,"column":10},"end":{"line":1711,"column":37}},"639":{"start":{"line":1712,"column":10},"end":{"line":1712,"column":43}},"640":{"start":{"line":1713,"column":10},"end":{"line":1713,"column":30}},"641":{"start":{"line":1715,"column":10},"end":{"line":1715,"column":43}},"642":{"start":{"line":1720,"column":2},"end":{"line":1724,"column":8}},"643":{"start":{"line":1722,"column":6},"end":{"line":1722,"column":22}},"644":{"start":{"line":1723,"column":6},"end":{"line":1723,"column":21}},"645":{"start":{"line":1728,"column":0},"end":{"line":1728,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":34},"end":{"line":15,"column":1}},"line":11},"1":{"name":"AergoRPCService","decl":{"start":{"line":12,"column":11},"end":{"line":12,"column":26}},"loc":{"start":{"line":12,"column":29},"end":{"line":12,"column":31}},"line":12},"2":{"name":"AergoRPCServiceClient","decl":{"start":{"line":397,"column":9},"end":{"line":397,"column":30}},"loc":{"start":{"line":397,"column":53},"end":{"line":400,"column":1}},"line":397},"3":{"name":"nodeState","decl":{"start":{"line":402,"column":53},"end":{"line":402,"column":62}},"loc":{"start":{"line":402,"column":99},"end":{"line":431,"column":1}},"line":402},"4":{"name":"(anonymous_4)","decl":{"start":{"line":412,"column":11},"end":{"line":412,"column":12}},"loc":{"start":{"line":412,"column":31},"end":{"line":423,"column":5}},"line":412},"5":{"name":"(anonymous_5)","decl":{"start":{"line":426,"column":12},"end":{"line":426,"column":13}},"loc":{"start":{"line":426,"column":24},"end":{"line":429,"column":5}},"line":426},"6":{"name":"metric","decl":{"start":{"line":433,"column":50},"end":{"line":433,"column":56}},"loc":{"start":{"line":433,"column":93},"end":{"line":462,"column":1}},"line":433},"7":{"name":"(anonymous_7)","decl":{"start":{"line":443,"column":11},"end":{"line":443,"column":12}},"loc":{"start":{"line":443,"column":31},"end":{"line":454,"column":5}},"line":443},"8":{"name":"(anonymous_8)","decl":{"start":{"line":457,"column":12},"end":{"line":457,"column":13}},"loc":{"start":{"line":457,"column":24},"end":{"line":460,"column":5}},"line":457},"9":{"name":"blockchain","decl":{"start":{"line":464,"column":54},"end":{"line":464,"column":64}},"loc":{"start":{"line":464,"column":101},"end":{"line":493,"column":1}},"line":464},"10":{"name":"(anonymous_10)","decl":{"start":{"line":474,"column":11},"end":{"line":474,"column":12}},"loc":{"start":{"line":474,"column":31},"end":{"line":485,"column":5}},"line":474},"11":{"name":"(anonymous_11)","decl":{"start":{"line":488,"column":12},"end":{"line":488,"column":13}},"loc":{"start":{"line":488,"column":24},"end":{"line":491,"column":5}},"line":488},"12":{"name":"getChainInfo","decl":{"start":{"line":495,"column":56},"end":{"line":495,"column":68}},"loc":{"start":{"line":495,"column":105},"end":{"line":524,"column":1}},"line":495},"13":{"name":"(anonymous_13)","decl":{"start":{"line":505,"column":11},"end":{"line":505,"column":12}},"loc":{"start":{"line":505,"column":31},"end":{"line":516,"column":5}},"line":505},"14":{"name":"(anonymous_14)","decl":{"start":{"line":519,"column":12},"end":{"line":519,"column":13}},"loc":{"start":{"line":519,"column":24},"end":{"line":522,"column":5}},"line":519},"15":{"name":"chainStat","decl":{"start":{"line":526,"column":53},"end":{"line":526,"column":62}},"loc":{"start":{"line":526,"column":99},"end":{"line":555,"column":1}},"line":526},"16":{"name":"(anonymous_16)","decl":{"start":{"line":536,"column":11},"end":{"line":536,"column":12}},"loc":{"start":{"line":536,"column":31},"end":{"line":547,"column":5}},"line":536},"17":{"name":"(anonymous_17)","decl":{"start":{"line":550,"column":12},"end":{"line":550,"column":13}},"loc":{"start":{"line":550,"column":24},"end":{"line":553,"column":5}},"line":550},"18":{"name":"listBlockHeaders","decl":{"start":{"line":557,"column":60},"end":{"line":557,"column":76}},"loc":{"start":{"line":557,"column":113},"end":{"line":586,"column":1}},"line":557},"19":{"name":"(anonymous_19)","decl":{"start":{"line":567,"column":11},"end":{"line":567,"column":12}},"loc":{"start":{"line":567,"column":31},"end":{"line":578,"column":5}},"line":567},"20":{"name":"(anonymous_20)","decl":{"start":{"line":581,"column":12},"end":{"line":581,"column":13}},"loc":{"start":{"line":581,"column":24},"end":{"line":584,"column":5}},"line":581},"21":{"name":"listBlockMetadata","decl":{"start":{"line":588,"column":61},"end":{"line":588,"column":78}},"loc":{"start":{"line":588,"column":115},"end":{"line":617,"column":1}},"line":588},"22":{"name":"(anonymous_22)","decl":{"start":{"line":598,"column":11},"end":{"line":598,"column":12}},"loc":{"start":{"line":598,"column":31},"end":{"line":609,"column":5}},"line":598},"23":{"name":"(anonymous_23)","decl":{"start":{"line":612,"column":12},"end":{"line":612,"column":13}},"loc":{"start":{"line":612,"column":24},"end":{"line":615,"column":5}},"line":612},"24":{"name":"listBlockStream","decl":{"start":{"line":619,"column":59},"end":{"line":619,"column":74}},"loc":{"start":{"line":619,"column":101},"end":{"line":656,"column":1}},"line":619},"25":{"name":"(anonymous_25)","decl":{"start":{"line":631,"column":15},"end":{"line":631,"column":16}},"loc":{"start":{"line":631,"column":42},"end":{"line":635,"column":5}},"line":631},"26":{"name":"(anonymous_26)","decl":{"start":{"line":632,"column":29},"end":{"line":632,"column":30}},"loc":{"start":{"line":632,"column":48},"end":{"line":634,"column":7}},"line":632},"27":{"name":"(anonymous_27)","decl":{"start":{"line":636,"column":11},"end":{"line":636,"column":12}},"loc":{"start":{"line":636,"column":54},"end":{"line":644,"column":5}},"line":636},"28":{"name":"(anonymous_28)","decl":{"start":{"line":637,"column":31},"end":{"line":637,"column":32}},"loc":{"start":{"line":637,"column":50},"end":{"line":639,"column":7}},"line":637},"29":{"name":"(anonymous_29)","decl":{"start":{"line":640,"column":28},"end":{"line":640,"column":29}},"loc":{"start":{"line":640,"column":47},"end":{"line":642,"column":7}},"line":640},"30":{"name":"(anonymous_30)","decl":{"start":{"line":647,"column":8},"end":{"line":647,"column":9}},"loc":{"start":{"line":647,"column":33},"end":{"line":650,"column":5}},"line":647},"31":{"name":"(anonymous_31)","decl":{"start":{"line":651,"column":12},"end":{"line":651,"column":13}},"loc":{"start":{"line":651,"column":24},"end":{"line":654,"column":5}},"line":651},"32":{"name":"listBlockMetadataStream","decl":{"start":{"line":658,"column":67},"end":{"line":658,"column":90}},"loc":{"start":{"line":658,"column":117},"end":{"line":695,"column":1}},"line":658},"33":{"name":"(anonymous_33)","decl":{"start":{"line":670,"column":15},"end":{"line":670,"column":16}},"loc":{"start":{"line":670,"column":42},"end":{"line":674,"column":5}},"line":670},"34":{"name":"(anonymous_34)","decl":{"start":{"line":671,"column":29},"end":{"line":671,"column":30}},"loc":{"start":{"line":671,"column":48},"end":{"line":673,"column":7}},"line":671},"35":{"name":"(anonymous_35)","decl":{"start":{"line":675,"column":11},"end":{"line":675,"column":12}},"loc":{"start":{"line":675,"column":54},"end":{"line":683,"column":5}},"line":675},"36":{"name":"(anonymous_36)","decl":{"start":{"line":676,"column":31},"end":{"line":676,"column":32}},"loc":{"start":{"line":676,"column":50},"end":{"line":678,"column":7}},"line":676},"37":{"name":"(anonymous_37)","decl":{"start":{"line":679,"column":28},"end":{"line":679,"column":29}},"loc":{"start":{"line":679,"column":47},"end":{"line":681,"column":7}},"line":679},"38":{"name":"(anonymous_38)","decl":{"start":{"line":686,"column":8},"end":{"line":686,"column":9}},"loc":{"start":{"line":686,"column":33},"end":{"line":689,"column":5}},"line":686},"39":{"name":"(anonymous_39)","decl":{"start":{"line":690,"column":12},"end":{"line":690,"column":13}},"loc":{"start":{"line":690,"column":24},"end":{"line":693,"column":5}},"line":690},"40":{"name":"getBlock","decl":{"start":{"line":697,"column":52},"end":{"line":697,"column":60}},"loc":{"start":{"line":697,"column":97},"end":{"line":726,"column":1}},"line":697},"41":{"name":"(anonymous_41)","decl":{"start":{"line":707,"column":11},"end":{"line":707,"column":12}},"loc":{"start":{"line":707,"column":31},"end":{"line":718,"column":5}},"line":707},"42":{"name":"(anonymous_42)","decl":{"start":{"line":721,"column":12},"end":{"line":721,"column":13}},"loc":{"start":{"line":721,"column":24},"end":{"line":724,"column":5}},"line":721},"43":{"name":"getBlockMetadata","decl":{"start":{"line":728,"column":60},"end":{"line":728,"column":76}},"loc":{"start":{"line":728,"column":113},"end":{"line":757,"column":1}},"line":728},"44":{"name":"(anonymous_44)","decl":{"start":{"line":738,"column":11},"end":{"line":738,"column":12}},"loc":{"start":{"line":738,"column":31},"end":{"line":749,"column":5}},"line":738},"45":{"name":"(anonymous_45)","decl":{"start":{"line":752,"column":12},"end":{"line":752,"column":13}},"loc":{"start":{"line":752,"column":24},"end":{"line":755,"column":5}},"line":752},"46":{"name":"getBlockBody","decl":{"start":{"line":759,"column":56},"end":{"line":759,"column":68}},"loc":{"start":{"line":759,"column":105},"end":{"line":788,"column":1}},"line":759},"47":{"name":"(anonymous_47)","decl":{"start":{"line":769,"column":11},"end":{"line":769,"column":12}},"loc":{"start":{"line":769,"column":31},"end":{"line":780,"column":5}},"line":769},"48":{"name":"(anonymous_48)","decl":{"start":{"line":783,"column":12},"end":{"line":783,"column":13}},"loc":{"start":{"line":783,"column":24},"end":{"line":786,"column":5}},"line":783},"49":{"name":"getTX","decl":{"start":{"line":790,"column":49},"end":{"line":790,"column":54}},"loc":{"start":{"line":790,"column":91},"end":{"line":819,"column":1}},"line":790},"50":{"name":"(anonymous_50)","decl":{"start":{"line":800,"column":11},"end":{"line":800,"column":12}},"loc":{"start":{"line":800,"column":31},"end":{"line":811,"column":5}},"line":800},"51":{"name":"(anonymous_51)","decl":{"start":{"line":814,"column":12},"end":{"line":814,"column":13}},"loc":{"start":{"line":814,"column":24},"end":{"line":817,"column":5}},"line":814},"52":{"name":"getBlockTX","decl":{"start":{"line":821,"column":54},"end":{"line":821,"column":64}},"loc":{"start":{"line":821,"column":101},"end":{"line":850,"column":1}},"line":821},"53":{"name":"(anonymous_53)","decl":{"start":{"line":831,"column":11},"end":{"line":831,"column":12}},"loc":{"start":{"line":831,"column":31},"end":{"line":842,"column":5}},"line":831},"54":{"name":"(anonymous_54)","decl":{"start":{"line":845,"column":12},"end":{"line":845,"column":13}},"loc":{"start":{"line":845,"column":24},"end":{"line":848,"column":5}},"line":845},"55":{"name":"getReceipt","decl":{"start":{"line":852,"column":54},"end":{"line":852,"column":64}},"loc":{"start":{"line":852,"column":101},"end":{"line":881,"column":1}},"line":852},"56":{"name":"(anonymous_56)","decl":{"start":{"line":862,"column":11},"end":{"line":862,"column":12}},"loc":{"start":{"line":862,"column":31},"end":{"line":873,"column":5}},"line":862},"57":{"name":"(anonymous_57)","decl":{"start":{"line":876,"column":12},"end":{"line":876,"column":13}},"loc":{"start":{"line":876,"column":24},"end":{"line":879,"column":5}},"line":876},"58":{"name":"getABI","decl":{"start":{"line":883,"column":50},"end":{"line":883,"column":56}},"loc":{"start":{"line":883,"column":93},"end":{"line":912,"column":1}},"line":883},"59":{"name":"(anonymous_59)","decl":{"start":{"line":893,"column":11},"end":{"line":893,"column":12}},"loc":{"start":{"line":893,"column":31},"end":{"line":904,"column":5}},"line":893},"60":{"name":"(anonymous_60)","decl":{"start":{"line":907,"column":12},"end":{"line":907,"column":13}},"loc":{"start":{"line":907,"column":24},"end":{"line":910,"column":5}},"line":907},"61":{"name":"sendTX","decl":{"start":{"line":914,"column":50},"end":{"line":914,"column":56}},"loc":{"start":{"line":914,"column":93},"end":{"line":943,"column":1}},"line":914},"62":{"name":"(anonymous_62)","decl":{"start":{"line":924,"column":11},"end":{"line":924,"column":12}},"loc":{"start":{"line":924,"column":31},"end":{"line":935,"column":5}},"line":924},"63":{"name":"(anonymous_63)","decl":{"start":{"line":938,"column":12},"end":{"line":938,"column":13}},"loc":{"start":{"line":938,"column":24},"end":{"line":941,"column":5}},"line":938},"64":{"name":"signTX","decl":{"start":{"line":945,"column":50},"end":{"line":945,"column":56}},"loc":{"start":{"line":945,"column":93},"end":{"line":974,"column":1}},"line":945},"65":{"name":"(anonymous_65)","decl":{"start":{"line":955,"column":11},"end":{"line":955,"column":12}},"loc":{"start":{"line":955,"column":31},"end":{"line":966,"column":5}},"line":955},"66":{"name":"(anonymous_66)","decl":{"start":{"line":969,"column":12},"end":{"line":969,"column":13}},"loc":{"start":{"line":969,"column":24},"end":{"line":972,"column":5}},"line":969},"67":{"name":"verifyTX","decl":{"start":{"line":976,"column":52},"end":{"line":976,"column":60}},"loc":{"start":{"line":976,"column":97},"end":{"line":1005,"column":1}},"line":976},"68":{"name":"(anonymous_68)","decl":{"start":{"line":986,"column":11},"end":{"line":986,"column":12}},"loc":{"start":{"line":986,"column":31},"end":{"line":997,"column":5}},"line":986},"69":{"name":"(anonymous_69)","decl":{"start":{"line":1000,"column":12},"end":{"line":1000,"column":13}},"loc":{"start":{"line":1000,"column":24},"end":{"line":1003,"column":5}},"line":1000},"70":{"name":"commitTX","decl":{"start":{"line":1007,"column":52},"end":{"line":1007,"column":60}},"loc":{"start":{"line":1007,"column":97},"end":{"line":1036,"column":1}},"line":1007},"71":{"name":"(anonymous_71)","decl":{"start":{"line":1017,"column":11},"end":{"line":1017,"column":12}},"loc":{"start":{"line":1017,"column":31},"end":{"line":1028,"column":5}},"line":1017},"72":{"name":"(anonymous_72)","decl":{"start":{"line":1031,"column":12},"end":{"line":1031,"column":13}},"loc":{"start":{"line":1031,"column":24},"end":{"line":1034,"column":5}},"line":1031},"73":{"name":"getState","decl":{"start":{"line":1038,"column":52},"end":{"line":1038,"column":60}},"loc":{"start":{"line":1038,"column":97},"end":{"line":1067,"column":1}},"line":1038},"74":{"name":"(anonymous_74)","decl":{"start":{"line":1048,"column":11},"end":{"line":1048,"column":12}},"loc":{"start":{"line":1048,"column":31},"end":{"line":1059,"column":5}},"line":1048},"75":{"name":"(anonymous_75)","decl":{"start":{"line":1062,"column":12},"end":{"line":1062,"column":13}},"loc":{"start":{"line":1062,"column":24},"end":{"line":1065,"column":5}},"line":1062},"76":{"name":"getStateAndProof","decl":{"start":{"line":1069,"column":60},"end":{"line":1069,"column":76}},"loc":{"start":{"line":1069,"column":113},"end":{"line":1098,"column":1}},"line":1069},"77":{"name":"(anonymous_77)","decl":{"start":{"line":1079,"column":11},"end":{"line":1079,"column":12}},"loc":{"start":{"line":1079,"column":31},"end":{"line":1090,"column":5}},"line":1079},"78":{"name":"(anonymous_78)","decl":{"start":{"line":1093,"column":12},"end":{"line":1093,"column":13}},"loc":{"start":{"line":1093,"column":24},"end":{"line":1096,"column":5}},"line":1093},"79":{"name":"createAccount","decl":{"start":{"line":1100,"column":57},"end":{"line":1100,"column":70}},"loc":{"start":{"line":1100,"column":107},"end":{"line":1129,"column":1}},"line":1100},"80":{"name":"(anonymous_80)","decl":{"start":{"line":1110,"column":11},"end":{"line":1110,"column":12}},"loc":{"start":{"line":1110,"column":31},"end":{"line":1121,"column":5}},"line":1110},"81":{"name":"(anonymous_81)","decl":{"start":{"line":1124,"column":12},"end":{"line":1124,"column":13}},"loc":{"start":{"line":1124,"column":24},"end":{"line":1127,"column":5}},"line":1124},"82":{"name":"getAccounts","decl":{"start":{"line":1131,"column":55},"end":{"line":1131,"column":66}},"loc":{"start":{"line":1131,"column":103},"end":{"line":1160,"column":1}},"line":1131},"83":{"name":"(anonymous_83)","decl":{"start":{"line":1141,"column":11},"end":{"line":1141,"column":12}},"loc":{"start":{"line":1141,"column":31},"end":{"line":1152,"column":5}},"line":1141},"84":{"name":"(anonymous_84)","decl":{"start":{"line":1155,"column":12},"end":{"line":1155,"column":13}},"loc":{"start":{"line":1155,"column":24},"end":{"line":1158,"column":5}},"line":1155},"85":{"name":"lockAccount","decl":{"start":{"line":1162,"column":55},"end":{"line":1162,"column":66}},"loc":{"start":{"line":1162,"column":103},"end":{"line":1191,"column":1}},"line":1162},"86":{"name":"(anonymous_86)","decl":{"start":{"line":1172,"column":11},"end":{"line":1172,"column":12}},"loc":{"start":{"line":1172,"column":31},"end":{"line":1183,"column":5}},"line":1172},"87":{"name":"(anonymous_87)","decl":{"start":{"line":1186,"column":12},"end":{"line":1186,"column":13}},"loc":{"start":{"line":1186,"column":24},"end":{"line":1189,"column":5}},"line":1186},"88":{"name":"unlockAccount","decl":{"start":{"line":1193,"column":57},"end":{"line":1193,"column":70}},"loc":{"start":{"line":1193,"column":107},"end":{"line":1222,"column":1}},"line":1193},"89":{"name":"(anonymous_89)","decl":{"start":{"line":1203,"column":11},"end":{"line":1203,"column":12}},"loc":{"start":{"line":1203,"column":31},"end":{"line":1214,"column":5}},"line":1203},"90":{"name":"(anonymous_90)","decl":{"start":{"line":1217,"column":12},"end":{"line":1217,"column":13}},"loc":{"start":{"line":1217,"column":24},"end":{"line":1220,"column":5}},"line":1217},"91":{"name":"importAccount","decl":{"start":{"line":1224,"column":57},"end":{"line":1224,"column":70}},"loc":{"start":{"line":1224,"column":107},"end":{"line":1253,"column":1}},"line":1224},"92":{"name":"(anonymous_92)","decl":{"start":{"line":1234,"column":11},"end":{"line":1234,"column":12}},"loc":{"start":{"line":1234,"column":31},"end":{"line":1245,"column":5}},"line":1234},"93":{"name":"(anonymous_93)","decl":{"start":{"line":1248,"column":12},"end":{"line":1248,"column":13}},"loc":{"start":{"line":1248,"column":24},"end":{"line":1251,"column":5}},"line":1248},"94":{"name":"exportAccount","decl":{"start":{"line":1255,"column":57},"end":{"line":1255,"column":70}},"loc":{"start":{"line":1255,"column":107},"end":{"line":1284,"column":1}},"line":1255},"95":{"name":"(anonymous_95)","decl":{"start":{"line":1265,"column":11},"end":{"line":1265,"column":12}},"loc":{"start":{"line":1265,"column":31},"end":{"line":1276,"column":5}},"line":1265},"96":{"name":"(anonymous_96)","decl":{"start":{"line":1279,"column":12},"end":{"line":1279,"column":13}},"loc":{"start":{"line":1279,"column":24},"end":{"line":1282,"column":5}},"line":1279},"97":{"name":"queryContract","decl":{"start":{"line":1286,"column":57},"end":{"line":1286,"column":70}},"loc":{"start":{"line":1286,"column":107},"end":{"line":1315,"column":1}},"line":1286},"98":{"name":"(anonymous_98)","decl":{"start":{"line":1296,"column":11},"end":{"line":1296,"column":12}},"loc":{"start":{"line":1296,"column":31},"end":{"line":1307,"column":5}},"line":1296},"99":{"name":"(anonymous_99)","decl":{"start":{"line":1310,"column":12},"end":{"line":1310,"column":13}},"loc":{"start":{"line":1310,"column":24},"end":{"line":1313,"column":5}},"line":1310},"100":{"name":"queryContractState","decl":{"start":{"line":1317,"column":62},"end":{"line":1317,"column":80}},"loc":{"start":{"line":1317,"column":117},"end":{"line":1346,"column":1}},"line":1317},"101":{"name":"(anonymous_101)","decl":{"start":{"line":1327,"column":11},"end":{"line":1327,"column":12}},"loc":{"start":{"line":1327,"column":31},"end":{"line":1338,"column":5}},"line":1327},"102":{"name":"(anonymous_102)","decl":{"start":{"line":1341,"column":12},"end":{"line":1341,"column":13}},"loc":{"start":{"line":1341,"column":24},"end":{"line":1344,"column":5}},"line":1341},"103":{"name":"getPeers","decl":{"start":{"line":1348,"column":52},"end":{"line":1348,"column":60}},"loc":{"start":{"line":1348,"column":97},"end":{"line":1377,"column":1}},"line":1348},"104":{"name":"(anonymous_104)","decl":{"start":{"line":1358,"column":11},"end":{"line":1358,"column":12}},"loc":{"start":{"line":1358,"column":31},"end":{"line":1369,"column":5}},"line":1358},"105":{"name":"(anonymous_105)","decl":{"start":{"line":1372,"column":12},"end":{"line":1372,"column":13}},"loc":{"start":{"line":1372,"column":24},"end":{"line":1375,"column":5}},"line":1372},"106":{"name":"getVotes","decl":{"start":{"line":1379,"column":52},"end":{"line":1379,"column":60}},"loc":{"start":{"line":1379,"column":97},"end":{"line":1408,"column":1}},"line":1379},"107":{"name":"(anonymous_107)","decl":{"start":{"line":1389,"column":11},"end":{"line":1389,"column":12}},"loc":{"start":{"line":1389,"column":31},"end":{"line":1400,"column":5}},"line":1389},"108":{"name":"(anonymous_108)","decl":{"start":{"line":1403,"column":12},"end":{"line":1403,"column":13}},"loc":{"start":{"line":1403,"column":24},"end":{"line":1406,"column":5}},"line":1403},"109":{"name":"getAccountVotes","decl":{"start":{"line":1410,"column":59},"end":{"line":1410,"column":74}},"loc":{"start":{"line":1410,"column":111},"end":{"line":1439,"column":1}},"line":1410},"110":{"name":"(anonymous_110)","decl":{"start":{"line":1420,"column":11},"end":{"line":1420,"column":12}},"loc":{"start":{"line":1420,"column":31},"end":{"line":1431,"column":5}},"line":1420},"111":{"name":"(anonymous_111)","decl":{"start":{"line":1434,"column":12},"end":{"line":1434,"column":13}},"loc":{"start":{"line":1434,"column":24},"end":{"line":1437,"column":5}},"line":1434},"112":{"name":"getStaking","decl":{"start":{"line":1441,"column":54},"end":{"line":1441,"column":64}},"loc":{"start":{"line":1441,"column":101},"end":{"line":1470,"column":1}},"line":1441},"113":{"name":"(anonymous_113)","decl":{"start":{"line":1451,"column":11},"end":{"line":1451,"column":12}},"loc":{"start":{"line":1451,"column":31},"end":{"line":1462,"column":5}},"line":1451},"114":{"name":"(anonymous_114)","decl":{"start":{"line":1465,"column":12},"end":{"line":1465,"column":13}},"loc":{"start":{"line":1465,"column":24},"end":{"line":1468,"column":5}},"line":1465},"115":{"name":"getNameInfo","decl":{"start":{"line":1472,"column":55},"end":{"line":1472,"column":66}},"loc":{"start":{"line":1472,"column":103},"end":{"line":1501,"column":1}},"line":1472},"116":{"name":"(anonymous_116)","decl":{"start":{"line":1482,"column":11},"end":{"line":1482,"column":12}},"loc":{"start":{"line":1482,"column":31},"end":{"line":1493,"column":5}},"line":1482},"117":{"name":"(anonymous_117)","decl":{"start":{"line":1496,"column":12},"end":{"line":1496,"column":13}},"loc":{"start":{"line":1496,"column":24},"end":{"line":1499,"column":5}},"line":1496},"118":{"name":"listEventStream","decl":{"start":{"line":1503,"column":59},"end":{"line":1503,"column":74}},"loc":{"start":{"line":1503,"column":101},"end":{"line":1540,"column":1}},"line":1503},"119":{"name":"(anonymous_119)","decl":{"start":{"line":1515,"column":15},"end":{"line":1515,"column":16}},"loc":{"start":{"line":1515,"column":42},"end":{"line":1519,"column":5}},"line":1515},"120":{"name":"(anonymous_120)","decl":{"start":{"line":1516,"column":29},"end":{"line":1516,"column":30}},"loc":{"start":{"line":1516,"column":48},"end":{"line":1518,"column":7}},"line":1516},"121":{"name":"(anonymous_121)","decl":{"start":{"line":1520,"column":11},"end":{"line":1520,"column":12}},"loc":{"start":{"line":1520,"column":54},"end":{"line":1528,"column":5}},"line":1520},"122":{"name":"(anonymous_122)","decl":{"start":{"line":1521,"column":31},"end":{"line":1521,"column":32}},"loc":{"start":{"line":1521,"column":50},"end":{"line":1523,"column":7}},"line":1521},"123":{"name":"(anonymous_123)","decl":{"start":{"line":1524,"column":28},"end":{"line":1524,"column":29}},"loc":{"start":{"line":1524,"column":47},"end":{"line":1526,"column":7}},"line":1524},"124":{"name":"(anonymous_124)","decl":{"start":{"line":1531,"column":8},"end":{"line":1531,"column":9}},"loc":{"start":{"line":1531,"column":33},"end":{"line":1534,"column":5}},"line":1531},"125":{"name":"(anonymous_125)","decl":{"start":{"line":1535,"column":12},"end":{"line":1535,"column":13}},"loc":{"start":{"line":1535,"column":24},"end":{"line":1538,"column":5}},"line":1535},"126":{"name":"listEvents","decl":{"start":{"line":1542,"column":54},"end":{"line":1542,"column":64}},"loc":{"start":{"line":1542,"column":101},"end":{"line":1571,"column":1}},"line":1542},"127":{"name":"(anonymous_127)","decl":{"start":{"line":1552,"column":11},"end":{"line":1552,"column":12}},"loc":{"start":{"line":1552,"column":31},"end":{"line":1563,"column":5}},"line":1552},"128":{"name":"(anonymous_128)","decl":{"start":{"line":1566,"column":12},"end":{"line":1566,"column":13}},"loc":{"start":{"line":1566,"column":24},"end":{"line":1569,"column":5}},"line":1566},"129":{"name":"getServerInfo","decl":{"start":{"line":1573,"column":57},"end":{"line":1573,"column":70}},"loc":{"start":{"line":1573,"column":107},"end":{"line":1602,"column":1}},"line":1573},"130":{"name":"(anonymous_130)","decl":{"start":{"line":1583,"column":11},"end":{"line":1583,"column":12}},"loc":{"start":{"line":1583,"column":31},"end":{"line":1594,"column":5}},"line":1583},"131":{"name":"(anonymous_131)","decl":{"start":{"line":1597,"column":12},"end":{"line":1597,"column":13}},"loc":{"start":{"line":1597,"column":24},"end":{"line":1600,"column":5}},"line":1597},"132":{"name":"getConsensusInfo","decl":{"start":{"line":1604,"column":60},"end":{"line":1604,"column":76}},"loc":{"start":{"line":1604,"column":113},"end":{"line":1633,"column":1}},"line":1604},"133":{"name":"(anonymous_133)","decl":{"start":{"line":1614,"column":11},"end":{"line":1614,"column":12}},"loc":{"start":{"line":1614,"column":31},"end":{"line":1625,"column":5}},"line":1614},"134":{"name":"(anonymous_134)","decl":{"start":{"line":1628,"column":12},"end":{"line":1628,"column":13}},"loc":{"start":{"line":1628,"column":24},"end":{"line":1631,"column":5}},"line":1628},"135":{"name":"changeMembership","decl":{"start":{"line":1635,"column":60},"end":{"line":1635,"column":76}},"loc":{"start":{"line":1635,"column":113},"end":{"line":1664,"column":1}},"line":1635},"136":{"name":"(anonymous_136)","decl":{"start":{"line":1645,"column":11},"end":{"line":1645,"column":12}},"loc":{"start":{"line":1645,"column":31},"end":{"line":1656,"column":5}},"line":1645},"137":{"name":"(anonymous_137)","decl":{"start":{"line":1659,"column":12},"end":{"line":1659,"column":13}},"loc":{"start":{"line":1659,"column":24},"end":{"line":1662,"column":5}},"line":1659},"138":{"name":"getEnterpriseConfig","decl":{"start":{"line":1666,"column":63},"end":{"line":1666,"column":82}},"loc":{"start":{"line":1666,"column":119},"end":{"line":1695,"column":1}},"line":1666},"139":{"name":"(anonymous_139)","decl":{"start":{"line":1676,"column":11},"end":{"line":1676,"column":12}},"loc":{"start":{"line":1676,"column":31},"end":{"line":1687,"column":5}},"line":1676},"140":{"name":"(anonymous_140)","decl":{"start":{"line":1690,"column":12},"end":{"line":1690,"column":13}},"loc":{"start":{"line":1690,"column":24},"end":{"line":1693,"column":5}},"line":1690},"141":{"name":"getConfChangeProgress","decl":{"start":{"line":1697,"column":65},"end":{"line":1697,"column":86}},"loc":{"start":{"line":1697,"column":123},"end":{"line":1726,"column":1}},"line":1697},"142":{"name":"(anonymous_142)","decl":{"start":{"line":1707,"column":11},"end":{"line":1707,"column":12}},"loc":{"start":{"line":1707,"column":31},"end":{"line":1718,"column":5}},"line":1707},"143":{"name":"(anonymous_143)","decl":{"start":{"line":1721,"column":12},"end":{"line":1721,"column":13}},"loc":{"start":{"line":1721,"column":24},"end":{"line":1724,"column":5}},"line":1721}},"branchMap":{"0":{"loc":{"start":{"line":399,"column":17},"end":{"line":399,"column":30}},"type":"binary-expr","locations":[{"start":{"line":399,"column":17},"end":{"line":399,"column":24}},{"start":{"line":399,"column":28},"end":{"line":399,"column":30}}],"line":399},"1":{"loc":{"start":{"line":403,"column":2},"end":{"line":405,"column":3}},"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":405,"column":3}},{"start":{"line":403,"column":2},"end":{"line":405,"column":3}}],"line":403},"2":{"loc":{"start":{"line":413,"column":6},"end":{"line":422,"column":7}},"type":"if","locations":[{"start":{"line":413,"column":6},"end":{"line":422,"column":7}},{"start":{"line":413,"column":6},"end":{"line":422,"column":7}}],"line":413},"3":{"loc":{"start":{"line":414,"column":8},"end":{"line":421,"column":9}},"type":"if","locations":[{"start":{"line":414,"column":8},"end":{"line":421,"column":9}},{"start":{"line":414,"column":8},"end":{"line":421,"column":9}}],"line":414},"4":{"loc":{"start":{"line":434,"column":2},"end":{"line":436,"column":3}},"type":"if","locations":[{"start":{"line":434,"column":2},"end":{"line":436,"column":3}},{"start":{"line":434,"column":2},"end":{"line":436,"column":3}}],"line":434},"5":{"loc":{"start":{"line":444,"column":6},"end":{"line":453,"column":7}},"type":"if","locations":[{"start":{"line":444,"column":6},"end":{"line":453,"column":7}},{"start":{"line":444,"column":6},"end":{"line":453,"column":7}}],"line":444},"6":{"loc":{"start":{"line":445,"column":8},"end":{"line":452,"column":9}},"type":"if","locations":[{"start":{"line":445,"column":8},"end":{"line":452,"column":9}},{"start":{"line":445,"column":8},"end":{"line":452,"column":9}}],"line":445},"7":{"loc":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},{"start":{"line":465,"column":2},"end":{"line":467,"column":3}}],"line":465},"8":{"loc":{"start":{"line":475,"column":6},"end":{"line":484,"column":7}},"type":"if","locations":[{"start":{"line":475,"column":6},"end":{"line":484,"column":7}},{"start":{"line":475,"column":6},"end":{"line":484,"column":7}}],"line":475},"9":{"loc":{"start":{"line":476,"column":8},"end":{"line":483,"column":9}},"type":"if","locations":[{"start":{"line":476,"column":8},"end":{"line":483,"column":9}},{"start":{"line":476,"column":8},"end":{"line":483,"column":9}}],"line":476},"10":{"loc":{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},"type":"if","locations":[{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},{"start":{"line":496,"column":2},"end":{"line":498,"column":3}}],"line":496},"11":{"loc":{"start":{"line":506,"column":6},"end":{"line":515,"column":7}},"type":"if","locations":[{"start":{"line":506,"column":6},"end":{"line":515,"column":7}},{"start":{"line":506,"column":6},"end":{"line":515,"column":7}}],"line":506},"12":{"loc":{"start":{"line":507,"column":8},"end":{"line":514,"column":9}},"type":"if","locations":[{"start":{"line":507,"column":8},"end":{"line":514,"column":9}},{"start":{"line":507,"column":8},"end":{"line":514,"column":9}}],"line":507},"13":{"loc":{"start":{"line":527,"column":2},"end":{"line":529,"column":3}},"type":"if","locations":[{"start":{"line":527,"column":2},"end":{"line":529,"column":3}},{"start":{"line":527,"column":2},"end":{"line":529,"column":3}}],"line":527},"14":{"loc":{"start":{"line":537,"column":6},"end":{"line":546,"column":7}},"type":"if","locations":[{"start":{"line":537,"column":6},"end":{"line":546,"column":7}},{"start":{"line":537,"column":6},"end":{"line":546,"column":7}}],"line":537},"15":{"loc":{"start":{"line":538,"column":8},"end":{"line":545,"column":9}},"type":"if","locations":[{"start":{"line":538,"column":8},"end":{"line":545,"column":9}},{"start":{"line":538,"column":8},"end":{"line":545,"column":9}}],"line":538},"16":{"loc":{"start":{"line":558,"column":2},"end":{"line":560,"column":3}},"type":"if","locations":[{"start":{"line":558,"column":2},"end":{"line":560,"column":3}},{"start":{"line":558,"column":2},"end":{"line":560,"column":3}}],"line":558},"17":{"loc":{"start":{"line":568,"column":6},"end":{"line":577,"column":7}},"type":"if","locations":[{"start":{"line":568,"column":6},"end":{"line":577,"column":7}},{"start":{"line":568,"column":6},"end":{"line":577,"column":7}}],"line":568},"18":{"loc":{"start":{"line":569,"column":8},"end":{"line":576,"column":9}},"type":"if","locations":[{"start":{"line":569,"column":8},"end":{"line":576,"column":9}},{"start":{"line":569,"column":8},"end":{"line":576,"column":9}}],"line":569},"19":{"loc":{"start":{"line":589,"column":2},"end":{"line":591,"column":3}},"type":"if","locations":[{"start":{"line":589,"column":2},"end":{"line":591,"column":3}},{"start":{"line":589,"column":2},"end":{"line":591,"column":3}}],"line":589},"20":{"loc":{"start":{"line":599,"column":6},"end":{"line":608,"column":7}},"type":"if","locations":[{"start":{"line":599,"column":6},"end":{"line":608,"column":7}},{"start":{"line":599,"column":6},"end":{"line":608,"column":7}}],"line":599},"21":{"loc":{"start":{"line":600,"column":8},"end":{"line":607,"column":9}},"type":"if","locations":[{"start":{"line":600,"column":8},"end":{"line":607,"column":9}},{"start":{"line":600,"column":8},"end":{"line":607,"column":9}}],"line":600},"22":{"loc":{"start":{"line":698,"column":2},"end":{"line":700,"column":3}},"type":"if","locations":[{"start":{"line":698,"column":2},"end":{"line":700,"column":3}},{"start":{"line":698,"column":2},"end":{"line":700,"column":3}}],"line":698},"23":{"loc":{"start":{"line":708,"column":6},"end":{"line":717,"column":7}},"type":"if","locations":[{"start":{"line":708,"column":6},"end":{"line":717,"column":7}},{"start":{"line":708,"column":6},"end":{"line":717,"column":7}}],"line":708},"24":{"loc":{"start":{"line":709,"column":8},"end":{"line":716,"column":9}},"type":"if","locations":[{"start":{"line":709,"column":8},"end":{"line":716,"column":9}},{"start":{"line":709,"column":8},"end":{"line":716,"column":9}}],"line":709},"25":{"loc":{"start":{"line":729,"column":2},"end":{"line":731,"column":3}},"type":"if","locations":[{"start":{"line":729,"column":2},"end":{"line":731,"column":3}},{"start":{"line":729,"column":2},"end":{"line":731,"column":3}}],"line":729},"26":{"loc":{"start":{"line":739,"column":6},"end":{"line":748,"column":7}},"type":"if","locations":[{"start":{"line":739,"column":6},"end":{"line":748,"column":7}},{"start":{"line":739,"column":6},"end":{"line":748,"column":7}}],"line":739},"27":{"loc":{"start":{"line":740,"column":8},"end":{"line":747,"column":9}},"type":"if","locations":[{"start":{"line":740,"column":8},"end":{"line":747,"column":9}},{"start":{"line":740,"column":8},"end":{"line":747,"column":9}}],"line":740},"28":{"loc":{"start":{"line":760,"column":2},"end":{"line":762,"column":3}},"type":"if","locations":[{"start":{"line":760,"column":2},"end":{"line":762,"column":3}},{"start":{"line":760,"column":2},"end":{"line":762,"column":3}}],"line":760},"29":{"loc":{"start":{"line":770,"column":6},"end":{"line":779,"column":7}},"type":"if","locations":[{"start":{"line":770,"column":6},"end":{"line":779,"column":7}},{"start":{"line":770,"column":6},"end":{"line":779,"column":7}}],"line":770},"30":{"loc":{"start":{"line":771,"column":8},"end":{"line":778,"column":9}},"type":"if","locations":[{"start":{"line":771,"column":8},"end":{"line":778,"column":9}},{"start":{"line":771,"column":8},"end":{"line":778,"column":9}}],"line":771},"31":{"loc":{"start":{"line":791,"column":2},"end":{"line":793,"column":3}},"type":"if","locations":[{"start":{"line":791,"column":2},"end":{"line":793,"column":3}},{"start":{"line":791,"column":2},"end":{"line":793,"column":3}}],"line":791},"32":{"loc":{"start":{"line":801,"column":6},"end":{"line":810,"column":7}},"type":"if","locations":[{"start":{"line":801,"column":6},"end":{"line":810,"column":7}},{"start":{"line":801,"column":6},"end":{"line":810,"column":7}}],"line":801},"33":{"loc":{"start":{"line":802,"column":8},"end":{"line":809,"column":9}},"type":"if","locations":[{"start":{"line":802,"column":8},"end":{"line":809,"column":9}},{"start":{"line":802,"column":8},"end":{"line":809,"column":9}}],"line":802},"34":{"loc":{"start":{"line":822,"column":2},"end":{"line":824,"column":3}},"type":"if","locations":[{"start":{"line":822,"column":2},"end":{"line":824,"column":3}},{"start":{"line":822,"column":2},"end":{"line":824,"column":3}}],"line":822},"35":{"loc":{"start":{"line":832,"column":6},"end":{"line":841,"column":7}},"type":"if","locations":[{"start":{"line":832,"column":6},"end":{"line":841,"column":7}},{"start":{"line":832,"column":6},"end":{"line":841,"column":7}}],"line":832},"36":{"loc":{"start":{"line":833,"column":8},"end":{"line":840,"column":9}},"type":"if","locations":[{"start":{"line":833,"column":8},"end":{"line":840,"column":9}},{"start":{"line":833,"column":8},"end":{"line":840,"column":9}}],"line":833},"37":{"loc":{"start":{"line":853,"column":2},"end":{"line":855,"column":3}},"type":"if","locations":[{"start":{"line":853,"column":2},"end":{"line":855,"column":3}},{"start":{"line":853,"column":2},"end":{"line":855,"column":3}}],"line":853},"38":{"loc":{"start":{"line":863,"column":6},"end":{"line":872,"column":7}},"type":"if","locations":[{"start":{"line":863,"column":6},"end":{"line":872,"column":7}},{"start":{"line":863,"column":6},"end":{"line":872,"column":7}}],"line":863},"39":{"loc":{"start":{"line":864,"column":8},"end":{"line":871,"column":9}},"type":"if","locations":[{"start":{"line":864,"column":8},"end":{"line":871,"column":9}},{"start":{"line":864,"column":8},"end":{"line":871,"column":9}}],"line":864},"40":{"loc":{"start":{"line":884,"column":2},"end":{"line":886,"column":3}},"type":"if","locations":[{"start":{"line":884,"column":2},"end":{"line":886,"column":3}},{"start":{"line":884,"column":2},"end":{"line":886,"column":3}}],"line":884},"41":{"loc":{"start":{"line":894,"column":6},"end":{"line":903,"column":7}},"type":"if","locations":[{"start":{"line":894,"column":6},"end":{"line":903,"column":7}},{"start":{"line":894,"column":6},"end":{"line":903,"column":7}}],"line":894},"42":{"loc":{"start":{"line":895,"column":8},"end":{"line":902,"column":9}},"type":"if","locations":[{"start":{"line":895,"column":8},"end":{"line":902,"column":9}},{"start":{"line":895,"column":8},"end":{"line":902,"column":9}}],"line":895},"43":{"loc":{"start":{"line":915,"column":2},"end":{"line":917,"column":3}},"type":"if","locations":[{"start":{"line":915,"column":2},"end":{"line":917,"column":3}},{"start":{"line":915,"column":2},"end":{"line":917,"column":3}}],"line":915},"44":{"loc":{"start":{"line":925,"column":6},"end":{"line":934,"column":7}},"type":"if","locations":[{"start":{"line":925,"column":6},"end":{"line":934,"column":7}},{"start":{"line":925,"column":6},"end":{"line":934,"column":7}}],"line":925},"45":{"loc":{"start":{"line":926,"column":8},"end":{"line":933,"column":9}},"type":"if","locations":[{"start":{"line":926,"column":8},"end":{"line":933,"column":9}},{"start":{"line":926,"column":8},"end":{"line":933,"column":9}}],"line":926},"46":{"loc":{"start":{"line":946,"column":2},"end":{"line":948,"column":3}},"type":"if","locations":[{"start":{"line":946,"column":2},"end":{"line":948,"column":3}},{"start":{"line":946,"column":2},"end":{"line":948,"column":3}}],"line":946},"47":{"loc":{"start":{"line":956,"column":6},"end":{"line":965,"column":7}},"type":"if","locations":[{"start":{"line":956,"column":6},"end":{"line":965,"column":7}},{"start":{"line":956,"column":6},"end":{"line":965,"column":7}}],"line":956},"48":{"loc":{"start":{"line":957,"column":8},"end":{"line":964,"column":9}},"type":"if","locations":[{"start":{"line":957,"column":8},"end":{"line":964,"column":9}},{"start":{"line":957,"column":8},"end":{"line":964,"column":9}}],"line":957},"49":{"loc":{"start":{"line":977,"column":2},"end":{"line":979,"column":3}},"type":"if","locations":[{"start":{"line":977,"column":2},"end":{"line":979,"column":3}},{"start":{"line":977,"column":2},"end":{"line":979,"column":3}}],"line":977},"50":{"loc":{"start":{"line":987,"column":6},"end":{"line":996,"column":7}},"type":"if","locations":[{"start":{"line":987,"column":6},"end":{"line":996,"column":7}},{"start":{"line":987,"column":6},"end":{"line":996,"column":7}}],"line":987},"51":{"loc":{"start":{"line":988,"column":8},"end":{"line":995,"column":9}},"type":"if","locations":[{"start":{"line":988,"column":8},"end":{"line":995,"column":9}},{"start":{"line":988,"column":8},"end":{"line":995,"column":9}}],"line":988},"52":{"loc":{"start":{"line":1008,"column":2},"end":{"line":1010,"column":3}},"type":"if","locations":[{"start":{"line":1008,"column":2},"end":{"line":1010,"column":3}},{"start":{"line":1008,"column":2},"end":{"line":1010,"column":3}}],"line":1008},"53":{"loc":{"start":{"line":1018,"column":6},"end":{"line":1027,"column":7}},"type":"if","locations":[{"start":{"line":1018,"column":6},"end":{"line":1027,"column":7}},{"start":{"line":1018,"column":6},"end":{"line":1027,"column":7}}],"line":1018},"54":{"loc":{"start":{"line":1019,"column":8},"end":{"line":1026,"column":9}},"type":"if","locations":[{"start":{"line":1019,"column":8},"end":{"line":1026,"column":9}},{"start":{"line":1019,"column":8},"end":{"line":1026,"column":9}}],"line":1019},"55":{"loc":{"start":{"line":1039,"column":2},"end":{"line":1041,"column":3}},"type":"if","locations":[{"start":{"line":1039,"column":2},"end":{"line":1041,"column":3}},{"start":{"line":1039,"column":2},"end":{"line":1041,"column":3}}],"line":1039},"56":{"loc":{"start":{"line":1049,"column":6},"end":{"line":1058,"column":7}},"type":"if","locations":[{"start":{"line":1049,"column":6},"end":{"line":1058,"column":7}},{"start":{"line":1049,"column":6},"end":{"line":1058,"column":7}}],"line":1049},"57":{"loc":{"start":{"line":1050,"column":8},"end":{"line":1057,"column":9}},"type":"if","locations":[{"start":{"line":1050,"column":8},"end":{"line":1057,"column":9}},{"start":{"line":1050,"column":8},"end":{"line":1057,"column":9}}],"line":1050},"58":{"loc":{"start":{"line":1070,"column":2},"end":{"line":1072,"column":3}},"type":"if","locations":[{"start":{"line":1070,"column":2},"end":{"line":1072,"column":3}},{"start":{"line":1070,"column":2},"end":{"line":1072,"column":3}}],"line":1070},"59":{"loc":{"start":{"line":1080,"column":6},"end":{"line":1089,"column":7}},"type":"if","locations":[{"start":{"line":1080,"column":6},"end":{"line":1089,"column":7}},{"start":{"line":1080,"column":6},"end":{"line":1089,"column":7}}],"line":1080},"60":{"loc":{"start":{"line":1081,"column":8},"end":{"line":1088,"column":9}},"type":"if","locations":[{"start":{"line":1081,"column":8},"end":{"line":1088,"column":9}},{"start":{"line":1081,"column":8},"end":{"line":1088,"column":9}}],"line":1081},"61":{"loc":{"start":{"line":1101,"column":2},"end":{"line":1103,"column":3}},"type":"if","locations":[{"start":{"line":1101,"column":2},"end":{"line":1103,"column":3}},{"start":{"line":1101,"column":2},"end":{"line":1103,"column":3}}],"line":1101},"62":{"loc":{"start":{"line":1111,"column":6},"end":{"line":1120,"column":7}},"type":"if","locations":[{"start":{"line":1111,"column":6},"end":{"line":1120,"column":7}},{"start":{"line":1111,"column":6},"end":{"line":1120,"column":7}}],"line":1111},"63":{"loc":{"start":{"line":1112,"column":8},"end":{"line":1119,"column":9}},"type":"if","locations":[{"start":{"line":1112,"column":8},"end":{"line":1119,"column":9}},{"start":{"line":1112,"column":8},"end":{"line":1119,"column":9}}],"line":1112},"64":{"loc":{"start":{"line":1132,"column":2},"end":{"line":1134,"column":3}},"type":"if","locations":[{"start":{"line":1132,"column":2},"end":{"line":1134,"column":3}},{"start":{"line":1132,"column":2},"end":{"line":1134,"column":3}}],"line":1132},"65":{"loc":{"start":{"line":1142,"column":6},"end":{"line":1151,"column":7}},"type":"if","locations":[{"start":{"line":1142,"column":6},"end":{"line":1151,"column":7}},{"start":{"line":1142,"column":6},"end":{"line":1151,"column":7}}],"line":1142},"66":{"loc":{"start":{"line":1143,"column":8},"end":{"line":1150,"column":9}},"type":"if","locations":[{"start":{"line":1143,"column":8},"end":{"line":1150,"column":9}},{"start":{"line":1143,"column":8},"end":{"line":1150,"column":9}}],"line":1143},"67":{"loc":{"start":{"line":1163,"column":2},"end":{"line":1165,"column":3}},"type":"if","locations":[{"start":{"line":1163,"column":2},"end":{"line":1165,"column":3}},{"start":{"line":1163,"column":2},"end":{"line":1165,"column":3}}],"line":1163},"68":{"loc":{"start":{"line":1173,"column":6},"end":{"line":1182,"column":7}},"type":"if","locations":[{"start":{"line":1173,"column":6},"end":{"line":1182,"column":7}},{"start":{"line":1173,"column":6},"end":{"line":1182,"column":7}}],"line":1173},"69":{"loc":{"start":{"line":1174,"column":8},"end":{"line":1181,"column":9}},"type":"if","locations":[{"start":{"line":1174,"column":8},"end":{"line":1181,"column":9}},{"start":{"line":1174,"column":8},"end":{"line":1181,"column":9}}],"line":1174},"70":{"loc":{"start":{"line":1194,"column":2},"end":{"line":1196,"column":3}},"type":"if","locations":[{"start":{"line":1194,"column":2},"end":{"line":1196,"column":3}},{"start":{"line":1194,"column":2},"end":{"line":1196,"column":3}}],"line":1194},"71":{"loc":{"start":{"line":1204,"column":6},"end":{"line":1213,"column":7}},"type":"if","locations":[{"start":{"line":1204,"column":6},"end":{"line":1213,"column":7}},{"start":{"line":1204,"column":6},"end":{"line":1213,"column":7}}],"line":1204},"72":{"loc":{"start":{"line":1205,"column":8},"end":{"line":1212,"column":9}},"type":"if","locations":[{"start":{"line":1205,"column":8},"end":{"line":1212,"column":9}},{"start":{"line":1205,"column":8},"end":{"line":1212,"column":9}}],"line":1205},"73":{"loc":{"start":{"line":1225,"column":2},"end":{"line":1227,"column":3}},"type":"if","locations":[{"start":{"line":1225,"column":2},"end":{"line":1227,"column":3}},{"start":{"line":1225,"column":2},"end":{"line":1227,"column":3}}],"line":1225},"74":{"loc":{"start":{"line":1235,"column":6},"end":{"line":1244,"column":7}},"type":"if","locations":[{"start":{"line":1235,"column":6},"end":{"line":1244,"column":7}},{"start":{"line":1235,"column":6},"end":{"line":1244,"column":7}}],"line":1235},"75":{"loc":{"start":{"line":1236,"column":8},"end":{"line":1243,"column":9}},"type":"if","locations":[{"start":{"line":1236,"column":8},"end":{"line":1243,"column":9}},{"start":{"line":1236,"column":8},"end":{"line":1243,"column":9}}],"line":1236},"76":{"loc":{"start":{"line":1256,"column":2},"end":{"line":1258,"column":3}},"type":"if","locations":[{"start":{"line":1256,"column":2},"end":{"line":1258,"column":3}},{"start":{"line":1256,"column":2},"end":{"line":1258,"column":3}}],"line":1256},"77":{"loc":{"start":{"line":1266,"column":6},"end":{"line":1275,"column":7}},"type":"if","locations":[{"start":{"line":1266,"column":6},"end":{"line":1275,"column":7}},{"start":{"line":1266,"column":6},"end":{"line":1275,"column":7}}],"line":1266},"78":{"loc":{"start":{"line":1267,"column":8},"end":{"line":1274,"column":9}},"type":"if","locations":[{"start":{"line":1267,"column":8},"end":{"line":1274,"column":9}},{"start":{"line":1267,"column":8},"end":{"line":1274,"column":9}}],"line":1267},"79":{"loc":{"start":{"line":1287,"column":2},"end":{"line":1289,"column":3}},"type":"if","locations":[{"start":{"line":1287,"column":2},"end":{"line":1289,"column":3}},{"start":{"line":1287,"column":2},"end":{"line":1289,"column":3}}],"line":1287},"80":{"loc":{"start":{"line":1297,"column":6},"end":{"line":1306,"column":7}},"type":"if","locations":[{"start":{"line":1297,"column":6},"end":{"line":1306,"column":7}},{"start":{"line":1297,"column":6},"end":{"line":1306,"column":7}}],"line":1297},"81":{"loc":{"start":{"line":1298,"column":8},"end":{"line":1305,"column":9}},"type":"if","locations":[{"start":{"line":1298,"column":8},"end":{"line":1305,"column":9}},{"start":{"line":1298,"column":8},"end":{"line":1305,"column":9}}],"line":1298},"82":{"loc":{"start":{"line":1318,"column":2},"end":{"line":1320,"column":3}},"type":"if","locations":[{"start":{"line":1318,"column":2},"end":{"line":1320,"column":3}},{"start":{"line":1318,"column":2},"end":{"line":1320,"column":3}}],"line":1318},"83":{"loc":{"start":{"line":1328,"column":6},"end":{"line":1337,"column":7}},"type":"if","locations":[{"start":{"line":1328,"column":6},"end":{"line":1337,"column":7}},{"start":{"line":1328,"column":6},"end":{"line":1337,"column":7}}],"line":1328},"84":{"loc":{"start":{"line":1329,"column":8},"end":{"line":1336,"column":9}},"type":"if","locations":[{"start":{"line":1329,"column":8},"end":{"line":1336,"column":9}},{"start":{"line":1329,"column":8},"end":{"line":1336,"column":9}}],"line":1329},"85":{"loc":{"start":{"line":1349,"column":2},"end":{"line":1351,"column":3}},"type":"if","locations":[{"start":{"line":1349,"column":2},"end":{"line":1351,"column":3}},{"start":{"line":1349,"column":2},"end":{"line":1351,"column":3}}],"line":1349},"86":{"loc":{"start":{"line":1359,"column":6},"end":{"line":1368,"column":7}},"type":"if","locations":[{"start":{"line":1359,"column":6},"end":{"line":1368,"column":7}},{"start":{"line":1359,"column":6},"end":{"line":1368,"column":7}}],"line":1359},"87":{"loc":{"start":{"line":1360,"column":8},"end":{"line":1367,"column":9}},"type":"if","locations":[{"start":{"line":1360,"column":8},"end":{"line":1367,"column":9}},{"start":{"line":1360,"column":8},"end":{"line":1367,"column":9}}],"line":1360},"88":{"loc":{"start":{"line":1380,"column":2},"end":{"line":1382,"column":3}},"type":"if","locations":[{"start":{"line":1380,"column":2},"end":{"line":1382,"column":3}},{"start":{"line":1380,"column":2},"end":{"line":1382,"column":3}}],"line":1380},"89":{"loc":{"start":{"line":1390,"column":6},"end":{"line":1399,"column":7}},"type":"if","locations":[{"start":{"line":1390,"column":6},"end":{"line":1399,"column":7}},{"start":{"line":1390,"column":6},"end":{"line":1399,"column":7}}],"line":1390},"90":{"loc":{"start":{"line":1391,"column":8},"end":{"line":1398,"column":9}},"type":"if","locations":[{"start":{"line":1391,"column":8},"end":{"line":1398,"column":9}},{"start":{"line":1391,"column":8},"end":{"line":1398,"column":9}}],"line":1391},"91":{"loc":{"start":{"line":1411,"column":2},"end":{"line":1413,"column":3}},"type":"if","locations":[{"start":{"line":1411,"column":2},"end":{"line":1413,"column":3}},{"start":{"line":1411,"column":2},"end":{"line":1413,"column":3}}],"line":1411},"92":{"loc":{"start":{"line":1421,"column":6},"end":{"line":1430,"column":7}},"type":"if","locations":[{"start":{"line":1421,"column":6},"end":{"line":1430,"column":7}},{"start":{"line":1421,"column":6},"end":{"line":1430,"column":7}}],"line":1421},"93":{"loc":{"start":{"line":1422,"column":8},"end":{"line":1429,"column":9}},"type":"if","locations":[{"start":{"line":1422,"column":8},"end":{"line":1429,"column":9}},{"start":{"line":1422,"column":8},"end":{"line":1429,"column":9}}],"line":1422},"94":{"loc":{"start":{"line":1442,"column":2},"end":{"line":1444,"column":3}},"type":"if","locations":[{"start":{"line":1442,"column":2},"end":{"line":1444,"column":3}},{"start":{"line":1442,"column":2},"end":{"line":1444,"column":3}}],"line":1442},"95":{"loc":{"start":{"line":1452,"column":6},"end":{"line":1461,"column":7}},"type":"if","locations":[{"start":{"line":1452,"column":6},"end":{"line":1461,"column":7}},{"start":{"line":1452,"column":6},"end":{"line":1461,"column":7}}],"line":1452},"96":{"loc":{"start":{"line":1453,"column":8},"end":{"line":1460,"column":9}},"type":"if","locations":[{"start":{"line":1453,"column":8},"end":{"line":1460,"column":9}},{"start":{"line":1453,"column":8},"end":{"line":1460,"column":9}}],"line":1453},"97":{"loc":{"start":{"line":1473,"column":2},"end":{"line":1475,"column":3}},"type":"if","locations":[{"start":{"line":1473,"column":2},"end":{"line":1475,"column":3}},{"start":{"line":1473,"column":2},"end":{"line":1475,"column":3}}],"line":1473},"98":{"loc":{"start":{"line":1483,"column":6},"end":{"line":1492,"column":7}},"type":"if","locations":[{"start":{"line":1483,"column":6},"end":{"line":1492,"column":7}},{"start":{"line":1483,"column":6},"end":{"line":1492,"column":7}}],"line":1483},"99":{"loc":{"start":{"line":1484,"column":8},"end":{"line":1491,"column":9}},"type":"if","locations":[{"start":{"line":1484,"column":8},"end":{"line":1491,"column":9}},{"start":{"line":1484,"column":8},"end":{"line":1491,"column":9}}],"line":1484},"100":{"loc":{"start":{"line":1543,"column":2},"end":{"line":1545,"column":3}},"type":"if","locations":[{"start":{"line":1543,"column":2},"end":{"line":1545,"column":3}},{"start":{"line":1543,"column":2},"end":{"line":1545,"column":3}}],"line":1543},"101":{"loc":{"start":{"line":1553,"column":6},"end":{"line":1562,"column":7}},"type":"if","locations":[{"start":{"line":1553,"column":6},"end":{"line":1562,"column":7}},{"start":{"line":1553,"column":6},"end":{"line":1562,"column":7}}],"line":1553},"102":{"loc":{"start":{"line":1554,"column":8},"end":{"line":1561,"column":9}},"type":"if","locations":[{"start":{"line":1554,"column":8},"end":{"line":1561,"column":9}},{"start":{"line":1554,"column":8},"end":{"line":1561,"column":9}}],"line":1554},"103":{"loc":{"start":{"line":1574,"column":2},"end":{"line":1576,"column":3}},"type":"if","locations":[{"start":{"line":1574,"column":2},"end":{"line":1576,"column":3}},{"start":{"line":1574,"column":2},"end":{"line":1576,"column":3}}],"line":1574},"104":{"loc":{"start":{"line":1584,"column":6},"end":{"line":1593,"column":7}},"type":"if","locations":[{"start":{"line":1584,"column":6},"end":{"line":1593,"column":7}},{"start":{"line":1584,"column":6},"end":{"line":1593,"column":7}}],"line":1584},"105":{"loc":{"start":{"line":1585,"column":8},"end":{"line":1592,"column":9}},"type":"if","locations":[{"start":{"line":1585,"column":8},"end":{"line":1592,"column":9}},{"start":{"line":1585,"column":8},"end":{"line":1592,"column":9}}],"line":1585},"106":{"loc":{"start":{"line":1605,"column":2},"end":{"line":1607,"column":3}},"type":"if","locations":[{"start":{"line":1605,"column":2},"end":{"line":1607,"column":3}},{"start":{"line":1605,"column":2},"end":{"line":1607,"column":3}}],"line":1605},"107":{"loc":{"start":{"line":1615,"column":6},"end":{"line":1624,"column":7}},"type":"if","locations":[{"start":{"line":1615,"column":6},"end":{"line":1624,"column":7}},{"start":{"line":1615,"column":6},"end":{"line":1624,"column":7}}],"line":1615},"108":{"loc":{"start":{"line":1616,"column":8},"end":{"line":1623,"column":9}},"type":"if","locations":[{"start":{"line":1616,"column":8},"end":{"line":1623,"column":9}},{"start":{"line":1616,"column":8},"end":{"line":1623,"column":9}}],"line":1616},"109":{"loc":{"start":{"line":1636,"column":2},"end":{"line":1638,"column":3}},"type":"if","locations":[{"start":{"line":1636,"column":2},"end":{"line":1638,"column":3}},{"start":{"line":1636,"column":2},"end":{"line":1638,"column":3}}],"line":1636},"110":{"loc":{"start":{"line":1646,"column":6},"end":{"line":1655,"column":7}},"type":"if","locations":[{"start":{"line":1646,"column":6},"end":{"line":1655,"column":7}},{"start":{"line":1646,"column":6},"end":{"line":1655,"column":7}}],"line":1646},"111":{"loc":{"start":{"line":1647,"column":8},"end":{"line":1654,"column":9}},"type":"if","locations":[{"start":{"line":1647,"column":8},"end":{"line":1654,"column":9}},{"start":{"line":1647,"column":8},"end":{"line":1654,"column":9}}],"line":1647},"112":{"loc":{"start":{"line":1667,"column":2},"end":{"line":1669,"column":3}},"type":"if","locations":[{"start":{"line":1667,"column":2},"end":{"line":1669,"column":3}},{"start":{"line":1667,"column":2},"end":{"line":1669,"column":3}}],"line":1667},"113":{"loc":{"start":{"line":1677,"column":6},"end":{"line":1686,"column":7}},"type":"if","locations":[{"start":{"line":1677,"column":6},"end":{"line":1686,"column":7}},{"start":{"line":1677,"column":6},"end":{"line":1686,"column":7}}],"line":1677},"114":{"loc":{"start":{"line":1678,"column":8},"end":{"line":1685,"column":9}},"type":"if","locations":[{"start":{"line":1678,"column":8},"end":{"line":1685,"column":9}},{"start":{"line":1678,"column":8},"end":{"line":1685,"column":9}}],"line":1678},"115":{"loc":{"start":{"line":1698,"column":2},"end":{"line":1700,"column":3}},"type":"if","locations":[{"start":{"line":1698,"column":2},"end":{"line":1700,"column":3}},{"start":{"line":1698,"column":2},"end":{"line":1700,"column":3}}],"line":1698},"116":{"loc":{"start":{"line":1708,"column":6},"end":{"line":1717,"column":7}},"type":"if","locations":[{"start":{"line":1708,"column":6},"end":{"line":1717,"column":7}},{"start":{"line":1708,"column":6},"end":{"line":1717,"column":7}}],"line":1708},"117":{"loc":{"start":{"line":1709,"column":8},"end":{"line":1716,"column":9}},"type":"if","locations":[{"start":{"line":1709,"column":8},"end":{"line":1716,"column":9}},{"start":{"line":1709,"column":8},"end":{"line":1716,"column":9}}],"line":1709}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":0,"103":0,"104":0,"105":0,"106":1,"107":1,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":1,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":1,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":1,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":1,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":1,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":1,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":1,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":1,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":1,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":1,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":1,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":1,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":1,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":1,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":1,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":1,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":1,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":1,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":1,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":1,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":1,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":1,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":1,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":1,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":1,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":1},"f":{"0":1,"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0},"b":{"0":[1,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[1,0],"11":[1,0],"12":[0,1],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0]},"inputSourceMap":{"version":3,"sources":["rpc_grpc_web_pb.js"],"names":["rpc_pb","require","blockchain_pb","account_pb","metric_pb","raft_pb","grpc","AergoRPCService","serviceName","NodeState","methodName","service","requestStream","responseStream","requestType","NodeReq","responseType","SingleBytes","Metric","MetricsRequest","Metrics","Blockchain","Empty","BlockchainStatus","GetChainInfo","ChainInfo","ChainStat","ChainStats","ListBlockHeaders","ListParams","BlockHeaderList","ListBlockMetadata","BlockMetadataList","ListBlockStream","Block","ListBlockMetadataStream","BlockMetadata","GetBlock","GetBlockMetadata","GetBlockBody","BlockBodyParams","BlockBodyPaged","GetTX","Tx","GetBlockTX","TxInBlock","GetReceipt","Receipt","GetABI","ABI","SendTX","CommitResult","SignTX","VerifyTX","VerifyResult","CommitTX","TxList","CommitResultList","GetState","State","GetStateAndProof","AccountAndRoot","AccountProof","CreateAccount","Personal","Account","GetAccounts","AccountList","LockAccount","UnlockAccount","ImportAccount","ImportFormat","ExportAccount","QueryContract","Query","QueryContractState","StateQuery","StateQueryProof","GetPeers","PeersParams","PeerList","GetVotes","VoteParams","VoteList","GetAccountVotes","AccountAddress","AccountVoteInfo","GetStaking","Staking","GetNameInfo","Name","NameInfo","ListEventStream","FilterInfo","Event","ListEvents","EventList","GetServerInfo","KeyParams","ServerInfo","GetConsensusInfo","ConsensusInfo","ChangeMembership","MembershipChange","MembershipChangeReply","GetEnterpriseConfig","EnterpriseConfigKey","EnterpriseConfig","GetConfChangeProgress","ConfChangeProgress","exports","AergoRPCServiceClient","serviceHost","options","prototype","nodeState","requestMessage","metadata","callback","arguments","length","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","message","cancel","close","metric","blockchain","getChainInfo","chainStat","listBlockHeaders","listBlockMetadata","listBlockStream","listeners","data","end","invoke","onMessage","responseMessage","forEach","handler","details","on","type","push","listBlockMetadataStream","getBlock","getBlockMetadata","getBlockBody","getTX","getBlockTX","getReceipt","getABI","sendTX","signTX","verifyTX","commitTX","getState","getStateAndProof","createAccount","getAccounts","lockAccount","unlockAccount","importAccount","exportAccount","queryContract","queryContractState","getPeers","getVotes","getAccountVotes","getStaking","getNameInfo","listEventStream","listEvents","getServerInfo","getConsensusInfo","changeMembership","getEnterpriseConfig","getConfChangeProgress"],"mappings":"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","sourceRoot":"/Users/paulgrau/projects/aergo/herajs/packages/client/types","sourcesContent":["// package: types\n// file: rpc.proto\n\nvar rpc_pb = require(\"./rpc_pb\");\nvar blockchain_pb = require(\"./blockchain_pb\");\nvar account_pb = require(\"./account_pb\");\nvar metric_pb = require(\"./metric_pb\");\nvar raft_pb = require(\"./raft_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar AergoRPCService = (function () {\n  function AergoRPCService() {}\n  AergoRPCService.serviceName = \"types.AergoRPCService\";\n  return AergoRPCService;\n}());\n\nAergoRPCService.NodeState = {\n  methodName: \"NodeState\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.NodeReq,\n  responseType: rpc_pb.SingleBytes\n};\n\nAergoRPCService.Metric = {\n  methodName: \"Metric\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: metric_pb.MetricsRequest,\n  responseType: metric_pb.Metrics\n};\n\nAergoRPCService.Blockchain = {\n  methodName: \"Blockchain\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Empty,\n  responseType: rpc_pb.BlockchainStatus\n};\n\nAergoRPCService.GetChainInfo = {\n  methodName: \"GetChainInfo\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Empty,\n  responseType: rpc_pb.ChainInfo\n};\n\nAergoRPCService.ChainStat = {\n  methodName: \"ChainStat\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Empty,\n  responseType: rpc_pb.ChainStats\n};\n\nAergoRPCService.ListBlockHeaders = {\n  methodName: \"ListBlockHeaders\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.ListParams,\n  responseType: rpc_pb.BlockHeaderList\n};\n\nAergoRPCService.ListBlockMetadata = {\n  methodName: \"ListBlockMetadata\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.ListParams,\n  responseType: rpc_pb.BlockMetadataList\n};\n\nAergoRPCService.ListBlockStream = {\n  methodName: \"ListBlockStream\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: true,\n  requestType: rpc_pb.Empty,\n  responseType: blockchain_pb.Block\n};\n\nAergoRPCService.ListBlockMetadataStream = {\n  methodName: \"ListBlockMetadataStream\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: true,\n  requestType: rpc_pb.Empty,\n  responseType: rpc_pb.BlockMetadata\n};\n\nAergoRPCService.GetBlock = {\n  methodName: \"GetBlock\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.SingleBytes,\n  responseType: blockchain_pb.Block\n};\n\nAergoRPCService.GetBlockMetadata = {\n  methodName: \"GetBlockMetadata\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.SingleBytes,\n  responseType: rpc_pb.BlockMetadata\n};\n\nAergoRPCService.GetBlockBody = {\n  methodName: \"GetBlockBody\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.BlockBodyParams,\n  responseType: rpc_pb.BlockBodyPaged\n};\n\nAergoRPCService.GetTX = {\n  methodName: \"GetTX\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.SingleBytes,\n  responseType: blockchain_pb.Tx\n};\n\nAergoRPCService.GetBlockTX = {\n  methodName: \"GetBlockTX\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.SingleBytes,\n  responseType: blockchain_pb.TxInBlock\n};\n\nAergoRPCService.GetReceipt = {\n  methodName: \"GetReceipt\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.SingleBytes,\n  responseType: blockchain_pb.Receipt\n};\n\nAergoRPCService.GetABI = {\n  methodName: \"GetABI\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.SingleBytes,\n  responseType: blockchain_pb.ABI\n};\n\nAergoRPCService.SendTX = {\n  methodName: \"SendTX\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: blockchain_pb.Tx,\n  responseType: rpc_pb.CommitResult\n};\n\nAergoRPCService.SignTX = {\n  methodName: \"SignTX\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: blockchain_pb.Tx,\n  responseType: blockchain_pb.Tx\n};\n\nAergoRPCService.VerifyTX = {\n  methodName: \"VerifyTX\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: blockchain_pb.Tx,\n  responseType: rpc_pb.VerifyResult\n};\n\nAergoRPCService.CommitTX = {\n  methodName: \"CommitTX\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: blockchain_pb.TxList,\n  responseType: rpc_pb.CommitResultList\n};\n\nAergoRPCService.GetState = {\n  methodName: \"GetState\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.SingleBytes,\n  responseType: blockchain_pb.State\n};\n\nAergoRPCService.GetStateAndProof = {\n  methodName: \"GetStateAndProof\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.AccountAndRoot,\n  responseType: blockchain_pb.AccountProof\n};\n\nAergoRPCService.CreateAccount = {\n  methodName: \"CreateAccount\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Personal,\n  responseType: account_pb.Account\n};\n\nAergoRPCService.GetAccounts = {\n  methodName: \"GetAccounts\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Empty,\n  responseType: account_pb.AccountList\n};\n\nAergoRPCService.LockAccount = {\n  methodName: \"LockAccount\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Personal,\n  responseType: account_pb.Account\n};\n\nAergoRPCService.UnlockAccount = {\n  methodName: \"UnlockAccount\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Personal,\n  responseType: account_pb.Account\n};\n\nAergoRPCService.ImportAccount = {\n  methodName: \"ImportAccount\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.ImportFormat,\n  responseType: account_pb.Account\n};\n\nAergoRPCService.ExportAccount = {\n  methodName: \"ExportAccount\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Personal,\n  responseType: rpc_pb.SingleBytes\n};\n\nAergoRPCService.QueryContract = {\n  methodName: \"QueryContract\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: blockchain_pb.Query,\n  responseType: rpc_pb.SingleBytes\n};\n\nAergoRPCService.QueryContractState = {\n  methodName: \"QueryContractState\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: blockchain_pb.StateQuery,\n  responseType: blockchain_pb.StateQueryProof\n};\n\nAergoRPCService.GetPeers = {\n  methodName: \"GetPeers\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.PeersParams,\n  responseType: rpc_pb.PeerList\n};\n\nAergoRPCService.GetVotes = {\n  methodName: \"GetVotes\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.VoteParams,\n  responseType: rpc_pb.VoteList\n};\n\nAergoRPCService.GetAccountVotes = {\n  methodName: \"GetAccountVotes\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.AccountAddress,\n  responseType: rpc_pb.AccountVoteInfo\n};\n\nAergoRPCService.GetStaking = {\n  methodName: \"GetStaking\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.AccountAddress,\n  responseType: rpc_pb.Staking\n};\n\nAergoRPCService.GetNameInfo = {\n  methodName: \"GetNameInfo\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Name,\n  responseType: rpc_pb.NameInfo\n};\n\nAergoRPCService.ListEventStream = {\n  methodName: \"ListEventStream\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: true,\n  requestType: blockchain_pb.FilterInfo,\n  responseType: blockchain_pb.Event\n};\n\nAergoRPCService.ListEvents = {\n  methodName: \"ListEvents\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: blockchain_pb.FilterInfo,\n  responseType: rpc_pb.EventList\n};\n\nAergoRPCService.GetServerInfo = {\n  methodName: \"GetServerInfo\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.KeyParams,\n  responseType: rpc_pb.ServerInfo\n};\n\nAergoRPCService.GetConsensusInfo = {\n  methodName: \"GetConsensusInfo\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.Empty,\n  responseType: rpc_pb.ConsensusInfo\n};\n\nAergoRPCService.ChangeMembership = {\n  methodName: \"ChangeMembership\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: raft_pb.MembershipChange,\n  responseType: raft_pb.MembershipChangeReply\n};\n\nAergoRPCService.GetEnterpriseConfig = {\n  methodName: \"GetEnterpriseConfig\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.EnterpriseConfigKey,\n  responseType: rpc_pb.EnterpriseConfig\n};\n\nAergoRPCService.GetConfChangeProgress = {\n  methodName: \"GetConfChangeProgress\",\n  service: AergoRPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: rpc_pb.SingleBytes,\n  responseType: raft_pb.ConfChangeProgress\n};\n\nexports.AergoRPCService = AergoRPCService;\n\nfunction AergoRPCServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAergoRPCServiceClient.prototype.nodeState = function nodeState(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.NodeState, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.metric = function metric(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.Metric, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.blockchain = function blockchain(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.Blockchain, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getChainInfo = function getChainInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetChainInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.chainStat = function chainStat(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.ChainStat, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.listBlockHeaders = function listBlockHeaders(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.ListBlockHeaders, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.listBlockMetadata = function listBlockMetadata(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.ListBlockMetadata, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.listBlockStream = function listBlockStream(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(AergoRPCService.ListBlockStream, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.listBlockMetadataStream = function listBlockMetadataStream(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(AergoRPCService.ListBlockMetadataStream, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getBlock = function getBlock(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetBlock, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getBlockMetadata = function getBlockMetadata(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetBlockMetadata, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getBlockBody = function getBlockBody(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetBlockBody, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getTX = function getTX(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetTX, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getBlockTX = function getBlockTX(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetBlockTX, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getReceipt = function getReceipt(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetReceipt, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getABI = function getABI(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetABI, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.sendTX = function sendTX(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.SendTX, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.signTX = function signTX(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.SignTX, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.verifyTX = function verifyTX(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.VerifyTX, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.commitTX = function commitTX(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.CommitTX, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getState = function getState(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetState, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getStateAndProof = function getStateAndProof(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetStateAndProof, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.createAccount = function createAccount(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.CreateAccount, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getAccounts = function getAccounts(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetAccounts, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.lockAccount = function lockAccount(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.LockAccount, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.unlockAccount = function unlockAccount(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.UnlockAccount, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.importAccount = function importAccount(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.ImportAccount, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.exportAccount = function exportAccount(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.ExportAccount, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.queryContract = function queryContract(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.QueryContract, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.queryContractState = function queryContractState(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.QueryContractState, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getPeers = function getPeers(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetPeers, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getVotes = function getVotes(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetVotes, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getAccountVotes = function getAccountVotes(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetAccountVotes, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getStaking = function getStaking(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetStaking, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getNameInfo = function getNameInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetNameInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.listEventStream = function listEventStream(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(AergoRPCService.ListEventStream, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.listEvents = function listEvents(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.ListEvents, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getServerInfo = function getServerInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetServerInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getConsensusInfo = function getConsensusInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetConsensusInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.changeMembership = function changeMembership(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.ChangeMembership, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getEnterpriseConfig = function getEnterpriseConfig(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetEnterpriseConfig, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAergoRPCServiceClient.prototype.getConfChangeProgress = function getConfChangeProgress(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AergoRPCService.GetConfChangeProgress, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.AergoRPCServiceClient = AergoRPCServiceClient;\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ce990b19783c0fb73e4cc3c414f5b9f42b5a93a1","contentHash":"089e75b2cc8547ea834d7bf3a833848c373d795a982723dbacb1b1736dbf8086"}}